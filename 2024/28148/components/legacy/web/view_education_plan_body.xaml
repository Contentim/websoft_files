<SPXMLScreen>
<%
bUseNewBody = tools_web.is_true( tools_web.get_web_param( curParams, "education_plan_body.use_body_with_tree", "0", true ) )
if( bUseNewBody )
{
	Response.Write( EvalCodePageUrl( global_settings.web_path + "view_education_plan_new_body.xaml" ) );
	
%>
</SPXMLScreen>
<%
	Cancel();
}
// const_start
sConstFolderName = tools_web.get_web_const( "c_phase", curLngWeb );
sConstProgramName = tools_web.get_web_const( "programma", curLngWeb );
sConstCourseName = tools_web.get_web_const( "mak5wn2e6o", curLngWeb );
sConstTestName = tools_web.get_web_const( "c_test", curLngWeb );
sConstEditTask = "Добавление этапа";
// const_end

curUrlQuery = UrlQuery( tools_web.transform_fancy_url(PAGEURL) );

/*---------------------------------- Функции ------------------------------------------------------------*/

function CheckRights(sAction)
{
	return (ArrayOptFind(xarrOperationsRights, "This.action == '" + sAction + "'") !=undefined);
}
function get_program_link( fldPartElem )
{
	if( !fldPartElem.type.HasValue )
		return "";
	switch( fldPartElem.type )
	{
		case "folder":
			return "";
		case "material":
			if( fldPartElem.catalog_name.HasValue && fldPartElem.object_id.HasValue )
			{
				catalog = common.exchange_object_types.GetOptChildByKey( fldPartElem.catalog_name );
				sClickAction = "";
				if( catalog != undefined )
				{
					if( fldPartElem.catalog_name == "document" )
					{
						feObject = fldPartElem.object_id.ForeignElem;
						if( feObject.is_link )
							sClickAction = feObject.link_href;
						else
							sClickAction = tools_web.doc_link( feObject )
					}
					else
						sClickAction = tools_web.get_mode_clean_url( null, fldPartElem.object_id );
					if( sClickAction != "" )
						return "OPENURL=" + sClickAction;
				}
			}
			return "";
		case "education_method":
			if( fldPartElem.education_method_id.HasValue )
				return "OPENURL=" + tools_web.get_mode_clean_url( null, fldPartElem.education_method_id, { doc_id: curDocID } );
			else
				return "";
		case "education_program":
			if( fldPartElem.education_program_id.HasValue )
				return "OPENURL=" + tools_web.get_mode_clean_url( null, fldPartElem.education_program_id, { doc_id: curDocID } );
			else
				return "";
							
		case "course":
		case "assessment":
		case "event":
		case "learning_task":
			if( fldPartElem.object_id.HasValue )
				return "OPENURL=" + tools_web.get_mode_clean_url( null, fldPartElem.object_id, { doc_id: curDocID } );
			else
				return "";
		default:
			return "";
	}
	return "";
}

/*--------------------------------------------------------------------------------------------------------*/

xarrBossTypes = tools.get_object_relative_boss_types(curUserID, curObjectID);

xarrOperations = tools.get_relative_operations_by_boss_types(xarrBossTypes);
xarrOperations = ArraySelect(xarrOperations, "This.operation_catalog_list.HasValue && StrContains(','+This.operation_catalog_list.Value+',', ',education_plan,')");
xarrOperationsActions = ArraySelect(xarrOperations, "This.operation_type == 0 && StrContains(','+This.operation_catalog_list.Value+',', ',education_plan,')");
xarrOperationsRights = ArraySelect(xarrOperations, "This.operation_type == 1");

bIsTutor = (curObject.tutor_id==curUserID);
aTutorElements = ArraySelect(curObject.programs,"This.tutor_id=="+curUserID);
bIsTutorElement = (ArrayCount(aTutorElements)>0);
bIsAdmin = (curUser.access.access_role=="admin");
bIsBoss = tools.is_user_boss(curUserID, curObject.person_id);
bIsUser = (curObject.person_id==curUserID);

%>

<Dialog Name="EduPlanEditTask" Source="dlg_edu_plan_edit_task" Title="<%=sConstEditTask%>" Close="REFRESH;" Width="90%">
    <Param Name="select_data" Value=""/>
	<Param Name="program_type" Value=""/>
	<Param Name="object_id" Value=""/>
	<Param Name="object_name" Value=""/>
	<Param Name="part_id" Value=""/>
	<Param Name="parent_program_id" Value=""/>
	<Param Name="action_id" Value="add"/>
</Dialog>

<Dialog Name="SelectDialogEduPlan" Source="dlg_select" Title="<%=XmlAttrEncode( tools_web.get_web_const( "0mzyraf76u", curLngWeb ) )%>" Close="SET=EduPlanEditTask/object_id,{CatalogListDataGridFullList:^/id};SET=EduPlanEditTask/object_name,{CatalogListDataGridFullList:^/disp};OPENDIALOG=EduPlanEditTask;">
	<Param Name="catalog_name" Value=""/>
	<Param Name="multi_select" Value=""/>
	<Param Name="view_type" Value=""/>
	<Param Name="xquery_qual" Value=""/>
	<Param Name="check_access" Value="false"/>
	<Param Name="selected_object_ids" Value=""/>
	<Param Name="display_object_ids" Value=""/>
	<Param Name="disp_filter" Value="true"/>
	<Param Name="filter_id" Value=""/>
	<Param Name="show_all" Value="<%=global_settings.settings.show_all_persons%>"/>
	<Param Name="secid" Value="<%=tools_web.get_secid( Session.sid )%>"/>
</Dialog>

<Action Name="EduPlanEditAction" Source="edu_plan_edit_action" Success="ALERT={messageText};REFRESH;" Failure="ALERT={messageText}">
	<Param Name="object_id" Value="<%=curObjectID%>"/>
	<Param Name="iObjectId" Value="<%=curObjectID%>"/>
	<Param Name="iParentId" Value=""/>
	<Param Name="sContext" Value="{CONTEXT}"/>
	<Param Name="sAction" Value=""/>
</Action>
<%
Response.Write( EvalCodePageUrl( global_settings.web_path + "view_object_title.xaml" ) );
iDefaultTab = OptInt( CONTEXT.GetOptProperty( "EducationPlanBodyTab" ), OptInt( curUrlQuery.GetOptProperty( "tab" ), 0 ) );
iCurTab = 0-1;

arrTabListParam = String( tools_web.get_web_param( curParams, "education_plan_body.tab_list", "main;report", true ) ).split( ";" );
%>
<TabControl Name="EducationPlanBodyTab" ActiveTab="<%=iDefaultTab%>" Width="100%" TabsLocation="<%=curDevice.disp_type != "mobile" ? "w" : "n"%>" Preservable="1" TabsWidth="216">
<%
for ( sTabListParam in arrTabListParam )
{
///////////////////////////////////////////////   MAIN TAB   /////////////////////////////////////////////
if ( sTabListParam == "main" )
{
	iCurTab++;
	arrBlockListParam = String( tools_web.get_web_param( curParams, "education_plan_body.tab_list.main_tab.block_list", "info;map", true ) ).split( ";" );
	sTabTitle = tools_web.get_web_param( curParams, "education_plan_body.tab_list.main_tab", "", true );
%>
	<TabItem Title="<%=XmlAttrEncode( sTabTitle == "" ? tools_web.get_web_const( "osnovnyesveden", curLngWeb ) : tools_web.get_cur_lng_name( sTabTitle, curLng.short_id ) )%>" >
<%
	for ( sTabElem in arrBlockListParam )
	{
		if ( sTabElem == "info" )
		{
%>
		<!--<Panel ShowHeader="0" Title="<%=XmlAttrEncode( tools_web.get_web_const( "c_info", curLngWeb ) )%>">-->
			<Grid Width="100%" Class="XAML-grid-info-table" Adapt="1">
				<GridColumns>
					<GridColumn Width="250"/>
					<GridColumn/>
				</GridColumns>
<%
			if ( curObject.compound_program_id.HasValue )
			{
%>
				<GridRow>
					<Label Class="XAML-info-grid-title-column"><%=tools_web.get_web_const( "c_compound_prog", curLngWeb )%>:</Label>
<%
				catCompoundProgram = curObject.compound_program_id.OptForeignElem;
				if ( catCompoundProgram == undefined )
				{
%>
					<Label Class="XAML-deleted"><%=tools_web.get_web_const( "c_deleted", curLngWeb )%></Label>
<%
				}
				else
				{
%>
					<Link Click="OPENURL=<%=tools_web.get_mode_clean_url( null, curObject.compound_program_id, { doc_id: curDocID } )%>"><%=catCompoundProgram.name%></Link>
<%
				}
%>
				</GridRow>
<%
			}

			if ( curObject.budget_period_id.HasValue )
			{
%>
				<GridRow>
					<Label Class="XAML-info-grid-title-column"><%=tools_web.get_web_const( "c_budget_period", curLngWeb )%>:</Label>
<%
				catBudgetPerion = curObject.budget_period_id.OptForeignElem;
				if ( catBudgetPerion == undefined )
				{
%>
					<Label Class="XAML-deleted"><%=tools_web.get_web_const( "c_deleted", curLngWeb )%></Label>
<%
				}
				else
				{
%>
					<Label><%=tools_web.get_cur_lng_name( catBudgetPerion.name, curLng.short_id )%></Label>
<%
				}
%>
				</GridRow>
<%
			}

			if ( curObject.group_id.HasValue )
			{
%>
				<GridRow>
					<Label Class="XAML-info-grid-title-column"><%=tools_web.get_web_const( "c_group", curLngWeb )%>:</Label>
<%
				catGroup = curObject.group_id.OptForeignElem;
				if ( catGroup == undefined )
				{
%>
					<Label Class="XAML-deleted"><%=tools_web.get_web_const( "c_deleted", curLngWeb )%></Label>
<%
				}
				else
				{
%>
					<Link Click="OPENURL=<%=tools_web.get_mode_clean_url( null, curObject.group_id, { doc_id: curDocID } )%>"><%=catGroup.name%></Link>
<%
				}
%>
				</GridRow>
<%
			}

			if ( curObject.tutor_id.HasValue && (CheckRights("education_plan_show_tutor") || CheckRights("education_plan_edit_tutor")))
			{
%>
				<GridRow>
					<Label Class="XAML-info-grid-title-column"><%=tools_web.get_web_const( "c_tutor_main", curLngWeb )%>:</Label>
<%
				catTutor = curObject.tutor_id.OptForeignElem;
				if ( catTutor == undefined )
				{
%>
					<Label Class="XAML-deleted"><%=tools_web.get_web_const( "c_deleted", curLngWeb )%></Label>
<%
				}
				else
				{
%>
					<Link Click="OPENURL=<%=tools_web.get_mode_clean_url( null, curObject.tutor_id, { doc_id: curDocID } )%>"><%=catTutor.fullname%></Link>
<%
				}
%>
				</GridRow>
<%
			}
%>
				<!--<GridRow>
					<Label Class="XAML-info-grid-title-column"><%=tools_web.get_web_const( "c_create_date", curLngWeb )%>:</Label>
					<Label><%=StrDate( curObject.create_date, true, false )%></Label>
				</GridRow>-->
<%
			if ( (CheckRights("education_plan_show_date") || CheckRights("education_plan_edit_date")) )
			{
%>
				<GridRow>
					<Label Class="XAML-info-grid-title-column"><%=tools_web.get_web_const( "u6lvp7f029", curLngWeb )%>:</Label>
<%
					if (CheckRights("education_plan_edit_date"))
					{
%>
						<DatePicker Format="d.m.Y H:i" Name="plan_date"><%=StrDate( curObject.plan_date, true, false )%></DatePicker>
<%
					}
					else
					{
%>
						<Label><%=StrDate( curObject.plan_date, true, false )%></Label>
<%
					}
%>
				</GridRow>
<%
			}

			if ( (CheckRights("education_plan_show_date") || CheckRights("education_plan_edit_date")) )
			{
%>
				<GridRow>
					<Label Class="XAML-info-grid-title-column"><%=tools_web.get_web_const( "c_finish_date", curLngWeb )%>:</Label>
<%
					if (CheckRights("education_plan_edit_date"))
					{
%>
						<DatePicker Format="d.m.Y H:i" Name="finish_date"><%=StrDate( curObject.finish_date, true, false )%></DatePicker>
<%
					}
					else
					{
%>
						<Label><%=StrDate( curObject.finish_date, true, false )%></Label>
<%
					}
%>
				</GridRow>
<%
			}
%>
				<GridRow>
					<Label Class="XAML-info-grid-title-column"><%=tools_web.get_web_const( "vppb_state", curLngWeb )%>:</Label>
<%
					if (CheckRights("education_plan_edit_result"))
					{
%>
						<ComboBox Name="state_id" Enabled="false" SelectedItem="<%=curObject.state_id%>">
<%
							for (_state in curLngCommon.learning_states)
							{
%>
								<ComboBoxItem Value="<%=_state.id%>"><%=_state.name%></ComboBoxItem>
<%
							}
%>
						</ComboBox>
<%
					}
					else
					{
%>
						<Label><%=curLngCommon.learning_states.GetChildByKey( curObject.state_id ).name%></Label>
<%
					}
%>
				</GridRow>
<%
			if ( (CheckRights("education_plan_show_result") || CheckRights("education_plan_edit_result")) )
			{
%>
				<GridRow>
					<Label Class="XAML-info-grid-title-column"><%=tools_web.get_web_const( "c_readiness_percent", curLngWeb )%>:</Label>
<%
					if (CheckRights("education_plan_edit_result"))
					{
%>
						<Edit Name="readiness_percent" Width="50"><%=(curObject.readiness_percent.HasValue?curObject.readiness_percent:"")%></Edit>
<%
					}
					else
					{
%>
						<Label><%=(curObject.readiness_percent.HasValue?curObject.readiness_percent:"")%></Label>
<%
					}
%>
				</GridRow>
<%
			}
			if (CheckRights("education_plan_edit_result") || CheckRights("education_plan_edit_date") || CheckRights("education_plan_edit_tutor"))
			{
%>
				<GridRow>
					<Label></Label>
					<Button Class="XAML-button XAML-button-save" Click="SET=EduPlanEditAction/sAction,save;ACTION=EduPlanEditAction;">
						<%=tools_web.get_web_const( "c_save", curLngWeb )%>
					</Button>
				</GridRow>
<%
			}
%>
			</Grid>
		<!--</Panel>-->
<%
		}

		if ( sTabElem == "map" )
		{
			sMapType = CONTEXT.GetOptProperty( "PlanMapTypeSelector", "list" );
			function get_part_data( partElem )
			{
				obj = new Object();
				const = "";
				iObjectId  = "";
				sObjectUrl = "";
				switch( partElem.type )
				{
					case "folder":
						const = tools_web.get_web_const( "c_phase", curLngWeb );
						sObjectUrl = "pics/folder32x32.png";
						break;
					case "education_method":
						const = tools_web.get_web_const( "c_edu_method", curLngWeb );
						iObjectId = partElem.education_method_id;
						sObjectUrl = "images/education_method.png";
						break;
					case "course":
						const = tools_web.get_web_const( "c_course", curLngWeb );
						iObjectId = partElem.object_id;
						sObjectUrl = "images/education_method.png";
						break;
					case "assessment":
						const = tools_web.get_web_const( "c_test", curLngWeb );
						iObjectId = partElem.object_id;
						sObjectUrl = "images/assessment.png";
						break;
					case "learning_task":
						const = tools_web.get_web_const( "zzzv3sxxx47yyy", curLngWeb );
						iObjectId = partElem.object_id;
						sObjectUrl = "images/learning_task.png";
						break;
					case "event":
						const = tools_web.get_web_const( "c_event", curLngWeb );
						iObjectId = partElem.object_id;
						sObjectUrl = "images/event.png";
						break;
					case "material":
						const = "Изучение материала";
						if( partElem.catalog_name.HasValue )
							sObjectUrl = "images/" + partElem.catalog_name + ".png";
						else
							sObjectUrl = "images/library_material.png";
						iObjectId = partElem.object_id;
								
						break;
				}
				teObject = null;
				if( OptInt( iObjectId ) != undefined )
					teObject = OpenDoc( UrlFromDocID( iObjectId ) ).TopElem;
						
				sName = "";
				if( teObject != null )
				{
					switch ( teObject.Name )
					{
						default:
							sName = tools.get_disp_name_value( teObject );
							if ( teObject.ChildExists( 'resource_id' ) && teObject.resource_id.HasValue )
								sObjectUrl = tools_web.get_object_source_url( 'resource', teObject.resource_id );
							else
								sObjectUrl = '/images/' + teObject.Name + '.png';
							break;
					}
				}
				obj.name = sName;
				obj.pict_url = sObjectUrl;
				obj.const = const;
				obj.top_elem = teObject;
				
				return obj;
			}

			curFilter = {
				'id': "EducationPlanSelector",
				'title': tools_web.get_web_const( "kartaprogrammy", curLngWeb ),
				'selectors': "list_adv;structure",
				'selectors_value': CONTEXT.GetOptProperty( "FilterSelectorsEducationPlanSelector", "list_adv" ),
				'disp_search': false,
				'selectors_action': "TOGGLE=PlanPartsList,PlanPartsGraph;",
			};
			if (CheckRights("education_plan_add_element"))
			{
				curFilter.SetProperty( "buttons", [ { title: tools_web.get_web_const( "e6u8nox6xq", curLngWeb ), click: "SET=EduPlanEditTask/action_id,add;OPENDIALOG=EduPlanEditTask;" } ] );
			}
			Response.Write( EvalCodePageUrl( global_settings.web_path + "view_filter.xaml" ) );
			function write_buttons( partElem )
			{
%>
	<StackPanel Orientation="Horizontal" Class="wt-plain-stack" Width="100%" Adapt="1">
<%
				if ( CheckRights( "education_plan_delete_element" ) )
				{
%>
		<Button Class="XAML-button" Click="CONFIRM=<%=UrlEncode(tools_web.get_web_const( "udalitzapis_5", curLngWeb ))%>;SET=EduPlanEditAction/iParentId,<%=partElem.id%>;SET=EduPlanEditAction/sAction,delete;ACTION=EduPlanEditAction;"><%=tools_web.get_web_const( "c_delete", curLngWeb )%></Button>
<%
				}
				if ( CheckRights( "education_plan_edit_result" ) || CheckRights( "education_plan_edit_date" ) || CheckRights( "education_plan_edit_tutor" ) )
				{
%>
		<Button Class="XAML-button" Click="SET=EduPlanEditTask/action_id,edit;SET=EduPlanEditTask/object_id,<%=curObjectID%>;SET=EduPlanEditTask/parent_program_id,<%=partElem.id%>;OPENDIALOG=EduPlanEditTask;"><%=tools_web.get_web_const( "c_edit", curLngWeb )%></Button>
<%
				}
				if ( CheckRights( "education_plan_add_element" ) )
				{
%>
		<Button Class="XAML-button" Click="SET=EduPlanEditTask/action_id,add;SET=EduPlanEditTask/parent_program_id,<%=partElem.id%>;OPENDIALOG=EduPlanEditTask;"><%=tools_web.get_web_const( "e6u8nox6xq", curLngWeb )%></Button>
<%
				}
%>
	</StackPanel>
<%
			}
			function put_doc_xml( iId, iIdentParam )
			{
				var arrChildParts = ArraySelectByKey( curObject.programs, iId, "parent_progpam_id" );

				for( fldPartElem in arrChildParts )
				{
					sImgUrl = "/pics/1blank.gif";
					obj_data = get_part_data( fldPartElem )
					if ( fldPartElem.type == 'folder' )
					{
%>
				<Grid Width="100%" Class="XAML-grid-list-item">
					<GridColumns>
<%
						if( curDevice.disp_type != "mobile" )
						{
%>
						<GridColumn/>
<%
						}
%>
						<GridColumn Adapt="true"/>
						<GridColumn Width="100%"/>
					</GridColumns>
					<GridRow>
<%
						if( curDevice.disp_type != "mobile" )
						{
%>
						<Image Source="/pics/1blank.gif" Class="XAML-course-map-indent XAML-course-map-indent-<%=iIdentParam%>"/>
<%
						}
%>
						<Label Class="wt-course-element-switch wt-course-element-switch-expanded XAML-label-switch XAML-label-switch-expanded"/>
						<StackPanel Orientation="Vertical" Class="">
							<Label Class="XAML-label-header-4"><![CDATA[<%=tools_web.get_cur_lng_name( fldPartElem.name, curLng.short_id )%>]]></Label>
<%
						write_buttons( fldPartElem )
%>
						</StackPanel>
					</GridRow>
				</Grid>
<%
					}
					else
					{
%>
					<Grid Width="100%" Class="XAML-grid-list-item" Adapt="1">
						<GridColumns>
<%
						if( curDevice.disp_type != "mobile" )
						{
%>
							<GridColumn/>
							<GridColumn Adapt="true"/>
<%
						}
%>
							<GridColumn Width="100%"/>
							<GridColumn Adapt="true"/>
							<GridColumn Adapt="true"/>
						</GridColumns>
						<GridRow>
<%
						if( curDevice.disp_type != "mobile" )
						{
%>
							<Image Source="/pics/1blank.gif" Class="XAML-course-map-indent XAML-course-map-indent-<%=iIdentParam%> XAML-image-indent-<%=iIdentParam%>"/>
							<Label Class="wt-course-element-switch wt-course-element-switch-collapsed XAML-label-switch XAML-label-switch-collapsed"/>
<%
						}
%>
							<StackPanel Orientation="Vertical" Class="XAML-stack-container">
<%
						if( get_program_link( fldPartElem ) != "" )
						{
%>
								<Link Click="<%=get_program_link( fldPartElem )%>" Class="XAML-label-header-4"><![CDATA[<%=tools_web.get_cur_lng_name( fldPartElem.name, curLng.short_id )%>]]></Link>
<%
						}
						else
						{
%>
								<Label Class="XAML-label-header-4"><![CDATA[<%=tools_web.get_cur_lng_name( fldPartElem.name, curLng.short_id )%>]]></Label>
<%
						}
%>
								<Label Class="XAML-label-normal"><![CDATA[<%=obj_data.const%>. <%=obj_data.name%>]]></Label>
								<StackPanel Orientation="Horizontal" Class="XAML-stack-container-long" Adapt="1">
<%
						if( false && fldPartElem.create_date.HasValue )
						{
%>
									<StackPanel Orientation="Horizontal" Class="XAML-stack-container">
										<Label Class="wt-course-map-info-name XAML-label-info-name" NoWrap="true"><%=tools_web.get_web_const( "c_start_date", curLngWeb )%></Label>
										<Label Class="wt-course-map-info-value XAML-label-info-value" NoWrap="true"><%=StrDate( fldPartElem.create_date, true, false )%></Label>
									</StackPanel>
<%
						}
						if( fldPartElem.plan_date.HasValue )
						{
%>
									<StackPanel Orientation="Horizontal" Class="XAML-stack-container">
										<Label Class="wt-course-map-info-name XAML-label-info-name" NoWrap="true"><%=tools_web.get_web_const( "planiruemayadat_4", curLngWeb )%></Label>
										<Label Class="wt-course-map-info-value XAML-label-info-value" NoWrap="true"><%=StrDate( fldPartElem.plan_date, true, false )%></Label>
									</StackPanel>
<%
						}
						if( fldPartElem.finish_date.HasValue )
						{
%>
									<StackPanel Orientation="Horizontal" Class="XAML-stack-container">
										<Label Class="wt-course-map-info-name XAML-label-info-name" NoWrap="true"><%=tools_web.get_web_const( "c_finish_date", curLngWeb )%></Label>
										<Label Class="wt-course-map-info-value XAML-label-info-value" NoWrap="true"><%=StrDate( fldPartElem.finish_date, true, false )%></Label>
									</StackPanel>
<%
						}
%>
								</StackPanel>
<%
						write_buttons( fldPartElem )
%>
							</StackPanel>
							<Label Class="wt-course-progress-tangle"/>
						</GridRow>
					</Grid>
<%
					}
					put_doc_xml( fldPartElem.id, iIdentParam + 1 );
				}
			}
%>
			<StackPanel Orientation="Vertical" Name="PlanPartsList" Class="XAML-stack-treemap XAML-course-map XAML-stack-list-container" Hidden="<%=( sMapType != "graph" ? "0" : "1" )%>" Width="100%">
<%
			put_doc_xml( null, 0 );
%>
			</StackPanel>
			<StackPanel Orientation="Vertical" Name="PlanPartsGraph" Hidden="<%=( sMapType != "graph" ? "1" : "0" )%>" Width="100%">
				<HTMLBox>
					<![CDATA[
						<style>
							.mp-div-text{ width: 100% !important; }
						</style>
					]]>
				</HTMLBox>
				<Collection Name="ProgramPartsCollection">
					<Data>
						<!--<Row>
							<Cell Id="name" Value="<%=XmlAttrEncode( "<b>" + tools_web.get_cur_lng_name( curObject.name, curLng.short_id ) + "</b>" )%>"/>
							<Cell Id="id" Value="0"/>
						</Row>-->
<%
			for ( fldPartElem in curObject.programs )
			{
				custom_class = "";
				switch( fldPartElem.state_id.Value )
				{
					case 4:
						custom_class = "mp-div-status-success";
						break;
					case 3:
						custom_class = "mp-div-status-failed";
						break;
				}
				obj_data = get_part_data( fldPartElem )

				fldParent = ArrayOptFirstElem( fldPartElem.completed_parent_programs );
				iParent = fldParent == undefined ? ( fldPartElem.parent_progpam_id.HasValue ? fldPartElem.parent_progpam_id : "" ) : fldParent.PrimaryKey;
				sName = "<div style='font-size: 16px; font-weight: 600; width: 100% !important;  white-space: normal !important; display: block;overflow-y: hidden; overflow: hidden; text-overflow: ellipsis; display: -webkit-box; -webkit-box-orient: vertical;  -webkit-line-clamp: 3;'>" + tools_web.get_cur_lng_name( fldPartElem.name, curLng.short_id ) + "</div>"
				sText = "<div style='height: 83px; width: 232px !important;'><div style='height: 63px; width: 232px !important; overflow-y: hidden;'>";
				if( obj_data.const != "" )
					sText += tools_web.get_web_const( "c_type", curLngWeb ) + " : " + obj_data.const;
				sText += "</div>";
				if( fldPartElem.plan_date.HasValue )
				{
					sText += "<div style='width: 100%; position: absolute; top: 51px; z-index: 1; padding: 5px'><table width='100%'><tr>";
					sText += "<td><div style='width: 25px'><img src='design/default/images/time.png' width='20' height='20'/></div></td>";
					sText += "<td width='100%'><div>" + StrDate( fldPartElem.plan_date, true, false ) + "</div></td>";
					sText += "</tr></table></div>";
				}
				sText += "</div>";
%>
						<Row>
							<Cell Id="title" Value="<%=XmlAttrEncode( sName )%>"/>
							<Cell Id="id" Value="<%=fldPartElem.PrimaryKey%>"/>
							<Cell Id="parent" Value="<%=iParent%>"/>
							<Cell Id="parents_ids" Value=""/>
							<Cell Id="url" Value="<%=get_program_link( fldPartElem )%>"/>
							<Cell Id="class" Value="<%=custom_class%>"/>
							<Cell Id="text" Value="<%=XmlAttrEncode( sText )%>"/>
							<Cell Id="image" Value="<%=obj_data.pict_url%>"/>
						</Row>
<%
			}
%>
					</Data>
				</Collection>
				<WTTree Type="tree" 
						MultiPath="true" 
						Orientation="top" 
						DisplayToggle="false" 
						InterElement="30" 
						InterLevel="30" 
						MarkerEnd="arrow" 
						MarkerStart="circle" 
						ElementForm="roundrect" 
						ElementHeight="175" 
						ElementWidth="250" 
						ElementBGColor="#ffffff;" 
						ElementLayout="image=image|title=title;text=text" 
						Name="ProgramPartsChart" 
						Width="100%" 
						Source="{ProgramPartsCollection}" 
						NodeClick="{!url}" 
						DataParent="parent" 
						DataID="id" 
						DataTitle="title" 
						DataText="text" 
						DataClass="class"/>

				<!--<WTTree Width="100%" Name="ProgramPartsChart" Source="{ProgramPartsCollection}" Selectable="0" DataID="id" DataParent="parent_object_id" DataTitle="name" DataText="name" DataImage="icon" NodeMode="normal" NodeClick="{!url}" DisplayToggle="true" ElementLayout="fonticon|text=name">
				</WTTree>-->
				<!--<FlowChart Name="ProgramPartsChart" Width="100%" Height="400" DataID="id" DataTitle="name" DataParent="parent_object_id" Source="{ProgramPartsCollection}" Click="OPENURL={url}"/>-->
			</StackPanel>
<%
		}
	}
%>
	</TabItem>
<%
}




///////////////////////////////////////////////   REPORT TAB   /////////////////////////////////////////////
sReportTabPath = "education_plan_body.tab_list.report_tab";
Response.Write( EvalCodePageUrl( global_settings.web_path + "view_custom_reports_tab.xaml" ) );

}
%>
</TabControl>

</SPXMLScreen>