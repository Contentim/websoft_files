<?xml version="1.0" encoding="utf-8"?>
<data>
	<basic>
		<id>fupc9r4r5b</id>
		<create_date>2021-06-28T17:13:34+00:00</create_date>
		<server_version>2021.1.3.302 (2021-05-24)</server_version>
	</basic>
	<documents>
		<document>
			<id>0x5C093BC34D962400</id>
			<name>Отчеты 360</name>
			<create_date>2018-12-06T18:09:55Z</create_date>
			<parent_document_id>5668210991262361622</parent_document_id>
			<attributes>
				<is_link>false</is_link>
				<permit_subscription>false</permit_subscription>
				<is_menu>false</is_menu>
				<is_main_item>false</is_main_item>
				<is_news>false</is_news>
				<left_disp_childs>false</left_disp_childs>
				<no_disp_childs>false</no_disp_childs>
			</attributes>
			<templates_source>system</templates_source>
			<status_in_knowledge_map>active</status_in_knowledge_map>
			<access>
				<access_level>0</access_level>
				<access_roles>
					<access_role>
						<access_role_id>admin</access_role_id>
					</access_role>
				</access_roles>
			</access>
			<doc_info>
				<creation>
					<user_login>user1</user_login>
					<user_id>6148914691236517121</user_id>
					<date>2018-12-06T18:10:12Z</date>
				</creation>
				<modification>
					<user_login>user1</user_login>
					<user_id>6148914691236517121</user_id>
					<date>2021-06-28T13:44:40Z</date>
				</modification>
			</doc_info>
		</document>
		<document>
			<id>0x5C093BC34D962405</id>
			<code>websoft_report_360_1</code>
			<name>Итоговый оценочный лист (вариант 1)</name>
			<create_date>2018-12-06T21:33:42Z</create_date>
			<parent_document_id>6631897636286112768</parent_document_id>
			<attributes>
				<template>view_doc.html?mode=doc_type&amp;custom_web_template_id=5442844100154717065</template>
				<is_link>false</is_link>
				<permit_subscription>false</permit_subscription>
				<is_menu>false</is_menu>
				<is_main_item>false</is_main_item>
				<is_news>false</is_news>
				<left_disp_childs>false</left_disp_childs>
				<no_disp_childs>false</no_disp_childs>
			</attributes>
			<custom_template_type>5442844100154717065</custom_template_type>
			<templates_source>system</templates_source>
			<status_in_knowledge_map>active</status_in_knowledge_map>
			<access>
				<access_level>0</access_level>
				<access_roles>
					<access_role>
						<access_role_id>admin</access_role_id>
					</access_role>
				</access_roles>
			</access>
			<doc_info>
				<creation>
					<user_login>user1</user_login>
					<user_id>6148914691236517121</user_id>
					<date>2018-12-06T21:33:52Z</date>
				</creation>
				<modification>
					<user_login>user1</user_login>
					<user_id>6148914691236517121</user_id>
					<date>2021-06-28T13:45:34Z</date>
				</modification>
			</doc_info>
		</document>
		<document>
			<id>0x5C093BC34D962406</id>
			<code>websoft_report_360_2</code>
			<name>Итоговый оценочный лист (вариант 2)</name>
			<create_date>2018-12-06T21:33:56Z</create_date>
			<parent_document_id>6631897636286112768</parent_document_id>
			<attributes>
				<template>view_doc.html?mode=doc_type&amp;custom_web_template_id=6270814052646852080</template>
				<is_link>false</is_link>
				<permit_subscription>false</permit_subscription>
				<is_menu>false</is_menu>
				<is_main_item>false</is_main_item>
				<is_news>false</is_news>
				<left_disp_childs>false</left_disp_childs>
				<no_disp_childs>false</no_disp_childs>
			</attributes>
			<custom_template_type>6270814052646852080</custom_template_type>
			<templates_source>system</templates_source>
			<wvars>
				<wvar>
					<name>visible_legend</name>
					<value>1</value>
					<type>bool</type>
					<description>Показывать интерпретацию результатов</description>
					<position>1</position>
				</wvar>
				<wvar>
					<name>legend_color</name>
					<value>{ min: 0, max: 2, color: '#FF00AE', title: 'Не проявляется' },{ min: 2, max: 3, color: '#FFFF00', title: 'Базовый' },{ min: 4, max: 5, color: '#008000', title: 'Высокий' }</value>
					<type>string</type>
					<position>2</position>
				</wvar>
			</wvars>
			<status_in_knowledge_map>active</status_in_knowledge_map>
			<access>
				<access_level>0</access_level>
				<access_roles>
					<access_role>
						<access_role_id>admin</access_role_id>
					</access_role>
				</access_roles>
			</access>
			<doc_info>
				<creation>
					<user_login>user1</user_login>
					<user_id>6148914691236517121</user_id>
					<date>2018-12-06T21:34:06Z</date>
				</creation>
				<modification>
					<user_login>user1</user_login>
					<user_id>6148914691236517121</user_id>
					<date>2021-06-28T13:45:44Z</date>
				</modification>
			</doc_info>
		</document>
		<document>
			<id>0x5C093BC34D96240A</id>
			<code>websoft_report_360_8</code>
			<name>Общая статистика по  Оцениваемым сотрудникам</name>
			<create_date>2018-12-06T21:34:51Z</create_date>
			<parent_document_id>6631897636286112768</parent_document_id>
			<attributes>
				<template>view_doc.html?mode=doc_type&amp;custom_web_template_id=6267806941531945768</template>
				<is_link>false</is_link>
				<permit_subscription>false</permit_subscription>
				<is_menu>false</is_menu>
				<is_main_item>false</is_main_item>
				<is_news>false</is_news>
				<left_disp_childs>false</left_disp_childs>
				<no_disp_childs>false</no_disp_childs>
			</attributes>
			<custom_template_type>6267806941531945768</custom_template_type>
			<templates_source>system</templates_source>
			<status_in_knowledge_map>active</status_in_knowledge_map>
			<access>
				<access_level>0</access_level>
				<access_roles>
					<access_role>
						<access_role_id>admin</access_role_id>
					</access_role>
				</access_roles>
			</access>
			<doc_info>
				<creation>
					<user_login>user1</user_login>
					<user_id>6148914691236517121</user_id>
					<date>2018-12-06T21:35:00Z</date>
				</creation>
				<modification>
					<user_login>user1</user_login>
					<user_id>6148914691236517121</user_id>
					<date>2021-06-28T13:45:50Z</date>
				</modification>
			</doc_info>
		</document>
		<document>
			<id>0x5C093BC34D962401</id>
			<code>websoft_report_360_3</code>
			<name>Отчет по результатам обратной связи 360 градусов - главный</name>
			<create_date>2018-12-06T18:10:18Z</create_date>
			<parent_document_id>6631897636286112768</parent_document_id>
			<attributes>
				<template>view_doc.html?mode=doc_type&amp;custom_web_template_id=5475919579372595587</template>
				<is_link>false</is_link>
				<permit_subscription>false</permit_subscription>
				<is_menu>false</is_menu>
				<is_main_item>false</is_main_item>
				<is_news>false</is_news>
				<left_disp_childs>false</left_disp_childs>
				<no_disp_childs>false</no_disp_childs>
			</attributes>
			<custom_template_type>5475919579372595587</custom_template_type>
			<templates_source>system</templates_source>
			<status_in_knowledge_map>active</status_in_knowledge_map>
			<access>
				<access_level>0</access_level>
				<access_roles>
					<access_role>
						<access_role_id>admin</access_role_id>
					</access_role>
				</access_roles>
			</access>
			<doc_info>
				<creation>
					<user_login>user1</user_login>
					<user_id>6148914691236517121</user_id>
					<date>2018-12-06T18:10:59Z</date>
				</creation>
				<modification>
					<user_login>user1</user_login>
					<user_id>6148914691236517121</user_id>
					<date>2021-06-28T13:45:56Z</date>
				</modification>
			</doc_info>
		</document>
		<document>
			<id>0x5C093BC34D962407</id>
			<code>websoft_report_360_4</code>
			<name>Отчет по результатам оценки сотрудников (вариант 1)</name>
			<create_date>2018-12-06T21:34:08Z</create_date>
			<parent_document_id>6631897636286112768</parent_document_id>
			<attributes>
				<template>view_doc.html?mode=doc_type&amp;custom_web_template_id=6270813099403995704</template>
				<is_link>false</is_link>
				<permit_subscription>false</permit_subscription>
				<is_menu>false</is_menu>
				<is_main_item>false</is_main_item>
				<is_news>false</is_news>
				<left_disp_childs>false</left_disp_childs>
				<no_disp_childs>false</no_disp_childs>
			</attributes>
			<custom_template_type>6270813099403995704</custom_template_type>
			<templates_source>system</templates_source>
			<wvars>
				<wvar>
					<name>visible_legend</name>
					<value>1</value>
					<type>bool</type>
					<description>Показывать интерпретацию результатов</description>
					<position>1</position>
				</wvar>
				<wvar>
					<name>legend_color</name>
					<value>{ min: 0, max: 1, color: '#CC0000', title: 'Не проявляется' },{ min: 1, max: 2, color: '#F8C000', title: 'Слабый' },{ min: 2, max: 3, color: '#FFFF00', title: 'Базовый' },{ min: 3, max: 4, color: '#00FF00', title: 'Сильный' },{ min: 4, max: 5, color: '#008000', title: 'Лидерский' }</value>
					<type>string</type>
					<position>2</position>
				</wvar>
			</wvars>
			<status_in_knowledge_map>active</status_in_knowledge_map>
			<access>
				<access_level>0</access_level>
				<access_roles>
					<access_role>
						<access_role_id>admin</access_role_id>
					</access_role>
				</access_roles>
			</access>
			<doc_info>
				<creation>
					<user_login>user1</user_login>
					<user_id>6148914691236517121</user_id>
					<date>2018-12-06T21:34:21Z</date>
				</creation>
				<modification>
					<user_login>user1</user_login>
					<user_id>6148914691236517121</user_id>
					<date>2021-06-28T13:46:02Z</date>
				</modification>
			</doc_info>
		</document>
		<document>
			<id>0x5C093BC34D962408</id>
			<code>websoft_report_360_5</code>
			<name>Результаты оценки сотрудников (вариант 2)</name>
			<create_date>2018-12-06T21:34:26Z</create_date>
			<parent_document_id>6631897636286112768</parent_document_id>
			<attributes>
				<template>view_doc.html?mode=doc_type&amp;custom_web_template_id=5297017291109131155</template>
				<is_link>false</is_link>
				<permit_subscription>false</permit_subscription>
				<is_menu>false</is_menu>
				<is_main_item>false</is_main_item>
				<is_news>false</is_news>
				<left_disp_childs>false</left_disp_childs>
				<no_disp_childs>false</no_disp_childs>
			</attributes>
			<custom_template_type>5297017291109131155</custom_template_type>
			<templates_source>system</templates_source>
			<wvars>
				<wvar>
					<name>uni_type_estimation</name>
					<value>1</value>
					<type>string</type>
					<description>флаг, показывающий, оценка проходит по отличному от стандарта способу (истина=1)</description>
					<position>0</position>
				</wvar>
				<wvar>
					<name>show_names_with_marks</name>
					<value>1</value>
					<type>string</type>
					<description>флаг, показывающий, что нужно кроме оценок выводить еще и  имена оценивающих (истина=1)</description>
					<position>0</position>
				</wvar>
			</wvars>
			<status_in_knowledge_map>active</status_in_knowledge_map>
			<access>
				<access_level>0</access_level>
				<access_roles>
					<access_role>
						<access_role_id>admin</access_role_id>
					</access_role>
				</access_roles>
			</access>
			<doc_info>
				<creation>
					<user_login>user1</user_login>
					<user_id>6148914691236517121</user_id>
					<date>2018-12-06T21:34:40Z</date>
				</creation>
				<modification>
					<user_login>user1</user_login>
					<user_id>6148914691236517121</user_id>
					<date>2021-06-28T13:46:08Z</date>
				</modification>
			</doc_info>
		</document>
		<document>
			<id>0x5C093BC34D962409</id>
			<code>websoft_report_360_6</code>
			<name>Статистика по Оцениваемым сотрудникам</name>
			<create_date>2018-12-06T21:34:42Z</create_date>
			<parent_document_id>6631897636286112768</parent_document_id>
			<attributes>
				<template>view_doc.html?mode=doc_type&amp;custom_web_template_id=5475092772135702378</template>
				<is_link>false</is_link>
				<permit_subscription>false</permit_subscription>
				<is_menu>false</is_menu>
				<is_main_item>false</is_main_item>
				<is_news>false</is_news>
				<left_disp_childs>false</left_disp_childs>
				<no_disp_childs>false</no_disp_childs>
			</attributes>
			<custom_template_type>5475092772135702378</custom_template_type>
			<templates_source>system</templates_source>
			<status_in_knowledge_map>active</status_in_knowledge_map>
			<access>
				<access_level>0</access_level>
				<access_roles>
					<access_role>
						<access_role_id>admin</access_role_id>
					</access_role>
				</access_roles>
			</access>
			<doc_info>
				<creation>
					<user_login>user1</user_login>
					<user_id>6148914691236517121</user_id>
					<date>2018-12-06T21:34:49Z</date>
				</creation>
				<modification>
					<user_login>user1</user_login>
					<user_id>6148914691236517121</user_id>
					<date>2021-06-28T13:46:14Z</date>
				</modification>
			</doc_info>
		</document>
		<document>
			<id>0x5BD07FFA5F3A12E9</id>
			<code>custom_report_body</code>
			<name>Развернутый отчет по оценке 360</name>
			<create_date>2015-05-27T11:39:41Z</create_date>
			<parent_document_id>6631897636286112768</parent_document_id>
			<attributes>
				<template>view_doc.html?mode=custom_report&amp;object_id=6615928565923451633</template>
				<position>1</position>
				<is_link>false</is_link>
				<permit_subscription>false</permit_subscription>
				<is_menu>false</is_menu>
				<is_main_item>false</is_main_item>
				<is_news>false</is_news>
				<left_disp_childs>false</left_disp_childs>
				<no_disp_childs>false</no_disp_childs>
			</attributes>
			<custom_template_type>5483781004796705760</custom_template_type>
			<templates_source>custom_web_template</templates_source>
			<wvars>
				<wvar>
					<name>custom_report.iPagingSize</name>
					<type>integer</type>
					<description>Размер страницы пейджинга</description>
					<position>1</position>
				</wvar>
			</wvars>
			<status_in_knowledge_map>active</status_in_knowledge_map>
			<access>
				<access_level>0</access_level>
				<access_roles>
					<access_role>
						<access_role_id>admin</access_role_id>
					</access_role>
				</access_roles>
			</access>
			<doc_info>
				<creation>
					<user_login>********</user_login>
					<user_id>24866142657113310</user_id>
					<date>2015-05-27T11:42:34Z</date>
				</creation>
				<modification>
					<user_login>user1</user_login>
					<user_id>6148914691236517121</user_id>
					<date>2021-06-28T13:46:20Z</date>
				</modification>
			</doc_info>
		</document>
	</documents>
	<custom_reports>
		<custom_report>
			<id>0x5BD07FFA5F3A12F1</id>
			<code>360_report_table</code>
			<name>Развернутый табличный отчет по оценке 360</name>
			<block>ass</block>
			<mode_selector>1</mode_selector>
			<object_name_type>exchange_object_types</object_name_type>
			<object_name>pa</object_name>
			<criterions>
				<criterion>
					<value>6636685621602045796</value>
					<type>integer</type>
					<option_type>eq</option_type>
					<and_or>and</and_or>
					<is_custom_field>false</is_custom_field>
					<catalog_chains>
						<catalog_chain>
							<catalog_name>pa</catalog_name>
							<field>assessment_appraise_id</field>
						</catalog_chain>
						<catalog_chain>
							<catalog_name>assessment_appraise</catalog_name>
						</catalog_chain>
					</catalog_chains>
					<flag_value_filter>false</flag_value_filter>
					<flag_is_parameter>true</flag_is_parameter>
					<flag_hierarchy>0</flag_hierarchy>
					<flag_active>true</flag_active>
				</criterion>
				<criterion>
					<value>360</value>
					<type>string</type>
					<option_type>cn</option_type>
					<and_or>and</and_or>
					<is_custom_field>false</is_custom_field>
					<catalog_chains>
						<catalog_chain>
							<catalog_name>pa</catalog_name>
							<field>assessment_appraise_id</field>
						</catalog_chain>
						<catalog_chain>
							<catalog_name>assessment_appraise</catalog_name>
							<field>code</field>
						</catalog_chain>
					</catalog_chains>
					<flag_value_filter>false</flag_value_filter>
					<flag_is_parameter>false</flag_is_parameter>
					<flag_hierarchy>0</flag_hierarchy>
					<flag_active>true</flag_active>
				</criterion>
				<criterion>
					<value>competence_appraisal</value>
					<type>string</type>
					<option_type>eq</option_type>
					<and_or>and</and_or>
					<is_custom_field>false</is_custom_field>
					<catalog_chains>
						<catalog_chain>
							<catalog_name>pa</catalog_name>
							<field>assessment_appraise_type</field>
						</catalog_chain>
					</catalog_chains>
					<flag_value_filter>false</flag_value_filter>
					<flag_is_parameter>false</flag_is_parameter>
					<flag_hierarchy>0</flag_hierarchy>
					<flag_active>true</flag_active>
				</criterion>
			</criterions>
			<flag_open_param_tun_section>true</flag_open_param_tun_section>
			<flag_custom_x>true</flag_custom_x>
			<custom_x>_ass = XQuery("for $obj in assessment_appraises where $obj/is_model!=true() "+(OptInt(_CRITERIONS[0].value,0)&gt;0?("and $obj/id="+OptInt(_CRITERIONS[0].value,0)):" and contains($obj/code,'360')")+" return $obj");&#10;_pas = XQuery("for $obj in pas where MatchSome($obj/assessment_appraise_id,("+ArrayMerge(_ass,"This.id",",")+")) return $obj");&#10;_res = [];&#10;_comps = [];&#10;_ii = 0;&#10;for (_pers in ArraySort(ArraySelectDistinct(_pas,"This.person_id"),"This.person_fullname","+"))&#10;{&#10;&#9;_ii++;&#10;&#9;_persTE = OpenDoc(UrlFromDocID(_pers.person_id)).TopElem;&#10;&#9;_pas_all = ArraySelect(_pas,"This.person_id=="+_pers.person_id);&#10;&#9;_pas_self = ArraySelect(_pas_all, "This.status=='self'");&#10;&#9;_pas_man = ArraySelect(_pas_all, "This.status=='manager'");&#10;&#9;_pas_coll = ArraySelect(_pas_all, "This.status=='coll'");&#10;&#9;_pas_staff = ArraySelect(_pas_all, "This.status=='staff'");&#10;&#9;_res1 = {"PrimaryKey":_pers.person_id, "fio":(_persTE.fullname + " ("+_persTE.custom_elems.ObtainChildByKey("deplevel2name").value.Value+")"), "cid":0, "cname":"_ИТОГО"  };&#10;&#9;_res1.SetProperty("self_sum",ArraySum(_pas_self,"This.overall"));&#10;&#9;_res1.SetProperty("self_done",ArraySum(_pas_self,"This.is_done?1:0"));&#10;&#9;_res1.SetProperty("self_count",ArrayCount(_pas_self));&#10;&#10;&#9;_res1.SetProperty("man_sum",ArraySum(_pas_man,"This.overall"));&#10;&#9;_res1.SetProperty("man_done",ArraySum(_pas_man,"This.is_done?1:0"));&#10;&#9;_res1.SetProperty("man_count",ArrayCount(_pas_man));&#10;&#10;&#9;_res1.SetProperty("coll_sum",ArraySum(_pas_coll,"This.overall"));&#10;&#9;_res1.SetProperty("coll_done",ArraySum(_pas_coll,"This.is_done?1:0"));&#10;&#9;_res1.SetProperty("coll_count",ArrayCount(_pas_coll));&#10;&#10;&#9;_res1.SetProperty("staff_sum",ArraySum(_pas_staff,"This.overall"));&#10;&#9;_res1.SetProperty("staff_done",ArraySum(_pas_staff,"This.is_done?1:0"));&#10;&#9;_res1.SetProperty("staff_count",ArrayCount(_pas_staff));&#10;&#10;&#9;_res.push(_res1);&#10;&#10;&#9;for (_p in _pas_all)&#10;&#9;{&#10;&#9;&#9;_pdoc = OpenDoc(UrlFromDocID(_p.id)).TopElem;&#10;&#9;&#9;for (_c in _pdoc.competences)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;_cp = ArrayOptFind(_comps,"This.PrimaryKey=="+_pdoc.person_id+" &amp;&amp; This.cid=="+_c.competence_id);&#10;&#9;&#9;&#9;if (_cp==undefined)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;_cp = {"PrimaryKey":_pdoc.person_id, "fio":(_persTE.fullname + " ("+_persTE.custom_elems.ObtainChildByKey("deplevel2name").value.Value+")"), "cid":_c.competence_id, "cname":_c.competence_id.OptForeignElem.name };&#10;&#10;&#9;&#9;&#9;&#9;_cp.SetProperty("self_sum",0.0);&#10;&#9;&#9;&#9;&#9;_cp.SetProperty("self_done",0);&#10;&#9;&#9;&#9;&#9;_cp.SetProperty("self_count",0);&#10;&#10;&#9;&#9;&#9;&#9;_cp.SetProperty("man_sum",0.0);&#10;&#9;&#9;&#9;&#9;_cp.SetProperty("man_done",0);&#10;&#9;&#9;&#9;&#9;_cp.SetProperty("man_count",0);&#10;&#10;&#9;&#9;&#9;&#9;_cp.SetProperty("coll_sum",0.0);&#10;&#9;&#9;&#9;&#9;_cp.SetProperty("coll_done",0);&#10;&#9;&#9;&#9;&#9;_cp.SetProperty("coll_count",0);&#10;&#10;&#9;&#9;&#9;&#9;_cp.SetProperty("staff_sum",0.0);&#10;&#9;&#9;&#9;&#9;_cp.SetProperty("staff_done",0);&#10;&#9;&#9;&#9;&#9;_cp.SetProperty("staff_count",0);&#10;&#10;&#9;&#9;&#9;&#9;_comps.push(_cp);&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;if (_p.status=='self')&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;if (_p.is_done)&#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;_cp.self_sum += OptReal(_c.mark_value,0.0);&#10;&#9;&#9;&#9;&#9;&#9;_cp.self_done++;&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;_cp.self_count++;&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;if (_p.status=='manager')&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;if (_p.is_done)&#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;_cp.man_sum += OptReal(_c.mark_value,0.0);&#10;&#9;&#9;&#9;&#9;&#9;_cp.man_done++;&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;_cp.man_count++;&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;if (_p.status=='coll')&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;if (_p.is_done)&#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;_cp.coll_sum += OptReal(_c.mark_value,0.0);&#10;&#9;&#9;&#9;&#9;&#9;_cp.coll_done++;&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;_cp.coll_count++;&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;if (_p.status=='staff')&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;if (_p.is_done)&#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;_cp.staff_sum += OptReal(_c.mark_value,0.0);&#10;&#9;&#9;&#9;&#9;&#9;_cp.staff_done++;&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;_cp.staff_count++;&#10;&#9;&#9;&#9;}&#10;&#9;&#9;}&#10;&#9;}&#10;&#9;if (false &amp;&amp; _ii&gt;10)&#10;&#9;&#9;break;&#10;}&#10;return ArraySort(ArrayUnion(_comps),"This.fio","+","This.cname","+");</custom_x>
			<columns>
				<column>
					<column_title>ФИО</column_title>
					<column_value>ListElem.fio</column_value>
					<column_width>20</column_width>
					<column_width_unit>%</column_width_unit>
					<datatype>string</datatype>
					<flag_formula>true</flag_formula>
					<flag_formula_post_process>false</flag_formula_post_process>
					<flag_visible>true</flag_visible>
					<flag_lng>false</flag_lng>
				</column>
				<column>
					<column_title>Компетенция</column_title>
					<column_value>ListElem.cname</column_value>
					<column_width_unit>%</column_width_unit>
					<datatype>string</datatype>
					<flag_formula>true</flag_formula>
					<flag_formula_post_process>false</flag_formula_post_process>
					<flag_visible>true</flag_visible>
					<flag_lng>false</flag_lng>
				</column>
				<column>
					<column_title>Самооценка</column_title>
					<column_value>ListElem.self_done&gt;0?(StrRealFixed(Real(ListElem.self_sum)/Real(ListElem.self_done),2)):''</column_value>
					<column_width_unit>%</column_width_unit>
					<datatype>real</datatype>
					<flag_formula>true</flag_formula>
					<flag_formula_post_process>false</flag_formula_post_process>
					<flag_visible>true</flag_visible>
					<flag_lng>false</flag_lng>
				</column>
				<column>
					<column_title>Руководитель</column_title>
					<column_value>ListElem.man_done&gt;0?(StrRealFixed(Real(ListElem.man_sum)/Real(ListElem.man_done),2)):''</column_value>
					<column_width_unit>%</column_width_unit>
					<datatype>real</datatype>
					<flag_formula>true</flag_formula>
					<flag_formula_post_process>false</flag_formula_post_process>
					<flag_visible>true</flag_visible>
					<flag_lng>false</flag_lng>
					<c_conditions>
						<c_condition>
							<option_type>lte</option_type>
							<color>0,0,0</color>
							<bkcolor>255,128,128</bkcolor>
							<value>85</value>
						</c_condition>
					</c_conditions>
				</column>
				<column>
					<column_title>Коллеги</column_title>
					<column_value>ListElem.coll_done&gt;0?(StrRealFixed(Real(ListElem.coll_sum)/Real(ListElem.coll_done),2)):''</column_value>
					<column_width_unit>%</column_width_unit>
					<datatype>real</datatype>
					<flag_formula>true</flag_formula>
					<flag_formula_post_process>false</flag_formula_post_process>
					<flag_visible>true</flag_visible>
					<flag_lng>false</flag_lng>
					<c_conditions>
						<c_condition>
							<option_type>lte</option_type>
							<bkcolor>255,128,128</bkcolor>
							<value>85</value>
						</c_condition>
					</c_conditions>
				</column>
				<column>
					<column_title>Заполнили</column_title>
					<column_value>ListElem.coll_done</column_value>
					<column_width_unit>%</column_width_unit>
					<datatype>integer</datatype>
					<flag_formula>true</flag_formula>
					<flag_formula_post_process>false</flag_formula_post_process>
					<flag_visible>true</flag_visible>
					<flag_lng>false</flag_lng>
				</column>
				<column>
					<column_title>Всего</column_title>
					<column_value>ListElem.coll_count</column_value>
					<column_width_unit>%</column_width_unit>
					<datatype>integer</datatype>
					<flag_formula>true</flag_formula>
					<flag_formula_post_process>false</flag_formula_post_process>
					<flag_visible>true</flag_visible>
					<flag_lng>false</flag_lng>
				</column>
				<column>
					<column_title>Подчиненные</column_title>
					<column_value>ListElem.staff_done&gt;0?(StrRealFixed(Real(ListElem.staff_sum)/Real(ListElem.staff_done),2)):''</column_value>
					<column_width_unit>%</column_width_unit>
					<datatype>real</datatype>
					<flag_formula>true</flag_formula>
					<flag_formula_post_process>false</flag_formula_post_process>
					<flag_visible>true</flag_visible>
					<flag_lng>false</flag_lng>
					<c_conditions>
						<c_condition>
							<option_type>lte</option_type>
							<bkcolor>255,128,128</bkcolor>
							<value>85</value>
						</c_condition>
					</c_conditions>
				</column>
				<column>
					<column_title>Заполнили</column_title>
					<column_value>ListElem.staff_done</column_value>
					<column_width_unit>%</column_width_unit>
					<datatype>integer</datatype>
					<flag_formula>true</flag_formula>
					<flag_formula_post_process>false</flag_formula_post_process>
					<flag_visible>true</flag_visible>
					<flag_lng>false</flag_lng>
				</column>
				<column>
					<column_title>Всего</column_title>
					<column_value>ListElem.staff_count</column_value>
					<column_width_unit>%</column_width_unit>
					<datatype>integer</datatype>
					<flag_formula>true</flag_formula>
					<flag_formula_post_process>false</flag_formula_post_process>
					<flag_visible>true</flag_visible>
					<flag_lng>false</flag_lng>
				</column>
			</columns>
			<disp_legend>true</disp_legend>
			<chart_id>a0</chart_id>
			<flag_showvalues>true</flag_showvalues>
			<plot_type>clustered</plot_type>
			<show_table>true</show_table>
			<show_chart>false</show_chart>
			<report_result_date>2019-04-19T12:33:29Z</report_result_date>
			<performance_launch_time>2019-04-19T12:33:29Z</performance_launch_time>
			<performance_search_time>2019-04-19T12:33:29Z</performance_search_time>
			<performance_process_time>2019-04-19T12:33:29Z</performance_process_time>
			<sort>
				<asc>false</asc>
			</sort>
			<categorize>true</categorize>
			<categorize_view>plain</categorize_view>
			<categorize_hide_details>false</categorize_hide_details>
			<aggregations>
				<aggregation>
					<aggregate_function>avg</aggregate_function>
					<aggregate_column>2</aggregate_column>
					<flag_graph>false</flag_graph>
					<aggregate_secondary>
						<option_type>eq</option_type>
					</aggregate_secondary>
				</aggregation>
				<aggregation>
					<aggregate_function>avg</aggregate_function>
					<aggregate_column>3</aggregate_column>
					<flag_graph>false</flag_graph>
					<aggregate_secondary>
						<option_type>eq</option_type>
					</aggregate_secondary>
				</aggregation>
				<aggregation>
					<aggregate_function>avg</aggregate_function>
					<aggregate_column>4</aggregate_column>
					<flag_graph>false</flag_graph>
					<aggregate_secondary>
						<option_type>eq</option_type>
					</aggregate_secondary>
				</aggregation>
				<aggregation>
					<aggregate_function>avg</aggregate_function>
					<aggregate_column>5</aggregate_column>
					<flag_graph>false</flag_graph>
					<aggregate_secondary>
						<option_type>eq</option_type>
					</aggregate_secondary>
				</aggregation>
				<aggregation>
					<aggregate_function>avg</aggregate_function>
					<aggregate_column>6</aggregate_column>
					<flag_graph>false</flag_graph>
					<aggregate_secondary>
						<option_type>eq</option_type>
					</aggregate_secondary>
				</aggregation>
				<aggregation>
					<aggregate_function>avg</aggregate_function>
					<aggregate_column>7</aggregate_column>
					<flag_graph>false</flag_graph>
					<aggregate_secondary>
						<option_type>eq</option_type>
					</aggregate_secondary>
				</aggregation>
				<aggregation>
					<aggregate_function>avg</aggregate_function>
					<aggregate_column>8</aggregate_column>
					<flag_graph>false</flag_graph>
					<aggregate_secondary>
						<option_type>eq</option_type>
					</aggregate_secondary>
				</aggregation>
				<aggregation>
					<aggregate_function>avg</aggregate_function>
					<aggregate_column>9</aggregate_column>
					<flag_graph>false</flag_graph>
					<aggregate_secondary>
						<option_type>eq</option_type>
					</aggregate_secondary>
				</aggregation>
			</aggregations>
			<show_total>false</show_total>
			<web_settings>
				<default_mode>table</default_mode>
			</web_settings>
			<subscribe>
				<on>false</on>
			</subscribe>
			<doc_info>
				<creation>
					<user_login>********</user_login>
					<user_id>24866142657113310</user_id>
					<date>2015-05-19T16:03:22Z</date>
				</creation>
				<modification>
					<user_login>admin</user_login>
					<user_id>6148914691236517121</user_id>
					<date>2021-06-28T13:27:13Z</date>
				</modification>
			</doc_info>
			<disp_block>
				<access_block_type>ass</access_block_type>
			</disp_block>
			<access>
				<access_level>0</access_level>
			</access>
			<binding_selection>1</binding_selection>
			<initiator_person_id>1105387902724063510</initiator_person_id>
		</custom_report>
	</custom_reports>
	<custom_web_templates>
		<custom_web_template>
			<id>0x4B88DDDF258D7389</id>
			<code>websoft_report_360_1</code>
			<name>Итоговый оценочный лист (вариант 1)</name>
			<category>websoft</category>
			<exec_code>
				<code_text>&lt;%&#10;swith_col=0;&#10;&#10;uni_type_estimation=false;&#10;&#10;&#10;try&#10;{&#10;&#9;build = Int(Request.Form.GetProperty("build"));&#10;}&#10;catch(_net_)&#10;{&#10;&#9;build = 0;&#10;}&#10;&#10;if (build == 0)&#10;{&#10;&#9;try&#10;&#9;{&#10;&#9;&#9;use =Int(Request.Query.GetProperty("obj_name"));&#10;&#9;}&#10;&#9;catch(_net_)&#10;&#9;{&#10;&#9;&#9;use = 1;&#10;&#9;}&#10;&#9;&#10;&#9;&#10;&#9;try&#10;&#9;{&#10;&#9;&#9;_wanted_date = Date(Request.Query.GetProperty("wanted_date"));&#10;&#9;}&#10;&#9;catch(_net_)&#10;&#9;{&#10;&#9;&#9;_wanted_date = undefined;&#10;&#9;}&#10;&#9;&#10;&#9;try&#10;&#9;{&#10;&#9;&#9;use =Int(Request.Query.GetProperty("obj_name"));&#10;&#9;}&#10;&#9;catch(_net_)&#10;&#9;{&#10;&#9;&#9;use = 1;&#10;&#9;}&#10;&#9;&#10;&#9;&#10;&#9;&#10;&#9;//--------------------&#10;&#9;try&#10;&#9;{&#10;&#9;&#9;_selected_obj = Request.Query.GetProperty("obj_id");&#10;&#9;}&#10;&#9;catch ( e )&#10;&#9;{&#10;&#9;&#9;_selected_obj = '';&#10;&#9;}&#10;&#9;try&#10;&#9;{&#10;&#9;&#9;_selected_comp = Request.Query.GetProperty("comp_id");&#10;&#9;}&#10;&#9;catch ( e )&#10;&#9;{&#10;&#9;&#9;_selected_comp = '';&#10;&#9;}&#10;}&#10;else&#10;{&#10;&#10;&#9;try&#10;&#9;{&#10;&#9;&#9;use =Int(Request.Form.GetProperty("obj_name"));&#10;&#9;}&#10;&#9;catch(_net_)&#10;&#9;{&#10;&#9;&#9;use = 1;&#10;&#9;}&#10;&#9;&#10;&#9;&#10;&#9;try&#10;&#9;{&#10;&#9;&#9;_wanted_date = Date(Request.Form.GetProperty("wanted_date"));&#10;&#9;}&#10;&#9;catch(_net_)&#10;&#9;{&#10;&#9;&#9;_wanted_date = undefined;&#10;&#9;}&#10;&#9;&#10;&#9;try&#10;&#9;{&#10;&#9;&#9;use =Int(Request.Form.GetProperty("obj_name"));&#10;&#9;}&#10;&#9;catch(_net_)&#10;&#9;{&#10;&#9;&#9;use = 1;&#10;&#9;}&#10;&#9;&#10;&#9;&#10;&#9;&#10;&#9;//--------------------&#10;&#9;try&#10;&#9;{&#10;&#9;&#9;_selected_obj = Request.Form.GetProperty("obj_id");&#10;&#9;}&#10;&#9;catch ( e )&#10;&#9;{&#10;&#9;&#9;_selected_obj = '';&#10;&#9;}&#10;&#9;try&#10;&#9;{&#10;&#9;&#9;_selected_comp = Request.Form.GetProperty("comp_id");&#10;&#9;}&#10;&#9;catch ( e )&#10;&#9;{&#10;&#9;&#9;_selected_comp = '';&#10;&#9;}&#10;&#10;}&#10;//Response.Write("_selected_obj="+_selected_obj+"&lt;br/&gt;");&#10;//----------------------------------&#10;use_str = '';&#10;switch ( use )&#10;{&#10;&#9; case 1:&#10;&#9;&#9;   use_str = 'org';&#10;&#9;&#9;   break;&#10;&#9; case 2:&#10;&#9;&#9;   use_str = 'subdivision';&#10;&#9;&#9;   break;&#10;&#9; case 3:&#10;&#9;&#9;   use_str = 'collaborator';&#10;&#9;&#9;   break;&#10;}&#10;&#10;&#10;&#10;obj_Array=Array();&#10;id_Array=String(_selected_obj).split(';');&#10;for (_id in id_Array)&#10;{&#10;&#9;if (Trim(_id)!='')&#10;&#9;{&#10;&#10;&#9;&#9;_Array = XQuery( "for $obj in "+use_str +"s where $obj/id="+_id+" return $obj");&#10;&#9;&#9;obj_Array =ArrayUnion(obj_Array,_Array);&#10;&#9;}&#10;}&#10;comp_Array=Array();&#10;id_Array=String(_selected_comp).split(';');&#10;for (_id in id_Array)&#10;{&#10;&#9;if (Trim(_id)!='')&#10;&#9;{&#10;&#10;&#9;&#9;_Array = XQuery( "for $obj in competences where $obj/id="+_id+" return $obj");&#10;&#9;&#9;comp_Array =ArrayUnion(comp_Array,_Array);&#10;&#9;}&#10;}&#10;&#10;Adr_String="view_doc.html?mode=doc_type&amp;doc_id="+curDocID+"&amp;object_id="+(Request.Query.GetOptProperty("custom_web_template_id",curObjectID));&#10;&#10;&#10;%&gt;&#10;&lt;script type="text/javascript" src="/scripts/jquery-ui/jquery-ui.js"&gt;&lt;/script&gt;&#10;&lt;link rel="stylesheet" href="/scripts/jquery-ui/jquery-ui.css"/&gt;&#10;&lt;script type="text/javascript"&gt;&#10;function open_win()&#10;{&#10;&#9;modalWin=window.open('assessment_excel_export.html','','');&#10;}&#10;&lt;/script&gt;&#10;&lt;SCRIPT LANGUAGE="JAVASCRIPT"&gt;&#10;//********************************************************************************************&#10;&#10;function fnAddCalendarsCustomFields()&#10;{&#10;&#9;$( ".date" ).attr("closed", 0).datepicker({changeMonth:true,changeYear:true,dateFormat:"dd.mm.yy",showOn: "both",buttonImage: "pics/calendar.gif", yearRange:'-90:+0',buttonImageOnly: true,showAnim: ""})&#10;}&#10;&#10;$(document).ready(function ()&#10;{&#10;&#9;fnAddCalendarsCustomFields()&#10;})&#10;&#10;function xShowModalDialog( sURL, vArguments, sFeatures ) &#10;{ &#10;&#9;if ( sURL==null||sURL=='' ) &#10;&#9;{ &#10;&#9;&#9;alert ("Invalid URL input."); &#10;&#9;&#9;return false; &#10;&#9;} &#10;&#9;if ( vArguments == null || vArguments == '' ) &#10;&#9;{ &#10;&#9;&#9;vArguments=''; &#10;&#9;} &#10;&#9;if ( sFeatures == null || sFeatures == '' ) &#10;&#9;{ &#10;&#9;&#9;sFeatures=dFeatures; &#10;&#9;} &#10;&#9;if ( window.navigator.appVersion.indexOf( "MSIE" ) != -1 ) &#10;&#9;{ &#10;&#9;&#9;window.showModalDialog( sURL, vArguments, sFeatures ); &#10;&#9;&#9;return false; &#10;&#9;} &#10;&#9;sFeatures = sFeatures.replace( / /gi, '' ); &#10;&#9;aFeatures = sFeatures.split( ";" ); &#10;&#9;sWinFeat = "directories=0,menubar=0,titlebar=0,toolbar=0,"; &#10;&#9;for ( x in aFeatures ) &#10;&#9;{ &#10;&#9;&#9;aTmp = aFeatures[x].split( ":" ); &#10;&#9;&#9;sKey = aTmp[0].toLowerCase(); &#10;&#9;&#9;sVal = aTmp[1]; &#10;&#9;&#9;switch ( sKey ) &#10;&#9;&#9;{ &#10;&#9;&#9;&#9;case "dialogheight": &#10;&#9;&#9;&#9;&#9;sWinFeat += "height="+sVal+","; &#10;&#9;&#9;&#9;&#9;pHeight = sVal; &#10;&#9;&#9;&#9;&#9;break; &#10;&#9;&#9;&#9;case "dialogwidth": &#10;&#9;&#9;&#9;&#9;sWinFeat += "width="+sVal+","; &#10;&#9;&#9;&#9;&#9;pWidth = sVal; &#10;&#9;&#9;&#9;&#9;break; &#10;&#9;&#9;&#9;case "dialogtop": &#10;&#9;&#9;&#9;&#9;sWinFeat += "screenY="+sVal+","; &#10;&#9;&#9;&#9;&#9;break; &#10;&#9;&#9;&#9;case "dialogleft": &#10;&#9;&#9;&#9;&#9;sWinFeat += "screenX="+sVal+","; &#10;&#9;&#9;&#9;&#9;break; &#10;&#9;&#9;&#9;case "resizable": &#10;&#9;&#9;&#9;&#9;sWinFeat += "resizable="+sVal+","; &#10;&#9;&#9;&#9;&#9;break; &#10;&#9;&#9;&#9;case "status": &#10;&#9;&#9;&#9;&#9;sWinFeat += "status="+sVal+","; &#10;&#9;&#9;&#9;&#9;break; &#10;&#9;&#9;&#9;case "center": &#10;&#9;&#9;&#9;&#9;if ( sVal.toLowerCase() == "yes" ) &#10;&#9;&#9;&#9;&#9;{ &#10;&#9;&#9;&#9;&#9;&#9;sWinFeat += "screenY="+((screen.availHeight-pHeight)/2)+","; &#10;&#9;&#9;&#9;&#9;&#9;sWinFeat += "screenX="+((screen.availWidth-pWidth)/2)+","; &#10;&#9;&#9;&#9;&#9;} &#10;&#9;&#9;&#9;&#9;break; &#10;&#9;&#9;} &#10;&#9;} &#10;&#9;modalWin=window.open( String( sURL ),"", sWinFeat ); &#10;&#9;if ( vArguments != null &amp;&amp; vArguments != '' ) &#10;&#9;{ &#10;&#9;&#9;modalWin.dialogArguments = vArguments;&#10;&#9;} &#10;} &#10;//*************************************************************************************************&#10;&lt;/SCRIPT&gt;&#10;&lt;script language="JavaScript"&gt;&#10;//&lt;!--&#10;&#10;var selected_object_ids = '&lt;%=_selected_obj%&gt;';&#10;function doSelect(sel_name,flag)&#10;{&#9;&#10;&#9;&#9;title = "Выбор объектов";&#10;&#9;&#9;var sel = document.getElementById(sel_name);&#10;&#9;&#9;if ( document.getElementById('wanted_date').value == '')&#10;&#9;&#9;&#9;alert( 'Выберите дату' );&#10;&#9;&#9;else&#10;&#9;&#9;{&#10;&#9;&#9;var pars=new Object();&#10;&#9;&#9;var strAttr="status:no;dialogWidth:780px;dialogHeight:550px;help:no;resizable:1";&#10;&#9;&#9;pars.selected_object_ids = selected_object_ids;&#10;&#9;&#9;pars.can_be_empty = false;&#10;&#9;&#9;pars.show_all = true;&#10;&#9;&#9;if (flag==0)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;_catalog = '&lt;%=use_str%&gt;';&#10;//&#9;&#9;&#9;xShowModalDialog( 'dlg_select.html?doc_id=&lt;%=curDocID%&gt;&amp;catalog_name=&lt;%=use_str%&gt;&amp;typein=1&amp;multi_select=1&amp;rand='+ Math.random(), pars, strAttr );&#9;&#9;&#10;&#9;&#9;}&#10;&#9;&#9;else&#10;&#9;&#9;{&#10;&#9;&#9;&#9;selected_object_ids = '&lt;%=_selected_comp%&gt;';&#10;&#9;&#9;&#9;pars.selected_object_ids = selected_object_ids;&#10;&#9;&#9;&#9;_catalog = 'competence';&#10;//&#9;&#9;&#9;xShowModalDialog( 'dlg_select.html?doc_id=&lt;%=curDocID%&gt;&amp;catalog_name=competence&amp;typein=1&amp;multi_select=1&amp;rand='+ Math.random(), pars, strAttr );&#9;&#9;&#10;&#9;&#9;}&#10;&#10;&#9;xShowSelectDialog(&#10;&#9;{&#10;&#9;&#9;"catalog_name": _catalog,&#10;&#9;&#9;"multi_select": 1,&#10;&#9;&#9;"can_be_empty": "false",&#10;&#9;&#9;"disp_filter": "false",&#10;&#9;&#9;"check_access": "false",&#10;&#9;&#9;"display_object_ids": "",&#10;&#9;&#9;"selected_object_ids": selected_object_ids&#10;&#9;}, &#10;&#9;function(oParams)&#10;&#9;{&#10;&#9;&#9;id_mas = oParams.selected_object_ids.split(";");&#10;&#10;&#9;&#9;if (!oParams.handle) return null;&#10;&#10;&#9;&#9;sel.value=oParams.selected_object_ids;&#10;&#9;&#9;selected_object_ids = oParams.selected_object_ids;&#10;&#9;&#9;window.location.href='&lt;%=Adr_String%&gt;'+ '&amp;obj_name=&lt;%=use%&gt;'+ '&amp;comp_id=' + document.getElementById('comp_id').value + '&amp;obj_id=' + document.getElementById('obj_id').value+'&amp;wanted_date=&lt;%=(_wanted_date != undefined ? _wanted_date : "")%&gt;';&#10;&#9;});&#10;&#9;&#9;&#10;&#10;&#9;&#9;&#10;&#9;&#9;}&#10;&#9;&#9;//document.forms['event_form'].submit();&#10;}&#10;&#10;&#10;function check(obj_name)&#10;{&#10;  window.location.href='&lt;%=Adr_String%&gt;' + '&amp;obj_name=' + obj_name+'&amp;wanted_date=&lt;%=(_wanted_date != undefined ? _wanted_date : "")%&gt;';&#10;&#10;}&#10;function doSubmit_simple()&#10;{&#9;&#10;&#9;if ( document.getElementById('wanted_date').value == '')&#10;&#9;{&#9;&#9;&#10;&#9;&#9;&#9;alert( 'Выберите дату' );&#10;&#9;&#9;&#9;return 0;&#10;&#9;}&#10;&#9;if ( document.getElementById('obj_id').value == '')&#10;&#9;{&#9;&#9;&#10;&#9;&#9;&#9;alert( 'Выберите объект построения отчета' );&#10;&#9;&#9;&#9;return 0;&#10;&#9;}&#9;&#10;&#9;if ( document.getElementById('comp_id').value == '')&#10;&#9;{&#9;&#9;&#10;&#9;&#9;&#9;alert( 'Выберите компетенции' );&#10;&#9;&#9;&#9;return 0;&#10;&#9;}&#9;&#10;    document.forms['event_form'].action.value = '&lt;%=Adr_String%&gt;&amp;wanted_date=&lt;%=(_wanted_date != undefined ? _wanted_date : "")%&gt;';   &#10;&#9;document.forms['event_form'].submit();&#10;}&#10;//--&gt;&#10;&lt;/script&gt;&#10;&lt;FORM ACTION="" NAME="event_form" METHOD="POST"&gt;&#10;&lt;TABLE width="100%" cellspacing="0" cellpadding="4" CLASS="tableBorder"&gt;&#10;&lt;TR&gt;&#10;&#9;&lt;TD WIDTH="300" STYLE="font-weight:normal; font-size:larger"&gt;Выберите любую дату в нужном году:&lt;/TD&gt;&#10;&#9;&lt;TD STYLE="font-weight:normal" valign="middle" align="l"&gt;&#10;&#9;&#9;&lt;input type="text" style="width: 70px" id="wanted_date" name="wanted_date"  value="&lt;%=(_wanted_date != undefined ? _wanted_date : "")%&gt;" class="date" readonly&gt;&#10;&#9;&lt;/TD&gt;&#10;&#9;&lt;TD width="40%"&gt;&lt;input type="button" value="Подтвердить ввод даты" class="inputButton" onMouseOver="this.className='inputButtonOver';" onMouseOut="this.className='inputButton';" style="width: 400px" onclick="window.location.href='&lt;%=Adr_String%&gt;&amp;wanted_date=' + document.getElementById('wanted_date').value"/&gt;&lt;/TD&gt;&#10;&lt;/TR&gt;&#10;&#10;&lt;%&#10;if (_wanted_date != undefined)&#10;{&#10;%&gt;&#10;&#10;&lt;TR&gt;&#10;&#9;&lt;TD colspan="3"&gt;&#10;&#9;&#9;&lt;input type="radio" name="obj_name"  onclick="check(this.value)" value="1" &lt;%=( use == 1 ? 'checked' : '')%&gt;/&gt;Организация&#10;&#9;&lt;/TD&gt;&#10;&lt;/TR&gt;&#10;&lt;TR&gt;&#9;&#10;&#9;&lt;TD colspan="3"&gt;&#10;&#9;&#9;&lt;input type="radio" name="obj_name"  onclick="check(this.value)" value="2" &lt;%=( use == 2 ? 'checked' : '')%&gt;/&gt;Подразделение&#10;&#9;&lt;/TD&gt;&#10;&lt;/TR&gt;&#10;&lt;TR&gt;&#9;&#10;&#9;&lt;TD colspan="3"&gt;&#10;&#9;&#9;&lt;input type="radio" name="obj_name"  onclick="check(this.value)" value="3" &lt;%=( use == 3 ? 'checked' : '')%&gt;/&gt;Сотрудник&#10;&#9;&lt;/TD&gt;&#10;&lt;/TR&gt;&#10;&lt;TR&gt;&#10;&#9;&lt;TD WIDTH="300" STYLE="font-weight:normal; font-size:larger" colspan="3" &gt;&#10;&#9;&lt;input type='hidden'  id='obj_id' name='obj_id' value='&lt;%=_selected_obj%&gt;'/&gt;&#10;&#9;&lt;input align="right" type="button" value="Выбрать" onClick="doSelect('obj_id',0)" class="inputButton" onMouseOver="this.className='inputButtonOver';" onMouseOut="this.className='inputButton';"&gt;&lt;/TD&gt;&#10;&lt;/TR&gt;&#10;&lt;TR&gt;&#10;&#9;&lt;TD WIDTH="300" STYLE="font-weight:normal; font-size:larger" colspan="3" &gt;&#10;&#9;&lt;input type='hidden'  id='comp_id' name='comp_id' value='&lt;%=_selected_comp%&gt;'/&gt;&#10;&#9;&lt;input align="right" type="button" value="Выбрать компетенции" onClick="doSelect('comp_id',1)" class="inputButton" onMouseOver="this.className='inputButtonOver';" onMouseOut="this.className='inputButton';"&gt;&lt;/TD&gt;&#10;&lt;/TR&gt;&#10;&lt;%&#10;}&#10;%&gt;&#10;&lt;/TABLE&gt;&#10;&lt;%&#10;if (_wanted_date != undefined)&#10;{&#10;%&gt;&#10;&lt;p align="center"&gt;&#10;&lt;input type='hidden'  id='build' name='build' value='1'/&gt;&#10;&lt;input type="button" value="Сформировать" onClick="doSubmit_simple();" class="inputButton" onMouseOver="this.className='inputButtonOver';" onMouseOut="this.className='inputButton';"/&gt; &#10;&lt;/p&gt;&#10;&lt;%&#10;}&#10;%&gt;&#10;&lt;/FORM&gt;&#10;&lt;%&#10;if (build== 1)&#10;{&#10;&#9;_RES_VALUE='';&#10;%&gt;&#10;&#10;&#9;&#9;&lt;BR/&gt;&#10;&#9;&#9;&lt;center&gt;&lt;input type="button" value="Экспорт в Excel" onclick="open_win()" class="inputButton" onMouseOver="this.className='inputButtonOver';" onMouseOut="this.className='inputButton';"/&gt;&lt;/center&gt;&#10;&#9;&#9;&lt;BR/&gt;&#10;&#10;&lt;%&#9;&#10;&#10;&#9;_cur_year= Year(_wanted_date);&#10;&#9;_start_date_time=DateNewTime(Date( _cur_year, 1, 1 ),00,00,00);&#10;&#9;_end_date_time=DateNewTime(Date( _cur_year, 12, 31),23,59,59);&#10;&#9;Query_String="for $obj in assessment_appraises where $obj/is_model=false() and $obj/start_date&lt;=date('" + _end_date_time +"') and $obj/start_date&gt;=date('" + _start_date_time +"') order by $obj/start_date descending return $obj";&#10;&#9;//Response.Write(Query_String+"&lt;/br&gt;");&#10;&#9;_assessment_array =Array();&#10;&#9;try&#10;&#9;{&#10;&#9;&#9;_assessment_array = XQuery(Query_String);&#10;&#9;}&#10;&#9;catch(x)&#10;&#9;{ &#10;&#9;   alert(x);&#10;&#9;} &#10;&#10;//&#9;_assessment_array=ArraySelectDistinct(_assessment_array, "id");&#10;/*&#9;for ( _proc in _assessment_array )&#10;&#9;{&#10;&#9;&#9;&#9;//_proc_param_str=_proc_param_str+_proc.id+';';&#10;&#9;&#9;&#9;Response.Write(_proc.name+"&lt;br/&gt;");&#10;&#9;}*/&#10;&#10;/*&#9;for (_elem in comp_Array)&#10;&#9;{&#10;&#9;&#9;Response.Write("--&gt;"+_elem.name+"&lt;br/&gt;");&#10;&#9;}*/&#10;&#9;//Response.Write(EncodeJson(_assessment_array));&#10;&#9;_aspl_Array=Array();&#10;&#9;for (_proc in _assessment_array)&#10;&#9;{&#10;&#9;&#9;if (_proc==undefined)&#10;&#9;&#9;&#9;continue;&#10;&#9;&#9;//QueryStringAspl="for $aspl in assessment_plans where $aspl/assessment_appraise_id = " + _proc.id + "and $aspl/is_done = true() return $aspl";&#10;&#9;&#9;QueryStringAspl="for $aspl in assessment_plans where $aspl/assessment_appraise_id = " + _proc.id + " return $aspl";&#10;&#9;&#9;//Response.Write("for $aspl in assessment_plans where $aspl/assessment_appraise_id = " + _proc.id + " return $aspl"+"&lt;br/&gt;");&#10;&#9;&#9;try&#10;&#9;&#9;{&#10;&#9;&#9;&#9;_Array=XQuery(QueryStringAspl);&#9;&#10;&#9;&#9;}&#10;&#9;&#9;catch(dd)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;_Array =Array();&#9;&#10;&#9;&#9;}&#10;&#9;&#9;_aspl_Array=ArrayUnion(_aspl_Array,_Array);&#10;&#9;&#9;&#10;&#9;}&#10;&#9;coll_Extr_array=ArrayExtract(ArraySelectDistinct(_aspl_Array, "person_id"),"person_id");&#10;&#9;_vassal_Array=QueryCatalogByKeys( 'collaborators', 'id', coll_Extr_array );&#10;&#10;&#9;_vassal_Array2=Array()&#10;&#9;for (_elem in obj_Array)&#10;&#9;{&#10;&#9;&#9;switch ( use )&#10;&#9;&#9;{&#10;&#9;&#9;&#9; case 1:&#10;&#9;&#9;&#9; &#9;&#9;_vassal_Array2=ArrayUnion(_vassal_Array2,ArraySelect(_vassal_Array, 'org_id=='+_elem.id ));&#10;&#9;&#9;&#9;&#9;   break;&#10;&#9;&#9;&#9; case 2:&#10;&#9;&#9;&#9; &#9;&#9;_vassal_Array2=ArrayUnion(_vassal_Array2,ArraySelect(_vassal_Array, 'position_parent_id=='+_elem.id ));&#10;&#9;&#9;&#9;&#9;   break;&#10;&#9;&#9;&#9; case 3:&#10;&#9;&#9;&#9; &#9;&#9;_vassal_Array2=ArrayUnion(_vassal_Array2,ArraySelect(_vassal_Array, 'id=='+_elem.id ));&#10;&#9;&#9;&#9;&#9;   break;&#10;&#9;&#9;}&#10;&#9;&#9;&#10;&#9;}&#10;&#10;&#9;_vassal_Array=ArraySelectDistinct(_vassal_Array2, "id");&#10;&#9;_plans_array=Array();&#10;&#9;for (_elem in _vassal_Array)&#10;&#9;{&#10; &#9;&#9;_plans_array=ArrayUnion(_plans_array,ArraySelect(_aspl_Array, 'person_id=='+_elem.id ));&#10;&#9;}&#10;&#9;&#10;/*&#9;for (_aspl_elem in _plans_array)&#10;&#9;{&#10;&#9;&#9;Response.Write(_aspl_elem.person_fullname+_aspl_elem.modification_date+"&lt;br/&gt;");&#10;&#9;}*/&#10;&#9;&#9;&#9;_wanted_objects=Array();&#10;&#9;&#9;&#9;for (_elem in obj_Array)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;try&#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;_param= _elem.id;&#10;&#9;&#9;&#9;&#9;&#9;switch ( use )&#10;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9; case 1:&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_name=_elem.disp_name;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;   break;&#10;&#9;&#9;&#9;&#9;&#9;&#9; case 2:&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_name=_elem.name;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;try&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_name=_elem.name + " ("+_elem.org_id.ForeignElem.disp_name+")";&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;catch(ex)&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;   break;&#10;&#9;&#9;&#9;&#9;&#9;&#9; case 3:&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_name=_elem.fullname;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;   break;&#10;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;catch(ex)&#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;_param=0;&#10;&#9;&#9;&#9;&#9;&#9;_name="Имя не определено";&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;_curWantedObject = ArrayOptFind(_wanted_objects, 'id ==_param');&#10;&#9;&#9;&#9;&#9;if (_curWantedObject == undefined)&#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;_NewWantedObject=new Object;&#10;&#9;&#9;&#9;&#9;&#9;_NewWantedObject.id=_param;&#10;&#9;&#9;&#9;&#9;&#9;_NewWantedObject.name=_name;&#10;&#9;&#9;&#9;&#9;&#9;_NewWantedObject.compArr=Array();&#10;&#9;&#9;&#9;&#9;&#9;_wanted_objects[ArrayCount(_wanted_objects)]=_NewWantedObject;&#10;&#9;&#9;&#9;&#9;&#9;_curWantedObject=_wanted_objects[ArrayCount(_wanted_objects)-1];&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;for (comp in comp_Array)&#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;_curWantedComp= ArrayOptFind(_curWantedObject.compArr, 'id ==comp.id');&#10;&#9;&#9;&#9;&#9;&#9;if (_curWantedComp == undefined)&#10;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;_NewWantedComp=new Object;&#10;&#9;&#9;&#9;&#9;&#9;&#9;_NewWantedComp.id=comp.id;&#10;&#9;&#9;&#9;&#9;&#9;&#9;_NewWantedComp.name=comp.name;&#10;&#9;&#9;&#9;&#9;&#9;&#9;_NewWantedComp.total=0.0;&#10;&#9;&#9;&#9;&#9;&#9;&#9;_NewWantedComp.collArr=Array();&#10;&#9;&#9;&#9;&#9;&#9;&#9;_NewWantedComp.CollCount=ArrayCount(_NewWantedComp.collArr);&#10;&#9;&#9;&#9;&#9;&#9;&#9;_curWantedObject.compArr[ArrayCount(_curWantedObject.compArr)]=_NewWantedComp;&#10;&#9;&#9;&#9;&#9;&#9;&#9;_curWantedComp=_curWantedObject.compArr[ArrayCount(_curWantedObject.compArr)-1];&#10;&#9;&#9;&#9;&#9;&#9;}&#10;&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#10;&#9;&#9;&#9;for (_plan in _plans_array)&#9;&#9;&#9;&#10;&#9;&#9;&#9;{&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;try&#10;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;switch ( use )&#10;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9; case 1:&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_param= _plan. person_id.ForeignElem.org_id;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_ForeignElem_name=_plan.person_id.ForeignElem.org_name;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;   break;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9; case 2:&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_param= _plan. person_id.ForeignElem.position_parent_id;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_ForeignElem_name=_plan.person_id.ForeignElem.position_parent_name;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;try&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_ForeignElem_name=_plan.person_id.ForeignElem.position_parent_name + " ("+_plan.person_id.ForeignElem.org_name+")";&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;catch(ex)&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;   break;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9; case 3:&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_param= _plan. person_id;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_ForeignElem_name=_plan.person_id.ForeignElem.fullname;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;   break;&#10;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;catch(ex)&#10;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;_param=0;&#10;&#9;&#9;&#9;&#9;&#9;&#9;_ForeignElem_name="Имя не определено";&#10;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;_curWantedObject = ArrayOptFind(_wanted_objects, 'id ==_param');&#10;&#9;&#9;&#9;&#9;&#9;if (_curWantedObject == undefined)&#10;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;_NewWantedObject=new Object;&#10;&#9;&#9;&#9;&#9;&#9;&#9;_NewWantedObject.id=_param;&#10;&#9;&#9;&#9;&#9;&#9;&#9;_NewWantedObject.name=_ForeignElem_name;&#10;&#9;&#9;&#9;&#9;&#9;&#9;_NewWantedObject.compArr=Array();&#10;&#9;&#9;&#9;&#9;&#9;&#9;_wanted_objects[ArrayCount(_wanted_objects)]=_NewWantedObject;&#10;&#9;&#9;&#9;&#9;&#9;&#9;_curWantedObject=_wanted_objects[ArrayCount(_wanted_objects)-1];&#10;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;SELF_COUNT = 0;&#10;&#9;&#9;&#9;&#9;&#9;BOSS_COUNT = 0;&#10;&#9;&#9;&#9;&#9;&#9;FUNC_COUNT = 0;&#10;&#9;&#9;&#9;&#9;&#9;EXPERT_COUNT = 0;&#10;&#9;&#9;&#9;&#9;&#9;STAFF_COUNT = 0;&#10;&#9;&#9;&#9;&#9;&#9;COLL_COUNT = 0;&#10;&#9;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;try&#10;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;_boss_id=_plan.boss_id;&#10;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;catch(ex)&#10;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;_boss_id=0&#10;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;//Response.Write("----------"+_plan.assessment_appraise_id.ForeignElem.name+"&lt;br/&gt;");&#10;&#9;&#9;&#9;&#9;&#9;_pas = XQuery("for $pa in pas where $pa/person_id = " + _plan. person_id + " and $pa/assessment_appraise_id = " + _plan.assessment_appraise_id + " return $pa");&#10;&#9;&#9;&#9;&#9;&#9;_pasArray=Array();&#10;&#9;&#9;&#9;&#9;&#9;_selfPA = undefined;&#10;&#9;&#9;&#9;&#9;&#9;_participantPA = undefined;&#10;&#9;&#9;&#9;&#9;&#9;_funcPA = undefined;&#10;&#9;&#9;&#9;&#9;&#9;_profile_id = 0;&#10;&#9;&#9;&#9;&#9;&#9;_folder='';&#10;&#9;&#9;&#9;&#9;&#9;for (_pa in _pas)&#10;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;curElem=new Object;&#10;&#9;&#9;&#9;&#9;&#9;&#9;curElem.curPA=0;&#10;&#9;&#9;&#9;&#9;&#9;&#9;curElem.flag=0;&#10;&#9;&#9;&#9;&#9;&#9;&#9;switch(_pa.status)&#10;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;case "self":&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;curElem.flag=1;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;SELF_COUNT = 1;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;break;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;case "manager":&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if (_pa.expert_person_id == _boss_id)&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;BOSS_COUNT = 1;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;curElem.flag=2;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;else&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;FUNC_COUNT ++;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;curElem.flag=4;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;break;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;case "expert":&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;EXPERT_COUNT++;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;curElem.flag=3;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;break;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;case "staff":&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;STAFF_COUNT++;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;curElem.flag=5;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;break;&#9;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;case "coll":&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;COLL_COUNT++;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;curElem.flag=6;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;break;&#9;&#10;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;curElem.curPA=OpenDoc(UrlFromDocID(_pa.id)).TopElem;&#10;&#9;&#9;&#9;&#9;&#9;&#9;curElem.profile_id = curElem.curPA.competence_profile_id;&#10;&#9;&#9;&#9;&#9;&#9;&#9;curElem.prof_codes =curElem.curPA.competence_codes;&#10;&#9;&#9;&#9;&#9;&#9;&#9;curElem.participantPA = curElem.curPA.competences;&#10;&#9;&#9;&#9;&#9;&#9;&#9;curElem.folder=_pa.id;&#10;&#9;&#9;&#9;&#9;&#9;&#9;_pasArray[ArrayCount(_pasArray)]=curElem;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;    _SHIFT = 2;&#10;&#9;&#9;&#9;&#9;&#9;SELF_WEIGHT = 100;&#9;BOSS_WEIGHT = 100;&#9;FUNC_WEIGHT = 100;&#9;EXPERT_WEIGHT = 100; COLL_WEIGHT = 100;&#9;STAFF_WEIGHT = 100;&#10;&#9;&#9;&#9;&#9;&#9;if (uni_type_estimation==true)&#10;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;//По умолчанию&#10;&#9;&#9;&#9;&#9;&#9;&#9;SELF_WEIGHT = 10;&#9;BOSS_WEIGHT = 45;&#9;FUNC_WEIGHT = 45;&#9;EXPERT_WEIGHT = 0;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;&#9;//-----------&#10;&#9;&#9;&#9;&#9;&#9;&#9;weight_table_CODE="weight_table";&#10;&#9;&#9;&#9;&#9;&#9;&#9;weight_table_Form = ArrayOptFirstElem( XQuery("for $elem in custom_web_templates where $elem/code = '"+weight_table_CODE+"' return $elem") );&#10;&#9;&#9;&#9;&#9;&#9;&#9;if (weight_table_Form != undefined)&#10;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;weight_table_Form = OpenDoc(UrlFromDocID(weight_table_Form.PrimaryKey)).TopElem;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_anti_str = "";&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;for (_wvar in weight_table_Form.wvars)&#9;_anti_str = _anti_str + _wvar.name + " = '" + HtmlEncode(_wvar.value) + "'; ";&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;EvalCodePage( "&lt;" + "%" + _anti_str + "%" + "&gt;" + weight_table_Form.html.Value)&#10;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;else&#10;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Response.Write("&lt;font color='red' stle='font-weight: boldest'&gt;*Ошибка: проблемы с настраиваемым web-шаблоном " +weight_table_CODE+"*&lt;/font&gt;");&#10;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;//-------------&#10;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;competenceArray = Array();&#10;&#9;&#9;&#9;&#9;&#9;_boss_competenceArray = Array();&#10;&#9;&#9;&#9;&#9;&#9;_comp_count=0;&#10;&#9;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;_pasArray=ArraySort(_pasArray,'flag','+');&#10;&#9;&#9;&#9;&#9;&#9;//_pasCount=ArrayCount(_pasArray);&#10;&#9;&#9;&#9;&#9;&#9;for (_elem in _pasArray)&#10;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#10;&#9;&#9;&#9;&#9;&#9;&#9;compCounter = 0;&#10;&#9;&#9;&#9;&#9;&#9;&#9;for(_comp in _elem.curPA.competences)&#10;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_WantedComp= ArrayOptFind(comp_Array, 'id ==_comp.competence_id');&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if (_WantedComp == undefined)&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;continue&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_curCompetence = ArrayOptFind(competenceArray, 'id == _comp.PrimaryKey');&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_weight = 0;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;try&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_weight=Real(_comp.weight);&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;catch(dd)&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#10;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if (_curCompetence == undefined)&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;try&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_curCompetenceDoc = OpenDoc(UrlFromDocID(_comp.PrimaryKey)).TopElem;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;catch(_shit_)&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;continue;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_curCompetenceObj = new Object;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_curCompetenceObj.id = _comp.PrimaryKey;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_curCompetenceObj.name=_comp.competence_id.ForeignElem.name;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_curCompetenceObj.TopElem = _curCompetenceDoc;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;//_curCompetenceObj.CompCount =_pasCount;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_curCompetenceObj.weight = _weight;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_curCompetenceObj.total = 0.0;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;competenceArray[compCounter] = _curCompetenceObj;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_curCompetence=competenceArray[compCounter];&#10;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;compCounter++;&#10;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;else&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_curCompetenceDoc =_curCompetence.TopElem;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#10;&#9;&#9;//Response.Write(' id ='+_comp.competence_id +' name='+_comp.competence_id.ForeignElem.name +' '+_elem.curPA.person_id.sd.fullname+' '+_elem.curPA.person_id.sd.fullname+' '+_comp.mark+'&lt;br/&gt;');&#10;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if (_comp.mark == "" || _comp.mark == "N")&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_score = null;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;else&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_scale = _curCompetenceDoc.scales.GetOptChildByKey(_comp.mark);&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if (_scale != undefined)&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if (uni_type_estimation==true)&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_score = _SHIFT-_scale.ChildIndex ;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;else&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;try&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;//Response.Write(StrLen(_comp.mark));&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if (StrLen(Real(_comp.mark))==StrLen(_comp.mark))&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_score = Real(_comp.mark);&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;else&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;cancel();&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;catch(ex)&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;try&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_score = Real(_scale.percent);&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;catch(jjh)&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_score = _scale.ChildIndex;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;else&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_score = 0;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;try&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;//Response.Write(StrLen(_comp.mark));&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if (StrLen(Real(_comp.mark))==StrLen(_comp.mark))&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_score = Real(_comp.mark);&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;catch(ex)&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_scale = undefined;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;//Response.Write(_elem.flag+' name='+_curCompetence.name +' score='+_score+' _weight='+_weight+'&lt;br/&gt;');&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;switch(_elem.flag)&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;case 1:&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if (_score == null) _score = 0;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9; _curCompetence.total=_curCompetence.total+(Real(_score)* Real(SELF_WEIGHT) / 100.0);&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;break;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;case 2:&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if (_score == null) _score = 0;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;cur_comp_Object=new Object;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;cur_comp_Object.comp_id=_comp.PrimaryKey;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;cur_comp_Object.name=_comp.competence_id.ForeignElem.name;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;cur_comp_Object.score=_score;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_boss_competenceArray[ArrayCount(_boss_competenceArray)]=cur_comp_Object;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_curCompetence.total = _curCompetence.total + (Real(_score) * Real(BOSS_WEIGHT) / 100.0);&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;break;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;case 3:&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if (uni_type_estimation==true)&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if (_score == null) &#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;for (_boss_comp in _boss_competenceArray)&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;//Response.Write(' id ='+_comp.PrimaryKey +'&lt;br/&gt;');&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if (Int(_comp.PrimaryKey)==Int(_boss_comp.comp_id))&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_score=_boss_comp.score;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;//Response.Write('www score='+_score+'&lt;br/&gt;');&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;break;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;//Response.Write('_boss_comp id ='+_boss_comp.comp_id +' name='+_boss_comp.name +' score='+_boss_comp.score+' _weight='+_weight+'&lt;br/&gt;');&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if (_score == null) _score = 0;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_curCompetence.total = _curCompetence.total + (Real(_score) * Real(EXPERT_WEIGHT) / 100.0);&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;break;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;case 4:&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if (uni_type_estimation==true)&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if (_score == null) &#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;for (_boss_comp in _boss_competenceArray)&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if (Int(_comp.PrimaryKey)==Int(_boss_comp.comp_id))&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_score=_boss_comp.score;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;break;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if (_score == null) _score = 0;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_curCompetence.total = _curCompetence.total + (Real(_score) * Real(FUNC_WEIGHT) / 100.0);&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;break;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#9;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;case 5:&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if (uni_type_estimation==true)&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if (_score == null) &#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;for (_boss_comp in _boss_competenceArray)&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if (Int(_comp.PrimaryKey)==Int(_boss_comp.comp_id))&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_score=_boss_comp.score;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;break;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if (_score == null) _score = 0;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_curCompetence.total = _curCompetence.total + (Real(_score) * Real(STAFF_WEIGHT) / 100.0);&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;break;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;case 6:&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if (uni_type_estimation==true)&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if (_score == null) &#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;for (_boss_comp in _boss_competenceArray)&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if (Int(_comp.PrimaryKey)==Int(_boss_comp.comp_id))&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_score=_boss_comp.score;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;break;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if (_score == null) _score = 0;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_curCompetence.total = _curCompetence.total + (Real(_score) * Real(STAFF_WEIGHT) / 100.0);&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;break;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;for (comp in competenceArray)&#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;_curWantedComp= ArrayOptFind(_curWantedObject.compArr, 'id ==comp.id');&#10;&#9;&#9;&#9;&#9;&#9;if (_curWantedComp == undefined)&#10;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;_NewWantedComp=new Object;&#10;&#9;&#9;&#9;&#9;&#9;&#9;_NewWantedComp.id=comp.id;&#10;&#9;&#9;&#9;&#9;&#9;&#9;_NewWantedComp.name=comp.name;&#10;&#9;&#9;&#9;&#9;&#9;&#9;_NewWantedComp.total=0.0;&#10;&#9;&#9;&#9;&#9;&#9;&#9;_NewWantedComp.collArr=Array();&#10;&#9;&#9;&#9;&#9;&#9;&#9;_NewWantedComp.CollCount=ArrayCount(_NewWantedComp.collArr);&#10;&#9;&#9;&#9;&#9;&#9;&#9;_curWantedObject.compArr[ArrayCount(_curWantedObject.compArr)]=_NewWantedComp;&#10;&#9;&#9;&#9;&#9;&#9;&#9;_curWantedComp=_curWantedObject.compArr[ArrayCount(_curWantedObject.compArr)-1];&#10;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;_curWantedColl= ArrayOptFind(_curWantedComp.collArr, 'id ==_plan. person_id');&#10;&#9;&#9;&#9;&#9;&#9;if (_curWantedColl == undefined)&#10;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;_NewPerson=new Object;&#10;&#9;&#9;&#9;&#9;&#9;&#9;_NewPerson.id=_plan.person_id;&#10;&#9;&#9;&#9;&#9;&#9;&#9;_NewPerson.name=_plan.person_fullname;&#10;&#9;&#9;&#9;&#9;&#9;&#9;_NewPerson.mark=comp.total;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;&#9;QueryStringTemp="for $obj in assessment_appraises where $obj/id = " + _plan.assessment_appraise_id + "return $obj";&#10;&#9;&#9;&#9;&#9;&#9;&#9;//Response.Write("for $obj in assessment_appraises where $obj/id = " + _plan.assessment_appraise_id + "return $obj"+"&lt;br/&gt;");&#10;&#9;&#9;&#9;&#9;&#9;&#9;try&#10;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_Array=XQuery(QueryStringTemp);&#9;&#10;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;catch(dd)&#10;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_Array =Array();&#9;&#10;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;FirstElem= ArrayOptFirstElem(_Array);&#10;&#9;&#9;&#9;&#9;&#9;&#9;if (FirstElem != undefined)&#10;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;try&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_date=Date(FirstElem.start_date);&#9;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;catch(dd)&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_date=DateNewTime(Date( 1990, 1, 1 ),00,00,00);&#9;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;else&#10;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_date=DateNewTime(Date( 1990, 1, 1 ),00,00,00);&#10;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;_NewPerson.date=_date;&#10;&#9;&#9;&#9;&#9;&#9;&#9;_curWantedComp.total=_curWantedComp.total+comp.total;&#10;&#9;&#9;&#9;&#9;&#9;&#9;_curWantedComp.collArr[ArrayCount(_curWantedComp.collArr)]=_NewPerson;&#10;&#9;;&#10;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;else&#10;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;QueryStringTemp="for $obj in assessment_appraises where $obj/id = " + _plan.assessment_appraise_id + "return $obj";&#10;&#9;&#9;&#9;&#9;&#9;&#9;//Response.Write("for $aspl in assessment_plans where $aspl/id = " + _proc.id + " return $aspl"+"&lt;br/&gt;");&#10;&#9;&#9;&#9;&#9;&#9;&#9;try&#10;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_Array=XQuery(QueryStringTemp);&#9;&#10;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;catch(dd)&#10;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_Array =Array();&#9;&#10;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;FirstElem= ArrayOptFirstElem(_Array);&#10;&#9;&#9;&#9;&#9;&#9;&#9;if (FirstElem != undefined)&#10;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;try&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_date=Date(FirstElem.start_date);&#9;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;catch(dd)&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_date=DateNewTime(Date( 1990, 1, 1 ),00,00,00);&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;else&#10;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_date=DateNewTime(Date( 1990, 1, 1 ),00,00,00);&#10;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;if (_date&gt;_curWantedColl.date)&#10;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_curWantedColl.date=_date;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_curWantedComp.total=_curWantedComp.total-_curWantedColl.mark;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_curWantedColl.mark=comp.total;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;_curWantedComp.total=_curWantedComp.total+comp.total;&#10;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;_curWantedComp.CollCount=ArrayCount(_curWantedComp.collArr);&#10;&#9;&#9;&#9;&#9;}&#10;&#10;&#9;&#9;}&#10;&#9;&#10;/*&#9;Response.Write("--------_wanted_objects------&lt;br/&gt;");&#10;&#9;for (_elem in _wanted_objects)&#10;&#9;{&#10;&#9;&#9;Response.Write(_elem.id+' '+_elem.name+"&lt;br/&gt;");&#10;&#9;&#9;for (_el in _elem.compArr)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;Response.Write('------------&gt;'+_el.id+' '+_el.name+' '+_el.total+' '+_el.CollCount+"&lt;br/&gt;");&#10;&#9;&#9;&#9;&#10;&#9;&#9;}&#10;&#9;}*/&#10;&#9;&#10;&#9;//-----------&#10;&#9;Additional_Report_part2_CODE="uni-report4-part2";&#10;&#9;Additional_Report_part2_Form = ArrayOptFirstElem( XQuery("for $elem in custom_web_templates where $elem/code = '"+Additional_Report_part2_CODE+"' return $elem") );&#10;&#9;&#10;&#9;if (Additional_Report_part2_Form != undefined)&#10;&#9;{&#10;&#9;&#9;Additional_Report_part2_Form = OpenDoc(UrlFromDocID(Additional_Report_part2_Form.PrimaryKey)).TopElem;&#10;&#9;&#9;&#10;&#9;&#9;_anti_str = "";&#10;&#9;&#9;for (_wvar in Additional_Report_part2_Form.wvars)&#9;_anti_str = _anti_str + _wvar.name + " = '" + HtmlEncode(_wvar.value) + "'; ";&#10;&#9;&#9;_graph_web_template_found=true;&#10;&#9;&#9;Response.Write(EvalCodePage( "&lt;" + "%" + _anti_str + "%" + "&gt;" + Additional_Report_part2_Form.html.Value));&#10;&#9;}&#10;&#9;else&#10;&#9;{&#10;&#9;&#9;Response.Write("&lt;font color='red' stle='font-weight: boldest'&gt;*Ошибка: проблемы с настраиваемым web-шаблоном " +Additional_Report_part2_CODE+". Отчет не будет отображаться.*&lt;/font&gt;");&#10;&#9;}&#10;&#9;&#10;&#9;//-------------&#9;&#10;&#9;Session.excel_html = _RES_VALUE;&#10;%&gt;&#10;&lt;script type="text/javascript"&gt;&#10;function open_win()&#10;{&#10;&#9;modalWin=window.open('assessment_excel_export.html','','');&#10;}&#10;&lt;/script&gt;&#10;&lt;%&#10;}&#10;%&gt;</code_text>
			</exec_code>
			<html>&lt;%&#10;swith_col=0;&#10;&#10;uni_type_estimation=false;&#10;&#10;&#10;try&#10;{&#10;&#9;build = Int(Request.Form.GetProperty("build"));&#10;}&#10;catch(_net_)&#10;{&#10;&#9;build = 0;&#10;}&#10;&#10;if (build == 0)&#10;{&#10;&#9;try&#10;&#9;{&#10;&#9;&#9;use =Int(Request.Query.GetProperty("obj_name"));&#10;&#9;}&#10;&#9;catch(_net_)&#10;&#9;{&#10;&#9;&#9;use = 1;&#10;&#9;}&#10;&#9;&#10;&#9;&#10;&#9;try&#10;&#9;{&#10;&#9;&#9;_wanted_date = Date(Request.Query.GetProperty("wanted_date"));&#10;&#9;}&#10;&#9;catch(_net_)&#10;&#9;{&#10;&#9;&#9;_wanted_date = undefined;&#10;&#9;}&#10;&#9;&#10;&#9;try&#10;&#9;{&#10;&#9;&#9;use =Int(Request.Query.GetProperty("obj_name"));&#10;&#9;}&#10;&#9;catch(_net_)&#10;&#9;{&#10;&#9;&#9;use = 1;&#10;&#9;}&#10;&#9;&#10;&#9;&#10;&#9;&#10;&#9;//--------------------&#10;&#9;try&#10;&#9;{&#10;&#9;&#9;_selected_obj = Request.Query.GetProperty("obj_id");&#10;&#9;}&#10;&#9;catch ( e )&#10;&#9;{&#10;&#9;&#9;_selected_obj = '';&#10;&#9;}&#10;&#9;try&#10;&#9;{&#10;&#9;&#9;_selected_comp = Request.Query.GetProperty("comp_id");&#10;&#9;}&#10;&#9;catch ( e )&#10;&#9;{&#10;&#9;&#9;_selected_comp = '';&#10;&#9;}&#10;}&#10;else&#10;{&#10;&#10;&#9;try&#10;&#9;{&#10;&#9;&#9;use =Int(Request.Form.GetProperty("obj_name"));&#10;&#9;}&#10;&#9;catch(_net_)&#10;&#9;{&#10;&#9;&#9;use = 1;&#10;&#9;}&#10;&#9;&#10;&#9;&#10;&#9;try&#10;&#9;{&#10;&#9;&#9;_wanted_date = Date(Request.Form.GetProperty("wanted_date"));&#10;&#9;}&#10;&#9;catch(_net_)&#10;&#9;{&#10;&#9;&#9;_wanted_date = undefined;&#10;&#9;}&#10;&#9;&#10;&#9;try&#10;&#9;{&#10;&#9;&#9;use =Int(Request.Form.GetProperty("obj_name"));&#10;&#9;}&#10;&#9;catch(_net_)&#10;&#9;{&#10;&#9;&#9;use = 1;&#10;&#9;}&#10;&#9;&#10;&#9;&#10;&#9;&#10;&#9;//--------------------&#10;&#9;try&#10;&#9;{&#10;&#9;&#9;_selected_obj = Request.Form.GetProperty("obj_id");&#10;&#9;}&#10;&#9;catch ( e )&#10;&#9;{&#10;&#9;&#9;_selected_obj = '';&#10;&#9;}&#10;&#9;try&#10;&#9;{&#10;&#9;&#9;_selected_comp = Request.Form.GetProperty("comp_id");&#10;&#9;}&#10;&#9;catch ( e )&#10;&#9;{&#10;&#9;&#9;_selected_comp = '';&#10;&#9;}&#10;&#10;}&#10;//Response.Write("_selected_obj="+_selected_obj+"&lt;br/&gt;");&#10;//----------------------------------&#10;use_str = '';&#10;switch ( use )&#10;{&#10;&#9; case 1:&#10;&#9;&#9;   use_str = 'org';&#10;&#9;&#9;   break;&#10;&#9; case 2:&#10;&#9;&#9;   use_str = 'subdivision';&#10;&#9;&#9;   break;&#10;&#9; case 3:&#10;&#9;&#9;   use_str = 'collaborator';&#10;&#9;&#9;   break;&#10;}&#10;&#10;&#10;&#10;obj_Array=Array();&#10;id_Array=String(_selected_obj).split(';');&#10;for (_id in id_Array)&#10;{&#10;&#9;if (Trim(_id)!='')&#10;&#9;{&#10;&#10;&#9;&#9;_Array = XQuery( "for $obj in "+use_str +"s where $obj/id="+_id+" return $obj");&#10;&#9;&#9;obj_Array =ArrayUnion(obj_Array,_Array);&#10;&#9;}&#10;}&#10;comp_Array=Array();&#10;id_Array=String(_selected_comp).split(';');&#10;for (_id in id_Array)&#10;{&#10;&#9;if (Trim(_id)!='')&#10;&#9;{&#10;&#10;&#9;&#9;_Array = XQuery( "for $obj in competences where $obj/id="+_id+" return $obj");&#10;&#9;&#9;comp_Array =ArrayUnion(comp_Array,_Array);&#10;&#9;}&#10;}&#10;&#10;Adr_String="view_doc.html?mode=doc_type&amp;doc_id="+curDocID+"&amp;object_id="+(Request.Query.GetOptProperty("custom_web_template_id",curObjectID));&#10;&#10;&#10;%&gt;&#10;&lt;script type="text/javascript" src="/scripts/jquery-ui/jquery-ui.js"&gt;&lt;/script&gt;&#10;&lt;link rel="stylesheet" href="/scripts/jquery-ui/jquery-ui.css"/&gt;&#10;&lt;script type="text/javascript"&gt;&#10;function open_win()&#10;{&#10;&#9;modalWin=window.open('assessment_excel_export.html','','');&#10;}&#10;&lt;/script&gt;&#10;&lt;SCRIPT LANGUAGE="JAVASCRIPT"&gt;&#10;//********************************************************************************************&#10;&#10;function fnAddCalendarsCustomFields()&#10;{&#10;&#9;$( ".date" ).attr("closed", 0).datepicker({changeMonth:true,changeYear:true,dateFormat:"dd.mm.yy",showOn: "both",buttonImage: "pics/calendar.gif", yearRange:'-90:+0',buttonImageOnly: true,showAnim: ""})&#10;}&#10;&#10;$(document).ready(function ()&#10;{&#10;&#9;fnAddCalendarsCustomFields()&#10;})&#10;&#10;function xShowModalDialog( sURL, vArguments, sFeatures ) &#10;{ &#10;&#9;if ( sURL==null||sURL=='' ) &#10;&#9;{ &#10;&#9;&#9;alert ("Invalid URL input."); &#10;&#9;&#9;return false; &#10;&#9;} &#10;&#9;if ( vArguments == null || vArguments == '' ) &#10;&#9;{ &#10;&#9;&#9;vArguments=''; &#10;&#9;} &#10;&#9;if ( sFeatures == null || sFeatures == '' ) &#10;&#9;{ &#10;&#9;&#9;sFeatures=dFeatures; &#10;&#9;} &#10;&#9;if ( window.navigator.appVersion.indexOf( "MSIE" ) != -1 ) &#10;&#9;{ &#10;&#9;&#9;window.showModalDialog( sURL, vArguments, sFeatures ); &#10;&#9;&#9;return false; &#10;&#9;} &#10;&#9;sFeatures = sFeatures.replace( / /gi, '' ); &#10;&#9;aFeatures = sFeatures.split( ";" ); &#10;&#9;sWinFeat = "directories=0,menubar=0,titlebar=0,toolbar=0,"; &#10;&#9;for ( x in aFeatures ) &#10;&#9;{ &#10;&#9;&#9;aTmp = aFeatures[x].split( ":" ); &#10;&#9;&#9;sKey = aTmp[0].toLowerCase(); &#10;&#9;&#9;sVal = aTmp[1]; &#10;&#9;&#9;switch ( sKey ) &#10;&#9;&#9;{ &#10;&#9;&#9;&#9;case "dialogheight": &#10;&#9;&#9;&#9;&#9;sWinFeat += "height="+sVal+","; &#10;&#9;&#9;&#9;&#9;pHeight = sVal; &#10;&#9;&#9;&#9;&#9;break; &#10;&#9;&#9;&#9;case "dialogwidth": &#10;&#9;&#9;&#9;&#9;sWinFeat += "width="+sVal+","; &#10;&#9;&#9;&#9;&#9;pWidth = sVal; &#10;&#9;&#9;&#9;&#9;break; &#10;&#9;&#9;&#9;case "dialogtop": &#10;&#9;&#9;&#9;&#9;sWinFeat += "screenY="+sVal+","; &#10;&#9;&#9;&#9;&#9;break; &#10;&#9;&#9;&#9;case "dialogleft": &#10;&#9;&#9;&#9;&#9;sWinFeat += "screenX="+sVal+","; &#10;&#9;&#9;&#9;&#9;break; &#10;&#9;&#9;&#9;case "resizable": &#10;&#9;&#9;&#9;&#9;sWinFeat += "resizable="+sVal+","; &#10;&#9;&#9;&#9;&#9;break; &#10;&#9;&#9;&#9;case "status": &#10;&#9;&#9;&#9;&#9;sWinFeat += "status="+sVal+","; &#10;&#9;&#9;&#9;&#9;break; &#10;&#9;&#9;&#9;case "center": &#10;&#9;&#9;&#9;&#9;if ( sVal.toLowerCase() == "yes" ) &#10;&#9;&#9;&#9;&#9;{ &#10;&#9;&#9;&#9;&#9;&#9;sWinFeat += "screenY="+((screen.availHeight-pHeight)/2)+","; &#10;&#9;&#9;&#9;&#9;&#9;sWinFeat += "screenX="+((screen.availWidth-pWidth)/2)+","; &#10;&#9;&#9;&#9;&#9;} &#10;&#9;&#9;&#9;&#9;break; &#10;&#9;&#9;} &#10;&#9;} &#10;&#9;modalWin=window.open( String( sURL ),"", sWinFeat ); &#10;&#9;if ( vArguments != null &amp;&amp; vArguments != '' ) &#10;&#9;{ &#10;&#9;&#9;modalWin.dialogArguments = vArguments;&#10;&#9;} &#10;} &#10;//*************************************************************************************************&#10;&lt;/SCRIPT&gt;&#10;&lt;script language="JavaScript"&gt;&#10;//&lt;!--&#10;&#10;var selected_object_ids = '&lt;%=_selected_obj%&gt;';&#10;function doSelect(sel_name,flag)&#10;{&#9;&#10;&#9;&#9;title = "Выбор объектов";&#10;&#9;&#9;var sel = document.getElementById(sel_name);&#10;&#9;&#9;if ( document.getElementById('wanted_date').value == '')&#10;&#9;&#9;&#9;alert( 'Выберите дату' );&#10;&#9;&#9;else&#10;&#9;&#9;{&#10;&#9;&#9;var pars=new Object();&#10;&#9;&#9;var strAttr="status:no;dialogWidth:780px;dialogHeight:550px;help:no;resizable:1";&#10;&#9;&#9;pars.selected_object_ids = selected_object_ids;&#10;&#9;&#9;pars.can_be_empty = false;&#10;&#9;&#9;pars.show_all = true;&#10;&#9;&#9;if (flag==0)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;_catalog = '&lt;%=use_str%&gt;';&#10;//&#9;&#9;&#9;xShowModalDialog( 'dlg_select.html?doc_id=&lt;%=curDocID%&gt;&amp;catalog_name=&lt;%=use_str%&gt;&amp;typein=1&amp;multi_select=1&amp;rand='+ Math.random(), pars, strAttr );&#9;&#9;&#10;&#9;&#9;}&#10;&#9;&#9;else&#10;&#9;&#9;{&#10;&#9;&#9;&#9;selected_object_ids = '&lt;%=_selected_comp%&gt;';&#10;&#9;&#9;&#9;pars.selected_object_ids = selected_object_ids;&#10;&#9;&#9;&#9;_catalog = 'competence';&#10;//&#9;&#9;&#9;xShowModalDialog( 'dlg_select.html?doc_id=&lt;%=curDocID%&gt;&amp;catalog_name=competence&amp;typein=1&amp;multi_select=1&amp;rand='+ Math.random(), pars, strAttr );&#9;&#9;&#10;&#9;&#9;}&#10;&#10;&#9;xShowSelectDialog(&#10;&#9;{&#10;&#9;&#9;"catalog_name": _catalog,&#10;&#9;&#9;"multi_select": 1,&#10;&#9;&#9;"can_be_empty": "false",&#10;&#9;&#9;"disp_filter": "false",&#10;&#9;&#9;"check_access": "false",&#10;&#9;&#9;"display_object_ids": "",&#10;&#9;&#9;"selected_object_ids": selected_object_ids&#10;&#9;}, &#10;&#9;function(oParams)&#10;&#9;{&#10;&#9;&#9;id_mas = oParams.selected_object_ids.split(";");&#10;&#10;&#9;&#9;if (!oParams.handle) return null;&#10;&#10;&#9;&#9;sel.value=oParams.selected_object_ids;&#10;&#9;&#9;selected_object_ids = oParams.selected_object_ids;&#10;&#9;&#9;window.location.href='&lt;%=Adr_String%&gt;'+ '&amp;obj_name=&lt;%=use%&gt;'+ '&amp;comp_id=' + document.getElementById('comp_id').value + '&amp;obj_id=' + document.getElementById('obj_id').value+'&amp;wanted_date=&lt;%=(_wanted_date != undefined ? _wanted_date : "")%&gt;';&#10;&#9;});&#10;&#9;&#9;&#10;&#10;&#9;&#9;&#10;&#9;&#9;}&#10;&#9;&#9;//document.forms['event_form'].submit();&#10;}&#10;&#10;&#10;function check(obj_name)&#10;{&#10;  window.location.href='&lt;%=Adr_String%&gt;' + '&amp;obj_name=' + obj_name+'&amp;wanted_date=&lt;%=(_wanted_date != undefined ? _wanted_date : "")%&gt;';&#10;&#10;}&#10;function doSubmit_simple()&#10;{&#9;&#10;&#9;if ( document.getElementById('wanted_date').value == '')&#10;&#9;{&#9;&#9;&#10;&#9;&#9;&#9;alert( 'Выберите дату' );&#10;&#9;&#9;&#9;return 0;&#10;&#9;}&#10;&#9;if ( document.getElementById('obj_id').value == '')&#10;&#9;{&#9;&#9;&#10;&#9;&#9;&#9;alert( 'Выберите объект построения отчета' );&#10;&#9;&#9;&#9;return 0;&#10;&#9;}&#9;&#10;&#9;if ( document.getElementById('comp_id').value == '')&#10;&#9;{&#9;&#9;&#10;&#9;&#9;&#9;alert( 'Выберите компетенции' );&#10;&#9;&#9;&#9;return 0;&#10;&#9;}&#9;&#10;    document.forms['event_form'].action.value = '&lt;%=Adr_String%&gt;&amp;wanted_date=&lt;%=(_wanted_date != undefined ? _wanted_date : "")%&gt;';   &#10;&#9;document.forms['event_form'].submit();&#10;}&#10;//--&gt;&#10;&lt;/script&gt;&#10;&lt;FORM ACTION="" NAME="event_form" METHOD="POST"&gt;&#10;&lt;TABLE width="100%" cellspacing="0" cellpadding="4" CLASS="tableBorder"&gt;&#10;&lt;TR&gt;&#10;&#9;&lt;TD WIDTH="300" STYLE="font-weight:normal; font-size:larger"&gt;Выберите любую дату в нужном году:&lt;/TD&gt;&#10;&#9;&lt;TD STYLE="font-weight:normal" valign="middle" align="l"&gt;&#10;&#9;&#9;&lt;input type="text" style="width: 70px" id="wanted_date" name="wanted_date"  value="&lt;%=(_wanted_date != undefined ? _wanted_date : "")%&gt;" class="date" readonly&gt;&#10;&#9;&lt;/TD&gt;&#10;&#9;&lt;TD width="40%"&gt;&lt;input type="button" value="Подтвердить ввод даты" class="inputButton" onMouseOver="this.className='inputButtonOver';" onMouseOut="this.className='inputButton';" style="width: 400px" onclick="window.location.href='&lt;%=Adr_String%&gt;&amp;wanted_date=' + document.getElementById('wanted_date').value"/&gt;&lt;/TD&gt;&#10;&lt;/TR&gt;&#10;&#10;&lt;%&#10;if (_wanted_date != undefined)&#10;{&#10;%&gt;&#10;&#10;&lt;TR&gt;&#10;&#9;&lt;TD colspan="3"&gt;&#10;&#9;&#9;&lt;input type="radio" name="obj_name"  onclick="check(this.value)" value="1" &lt;%=( use == 1 ? 'checked' : '')%&gt;/&gt;Организация&#10;&#9;&lt;/TD&gt;&#10;&lt;/TR&gt;&#10;&lt;TR&gt;&#9;&#10;&#9;&lt;TD colspan="3"&gt;&#10;&#9;&#9;&lt;input type="radio" name="obj_name"  onclick="check(this.value)" value="2" &lt;%=( use == 2 ? 'checked' : '')%&gt;/&gt;Подразделение&#10;&#9;&lt;/TD&gt;&#10;&lt;/TR&gt;&#10;&lt;TR&gt;&#9;&#10;&#9;&lt;TD colspan="3"&gt;&#10;&#9;&#9;&lt;input type="radio" name="obj_name"  onclick="check(this.value)" value="3" &lt;%=( use == 3 ? 'checked' : '')%&gt;/&gt;Сотрудник&#10;&#9;&lt;/TD&gt;&#10;&lt;/TR&gt;&#10;&lt;TR&gt;&#10;&#9;&lt;TD WIDTH="300" STYLE="font-weight:normal; font-size:larger" colspan="3" &gt;&#10;&#9;&lt;input type='hidden'  id='obj_id' name='obj_id' value='&lt;%=_selected_obj%&gt;'/&gt;&#10;&#9;&lt;input align="right" type="button" value="Выбрать" onClick="doSelect('obj_id',0)" class="inputButton" onMouseOver="this.className='inputButtonOver';" onMouseOut="this.className='inputButton';"&gt;&lt;/TD&gt;&#10;&lt;/TR&gt;&#10;&lt;TR&gt;&#10;&#9;&lt;TD WIDTH="300" STYLE="font-weight:normal; font-size:larger" colspan="3" &gt;&#10;&#9;&lt;input type='hidden'  id='comp_id' name='comp_id' value='&lt;%=_selected_comp%&gt;'/&gt;&#10;&#9;&lt;input align="right" type="button" value="Выбрать компетенции" onClick="doSelect('comp_id',1)" class="inputButton" onMouseOver="this.className='inputButtonOver';" onMouseOut="this.className='inputButton';"&gt;&lt;/TD&gt;&#10;&lt;/TR&gt;&#10;&lt;%&#10;}&#10;%&gt;&#10;&lt;/TABLE&gt;&#10;&lt;%&#10;if (_wanted_date != undefined)&#10;{&#10;%&gt;&#10;&lt;p align="center"&gt;&#10;&lt;input type='hidden'  id='build' name='build' value='1'/&gt;&#10;&lt;input type="button" value="Сформировать" onClick="doSubmit_simple();" class="inputButton" onMouseOver="this.className='inputButtonOver';" onMouseOut="this.className='inputButton';"/&gt; &#10;&lt;/p&gt;&#10;&lt;%&#10;}&#10;%&gt;&#10;&lt;/FORM&gt;&#10;&lt;%&#10;if (build== 1)&#10;{&#10;&#9;_RES_VALUE='';&#10;%&gt;&#10;&#10;&#9;&#9;&lt;BR/&gt;&#10;&#9;&#9;&lt;center&gt;&lt;input type="button" value="Экспорт в Excel" onclick="open_win()" class="inputButton" onMouseOver="this.className='inputButtonOver';" onMouseOut="this.className='inputButton';"/&gt;&lt;/center&gt;&#10;&#9;&#9;&lt;BR/&gt;&#10;&#10;&lt;%&#9;&#10;&#10;&#9;_cur_year= Year(_wanted_date);&#10;&#9;_start_date_time=DateNewTime(Date( _cur_year, 1, 1 ),00,00,00);&#10;&#9;_end_date_time=DateNewTime(Date( _cur_year, 12, 31),23,59,59);&#10;&#9;Query_String="for $obj in assessment_appraises where $obj/is_model=false() and $obj/start_date&lt;=date('" + _end_date_time +"') and $obj/start_date&gt;=date('" + _start_date_time +"') order by $obj/start_date descending return $obj";&#10;&#9;//Response.Write(Query_String+"&lt;/br&gt;");&#10;&#9;_assessment_array =Array();&#10;&#9;try&#10;&#9;{&#10;&#9;&#9;_assessment_array = XQuery(Query_String);&#10;&#9;}&#10;&#9;catch(x)&#10;&#9;{ &#10;&#9;   alert(x);&#10;&#9;} &#10;&#10;//&#9;_assessment_array=ArraySelectDistinct(_assessment_array, "id");&#10;/*&#9;for ( _proc in _assessment_array )&#10;&#9;{&#10;&#9;&#9;&#9;//_proc_param_str=_proc_param_str+_proc.id+';';&#10;&#9;&#9;&#9;Response.Write(_proc.name+"&lt;br/&gt;");&#10;&#9;}*/&#10;&#10;/*&#9;for (_elem in comp_Array)&#10;&#9;{&#10;&#9;&#9;Response.Write("--&gt;"+_elem.name+"&lt;br/&gt;");&#10;&#9;}*/&#10;&#9;//Response.Write(EncodeJson(_assessment_array));&#10;&#9;_aspl_Array=Array();&#10;&#9;for (_proc in _assessment_array)&#10;&#9;{&#10;&#9;&#9;if (_proc==undefined)&#10;&#9;&#9;&#9;continue;&#10;&#9;&#9;//QueryStringAspl="for $aspl in assessment_plans where $aspl/assessment_appraise_id = " + _proc.id + "and $aspl/is_done = true() return $aspl";&#10;&#9;&#9;QueryStringAspl="for $aspl in assessment_plans where $aspl/assessment_appraise_id = " + _proc.id + " return $aspl";&#10;&#9;&#9;//Response.Write("for $aspl in assessment_plans where $aspl/assessment_appraise_id = " + _proc.id + " return $aspl"+"&lt;br/&gt;");&#10;&#9;&#9;try&#10;&#9;&#9;{&#10;&#9;&#9;&#9;_Array=XQuery(QueryStringAspl);&#9;&#10;&#9;&#9;}&#10;&#9;&#9;catch(dd)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;_Array =Array();&#9;&#10;&#9;&#9;}&#10;&#9;&#9;_aspl_Array=ArrayUnion(_aspl_Array,_Array);&#10;&#9;&#9;&#10;&#9;}&#10;&#9;coll_Extr_array=ArrayExtract(ArraySelectDistinct(_aspl_Array, "person_id"),"person_id");&#10;&#9;_vassal_Array=QueryCatalogByKeys( 'collaborators', 'id', coll_Extr_array );&#10;&#10;&#9;_vassal_Array2=Array()&#10;&#9;for (_elem in obj_Array)&#10;&#9;{&#10;&#9;&#9;switch ( use )&#10;&#9;&#9;{&#10;&#9;&#9;&#9; case 1:&#10;&#9;&#9;&#9; &#9;&#9;_vassal_Array2=ArrayUnion(_vassal_Array2,ArraySelect(_vassal_Array, 'org_id=='+_elem.id ));&#10;&#9;&#9;&#9;&#9;   break;&#10;&#9;&#9;&#9; case 2:&#10;&#9;&#9;&#9; &#9;&#9;_vassal_Array2=ArrayUnion(_vassal_Array2,ArraySelect(_vassal_Array, 'position_parent_id=='+_elem.id ));&#10;&#9;&#9;&#9;&#9;   break;&#10;&#9;&#9;&#9; case 3:&#10;&#9;&#9;&#9; &#9;&#9;_vassal_Array2=ArrayUnion(_vassal_Array2,ArraySelect(_vassal_Array, 'id=='+_elem.id ));&#10;&#9;&#9;&#9;&#9;   break;&#10;&#9;&#9;}&#10;&#9;&#9;&#10;&#9;}&#10;&#10;&#9;_vassal_Array=ArraySelectDistinct(_vassal_Array2, "id");&#10;&#9;_plans_array=Array();&#10;&#9;for (_elem in _vassal_Array)&#10;&#9;{&#10; &#9;&#9;_plans_array=ArrayUnion(_plans_array,ArraySelect(_aspl_Array, 'person_id=='+_elem.id ));&#10;&#9;}&#10;&#9;&#10;/*&#9;for (_aspl_elem in _plans_array)&#10;&#9;{&#10;&#9;&#9;Response.Write(_aspl_elem.person_fullname+_aspl_elem.modification_date+"&lt;br/&gt;");&#10;&#9;}*/&#10;&#9;&#9;&#9;_wanted_objects=Array();&#10;&#9;&#9;&#9;for (_elem in obj_Array)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;try&#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;_param= _elem.id;&#10;&#9;&#9;&#9;&#9;&#9;switch ( use )&#10;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9; case 1:&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_name=_elem.disp_name;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;   break;&#10;&#9;&#9;&#9;&#9;&#9;&#9; case 2:&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_name=_elem.name;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;try&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_name=_elem.name + " ("+_elem.org_id.ForeignElem.disp_name+")";&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;catch(ex)&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;   break;&#10;&#9;&#9;&#9;&#9;&#9;&#9; case 3:&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_name=_elem.fullname;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;   break;&#10;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;catch(ex)&#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;_param=0;&#10;&#9;&#9;&#9;&#9;&#9;_name="Имя не определено";&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;_curWantedObject = ArrayOptFind(_wanted_objects, 'id ==_param');&#10;&#9;&#9;&#9;&#9;if (_curWantedObject == undefined)&#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;_NewWantedObject=new Object;&#10;&#9;&#9;&#9;&#9;&#9;_NewWantedObject.id=_param;&#10;&#9;&#9;&#9;&#9;&#9;_NewWantedObject.name=_name;&#10;&#9;&#9;&#9;&#9;&#9;_NewWantedObject.compArr=Array();&#10;&#9;&#9;&#9;&#9;&#9;_wanted_objects[ArrayCount(_wanted_objects)]=_NewWantedObject;&#10;&#9;&#9;&#9;&#9;&#9;_curWantedObject=_wanted_objects[ArrayCount(_wanted_objects)-1];&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;for (comp in comp_Array)&#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;_curWantedComp= ArrayOptFind(_curWantedObject.compArr, 'id ==comp.id');&#10;&#9;&#9;&#9;&#9;&#9;if (_curWantedComp == undefined)&#10;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;_NewWantedComp=new Object;&#10;&#9;&#9;&#9;&#9;&#9;&#9;_NewWantedComp.id=comp.id;&#10;&#9;&#9;&#9;&#9;&#9;&#9;_NewWantedComp.name=comp.name;&#10;&#9;&#9;&#9;&#9;&#9;&#9;_NewWantedComp.total=0.0;&#10;&#9;&#9;&#9;&#9;&#9;&#9;_NewWantedComp.collArr=Array();&#10;&#9;&#9;&#9;&#9;&#9;&#9;_NewWantedComp.CollCount=ArrayCount(_NewWantedComp.collArr);&#10;&#9;&#9;&#9;&#9;&#9;&#9;_curWantedObject.compArr[ArrayCount(_curWantedObject.compArr)]=_NewWantedComp;&#10;&#9;&#9;&#9;&#9;&#9;&#9;_curWantedComp=_curWantedObject.compArr[ArrayCount(_curWantedObject.compArr)-1];&#10;&#9;&#9;&#9;&#9;&#9;}&#10;&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#10;&#9;&#9;&#9;for (_plan in _plans_array)&#9;&#9;&#9;&#10;&#9;&#9;&#9;{&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;try&#10;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;switch ( use )&#10;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9; case 1:&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_param= _plan. person_id.ForeignElem.org_id;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_ForeignElem_name=_plan.person_id.ForeignElem.org_name;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;   break;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9; case 2:&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_param= _plan. person_id.ForeignElem.position_parent_id;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_ForeignElem_name=_plan.person_id.ForeignElem.position_parent_name;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;try&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_ForeignElem_name=_plan.person_id.ForeignElem.position_parent_name + " ("+_plan.person_id.ForeignElem.org_name+")";&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;catch(ex)&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;   break;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9; case 3:&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_param= _plan. person_id;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_ForeignElem_name=_plan.person_id.ForeignElem.fullname;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;   break;&#10;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;catch(ex)&#10;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;_param=0;&#10;&#9;&#9;&#9;&#9;&#9;&#9;_ForeignElem_name="Имя не определено";&#10;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;_curWantedObject = ArrayOptFind(_wanted_objects, 'id ==_param');&#10;&#9;&#9;&#9;&#9;&#9;if (_curWantedObject == undefined)&#10;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;_NewWantedObject=new Object;&#10;&#9;&#9;&#9;&#9;&#9;&#9;_NewWantedObject.id=_param;&#10;&#9;&#9;&#9;&#9;&#9;&#9;_NewWantedObject.name=_ForeignElem_name;&#10;&#9;&#9;&#9;&#9;&#9;&#9;_NewWantedObject.compArr=Array();&#10;&#9;&#9;&#9;&#9;&#9;&#9;_wanted_objects[ArrayCount(_wanted_objects)]=_NewWantedObject;&#10;&#9;&#9;&#9;&#9;&#9;&#9;_curWantedObject=_wanted_objects[ArrayCount(_wanted_objects)-1];&#10;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;SELF_COUNT = 0;&#10;&#9;&#9;&#9;&#9;&#9;BOSS_COUNT = 0;&#10;&#9;&#9;&#9;&#9;&#9;FUNC_COUNT = 0;&#10;&#9;&#9;&#9;&#9;&#9;EXPERT_COUNT = 0;&#10;&#9;&#9;&#9;&#9;&#9;STAFF_COUNT = 0;&#10;&#9;&#9;&#9;&#9;&#9;COLL_COUNT = 0;&#10;&#9;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;try&#10;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;_boss_id=_plan.boss_id;&#10;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;catch(ex)&#10;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;_boss_id=0&#10;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;//Response.Write("----------"+_plan.assessment_appraise_id.ForeignElem.name+"&lt;br/&gt;");&#10;&#9;&#9;&#9;&#9;&#9;_pas = XQuery("for $pa in pas where $pa/person_id = " + _plan. person_id + " and $pa/assessment_appraise_id = " + _plan.assessment_appraise_id + " return $pa");&#10;&#9;&#9;&#9;&#9;&#9;_pasArray=Array();&#10;&#9;&#9;&#9;&#9;&#9;_selfPA = undefined;&#10;&#9;&#9;&#9;&#9;&#9;_participantPA = undefined;&#10;&#9;&#9;&#9;&#9;&#9;_funcPA = undefined;&#10;&#9;&#9;&#9;&#9;&#9;_profile_id = 0;&#10;&#9;&#9;&#9;&#9;&#9;_folder='';&#10;&#9;&#9;&#9;&#9;&#9;for (_pa in _pas)&#10;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;curElem=new Object;&#10;&#9;&#9;&#9;&#9;&#9;&#9;curElem.curPA=0;&#10;&#9;&#9;&#9;&#9;&#9;&#9;curElem.flag=0;&#10;&#9;&#9;&#9;&#9;&#9;&#9;switch(_pa.status)&#10;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;case "self":&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;curElem.flag=1;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;SELF_COUNT = 1;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;break;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;case "manager":&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if (_pa.expert_person_id == _boss_id)&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;BOSS_COUNT = 1;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;curElem.flag=2;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;else&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;FUNC_COUNT ++;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;curElem.flag=4;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;break;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;case "expert":&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;EXPERT_COUNT++;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;curElem.flag=3;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;break;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;case "staff":&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;STAFF_COUNT++;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;curElem.flag=5;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;break;&#9;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;case "coll":&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;COLL_COUNT++;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;curElem.flag=6;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;break;&#9;&#10;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;curElem.curPA=OpenDoc(UrlFromDocID(_pa.id)).TopElem;&#10;&#9;&#9;&#9;&#9;&#9;&#9;curElem.profile_id = curElem.curPA.competence_profile_id;&#10;&#9;&#9;&#9;&#9;&#9;&#9;curElem.prof_codes =curElem.curPA.competence_codes;&#10;&#9;&#9;&#9;&#9;&#9;&#9;curElem.participantPA = curElem.curPA.competences;&#10;&#9;&#9;&#9;&#9;&#9;&#9;curElem.folder=_pa.id;&#10;&#9;&#9;&#9;&#9;&#9;&#9;_pasArray[ArrayCount(_pasArray)]=curElem;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;    _SHIFT = 2;&#10;&#9;&#9;&#9;&#9;&#9;SELF_WEIGHT = 100;&#9;BOSS_WEIGHT = 100;&#9;FUNC_WEIGHT = 100;&#9;EXPERT_WEIGHT = 100; COLL_WEIGHT = 100;&#9;STAFF_WEIGHT = 100;&#10;&#9;&#9;&#9;&#9;&#9;if (uni_type_estimation==true)&#10;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;//По умолчанию&#10;&#9;&#9;&#9;&#9;&#9;&#9;SELF_WEIGHT = 10;&#9;BOSS_WEIGHT = 45;&#9;FUNC_WEIGHT = 45;&#9;EXPERT_WEIGHT = 0;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;&#9;//-----------&#10;&#9;&#9;&#9;&#9;&#9;&#9;weight_table_CODE="weight_table";&#10;&#9;&#9;&#9;&#9;&#9;&#9;weight_table_Form = ArrayOptFirstElem( XQuery("for $elem in custom_web_templates where $elem/code = '"+weight_table_CODE+"' return $elem") );&#10;&#9;&#9;&#9;&#9;&#9;&#9;if (weight_table_Form != undefined)&#10;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;weight_table_Form = OpenDoc(UrlFromDocID(weight_table_Form.PrimaryKey)).TopElem;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_anti_str = "";&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;for (_wvar in weight_table_Form.wvars)&#9;_anti_str = _anti_str + _wvar.name + " = '" + HtmlEncode(_wvar.value) + "'; ";&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;EvalCodePage( "&lt;" + "%" + _anti_str + "%" + "&gt;" + weight_table_Form.html.Value)&#10;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;else&#10;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Response.Write("&lt;font color='red' stle='font-weight: boldest'&gt;*Ошибка: проблемы с настраиваемым web-шаблоном " +weight_table_CODE+"*&lt;/font&gt;");&#10;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;//-------------&#10;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;competenceArray = Array();&#10;&#9;&#9;&#9;&#9;&#9;_boss_competenceArray = Array();&#10;&#9;&#9;&#9;&#9;&#9;_comp_count=0;&#10;&#9;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;_pasArray=ArraySort(_pasArray,'flag','+');&#10;&#9;&#9;&#9;&#9;&#9;//_pasCount=ArrayCount(_pasArray);&#10;&#9;&#9;&#9;&#9;&#9;for (_elem in _pasArray)&#10;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#10;&#9;&#9;&#9;&#9;&#9;&#9;compCounter = 0;&#10;&#9;&#9;&#9;&#9;&#9;&#9;for(_comp in _elem.curPA.competences)&#10;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_WantedComp= ArrayOptFind(comp_Array, 'id ==_comp.competence_id');&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if (_WantedComp == undefined)&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;continue&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_curCompetence = ArrayOptFind(competenceArray, 'id == _comp.PrimaryKey');&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_weight = 0;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;try&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_weight=Real(_comp.weight);&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;catch(dd)&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#10;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if (_curCompetence == undefined)&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;try&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_curCompetenceDoc = OpenDoc(UrlFromDocID(_comp.PrimaryKey)).TopElem;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;catch(_shit_)&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;continue;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_curCompetenceObj = new Object;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_curCompetenceObj.id = _comp.PrimaryKey;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_curCompetenceObj.name=_comp.competence_id.ForeignElem.name;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_curCompetenceObj.TopElem = _curCompetenceDoc;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;//_curCompetenceObj.CompCount =_pasCount;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_curCompetenceObj.weight = _weight;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_curCompetenceObj.total = 0.0;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;competenceArray[compCounter] = _curCompetenceObj;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_curCompetence=competenceArray[compCounter];&#10;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;compCounter++;&#10;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;else&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_curCompetenceDoc =_curCompetence.TopElem;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#10;&#9;&#9;//Response.Write(' id ='+_comp.competence_id +' name='+_comp.competence_id.ForeignElem.name +' '+_elem.curPA.person_id.sd.fullname+' '+_elem.curPA.person_id.sd.fullname+' '+_comp.mark+'&lt;br/&gt;');&#10;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if (_comp.mark == "" || _comp.mark == "N")&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_score = null;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;else&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_scale = _curCompetenceDoc.scales.GetOptChildByKey(_comp.mark);&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if (_scale != undefined)&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if (uni_type_estimation==true)&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_score = _SHIFT-_scale.ChildIndex ;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;else&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;try&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;//Response.Write(StrLen(_comp.mark));&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if (StrLen(Real(_comp.mark))==StrLen(_comp.mark))&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_score = Real(_comp.mark);&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;else&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;cancel();&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;catch(ex)&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;try&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_score = Real(_scale.percent);&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;catch(jjh)&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_score = _scale.ChildIndex;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;else&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_score = 0;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;try&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;//Response.Write(StrLen(_comp.mark));&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if (StrLen(Real(_comp.mark))==StrLen(_comp.mark))&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_score = Real(_comp.mark);&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;catch(ex)&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_scale = undefined;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;//Response.Write(_elem.flag+' name='+_curCompetence.name +' score='+_score+' _weight='+_weight+'&lt;br/&gt;');&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;switch(_elem.flag)&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;case 1:&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if (_score == null) _score = 0;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9; _curCompetence.total=_curCompetence.total+(Real(_score)* Real(SELF_WEIGHT) / 100.0);&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;break;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;case 2:&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if (_score == null) _score = 0;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;cur_comp_Object=new Object;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;cur_comp_Object.comp_id=_comp.PrimaryKey;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;cur_comp_Object.name=_comp.competence_id.ForeignElem.name;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;cur_comp_Object.score=_score;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_boss_competenceArray[ArrayCount(_boss_competenceArray)]=cur_comp_Object;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_curCompetence.total = _curCompetence.total + (Real(_score) * Real(BOSS_WEIGHT) / 100.0);&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;break;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;case 3:&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if (uni_type_estimation==true)&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if (_score == null) &#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;for (_boss_comp in _boss_competenceArray)&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;//Response.Write(' id ='+_comp.PrimaryKey +'&lt;br/&gt;');&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if (Int(_comp.PrimaryKey)==Int(_boss_comp.comp_id))&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_score=_boss_comp.score;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;//Response.Write('www score='+_score+'&lt;br/&gt;');&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;break;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;//Response.Write('_boss_comp id ='+_boss_comp.comp_id +' name='+_boss_comp.name +' score='+_boss_comp.score+' _weight='+_weight+'&lt;br/&gt;');&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if (_score == null) _score = 0;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_curCompetence.total = _curCompetence.total + (Real(_score) * Real(EXPERT_WEIGHT) / 100.0);&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;break;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;case 4:&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if (uni_type_estimation==true)&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if (_score == null) &#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;for (_boss_comp in _boss_competenceArray)&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if (Int(_comp.PrimaryKey)==Int(_boss_comp.comp_id))&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_score=_boss_comp.score;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;break;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if (_score == null) _score = 0;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_curCompetence.total = _curCompetence.total + (Real(_score) * Real(FUNC_WEIGHT) / 100.0);&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;break;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#9;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;case 5:&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if (uni_type_estimation==true)&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if (_score == null) &#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;for (_boss_comp in _boss_competenceArray)&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if (Int(_comp.PrimaryKey)==Int(_boss_comp.comp_id))&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_score=_boss_comp.score;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;break;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if (_score == null) _score = 0;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_curCompetence.total = _curCompetence.total + (Real(_score) * Real(STAFF_WEIGHT) / 100.0);&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;break;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;case 6:&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if (uni_type_estimation==true)&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if (_score == null) &#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;for (_boss_comp in _boss_competenceArray)&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if (Int(_comp.PrimaryKey)==Int(_boss_comp.comp_id))&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_score=_boss_comp.score;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;break;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if (_score == null) _score = 0;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_curCompetence.total = _curCompetence.total + (Real(_score) * Real(STAFF_WEIGHT) / 100.0);&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;break;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;for (comp in competenceArray)&#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;_curWantedComp= ArrayOptFind(_curWantedObject.compArr, 'id ==comp.id');&#10;&#9;&#9;&#9;&#9;&#9;if (_curWantedComp == undefined)&#10;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;_NewWantedComp=new Object;&#10;&#9;&#9;&#9;&#9;&#9;&#9;_NewWantedComp.id=comp.id;&#10;&#9;&#9;&#9;&#9;&#9;&#9;_NewWantedComp.name=comp.name;&#10;&#9;&#9;&#9;&#9;&#9;&#9;_NewWantedComp.total=0.0;&#10;&#9;&#9;&#9;&#9;&#9;&#9;_NewWantedComp.collArr=Array();&#10;&#9;&#9;&#9;&#9;&#9;&#9;_NewWantedComp.CollCount=ArrayCount(_NewWantedComp.collArr);&#10;&#9;&#9;&#9;&#9;&#9;&#9;_curWantedObject.compArr[ArrayCount(_curWantedObject.compArr)]=_NewWantedComp;&#10;&#9;&#9;&#9;&#9;&#9;&#9;_curWantedComp=_curWantedObject.compArr[ArrayCount(_curWantedObject.compArr)-1];&#10;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;_curWantedColl= ArrayOptFind(_curWantedComp.collArr, 'id ==_plan. person_id');&#10;&#9;&#9;&#9;&#9;&#9;if (_curWantedColl == undefined)&#10;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;_NewPerson=new Object;&#10;&#9;&#9;&#9;&#9;&#9;&#9;_NewPerson.id=_plan.person_id;&#10;&#9;&#9;&#9;&#9;&#9;&#9;_NewPerson.name=_plan.person_fullname;&#10;&#9;&#9;&#9;&#9;&#9;&#9;_NewPerson.mark=comp.total;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;&#9;QueryStringTemp="for $obj in assessment_appraises where $obj/id = " + _plan.assessment_appraise_id + "return $obj";&#10;&#9;&#9;&#9;&#9;&#9;&#9;//Response.Write("for $obj in assessment_appraises where $obj/id = " + _plan.assessment_appraise_id + "return $obj"+"&lt;br/&gt;");&#10;&#9;&#9;&#9;&#9;&#9;&#9;try&#10;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_Array=XQuery(QueryStringTemp);&#9;&#10;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;catch(dd)&#10;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_Array =Array();&#9;&#10;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;FirstElem= ArrayOptFirstElem(_Array);&#10;&#9;&#9;&#9;&#9;&#9;&#9;if (FirstElem != undefined)&#10;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;try&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_date=Date(FirstElem.start_date);&#9;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;catch(dd)&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_date=DateNewTime(Date( 1990, 1, 1 ),00,00,00);&#9;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;else&#10;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_date=DateNewTime(Date( 1990, 1, 1 ),00,00,00);&#10;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;_NewPerson.date=_date;&#10;&#9;&#9;&#9;&#9;&#9;&#9;_curWantedComp.total=_curWantedComp.total+comp.total;&#10;&#9;&#9;&#9;&#9;&#9;&#9;_curWantedComp.collArr[ArrayCount(_curWantedComp.collArr)]=_NewPerson;&#10;&#9;;&#10;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;else&#10;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;QueryStringTemp="for $obj in assessment_appraises where $obj/id = " + _plan.assessment_appraise_id + "return $obj";&#10;&#9;&#9;&#9;&#9;&#9;&#9;//Response.Write("for $aspl in assessment_plans where $aspl/id = " + _proc.id + " return $aspl"+"&lt;br/&gt;");&#10;&#9;&#9;&#9;&#9;&#9;&#9;try&#10;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_Array=XQuery(QueryStringTemp);&#9;&#10;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;catch(dd)&#10;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_Array =Array();&#9;&#10;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;FirstElem= ArrayOptFirstElem(_Array);&#10;&#9;&#9;&#9;&#9;&#9;&#9;if (FirstElem != undefined)&#10;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;try&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_date=Date(FirstElem.start_date);&#9;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;catch(dd)&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_date=DateNewTime(Date( 1990, 1, 1 ),00,00,00);&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;else&#10;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_date=DateNewTime(Date( 1990, 1, 1 ),00,00,00);&#10;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;if (_date&gt;_curWantedColl.date)&#10;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_curWantedColl.date=_date;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_curWantedComp.total=_curWantedComp.total-_curWantedColl.mark;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_curWantedColl.mark=comp.total;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;_curWantedComp.total=_curWantedComp.total+comp.total;&#10;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;_curWantedComp.CollCount=ArrayCount(_curWantedComp.collArr);&#10;&#9;&#9;&#9;&#9;}&#10;&#10;&#9;&#9;}&#10;&#9;&#10;/*&#9;Response.Write("--------_wanted_objects------&lt;br/&gt;");&#10;&#9;for (_elem in _wanted_objects)&#10;&#9;{&#10;&#9;&#9;Response.Write(_elem.id+' '+_elem.name+"&lt;br/&gt;");&#10;&#9;&#9;for (_el in _elem.compArr)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;Response.Write('------------&gt;'+_el.id+' '+_el.name+' '+_el.total+' '+_el.CollCount+"&lt;br/&gt;");&#10;&#9;&#9;&#9;&#10;&#9;&#9;}&#10;&#9;}*/&#10;&#9;&#10;&#9;//-----------&#10;&#9;Additional_Report_part2_CODE="uni-report4-part2";&#10;&#9;Additional_Report_part2_Form = ArrayOptFirstElem( XQuery("for $elem in custom_web_templates where $elem/code = '"+Additional_Report_part2_CODE+"' return $elem") );&#10;&#9;&#10;&#9;if (Additional_Report_part2_Form != undefined)&#10;&#9;{&#10;&#9;&#9;Additional_Report_part2_Form = OpenDoc(UrlFromDocID(Additional_Report_part2_Form.PrimaryKey)).TopElem;&#10;&#9;&#9;&#10;&#9;&#9;_anti_str = "";&#10;&#9;&#9;for (_wvar in Additional_Report_part2_Form.wvars)&#9;_anti_str = _anti_str + _wvar.name + " = '" + HtmlEncode(_wvar.value) + "'; ";&#10;&#9;&#9;_graph_web_template_found=true;&#10;&#9;&#9;Response.Write(EvalCodePage( "&lt;" + "%" + _anti_str + "%" + "&gt;" + Additional_Report_part2_Form.html.Value));&#10;&#9;}&#10;&#9;else&#10;&#9;{&#10;&#9;&#9;Response.Write("&lt;font color='red' stle='font-weight: boldest'&gt;*Ошибка: проблемы с настраиваемым web-шаблоном " +Additional_Report_part2_CODE+". Отчет не будет отображаться.*&lt;/font&gt;");&#10;&#9;}&#10;&#9;&#10;&#9;//-------------&#9;&#10;&#9;Session.excel_html = _RES_VALUE;&#10;%&gt;&#10;&lt;script type="text/javascript"&gt;&#10;function open_win()&#10;{&#10;&#9;modalWin=window.open('assessment_excel_export.html','','');&#10;}&#10;&lt;/script&gt;&#10;&lt;%&#10;}&#10;%&gt;</html>
			<use_session_cache>false</use_session_cache>
			<cwt_type>default</cwt_type>
			<out_type>undefined</out_type>
			<access>
				<access_level>0</access_level>
			</access>
			<comment>Отчет Итоговый Оценочный лист (универсальный отчет). К порталу подключается шаблон «Итоговый Оценочный лист (универсальный отчет)». Для выбранного сотрудника по выбранной процедуре по каждой компетенции выводится  итоговая оценка, плановая оценка и вес оценки в профиле компетенции. По данным таблицы строится 2 графика соответствия плановой и полученной оценки. В строке «Итоговая оценка» высчитывается итоговая оценка для реального и идеального профиля, при расчете учитываются веса компетенций. uni-estimation-coll-results-graph, uni-estimation-radar-graph</comment>
			<doc_info>
				<creation>
					<user_login>user1</user_login>
					<date>2009-01-21T10:46:24Z</date>
				</creation>
				<modification>
					<user_login>admin</user_login>
					<user_id>6148914691236517121</user_id>
					<date>2021-06-28T13:30:52Z</date>
				</modification>
			</doc_info>
			<is_std>false</is_std>
			<changed>false</changed>
			<is_enabled>true</is_enabled>
		</custom_web_template>
		<custom_web_template>
			<id>0x570668281C8B15F0</id>
			<code>websoft_report_360_2</code>
			<name>Итоговый оценочный лист (вариант 2)</name>
			<category>websoft</category>
			<exec_code>
				<code_text>&lt;%&#10;// ---------------------------------------------------------------------------------------------------------------------------&#10;// автор:   ER&#10;// создан:  04.12.2013&#10;// изменен:  07.04.2016&#10;// -------------------------------------------------Предупреждение--------------------------------------------------------------&#10;// &lt;нет&gt;&#10;// ------------------------------------------------Параметры шаблона------------------------------------------------------------&#10;// &lt;нет&gt;&#10;// ----------------------------------------------Глобальные переменные----------------------------------------------------------&#10;// &lt;нет&gt;&#10;// ---------------------------------------------------Константы-----------------------------------------------------------------&#10;// &lt;нет&gt;&#10;// -----------------------------------------------------------------------------------------------------------------------------&#10;&#10;legend_color = '[' + legend_color + ']';&#10;color_array_legend =tools.read_object(legend_color);&#10;&#10;&#10;&#9;string_page = 32;&#10;&#10;function func_over(func_asid, f_comp_id, str_status)&#10;{&#10;&#9;f_mmang = 0;&#10;&#9;f_nummang = 0;&#10;&#9;f_rat_mang = 0;&#10;&#9;f_pas_elem = XQuery("for $elem in pas where $elem/assessment_appraise_id = " + func_asid + " and $elem/status = '" + str_status + "' return $elem");&#10;&#9;for (_pa in f_pas_elem)&#10;&#9;{&#10;&#9;&#9;try&#10;&#9;&#9;{&#10;&#9;&#9;&#9;f_pa_doc_elem = OpenDoc(UrlFromDocID(_pa.id)).TopElem;&#10;&#9;&#9;}&#10;&#9;&#9;catch(err)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;continue;&#10;&#9;&#9;}&#10;&#9;&#9;f_elem = ArrayOptFind(f_pa_doc_elem.competences, "This.competence_id == f_comp_id");&#10;&#9;&#9;if (f_elem != undefined)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;mng_m = f_elem.mark_value != null &amp;&amp; f_elem.mark_value != "" ? Real(f_elem.mark_value) : 0;&#10;&#9;&#9;&#9;if (mng_m != 0)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;f_mmang += Real(mng_m);&#10;&#9;&#9;&#9;&#9;f_nummang ++;&#10;&#9;&#9;&#9;}&#10;&#9;&#9;}&#10;&#9;}&#10;&#9;f_rat_mang = f_nummang != 0 ? Real(StrRealFixed(Real(f_mmang)/Real(f_nummang), 2, true)) : 0;&#10;&#9;&#10;&#9;return f_rat_mang;&#10;}&#10;&#10;function func_over_func(func_asid, f_comp_id, str_status, comps_arr)&#10;{&#10;&#9;mfunc = 0;&#10;&#9;numfunc = 0;&#10;&#9;rat_func = 0;&#10;&#9;pas_func = XQuery("for $elem in pas where $elem/assessment_appraise_id = " + func_asid + " and $elem/status = '" + str_status + "' and $elem/overall != null() return $elem");&#10;&#10;&#9;rat_ind_func = 0;&#10;&#9;full_value = 0;&#10;&#9;full_cnt = 0;&#10;&#9;for(_ind_func in comps_arr.indicators)&#10;&#9;{&#10;&#9;&#9;m_ind_func = 0;&#10;&#9;&#9;num_ind_func = 0;&#10;&#9;&#9;for (_pa_s in pas_func)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;try&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;DocPasFunc = OpenDoc(UrlFromDocID(_pa_s.id)).TopElem;&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;catch(err)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;continue;&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;ffunc = ArrayOptFind(DocPasFunc.competences, "This.competence_id == f_comp_id");&#10;&#9;&#9;&#9;if (ffunc != undefined)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;ffunc_ind = ArrayOptFind(ffunc.indicators, "This.indicator_id == _ind_func.indicator_id");&#10;&#9;&#9;&#9;&#9;if (ffunc_ind != undefined &amp;&amp; ffunc_ind.mark_value != null)&#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;m_ind_func += Real(ffunc_ind.mark_value);&#10;&#9;&#9;&#9;&#9;&#9;num_ind_func ++;&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;}&#10;&#9;&#9;}&#10;&#9;&#9;rat_ind_func = num_ind_func != 0 ? Real(StrRealFixed(Real(m_ind_func)/Real(num_ind_func), 2, true)) : 0;&#10;&#9;&#9;full_value += rat_ind_func;&#10;&#9;&#9;full_cnt += rat_ind_func != 0 ? 1 : 0;&#10;&#9;}&#10;&#10;&#9;rat_func = full_cnt != 0 ? Real(StrRealFixed(Real(full_value)/Real(full_cnt), 2, true)) : 0;&#10;&#9;return rat_func;&#10;}&#10;&#10;try&#10;{&#10;&#9;lng_id = curLng.short_id;&#10;}&#10;catch (err)&#10;{&#10;&#9;lng_id = "ru";&#10;}&#10;TRUTH = Request.Form.HasProperty( 'state' ) &amp;&amp; Request.Form.state != "" &amp;&amp; Request.Form.state != "null" ? Int(Request.Form.state) : 0;&#10;str_truth = "Fixed";&#10;_idx = 0;&#10;count_row = 0;&#10;switch ( TRUTH ) &#10;{ &#10;&#9;case 0: &#10;&#9;&#9;str_truth = '0'; &#10;&#9;&#9;break; &#10;&#9;case 1: &#10;&#9;&#9;str_truth = '"0\.0"'; &#10;&#9;&#9;break;&#9;&#10;&#9;case 2: &#10;&#9;&#9;str_truth = '"0\.00"'; &#10;&#9;&#9;break;&#9;&#9;&#9;&#10;}&#10;&#10;url_temp_folder = 'x-local://wt/web/temp_files';&#10;ObtainDirectory(url_temp_folder);&#10;url_temp_folder = 'x-local://wt/web/temp_files/' + String(curUserID);&#10;ObtainDirectory(url_temp_folder);&#10;temp_folder = UrlToFilePath(url_temp_folder);&#10;&#10;file_name = "itog_report_" + DateToRawSeconds(Date()) + ".xlsx";&#10;oExcelDoc = null;&#10;&#10;try&#10;{&#10;&#9;oExcelDoc = new ActiveXObject("Websoft.Office.Excel.Document");&#10;&#9;oExcelDoc.CreateWorkBook();&#10;&#10;&#9;oWorksheet = oExcelDoc.GetWorksheet(0);&#10;&#9;oWorksheet.PageSetup.Orientation = "Landscape";&#10;&#9;oWorksheet.PageSetup.PaperSize = "PaperA4";&#10;&#10;&#9;oExcelDoc.Open(temp_folder + "\\" + file_name);&#10;}&#10;catch(err)&#10;{&#10;&#9;oExcelDoc = null;&#10;&#9;Response.Write("&lt;b&gt;&lt;p&gt;При построении данного отчета произошла ошибка с библиотекой для построения графиков! " + err + "&lt;/p&gt;&lt;/b&gt;");&#10;&#9;alert("При построении данного отчета произошла ошибка с библиотекой для построения графиков! " + err);&#10;}&#10;&#10;str_graph = '&lt;BuiltInFormat&gt;1&lt;/BuiltInFormat&gt;';&#10;switch ( TRUTH ) &#10;{ &#10;&#9;case 0: &#10;&#9;&#9;str_graph = '&lt;BuiltInFormat&gt;1&lt;/BuiltInFormat&gt;'; &#10;&#9;&#9;break; &#10;&#9;case 1: &#10;&#9;&#9;str_graph = '&lt;FormatString&gt;0.0&lt;/FormatString&gt;'; &#10;&#9;&#9;break;&#9;&#10;&#9;case 2: &#10;&#9;&#9;str_graph = '&lt;BuiltInFormat&gt;2&lt;/BuiltInFormat&gt;'; &#10;&#9;&#9;break;&#9;&#9;&#9;&#10;}&#10;&#10;str_graph_excel = '&lt;x:BuiltInFormat&gt;1&lt;/x:BuiltInFormat&gt;';&#10;switch ( TRUTH ) &#10;{ &#10;&#9;case 0: &#10;&#9;&#9;str_graph_excel = '&lt;x:BuiltInFormat&gt;1&lt;/x:BuiltInFormat&gt;'; &#10;&#9;&#9;break; &#10;&#9;case 1: &#10;&#9;&#9;str_graph_excel = '&lt;x:FormatString&gt;0.0&lt;/x:FormatString&gt;'; &#10;&#9;&#9;break;&#9;&#10;&#9;case 2: &#10;&#9;&#9;str_graph_excel = '&lt;x:BuiltInFormat&gt;2&lt;/x:BuiltInFormat&gt;'; &#10;&#9;&#9;break;&#9;&#9;&#9;&#10;}&#10;&#10;function okrugl(var_func)&#10;{&#10;&#9;_rez_func = var_func;&#10;&#9;if (Trim(_rez_func) == "")&#10;&#9;{&#10;&#9;&#9;return _rez_func&#10;&#9;}&#10;&#9;&#10;&#9;arr_func = new Array();&#10;&#9;arr_func = var_func.split(",");&#10;&#9;if ( TRUTH == 0 )&#10;&#9;{&#10;&#9;&#9;return _rez_func;&#10;&#9;}&#10;&#9;if ( TRUTH == 1 )&#10;&#9;{&#10;&#9;&#9;if ( ArrayCount(arr_func) == 1 ) &#10;&#9;&#9;{ &#10;&#9;&#9;&#9;_rez_func = _rez_func + ",0"; &#10;&#9;&#9;}&#10;&#9;}&#10;&#9;if ( TRUTH == 2 )&#10;&#9;{&#10;&#9;&#9;if ( ArrayCount(arr_func) == 1 ) &#10;&#9;&#9;{ &#10;&#9;&#9;&#9;_rez_func = _rez_func + ",00"; &#10;&#9;&#9;}&#10;&#9;&#9;if ( ArrayCount(arr_func) == 2 &amp;&amp; StrLen(arr_func[1]) == 1 ) &#10;&#9;&#9;{ &#10;&#9;&#9;&#9;_rez_func = _rez_func + "0"; &#10;&#9;&#9;}&#9;&#9;&#10;&#9;}&#10;&#9;&#10;&#9;return _rez_func;&#10;}&#10;&#10;function Perevod(_var)&#10;{&#10;&#9;_rez = "";&#10;&#9;_var = StrReal(_var, TRUTH);&#10;&#9;_rez = StrReplace(String(_var), ".", ",");&#10;&#9;&#10;&#9;_rez = okrugl(_rez);&#10;&#9;&#10;&#9;return _rez;&#10;}&#10;&#10;function check_color(_clr)&#10;{&#10;&#9;_rez = "";&#10;&#9;if (visible_legend)&#10;&#9;{&#10;&#9;&#9;_clr = Int(_clr);&#10;&#9;&#9;for (_clg in color_array_legend)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;if ( _clr &gt;= Int(_clg.min) &amp;&amp; _clr &lt;= Int(_clg.max) )&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;_rez = "bgcolor='" + _clg.color + "'";&#10;&#9;&#9;&#9;&#9;break;&#10;&#9;&#9;&#9;}&#10;&#9;&#9;}&#10;&#9;}&#10;&#10;&#9;return _rez;&#10;}&#10;&#10;function check_color_dll(_clr)&#10;{&#10;&#9;_rez = "";&#10;&#9;if (visible_legend)&#10;&#9;{&#10;&#9;&#9;_clr = Int(_clr);&#10;&#9;&#9;for (_clg in color_array_legend)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;if ( _clr &gt;= _clg.min &amp;&amp; _clr &lt;= _clg.max )&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;_rez = _clg.color;&#10;&#9;&#9;&#9;&#9;break;&#10;&#9;&#9;&#9;}&#10;&#9;&#9;}&#10;&#9;}&#10;&#9;return _rez;&#10;}&#10;&#10;function color_font(_clr)&#10;{&#10;&#9;_rez = "";&#10;&#9;if (visible_legend)&#10;&#9;{&#10;&#9;&#9;_clr = OptInt(_clr, 0);&#10;/*&#9;&#9;&#10;&#9;&#9;if(_clr &gt;= 90 &amp;&amp; _clr &lt;= 100)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;_rez = " color: white; ";&#10;&#9;&#9;}&#10;*/&#10;&#9;&#9;elem_lg = color_array_legend[ArrayCount(color_array_legend) - 1];&#10;&#9;&#9;if (_clr &gt;= elem_lg.min &amp;&amp; _clr &lt;= elem_lg.max)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;_rez = " color: white; ";&#10;&#9;&#9;}&#10;&#9;}&#10;&#9;return _rez;&#10;}&#10;&#10;function color_font_dll(_clr)&#10;{&#10;&#9;_rez = "";&#10;&#9;if (visible_legend)&#10;&#9;{&#10;&#9;&#9;_clr = OptInt(_clr, 0);&#10;/*&#10;&#9;&#9;if(_clr &gt;= 90 &amp;&amp; _clr &lt;= 100)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;_rez = "#FFFFFF";&#10;&#9;&#9;}&#10;*/&#10;&#9;&#9;elem_lg = color_array_legend[ArrayCount(color_array_legend) - 1];&#10;&#9;&#9;if (_clr &gt;= elem_lg.min &amp;&amp; _clr &lt;= elem_lg.max)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;_rez = "#FFFFFF";&#10;&#9;&#9;}&#10;&#9;&#9;return _rez;&#10;&#9;}&#10;}&#10;&#10;function check_type(_clr)&#10;{&#10;&#9;_clr = Int(_clr);&#10;&#9;_rez2 = "";&#10;&#9;&#10;&#9;for (_clg in color_array_legend)&#10;&#9;{&#10;&#9;&#9;if ( _clr &gt;= _clg.min &amp;&amp; _clr &lt;= _clg.max )&#10;&#9;&#9;{&#10;&#9;&#9;&#9;_rez2 = _clg.title;&#10;&#9;&#9;&#9;break;&#10;&#9;&#9;}&#10;&#9;}&#9;&#10;&#9;return _rez2;&#10;}&#10;&#10;function sort_array(_array, _how)&#10;{&#10;&#9;array_func = new Array();&#10;&#9;array_func = ArraySelectAll(_array);&#10;&#9;cnt_var = ArrayCount(array_func);&#10;&#9;for (z = 0; z &lt; cnt_var; z++)&#10;&#9;{&#10;&#9;&#9;for (f = 0; f &lt; cnt_var; f++)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;if (_how == "-" &amp;&amp; f != z &amp;&amp; array_func[z].aver &gt; array_func[f].aver)&#10;&#9;&#9;&#9;{&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;temp_elem = array_func[z];&#10;&#9;&#9;&#9;&#9;array_func[z] = array_func[f];&#10;&#9;&#9;&#9;&#9;array_func[f] = temp_elem;&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;if (_how == "+" &amp;&amp; f != z &amp;&amp; array_func[z].aver &lt; array_func[f].aver)&#10;&#9;&#9;&#9;{&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;temp_elem = array_func[z];&#10;&#9;&#9;&#9;&#9;array_func[z] = array_func[f];&#10;&#9;&#9;&#9;&#9;array_func[f] = temp_elem;&#10;&#9;&#9;&#9;}&#9;&#9;&#9;&#10;&#9;&#9;}&#10;&#9;}&#10;&#10;&#9;return array_func;&#10;}&#10;%&gt;&#10;&lt;script language="JAVASCRIPT"&gt;&#10;&#10;function show( title, inputIds, inputNames, catalog, disp_object_ids, m_sel )&#10;{&#10;&#9;var pars=new Object();&#10;&#9;pars.title = title;&#10;&#9;var strAttr="status:no;dialogWidth:750px;dialogHeight:580px;help:no";&#10;&#9;&#10;&#9;pars.elemNamesArray = Array();&#10;&#9;&#10;&#9;var i = 0;&#10;&#10;&#9;ids = "";&#10;&#9;arr = document.forms['main'][inputIds].value.split(',');&#10;&#9;for ( i=0; i&lt;arr.length; i++ )&#10;&#9;{&#10;&#9;&#9;if ( arr[i] == '' ) continue;&#10;&#9;&#9;ids += ";" + arr[i];&#10;&#9;}&#10;&#9;pars.selected_object_ids = ids;&#10;&#9;pars.display_object_ids = disp_object_ids;&#10;&#9;arr = document.forms['main'][inputNames].value.split("|");&#10;&#9;for ( i=0; i&lt;arr.length; i++ )&#10;&#9;{&#10;&#9;&#9;pars.elemNamesArray[i] = arr[i];&#10;&#9;}&#10;&#10;&#9;//xShowModalDialog('dlg_select.html?doc_id=&lt;%=curDocID%&gt;&amp;catalog_name='+catalog+'&amp;show_all=1&amp;multi_select='+m_sel+'&amp;rand='+ Math.random(), pars, strAttr);&#10;&#9;&#10;&#9;xShowSelectDialog(&#10;&#9;&#9;{&#10;&#9;&#9;&#9;"catalog_name": catalog,&#10;&#9;&#9;&#9;"multi_select": m_sel,&#10;&#9;&#9;&#9;"can_be_empty": "true",&#10;&#9;&#9;&#9;"disp_filter": "false",&#10;&#9;&#9;&#9;"check_access": "false",&#10;&#9;&#9;&#9;"display_object_ids": disp_object_ids,&#10;&#9;&#9;&#9;"selected_object_ids": ids, &#10;&#9;&#9;&#9;"title": "Выбор сотрудника"&#10;&#9;&#9;},&#10;&#9;&#9;function(oParams)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;id_mas = oParams.selected_object_ids.split(";");&#10;&#10;&#9;&#9;&#9;if (!oParams.handle) return null;&#10;&#10;&#9;&#9;&#9;names = "";&#10;&#9;&#9;&#9;ids = "";&#10;&#9;&#9;&#9;id_ar = oParams.selected_object_ids.split(";");&#10;&#9;&#9;&#9;isFirst = true;&#10;&#9;&#9;&#9;for (i=0;i&lt;id_ar.length;i++)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;if ( id_ar[i] == "" || id_ar[i] == null ) continue;&#10;&#9;&#9;&#9;&#9;ids += ( isFirst ? '' : ',' ) + id_ar[i];&#10;&#9;&#9;&#9;&#9;isFirst = false;&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;for (i=0;i&lt;oParams.elemNamesArray.length;i++)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;if( oParams.elemNamesArray[i]!=null )&#10;&#9;&#9;&#9;&#9;names += ( i != 0 ? "|" : "" ) + oParams.elemNamesArray[i];&#10;&#9;&#9;&#9;}&#10;&#10;&#9;&#9;&#9;if (document.forms['main'][inputIds].value != ids)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;document.forms['main'][inputIds].value = ids;&#10;&#9;&#9;&#9;&#9;document.forms['main'][inputNames].value = names;&#10;&#9;&#9;&#9;}&#10;&#9;&#9;});&#10;&#9;&#10;}&#10;&#10;function do_submit()&#10;{&#10;&#9;document.forms['main']['is_posted'].value = "1";&#10;&#9;document.forms['main'].submit();&#10;}&#10;&#10;function export_archive()&#10;{&#10;&#9;window.open('temp_files/&lt;%=String(curUserID) + "/" + file_name%&gt;');&#10;}&#10;&lt;/script&gt;&#10;&lt;%&#10;if (oExcelDoc != null)&#10;{&#10;%&gt;&#10;&lt;form id="main" name="main" action="&lt;%=Request.Url%&gt;" METHOD="POST"&gt;&#10;&#9;&lt;input type="hidden" name="is_posted" value=""&gt;&#10;&#9;&lt;table&gt;&#10;&#9;&#9;&lt;tr&gt;&#10;&#9;&#9;&#9;&lt;td align="right"&gt;&#10;&lt;%&#10;_pi = tools.get_sub_persons_by_func_manager_id(curUserID, "collaborator,subdivision,org,position");&#10;collaborators_ids = "";&#10;if (curUser.access.access_role == "admin")&#10;{&#10;&#9;collaborators_ids = "";&#10;}&#10;else if (ArrayOptFirstElem(_pi) != undefined)&#10;{&#10;&#9;collaborators_ids = ArraySelectDistinct( ArrayExtract( _pi,"id" ) ).join(";");&#10;}&#10;else&#10;{&#10;&#9;collaborators_ids = curUserID;&#10;}&#10;_width = 120;&#10;&#10;ass_pl = XQuery("for $elem in assessment_plans where MatchSome($elem/person_id,(" + collaborators_ids + ")) return $elem");&#10;ass_pls = ArraySelectDistinct( ArrayExtract( ass_pl , "assessment_appraise_id" )).join(";");&#10;&#10;%&gt;&#10;&#9;&#9;&#9;&#9;&lt;input type="button" style="width:&lt;%=_width%&gt;px" value="Сотрудник" class="inputButton" onClick="show('Сотрудник', 'coll_ids', 'coll_names', 'collaborator', '&lt;%=collaborators_ids%&gt;', 0)" onMouseOver="this.className='inputButtonOver';" onMouseOut="this.className='inputButton';"&gt;&#10;&#9;&#9;&#9;&lt;/td&gt;&#10;&#9;&#9;&#9;&lt;td&gt;&#10;&#9;&#9;&#9;&#9;&lt;input type="text" readonly name="coll_names" value="&lt;%=( Request.Form.HasProperty( 'coll_names' ) ? Request.Form.coll_names : '' )%&gt;" size="100"&gt;&lt;br&gt;&#10;&#9;&#9;&#9;&#9;&lt;input type="hidden" name="coll_ids" value="&lt;%=( Request.Form.HasProperty( 'coll_ids' ) ? Request.Form.coll_ids : '' )%&gt;"&gt;&#10;&#9;&#9;&#9;&lt;/td&gt;&#10;&#9;&#9;&lt;/tr&gt;&#10;&#10;&#9;&#9;&lt;tr align="right"&gt;&#10;&#9;&#9;&#9;&lt;td&gt;&#10;&#9;&#9;&#9;&#9;&lt;input type="button" style="width:&lt;%=_width%&gt;px" value="Процедура" class="inputButton" onClick="show('Процедура', 'ass_ids', 'ass_names', 'assessment_appraise', '&lt;%=ass_pls%&gt;', 0)" onMouseOver="this.className='inputButtonOver';" onMouseOut="this.className='inputButton';"&gt;&#10;&#9;&#9;&#9;&lt;/td&gt;&#10;&#9;&#9;&#9;&lt;td&gt;&#10;&#9;&#9;&#9;&#9;&lt;input type="text" readonly name="ass_names" value="&lt;%=( Request.Form.HasProperty( 'ass_names' ) ? Request.Form.ass_names : '' )%&gt;" size="100"&gt;&lt;br&gt;&#10;&#9;&#9;&#9;&#9;&lt;input type="hidden" name="ass_ids" value="&lt;%=( Request.Form.HasProperty( 'ass_ids' ) ? Request.Form.ass_ids : '' )%&gt;"&gt;&#10;&#9;&#9;&#9;&lt;/td&gt;&#10;&#9;&#9;&lt;/tr&gt;&#10;&#9;&#9;&lt;tr&gt;&#10;&#9;&#9;&#9;&lt;td align="right"&gt;&#10;&#9;&#9;&#9;&#9;знаков после запятой:&#10;&#9;&#9;&#9;&lt;/td&gt;&#10;&#9;&#9;&#9;&lt;td&gt;&#10;&#9;&#9;&#9;&#9;&lt;select name="state"&gt;&#10;&#9;&#9;&#9;&#9;&#9;&lt;option value='0' &lt;%=(( Request.Form.HasProperty( 'state' ) &amp;&amp; Request.Form.state == '0') ? 'selected' : '' )%&gt;&gt; 0 &lt;/option&gt;&#10;&#9;&#9;&#9;&#9;&#9;&lt;option value='1' &lt;%=(( Request.Form.HasProperty( 'state' ) &amp;&amp; Request.Form.state == '1') ? 'selected' : '' )%&gt;&gt; 1 &lt;/option&gt;&#10;&#9;&#9;&#9;&#9;&#9;&lt;option value='2' &lt;%=(( Request.Form.HasProperty( 'state' ) &amp;&amp; Request.Form.state == '2') ? 'selected' : '' )%&gt;&gt; 2 &lt;/option&gt;&#10;&#9;&#9;&#9;&#9;&lt;/select&gt;&#10;&#9;&#9;&#9;&lt;/td&gt;&#10;&#9;&#9;&lt;/tr&gt;&#10;&#10;&#9;&#9;&lt;tr&gt;&#10;&#9;&#9;&#9;&lt;td colspan=2 align=center&gt;&#10;&#9;&#9;&#9;&#9;&lt;input type="button" value="Показать" onClick="do_submit();" class="inputButton" onMouseOver="this.className='inputButtonOver';" onMouseOut="this.className='inputButton';"&gt;&#10;&#10;&#9;&#9;&#9;&#9;&lt;!-- &lt;input type="button" value="Экспорт в Excel" onclick="modalWin=window.open('assessment_excel_export.html','','')" class="inputButton" onMouseOver="this.className='inputButtonOver';" onMouseOut="this.className='inputButton';"&gt; --&gt;&#10;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&lt;input type="button" value="Экспорт в Excel" onClick="export_archive()" class="inputButton" onMouseOver="this.className='inputButtonOver';" onMouseOut="this.className='inputButton';"&gt;&#10;&#9;&#9;&#9;&lt;/td&gt;&#10;&#9;&#9;&lt;/tr&gt;&#10;&#9;&lt;/table&gt;&#10;&lt;/form&gt;&#10;&lt;br&gt;&lt;br&gt;&#10;&lt;%&#10;}&#10;//проверим выбран ли сотрудник&#10;isFilter = Request.Form.HasProperty("is_posted") &amp;&amp; (Request.Form.GetProperty("is_posted") != '');&#10;if ( isFilter &amp;&amp; oExcelDoc != null )&#10;{&#10;&#9;// выбор сотрудника&#10;&#9;try&#10;&#9;{&#10;&#9;&#9;curCollID = Int(Request.Form.GetProperty("coll_ids"));&#10;&#9;&#9;try&#10;&#9;&#9;{&#10;&#9;&#9;&#9;DocPers = OpenDoc(UrlFromDocID(curCollID)).TopElem;&#10;&#9;&#9;}&#10;&#9;&#9;catch(err)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;continue;&#10;&#9;&#9;}&#10;&#9;}&#10;&#9;catch(err)&#10;&#9;{&#10;&#9;&#9;curCollID = '';&#10;&#9;}&#10;&#10;&#9;// выбор процедуры&#10;&#9;try&#10;&#9;{&#10;&#9;&#9;curAssID = Int(Request.Form.GetProperty("ass_ids"));&#10;&#9;}&#10;&#9;catch(err)&#10;&#9;{&#10;&#9;&#9;curAssID = '';&#10;&#9;}&#10;&#10;//******************************************************************************&#10;&#9;array_competences = new Array();&#10;&#9;Excel_html = "&#10;&#9;&#9;&#9;&lt;style type=\"text/css\"&gt;&#10;&#9;&#9;&#9;p.MsoNormal&#10;&#9;&#9;&#9;&#9;{margin-top:0cm;&#10;&#9;&#9;&#9;&#9;margin-right:0cm;&#10;&#9;&#9;&#9;&#9;margin-bottom:10.0pt;&#10;&#9;&#9;&#9;&#9;margin-left:0cm;&#10;&#9;&#9;&#9;&#9;line-height:115%;&#10;&#9;&#9;&#9;&#9;font-size:11.0pt;&#10;&#9;&#9;&#9;&#9;font-family:Calibri;&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;table.MsoNormalTable&#10;&#9;&#9;&#9;&#9;{font-size:10.0pt;&#10;&#9;&#9;&#9;&#9;font-family:\"Times New Roman\";&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;p.MsoFootnoteText&#10;&#9;&#9;&#9;&#9;{margin-bottom:.0001pt;&#10;&#9;&#9;&#9;&#9;font-size:10.0pt;&#10;&#9;&#9;&#9;&#9;font-family:Calibri;&#10;&#9;&#9;&#9;&#9;margin-left: 0cm;&#10;&#9;&#9;&#9;&#9;margin-right: 0cm;&#10;&#9;&#9;&#9;&#9;margin-top: 0cm;&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;span.MsoFootnoteReference&#10;&#9;&#9;&#9;&#9;{font-family:\"Times New Roman\";&#10;&#9;&#9;&#9;&#9;vertical-align:super;&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;.style3 {&#10;&#9;&#9;&#9;&#9;padding: 5px;&#10;&#9;&#9;&#9;&#9;border: 1px solid #000000;font-size:12.0px;&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;.style3_tab {&#10;&#9;&#9;&#9;&#9;border: 1px solid #000000;font-size:12.0px;&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;.style33 {&#10;&#9;&#9;&#9;&#9;padding: 5px;&#10;&#9;&#9;&#9;&#9;border: 1px solid #000000;&#10;&#9;&#9;&#9;&#9;mso-style-parent:style0;&#10;&#9;&#9;&#9;&#9;mso-number-format:" + str_truth + ";&#10;&#9;&#9;&#9;&#9;font-size:12.0px;&#10;&#9;&#9;&#9;&#9;}&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;.style4 {&#10;&#9;&#9;&#9;&#9;padding: 5px;&#10;&#9;&#9;&#9;&#9;border-color: #000000;&#10;&#9;&#9;&#9;&#9;border-width: 1px;&#10;&#9;&#9;&#9;&#9;background-color: #008000;&#10;&#9;&#9;&#9;&#9;font-size:10.0px;&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;.style5 {&#10;&#9;&#9;&#9;&#9;padding: 5px;&#10;&#9;&#9;&#9;&#9;border: 1px solid #000000;&#10;&#9;&#9;&#9;&#9;background-color: #00FF00;&#10;&#9;&#9;&#9;&#9;font-size:10.0px;&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;.style6 {&#10;&#9;&#9;&#9;&#9;background-color: #FFFF00;&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;.style7 {&#10;&#9;&#9;&#9;&#9;background-color: #F8C000;&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;.style8 {&#10;&#9;&#9;&#9;&#9;background-color: #CC0000;&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;.style9 {&#10;&#9;&#9;&#9;&#9;background-color: #C0C0C0;&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&lt;/style&gt;&#10;&#9;&#9;&#9;&lt;p class=\"MsoNormal\" style=\"margin-bottom:0cm;margin-bottom:.0001pt;line-height: normal\"&gt;&lt;b&gt;&#10;&#9;&#9;&#9;&lt;span style=\"font-size:12.0pt;font-family:&amp;quot;Times New Roman&amp;quot;\"&gt;Оценка по компетенциям - 360°&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&#10;&#9;&#9;&#9;&lt;p class=\"MsoNormal\" style=\"margin-bottom:0cm;margin-bottom:.0001pt;line-height:normal\"&gt;&lt;span style=\"font-size:12.0pt;font-family:&amp;quot;Times New Roman&amp;quot;\"&gt;Ф.И.О. оцениваемого сотрудника:  " + DocPers.name + "&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt;&#10;&#9;&#9;&#9;&lt;p class=\"MsoNormal\" style=\"margin-bottom:0cm;margin-bottom:.0001pt;line-height:normal\"&gt;&lt;span style=\"font-size:12.0pt;font-family:&amp;quot;Times New Roman&amp;quot;\"&gt;Должность:  " + DocPers.position_name + "&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt;&#10;&#9;&#9;&#9;&lt;p class=\"MsoNormal\" style=\"margin-bottom:0cm;margin-bottom:.0001pt;line-height:normal\"&gt;&lt;span style=\"font-size:12.0pt;font-family:&amp;quot;Times New Roman&amp;quot;\"&gt;Подразделение:  " + DocPers.position_parent_name + "&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt;&#10;&#9;&#9;&#9;&lt;p class=\"MsoNormal\" style=\"margin-bottom:0cm;margin-bottom:.0001pt;line-height:normal\"&gt;&lt;span style=\"font-size:1.0pt;font-family:&amp;quot;Times New Roman&amp;quot;\"&gt;&lt;o:p&gt;&amp;nbsp;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt;&#10;&#9;&#9;&#9;&lt;p class=\"MsoNormal\" style=\"margin-bottom:0cm;margin-bottom:.0001pt;line-height:normal\"&gt;&lt;b&gt;&lt;i&gt;&#10;&#9;&#9;&#9;&lt;span style=\"font-size:12.0pt;font-family:&amp;quot;Times New Roman&amp;quot;\"&gt;Компетенции/индикаторы&lt;/span&gt;&lt;/i&gt;&lt;/b&gt;&lt;/p&gt;&#10;&#10;&#9;&#9;&#9;&lt;table style=\"width: 100%\" class=\"style3_tab\" cellspacing=\"0\" cellpadding=\"0\"&gt;&#10;&#9;&#9;&#9;&#9;&lt;tr&gt;&#10;&#9;&#9;&#9;&#9;&#9;&lt;td class=\"style3\"&gt;&amp;nbsp;&lt;/td&gt;&#10;&#9;&#9;&#9;&#9;&#9;&lt;td class=\"style3\"&gt;Самооценка&lt;/td&gt;&#10;&#9;&#9;&#9;&#9;&#9;&lt;td class=\"style3\"&gt;Оценка руководителя&lt;/td&gt;&#10;&#9;&#9;&#9;&#9;&#9;&lt;td class=\"style3\"&gt;Оценка коллег&lt;/td&gt;&#10;&#9;&#9;&#9;&#9;&#9;&lt;td class=\"style3\"&gt;Оценка подчиненных&lt;/td&gt;&#10;&#9;&#9;&#9;&#9;&#9;&lt;td class=\"style3\"&gt;Средняя оценка&lt;/td&gt;&#10;&#9;&#9;&#9;&#9;&#9;&lt;!-- &lt;td class=\"style3\"&gt;Уровень&lt;sup&gt;[1]&lt;/sup&gt;&lt;/td&gt; --&gt;&#10;&#9;&#9;&#9;&#9;&lt;/tr&gt;";&#9;&#10;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;oCell = oWorksheet.Cells.GetCell("A1"); &#10;&#9;&#9;&#9;oCell.Value = "Оценка по компетенциям - 360°"; &#10;&#9;&#9;&#9;oCell.Style.FontSize = 12; &#10;&#9;&#9;&#9;oCell.Style.IsBold = true;&#10;&#9;&#9;&#9;oWorksheet.Cells.SetColumnWidth(0, 50);&#10;&#10;&#9;&#9;&#9;oCell = oWorksheet.Cells.GetCell("A2"); &#10;&#9;&#9;&#9;oCell.Value = "Ф.И.О. оцениваемого сотрудника:  " + DocPers.name; &#10;&#9;&#9;&#9;oCell.Style.FontSize = 12;&#10;&#9;&#9;&#9;&#10;&#9;&#9;&#9;oCell = oWorksheet.Cells.GetCell("A3"); &#10;&#9;&#9;&#9;oCell.Value = "Должность:  " + DocPers.position_name; &#10;&#9;&#9;&#9;oCell.Style.FontSize = 12;&#10;&#9;&#9;&#9;&#10;&#9;&#9;&#9;oCell = oWorksheet.Cells.GetCell("A4"); &#10;&#9;&#9;&#9;oCell.Value = "Подразделение:  " + DocPers.position_parent_name; &#10;&#9;&#9;&#9;oCell.Style.FontSize = 12;&#10;&#9;&#9;&#9;&#10;&#9;&#9;&#9;oCell = oWorksheet.Cells.GetCell("A5"); &#10;&#9;&#9;&#9;oCell.Value = "Компетенции/индикаторы"; &#10;&#9;&#9;&#9;oCell.Style.FontSize = 12; &#10;&#9;&#9;&#9;oCell.Style.IsBold = true; &#10;&#9;&#9;&#9;oCell.Style.IsItalic = true;&#10;&#9;&#9;&#9;&#10;&#9;&#9;&#9;oCell = oWorksheet.Cells.GetCell("A6"); &#10;&#9;&#9;&#9;oCell.Value = "";&#10;&#9;&#9;&#9;oCell.Style.Borders.SetStyle("Thin"); &#10;&#9;&#9;&#9;oCell.Style.Borders.SetColor("#000000"); &#10;&#9;&#9;&#9;oCell.Style.IsTextWrapped = true;&#10;&#9;&#9;&#9;&#10;&#9;&#9;&#9;oCell = oWorksheet.Cells.GetCell("B6"); &#10;&#9;&#9;&#9;oCell.Value = "Самооценка"; &#10;&#9;&#9;&#9;oCell.Style.Borders.SetStyle("Thin"); &#10;&#9;&#9;&#9;oCell.Style.Borders.SetColor("#000000"); &#10;&#9;&#9;&#9;oCell.Style.IsTextWrapped = true;&#10;&#9;&#9;&#9;oWorksheet.Cells.SetColumnWidth(1, 12);&#10;&#10;&#9;&#9;&#9;oCell = oWorksheet.Cells.GetCell("C6"); &#10;&#9;&#9;&#9;oCell.Value = "Оценка руководителя"; &#10;&#9;&#9;&#9;oCell.Style.Borders.SetStyle("Thin"); &#10;&#9;&#9;&#9;oCell.Style.Borders.SetColor("#000000"); &#10;&#9;&#9;&#9;oCell.Style.IsTextWrapped = true;&#10;&#9;&#9;&#9;oWorksheet.Cells.SetColumnWidth(2, 12);&#10;&#9;&#9;&#9;&#10;&#9;&#9;&#9;oCell = oWorksheet.Cells.GetCell("D6"); &#10;&#9;&#9;&#9;oCell.Value = "Оценка коллег"; &#10;&#9;&#9;&#9;oCell.Style.Borders.SetStyle("Thin"); &#10;&#9;&#9;&#9;oCell.Style.Borders.SetColor("#000000"); &#10;&#9;&#9;&#9;oCell.Style.IsTextWrapped = true;&#10;&#9;&#9;&#9;oWorksheet.Cells.SetColumnWidth(3, 12);&#10;&#9;&#9;&#9;&#10;&#9;&#9;&#9;oCell = oWorksheet.Cells.GetCell("E6"); &#10;&#9;&#9;&#9;oCell.Value = "Оценка подчиненных"; &#10;&#9;&#9;&#9;oCell.Style.Borders.SetStyle("Thin"); &#10;&#9;&#9;&#9;oCell.Style.Borders.SetColor("#000000"); &#10;&#9;&#9;&#9;oCell.Style.IsTextWrapped = true;&#10;&#9;&#9;&#9;oWorksheet.Cells.SetColumnWidth(4, 12);&#10;&#9;&#9;&#9;&#10;&#9;&#9;&#9;oCell = oWorksheet.Cells.GetCell("F6"); &#10;&#9;&#9;&#9;oCell.Value = "Средняя оценка"; &#10;&#9;&#9;&#9;oCell.Style.Borders.SetStyle("Thin"); &#10;&#9;&#9;&#9;oCell.Style.Borders.SetColor("#000000"); &#10;&#9;&#9;&#9;oCell.Style.IsTextWrapped = true;&#10;&#9;&#9;&#9;oWorksheet.Cells.SetColumnWidth(5, 12);&#10;&#10;/*&#9;&#9;&#9;&#10;&#9;&#9;&#9;oCell = oWorksheet.Cells.GetCell("G6"); &#10;&#9;&#9;&#9;oCell.Value = "Уровень[1]"; &#10;&#9;&#9;&#9;oCell.Style.Borders.SetStyle("Thin"); &#10;&#9;&#9;&#9;oCell.Style.Borders.SetColor("#000000"); &#10;&#9;&#9;&#9;oCell.Style.IsTextWrapped = true;&#10;&#9;&#9;&#9;oWorksheet.Cells.SetColumnWidth(6, 12);&#10;*/&#10;&#9;&#9;&#9;&#10;&#9;&#9;&#9;comp_elem = ArrayOptFirstElem(XQuery("for $elem in pas where $elem/person_id = " + curCollID + " and $elem/assessment_appraise_id = " + curAssID + " return $elem"));&#10;&#10;&#9;&#9;&#9;try&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;DocComp = OpenDoc(UrlFromDocID(comp_elem.id)).TopElem;&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;catch(err)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;DocComp = undefined;&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;arr_aver = '';&#10;&#9;&#9;&#9;name_comp = '';&#10;&#9;&#9;&#9;//самооценка&#10;&#9;&#9;&#9;selfconc = "";&#10;&#9;&#9;&#9;//оц. рук-ля&#10;&#9;&#9;&#9;ass_leader = "";&#10;&#9;&#9;&#9;//оц. коллег&#10;&#9;&#9;&#9;ass_coll = "";&#10;&#9;&#9;&#9;//оц. подчинен-х&#10;&#9;&#9;&#9;ass_subord = "";&#10;&#9;&#9;&#9;str_srr_arr = "";&#10;&#9;&#9;&#9;str_srr_arr_full = "";&#10;&#9;&#9;&#9;if(DocComp != undefined)&#10;&#9;&#9;&#9;{&#10;// тут по ТОП-500&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;for(_comp in DocComp.competences)&#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;// самооценка&#10;&#9;&#9;&#9;&#9;&#9;ms = func_over(curAssID, _comp.competence_id, 'self');&#10;&#9;&#9;&#9;&#9;&#9;// руководитель&#10;&#9;&#9;&#9;&#9;&#9;rat_mang = func_over(curAssID, _comp.competence_id, 'manager');&#10;&#10;&#9;&#9;&#9;&#9;&#9;// коллеги&#10;&#9;&#9;&#9;&#9;&#9;rat_coll = func_over_func(curAssID, _comp.competence_id, 'coll', _comp)&#10;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;// подчиненные&#10;&#9;&#9;&#9;&#9;&#9;rat_sub = func_over(curAssID, _comp.competence_id, 'staff');&#10;&#9;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;str_srr = (Real(ms) + Real(rat_mang) + Real(rat_coll) + Real(rat_sub))/4;&#10;&#9;&#9;&#9;&#9;&#9;str_srr_arr_full += (str_srr_arr_full == "" ? "" : ",") + StrReplace(Perevod(Real(str_srr)), ",", ".");&#9;&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;count_row = ArrayCount(DocComp.competences) + 9;&#10;&#9;&#9;&#9;&#9;_idx = 6;&#10;&#9;&#9;&#9;&#9;for(_comp in DocComp.competences)&#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;pas_self = ArrayOptFirstElem(XQuery("for $elem in pas where $elem/person_id = "+ curCollID +" and $elem/assessment_appraise_id = "+ curAssID +" and $elem/status = 'self' return $elem"));&#10;&#9;&#9;&#9;&#9;&#9;try&#10;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;pa_docself = OpenDoc(UrlFromDocID(pas_self.id)).TopElem;&#10;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;catch(err)&#10;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;continue;&#10;&#9;&#9;&#9;&#9;&#9;}&#10;&#10;&#9;&#9;&#9;&#9;&#9;ms = 0;&#10;&#9;&#9;&#9;&#9;&#9;find_mark_self = ArrayOptFind(pa_docself.competences, "This.competence_id == _comp.competence_id")&#10;&#9;&#9;&#9;&#9;&#9;if (find_mark_self != undefined &amp;&amp; find_mark_self.mark_value != null)&#10;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;ms = find_mark_self.mark_value;&#10;&#9;&#9;&#9;&#9;&#9;}&#10;&#10;&#9;&#9;&#9;&#9;&#9;// здесь начало&#10;&#9;&#9;&#9;&#9;&#9;mmang = 0;&#10;&#9;&#9;&#9;&#9;&#9;nummang = 0;&#10;&#9;&#9;&#9;&#9;&#9;rat_mang = 0;&#10;&#9;&#9;&#9;&#9;&#9;pas_manag = XQuery("for $elem in pas where $elem/person_id = "+ curCollID +" and $elem/assessment_appraise_id = "+ curAssID +" and $elem/status = 'manager' return $elem");&#10;&#9;&#9;&#9;&#9;&#9;for (_pa in pas_manag)&#10;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;try&#10;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;pa_docmanag = OpenDoc(UrlFromDocID(_pa.id)).TopElem;&#10;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;catch(err)&#10;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;continue;&#10;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;fmang = ArrayOptFind(pa_docmanag.competences, "This.competence_id == _comp.competence_id");&#10;&#9;&#9;&#9;&#9;&#9;&#9;if (fmang != undefined)&#10;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;mng_m = fmang.mark_value != null &amp;&amp; fmang.mark_value != "" ? Real(fmang.mark_value) : 0;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if (mng_m != 0)&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;mmang += Real(mng_m);&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;nummang ++;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;rat_mang = nummang != 0 ? Real(StrRealFixed(Real(mmang)/Real(nummang), 2, true)) : 0;&#10;&#10;&#9;&#9;&#9;&#9;&#9;mcoll = 0;&#10;&#9;&#9;&#9;&#9;&#9;numcoll = 0;&#10;&#9;&#9;&#9;&#9;&#9;rat_coll = 0;&#10;&#9;&#9;&#9;&#9;&#9;pas_coll = XQuery("for $elem in pas where $elem/person_id = "+ curCollID +" and $elem/assessment_appraise_id = "+ curAssID +" and $elem/status = 'coll' and $elem/overall != null() return $elem");&#10;&#10;&#9;&#9;&#9;&#9;&#9;rat_ind_coll = 0;&#10;&#9;&#9;&#9;&#9;&#9;full_value = 0;&#10;&#9;&#9;&#9;&#9;&#9;full_cnt = 0;&#10;&#9;&#9;&#9;&#9;&#9;for(_ind in _comp.indicators)&#10;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;m_ind_coll = 0;&#10;&#9;&#9;&#9;&#9;&#9;&#9;num_ind_coll = 0;&#10;&#9;&#9;&#9;&#9;&#9;&#9;for (_pa_s in pas_coll)&#10;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;try&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;DocPas = OpenDoc(UrlFromDocID(_pa_s.id)).TopElem;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;catch(err)&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;continue;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;fcoll = ArrayOptFind(DocPas.competences, "This.competence_id == _comp.competence_id");&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if (fcoll != undefined)&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;fcoll_ind = ArrayOptFind(fcoll.indicators, "This.indicator_id == _ind.indicator_id");&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if (fcoll_ind != undefined &amp;&amp; fcoll_ind.mark_value != null)&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;m_ind_coll += Real(fcoll_ind.mark_value);&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;num_ind_coll ++;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;rat_ind_coll = num_ind_coll != 0 ? Real(StrRealFixed(Real(m_ind_coll)/Real(num_ind_coll), 2, true)) : 0;&#10;&#9;&#9;&#9;&#9;&#9;&#9;full_value += rat_ind_coll;&#10;&#9;&#9;&#9;&#9;&#9;&#9;full_cnt += rat_ind_coll != 0 ? 1 : 0;&#10;&#9;&#9;&#9;&#9;&#9;}&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;if (ArrayOptFirstElem(_comp.indicators) == undefined)&#10;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;for (_pa_s in pas_coll)&#10;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;try&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;DocPas = OpenDoc(UrlFromDocID(_pa_s.id)).TopElem;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;catch(err)&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;continue;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;fcoll = ArrayOptFind(DocPas.competences, "This.competence_id == _comp.competence_id");&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if (fcoll != undefined)&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;col_m = fcoll.mark_value != null &amp;&amp; fcoll.mark_value != "" ? Real(fcoll.mark_value) : 0;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if (col_m != 0)&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;full_value += Real(col_m);&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;full_cnt ++;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;}&#10;&#10;&#9;&#9;&#9;&#9;&#9;rat_coll = full_cnt != 0 ? Real(StrRealFixed(Real(full_value)/Real(full_cnt), 2, true)) : 0;&#10;&#10;&#9;&#9;&#9;&#9;&#9;msub = 0;&#10;&#9;&#9;&#9;&#9;&#9;numsub = 0;&#10;&#9;&#9;&#9;&#9;&#9;rat_sub = 0;&#10;&#9;&#9;&#9;&#9;&#9;pas_sub = XQuery("for $elem in pas where $elem/person_id = "+ curCollID +" and $elem/assessment_appraise_id = "+ curAssID +" and $elem/status = 'staff' return $elem");&#10;&#9;&#9;&#9;&#9;&#9;for (_pa in pas_sub)&#10;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;try&#10;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;DocPa = OpenDoc(UrlFromDocID(_pa.id)).TopElem;&#10;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;catch(err)&#10;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;continue;&#10;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;fsub = ArrayOptFind(DocPa.competences, "This.competence_id == _comp.competence_id");&#10;&#9;&#9;&#9;&#9;&#9;&#9;if (fsub != undefined)&#10;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;fsub_m = fsub.mark_value != null &amp;&amp; fsub.mark_value != '' ? Real(fsub.mark_value) : 0;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if (fsub_m != 0)&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;msub += Real(fsub.mark_value);&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;numsub ++;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;rat_sub = numsub != 0 ? Real(StrRealFixed(Real(msub)/Real(numsub), 2, true)) : 0;&#10;&#10;&#9;&#9;&#9;&#9;&#9;aver = 0;&#10;&#9;&#9;&#9;&#9;&#9;numav = 0;&#10;&#9;&#9;&#9;&#9;&#9;rat = 0;&#10;&#10;&#9;&#9;&#9;&#9;&#9;if(rat_mang != 0 &amp;&amp; rat_mang != "")&#10;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;rat += rat_mang;&#10;&#9;&#9;&#9;&#9;&#9;&#9;numav ++;&#10;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;if(rat_coll != 0 &amp;&amp; rat_coll != "")&#10;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;rat += rat_coll;&#10;&#9;&#9;&#9;&#9;&#9;&#9;numav ++;&#10;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;if(rat_sub != 0 &amp;&amp; rat_sub != "")&#10;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;rat += rat_sub;&#10;&#9;&#9;&#9;&#9;&#9;&#9;numav ++;&#10;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;if (numav != 0)&#10;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;aver = Real(StrRealFixed(Real(rat)/Real(numav), 2, true));&#10;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;else&#10;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;aver = 0;&#10;&#9;&#9;&#9;&#9;&#9;}&#10;&#10;&#9;&#9;&#9;&#9;&#9;arr_comps = new Object(); &#10;&#9;&#9;&#9;&#9;&#9;arr_comps.id = _comp.competence_id;&#10;&#9;&#9;&#9;&#9;&#9;_compFE = _comp.competence_id.OptForeignElem;&#10;&#9;&#9;&#9;&#9;&#9;_comp_name = _compFE != undefined ? _compFE.name.Value : "";&#10;&#9;&#9;&#9;&#9;&#9;arr_comps.name_comp = _comp_name;&#10;&#9;&#9;&#9;&#9;&#9;arr_comps.aver = Real(aver);&#10;&#9;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;arr_aver += (arr_aver == "" ? "" : ",") + StrReplace(Perevod(Real(aver)), ",", ".");&#10;&#10;&#9;&#9;&#9;&#9;&#9;if ( _comp_name != "" )&#10;&#9;&#9;&#9;&#9;&#9;&#9;name_comp += (name_comp == "" ? "" : "|") + tools_web.get_cur_lng_name(_comp_name, lng_id);&#10;&#9;&#9;&#9;&#9;&#9;Excel_html += "&#10;&#9;&#9;&#9;&#9;&#9;&#9;&lt;tr&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;td class=\"style3\" style='font-size:15px' bgcolor='#D4D0C8'&gt;&lt;b&gt;" + tools_web.get_cur_lng_name(_comp_name, lng_id) + "&lt;/b&gt;&lt;/td&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;td class=\"style33\" style='font-size:12px;" + color_font(Real(Perevod(ms))) + "' " + check_color(Real(Perevod(ms))) + "  x:num='" + ms + "'&gt;"+ Perevod(ms) + "&lt;/td&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;td class=\"style33\" style='font-size:12px;" + color_font(Real(Perevod(rat_mang))) + "' " + check_color(Real(Perevod(rat_mang))) + "  x:num='" + rat_mang + "'&gt;"+ Perevod(rat_mang) + "&lt;/td&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;td class=\"style33\" style='font-size:12px;" + color_font(Real(Perevod(rat_coll))) + "' " + check_color(Real(Perevod(rat_coll))) + "  x:num='" + rat_coll + "'&gt;" + Perevod(rat_coll) + "&lt;/td&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;td class=\"style33\" style='font-size:12px;" + color_font(Real(Perevod(rat_sub))) + "' " + check_color(Real(Perevod(rat_sub))) + "  x:num='" + rat_sub + "'&gt;" + Perevod(rat_sub) + "&lt;/td&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;td class=\"style33\" style='font-size:12px;" + color_font(Real(Perevod(aver))) + "' " + check_color(Real(Perevod(aver))) + "  x:num='" + aver + "'&gt;" + Perevod(aver) + "&lt;/td&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;!-- &lt;td class=\"style3\" style='font-size:12px;" + color_font(aver) + "' " + check_color(aver) + "&gt;" + check_type(aver) + "&lt;/td&gt; --&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&lt;/tr&gt;";&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;_idx++;&#10;&#9;&#9;&#9;&#9;&#9;oCell = oWorksheet.Cells.GetCell("A" + _idx); &#10;&#9;&#9;&#9;&#9;&#9;oCell.Value = tools_web.get_cur_lng_name(_comp_name, lng_id);&#10;&#9;&#9;&#9;&#9;&#9;oCell.Style.Borders.SetStyle("Thin"); &#10;&#9;&#9;&#9;&#9;&#9;oCell.Style.Borders.SetColor("#000000"); &#10;&#9;&#9;&#9;&#9;&#9;oCell.Style.FontSize = 12;&#10;&#9;&#9;&#9;&#9;&#9;oCell.Style.IsBold = true;&#10;&#9;&#9;&#9;&#9;&#9;oCell.Style.IsTextWrapped = true;&#10;&#9;&#9;&#9;&#9;&#9;oCell.Style.ForegroundColor = "#D4D0C8";&#10;&#10;&#9;&#9;&#9;&#9;&#9;oCell = oWorksheet.Cells.GetCell("B" + _idx);&#10;&#9;&#9;&#9;&#9;&#9;oCell.Value = Perevod(ms);&#10;&#9;&#9;&#9;&#9;&#9;oCell.Style.Borders.SetStyle("Thin");&#10;&#9;&#9;&#9;&#9;&#9;oCell.Style.Borders.SetColor("#000000");&#10;&#9;&#9;&#9;&#9;&#9;oCell.Style.FontSize = 10;&#10;&#9;&#9;&#9;&#9;&#9;oCell.Style.FontColor = color_font_dll(Real(Perevod(ms)));&#10;&#9;&#9;&#9;&#9;&#9;oCell.Style.ForegroundColor = check_color_dll(Real(Perevod(ms)));&#9;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;oCell.Style.IsTextWrapped = true;&#10;&#9;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;oCell = oWorksheet.Cells.GetCell("C" + _idx);&#10;&#9;&#9;&#9;&#9;&#9;oCell.Value = Perevod(rat_mang);&#10;&#9;&#9;&#9;&#9;&#9;oCell.Style.Borders.SetStyle("Thin");&#10;&#9;&#9;&#9;&#9;&#9;oCell.Style.Borders.SetColor("#000000");&#10;&#9;&#9;&#9;&#9;&#9;oCell.Style.FontSize = 10;&#10;&#9;&#9;&#9;&#9;&#9;oCell.Style.FontColor = color_font_dll(Real(Perevod(rat_mang)));&#10;&#9;&#9;&#9;&#9;&#9;oCell.Style.ForegroundColor = check_color_dll(Real(Perevod(rat_mang)));&#9;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;oCell.Style.IsTextWrapped = true;&#10;&#9;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;oCell = oWorksheet.Cells.GetCell("D" + _idx);&#10;&#9;&#9;&#9;&#9;&#9;oCell.Value = Perevod(rat_coll);&#10;&#9;&#9;&#9;&#9;&#9;oCell.Style.Borders.SetStyle("Thin");&#10;&#9;&#9;&#9;&#9;&#9;oCell.Style.Borders.SetColor("#000000");&#10;&#9;&#9;&#9;&#9;&#9;oCell.Style.FontSize = 10;&#10;&#9;&#9;&#9;&#9;&#9;oCell.Style.FontColor = color_font_dll(Real(Perevod(rat_coll)));&#10;&#9;&#9;&#9;&#9;&#9;oCell.Style.ForegroundColor = check_color_dll(Real(Perevod(rat_coll)));&#9;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;oCell.Style.IsTextWrapped = true;&#10;&#9;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;oCell = oWorksheet.Cells.GetCell("E" + _idx);&#10;&#9;&#9;&#9;&#9;&#9;oCell.Value = Perevod(rat_sub);&#10;&#9;&#9;&#9;&#9;&#9;oCell.Style.Borders.SetStyle("Thin");&#10;&#9;&#9;&#9;&#9;&#9;oCell.Style.Borders.SetColor("#000000");&#10;&#9;&#9;&#9;&#9;&#9;oCell.Style.FontSize = 10;&#10;&#9;&#9;&#9;&#9;&#9;oCell.Style.FontColor = color_font_dll(Real(Perevod(rat_sub)));&#10;&#9;&#9;&#9;&#9;&#9;oCell.Style.ForegroundColor = check_color_dll(Real(Perevod(rat_sub)));&#9;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;oCell.Style.IsTextWrapped = true;&#10;&#9;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;oCell = oWorksheet.Cells.GetCell("F" + _idx);&#10;&#9;&#9;&#9;&#9;&#9;oCell.Value = Perevod(aver);&#10;&#9;&#9;&#9;&#9;&#9;oCell.Style.Borders.SetStyle("Thin");&#10;&#9;&#9;&#9;&#9;&#9;oCell.Style.Borders.SetColor("#000000");&#10;&#9;&#9;&#9;&#9;&#9;oCell.Style.FontSize = 10;&#10;&#9;&#9;&#9;&#9;&#9;oCell.Style.FontColor = color_font_dll(Real(Perevod(aver)));&#10;&#9;&#9;&#9;&#9;&#9;oCell.Style.ForegroundColor = check_color_dll(Real(Perevod(aver)));&#9;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;oCell.Style.IsTextWrapped = true;&#10;/*&#9;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;oCell = oWorksheet.Cells.GetCell("G" + _idx);&#10;&#9;&#9;&#9;&#9;&#9;oCell.Value = check_type(aver);&#10;&#9;&#9;&#9;&#9;&#9;oCell.Style.Borders.SetStyle("Thin");&#10;&#9;&#9;&#9;&#9;&#9;oCell.Style.Borders.SetColor("#000000");&#10;&#9;&#9;&#9;&#9;&#9;oCell.Style.FontSize = 10;&#10;&#9;&#9;&#9;&#9;&#9;oCell.Style.FontColor = color_font_dll(rat_coll);&#10;&#9;&#9;&#9;&#9;&#9;oCell.Style.ForegroundColor = check_color_dll(rat_coll);&#9;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;oCell.Style.IsTextWrapped = true;&#10;*/&#9;&#9;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;selfconc += (selfconc == "" ? "" : ",") + StrReplace(Perevod(Real(ms)), ",", ".");&#10;&#9;&#9;&#9;&#9;&#9;ass_leader += (ass_leader == "" ? "" : ",") + StrReplace(Perevod(Real(rat_mang)), ",", ".");&#10;&#9;&#9;&#9;&#9;&#9;ass_coll += (ass_coll == "" ? "" : ",") + StrReplace(Perevod(Real(rat_coll)), ",", ".");&#10;&#9;&#9;&#9;&#9;&#9;ass_subord += (ass_subord == "" ? "" : ",") + StrReplace(Perevod(Real(rat_sub)), ",", ".");&#10;&#10;&#9;&#9;&#9;&#9;&#9;_cnt_srr_srr = 0;&#10;&#9;&#9;&#9;&#9;&#9;if (Real(ms) != 0)&#10;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;_cnt_srr_srr++;&#10;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;if (Real(rat_mang) != 0)&#10;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;_cnt_srr_srr++;&#10;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;if (Real(rat_coll) != 0)&#10;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;_cnt_srr_srr++;&#10;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;if (Real(rat_sub) != 0)&#10;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;_cnt_srr_srr++;&#10;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;str_srr = _cnt_srr_srr != 0 ? ((Real(ms) + Real(rat_mang) + Real(rat_coll) + Real(rat_sub))/_cnt_srr_srr) : 0;&#10;&#9;&#9;&#9;&#9;&#9;str_srr_arr += (str_srr_arr == "" ? "" : ",") + StrReplace(Perevod(Real(str_srr)), ",", ".");&#10;&#10;&#9;&#9;&#9;&#9;&#9;count_row += ArrayCount(_comp.indicators);&#10;&#9;&#9;&#9;&#9;&#9;array_indicators = new Array();&#10;&#9;&#9;&#9;&#9;&#9;for(_ind in _comp.indicators)&#10;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;mark_ind_self = 0;&#10;&#9;&#9;&#9;&#9;&#9;&#9;find_ind_self = ArrayOptFind(find_mark_self.indicators, "This.indicator_id == _ind.indicator_id");&#10;&#9;&#9;&#9;&#9;&#9;&#9;if (find_ind_self != undefined)&#10;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;mark_ind_self = find_ind_self.mark_value;&#10;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#10;&#9;&#9;&#9;&#9;&#9;&#9;mark_ind_manag = 0;&#10;&#9;&#9;&#9;&#9;&#9;&#9;num_ind_mang = 0;&#10;&#9;&#9;&#9;&#9;&#9;&#9;rat_ind_mang = 0;&#10;&#9;&#9;&#9;&#9;&#9;&#9;for (_pa in pas_manag)&#10;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;try&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;DocPa = OpenDoc(UrlFromDocID(_pa.id)).TopElem;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;catch(err)&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;continue;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;fmang = ArrayOptFind(DocPa.competences, "This.competence_id == _comp.competence_id");&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if (fmang != undefined)&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;f_ind_mang = ArrayOptFind(fmang.indicators, "This.indicator_id == _ind.indicator_id");&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if (f_ind_mang != undefined &amp;&amp; f_ind_mang.mark_value != null)&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;mark_ind_manag += Real(f_ind_mang.mark_value);&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;num_ind_mang ++;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;rat_ind_mang = num_ind_mang != 0 ? Real(StrRealFixed(Real(mark_ind_manag)/Real(num_ind_mang), 2, true)) : "";&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;&#9;//**********************************************************&#10;&#9;&#9;&#9;&#9;&#9;&#9;m_ind_coll = 0;&#10;&#9;&#9;&#9;&#9;&#9;&#9;num_ind_coll = 0;&#10;&#9;&#9;&#9;&#9;&#9;&#9;rat_ind_coll = 0;&#10;&#9;&#9;&#9;&#9;&#9;&#9;for (_pa in pas_coll)&#10;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;try&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;DocPa = OpenDoc(UrlFromDocID(_pa.id)).TopElem;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;catch(err)&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;continue;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;fcoll = ArrayOptFind(DocPa.competences, "This.competence_id == _comp.competence_id");&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if (fcoll != undefined)&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;f_ind_coll = ArrayOptFind(fcoll.indicators, "This.indicator_id == _ind.indicator_id");&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if (f_ind_coll != undefined &amp;&amp; f_ind_coll.mark_value != null)&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;m_ind_coll += Real(f_ind_coll.mark_value);&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;num_ind_coll ++;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;rat_ind_coll = num_ind_coll != 0 ? Real(StrRealFixed(Real(m_ind_coll)/Real(num_ind_coll), 2, true)) : "";&#10;&#10;&#9;&#9;&#9;&#9;&#9;&#9;m_ind_sub = 0;&#10;&#9;&#9;&#9;&#9;&#9;&#9;num_ind_sub = 0;&#10;&#9;&#9;&#9;&#9;&#9;&#9;rat_ind_sub = 0;&#10;&#9;&#9;&#9;&#9;&#9;&#9;for (_pa in pas_sub)&#10;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;try&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;DocPa = OpenDoc(UrlFromDocID(_pa.id)).TopElem;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;catch(err)&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;continue;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;fsub = ArrayOptFind(DocPa.competences, "This.competence_id == _comp.competence_id");&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if (fsub != undefined )&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;f_ind_sub = ArrayOptFind(fsub.indicators, "This.indicator_id == _ind.indicator_id");&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if (f_ind_sub != undefined &amp;&amp; f_ind_sub.mark_value != null)&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;m_ind_sub += Real(f_ind_sub.mark_value);&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;num_ind_sub ++;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;rat_ind_sub = num_ind_sub != 0 ? Real(StrRealFixed(Real(m_ind_sub)/Real(num_ind_sub), 2, true)) : "";&#10;&#9;&#9;&#9;&#9;&#9;&#9;aver_ind = 0;&#10;&#9;&#9;&#9;&#9;&#9;&#9;numav_ind = 0;&#10;&#9;&#9;&#9;&#9;&#9;&#9;rat_ind = 0;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;&#9;if(rat_ind_mang != 0 &amp;&amp; rat_ind_mang != "" &amp;&amp; rat_ind_mang != null)&#10;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;rat_ind += rat_ind_mang;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;numav_ind ++;&#10;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;&#9;if(rat_ind_coll != 0 &amp;&amp; rat_ind_coll != "" &amp;&amp; rat_ind_coll != null)&#10;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;rat_ind += rat_ind_coll;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;numav_ind ++;&#10;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;if(rat_ind_sub != 0 &amp;&amp; rat_ind_sub != "" &amp;&amp; rat_ind_sub != null)&#10;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;rat_ind += rat_ind_sub;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;numav_ind ++;&#10;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;&#9;aver_ind = numav_ind != 0 ? Real(StrRealFixed(Real(rat_ind)/numav_ind, 2, true)) : 0;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;&#9;arr_inds = new Object(); &#10;&#9;&#9;&#9;&#9;&#9;&#9;arr_inds.comp_id = _comp.competence_id;&#10;&#9;&#9;&#9;&#9;&#9;&#9;arr_inds.ind_id = _ind.indicator_id;&#10;&#9;&#9;&#9;&#9;&#9;&#9;arr_inds.aver = aver_ind;&#10;&#9;&#9;&#9;&#9;&#9;&#9;_indFE = _ind.indicator_id.OptForeignElem;&#10;&#9;&#9;&#9;&#9;&#9;&#9;_ind_name = _indFE != undefined ? _indFE.name.Value : "";&#10;&#9;&#9;&#9;&#9;&#9;&#9;arr_inds.name_ind = _ind_name;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;&#9;Excel_html += "&#10;&#9;&#9;&#9;&#9;&#9;&#9;&lt;tr&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;td class=\"style3\" style='font-size:12px'&gt;" + tools_web.get_cur_lng_name(_ind_name, lng_id) + "&lt;/td&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;td class=\"style33\" style='font-size:12px;' x:num='" + mark_ind_self + "'&gt;" + (mark_ind_self != 0 &amp;&amp; mark_ind_self != null ? Perevod(mark_ind_self) : "") + "&lt;/td&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;td class=\"style33\" style='font-size:12px;' x:num='" + rat_ind_mang + "'&gt;" + (rat_ind_mang != 0 &amp;&amp; rat_ind_mang != null ? Perevod(rat_ind_mang) : "") + "&lt;/td&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;td class=\"style33\" style='font-size:12px;' x:num='" + rat_ind_coll + "'&gt;" + Perevod(rat_ind_coll) + "&lt;/td&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;td class=\"style33\" style='font-size:12px;' x:num='" + rat_ind_sub + "'&gt;" + Perevod(rat_ind_sub) + "&lt;/td&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;td class=\"style33\" style='font-size:12px;" + color_font(Real(Perevod(aver_ind))) + "'" + check_color(Real(Perevod(aver_ind))) + " x:num='" + aver_ind + "'&gt;" + Perevod(aver_ind) + "&lt;/td&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;!-- &lt;td class=\"style3\" style='font-size:12px;" + color_font(aver_ind) + "' " + check_color(aver_ind) + "&gt;&lt;i&gt;" + check_type(aver_ind) + "&lt;/i&gt;&lt;/td&gt; --&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&lt;/tr&gt;";&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;&#9;_idx++;&#10;&#9;&#9;&#9;&#9;&#9;&#9;oCell = oWorksheet.Cells.GetCell("A" + _idx);&#10;&#9;&#9;&#9;&#9;&#9;&#9;oCell.Value = tools_web.get_cur_lng_name(_ind_name, lng_id);&#10;&#9;&#9;&#9;&#9;&#9;&#9;oCell.Style.Borders.SetStyle("Thin");&#10;&#9;&#9;&#9;&#9;&#9;&#9;oCell.Style.Borders.SetColor("#000000");&#10;&#9;&#9;&#9;&#9;&#9;&#9;oCell.Style.FontSize = 10;&#10;&#9;&#9;&#9;&#9;&#9;&#9;oCell.Style.IsTextWrapped = true;&#10;&#9;&#9;&#9;&#9;&#9;&#9;//oCell.Style.ForegroundColor = "#C5D9F1";&#10;&#9;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;&#9;oCell = oWorksheet.Cells.GetCell("B" + _idx);&#10;&#9;&#9;&#9;&#9;&#9;&#9;oCell.Value = (mark_ind_self != 0 &amp;&amp; mark_ind_self != null ? Perevod(mark_ind_self) : "");&#10;&#9;&#9;&#9;&#9;&#9;&#9;oCell.Style.Borders.SetStyle("Thin");&#10;&#9;&#9;&#9;&#9;&#9;&#9;oCell.Style.Borders.SetColor("#000000");&#10;&#9;&#9;&#9;&#9;&#9;&#9;oCell.Style.FontSize = 10;&#10;&#9;&#9;&#9;&#9;&#9;&#9;oCell.Style.IsTextWrapped = true;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;&#9;oCell = oWorksheet.Cells.GetCell("C" + _idx);&#10;&#9;&#9;&#9;&#9;&#9;&#9;oCell.Value = (rat_ind_mang != 0 &amp;&amp; rat_ind_mang != null ? Perevod(rat_ind_mang) : "");&#10;&#9;&#9;&#9;&#9;&#9;&#9;oCell.Style.Borders.SetStyle("Thin");&#10;&#9;&#9;&#9;&#9;&#9;&#9;oCell.Style.Borders.SetColor("#000000");&#10;&#9;&#9;&#9;&#9;&#9;&#9;oCell.Style.FontSize = 10;&#10;&#9;&#9;&#9;&#9;&#9;&#9;oCell.Style.IsTextWrapped = true;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;&#9;oCell = oWorksheet.Cells.GetCell("D" + _idx);&#10;&#9;&#9;&#9;&#9;&#9;&#9;oCell.Value = Perevod(rat_ind_coll);&#10;&#9;&#9;&#9;&#9;&#9;&#9;oCell.Style.Borders.SetStyle("Thin");&#10;&#9;&#9;&#9;&#9;&#9;&#9;oCell.Style.Borders.SetColor("#000000");&#10;&#9;&#9;&#9;&#9;&#9;&#9;oCell.Style.FontSize = 10;&#10;&#9;&#9;&#9;&#9;&#9;&#9;oCell.Style.IsTextWrapped = true;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;&#9;oCell = oWorksheet.Cells.GetCell("E" + _idx);&#10;&#9;&#9;&#9;&#9;&#9;&#9;oCell.Value = Perevod(rat_ind_sub);&#10;&#9;&#9;&#9;&#9;&#9;&#9;oCell.Style.Borders.SetStyle("Thin");&#10;&#9;&#9;&#9;&#9;&#9;&#9;oCell.Style.Borders.SetColor("#000000");&#10;&#9;&#9;&#9;&#9;&#9;&#9;oCell.Style.FontSize = 10;&#10;&#9;&#9;&#9;&#9;&#9;&#9;oCell.Style.IsTextWrapped = true;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;&#9;oCell = oWorksheet.Cells.GetCell("F" + _idx);&#10;&#9;&#9;&#9;&#9;&#9;&#9;oCell.Value = Perevod(aver_ind);&#10;&#9;&#9;&#9;&#9;&#9;&#9;oCell.Style.Borders.SetStyle("Thin");&#10;&#9;&#9;&#9;&#9;&#9;&#9;oCell.Style.Borders.SetColor("#000000");&#10;&#9;&#9;&#9;&#9;&#9;&#9;oCell.Style.FontSize = 10;&#10;&#9;&#9;&#9;&#9;&#9;&#9;oCell.Style.FontColor = (aver_ind != null ? color_font_dll(Real(Perevod(aver_ind))) : "");&#10;&#9;&#9;&#9;&#9;&#9;&#9;oCell.Style.ForegroundColor = (aver_ind != null ? check_color_dll(Real(Perevod(aver_ind))) : "");&#9;&#9;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;&#9;oCell.Style.IsTextWrapped = true;&#10;/*&#9;&#9;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;&#9;oCell = oWorksheet.Cells.GetCell("G" + _idx);&#10;&#9;&#9;&#9;&#9;&#9;&#9;oCell.Value = check_type(aver_ind);&#10;&#9;&#9;&#9;&#9;&#9;&#9;oCell.Style.Borders.SetStyle("Thin");&#10;&#9;&#9;&#9;&#9;&#9;&#9;oCell.Style.Borders.SetColor("#000000");&#10;&#9;&#9;&#9;&#9;&#9;&#9;oCell.Style.FontSize = 10;&#10;&#9;&#9;&#9;&#9;&#9;&#9;oCell.Style.FontColor = (aver_ind != null ? color_font_dll(aver_ind) : "");&#10;&#9;&#9;&#9;&#9;&#9;&#9;oCell.Style.ForegroundColor = (aver_ind != null ? check_color_dll(aver_ind) : "");&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;&#9;oCell.Style.IsTextWrapped = true;&#10;*/&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;&#9;array_indicators[ArrayCount(array_indicators)] = arr_inds;&#10;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;arr_comps.indicators = array_indicators;&#10;&#9;&#9;&#9;&#9;&#9;array_competences[ArrayCount(array_competences)] = arr_comps;&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#10;&#9;&#9;Excel_html += "&#9;&#10;&#9;&#9;&#9;&lt;/table&gt;&#10;&#9;&#9;&#9;&lt;p style='font-size:4px;'&gt;&lt;/p&gt;";&#10;&#9;&#9;if (visible_legend)&#10;&#9;&#9;{&#9;&#9;&#10;&#9;&#9;&#9;Excel_html += "&#10;&#9;&#9;&#9;&#9;&lt;sup&gt;1&lt;/sup&gt;Интерпретация результатов производится по следующей шкале:&#10;&#9;&#9;&#9;&#9;&lt;table style=\"width: 30%\" cellspacing=\"0\" cellpadding=\"0\" class=\"style3_tab\"&gt;";&#10;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;str_temp = "";&#10;&#10;&#9;&#9;&#9;cnt_legend = ArrayCount(color_array_legend);&#10;&#9;&#9;&#9;for (_lg = (cnt_legend - 1); _lg &gt;=0; _lg--)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;str_temp += "&#10;&#9;&#9;&#9;&#9;&#9;&lt;tr&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&lt;td width='65%' class=\"style3\"&gt;" + color_array_legend[_lg].title + "&lt;/td&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&lt;td width='25%' align='center' class=\"style3\"&gt; " + color_array_legend[_lg].min + " - " + color_array_legend[_lg].max + " &lt;/td&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&lt;td width='10%' style='background-color: " + color_array_legend[_lg].color + ";'&gt;&amp;nbsp;&lt;/td&gt;&#10;&#9;&#9;&#9;&#9;&#9;&lt;/tr&gt;";&#9;&#9;&#9;&#10;&#9;&#9;&#9;}&#10;&#10;&#9;&#9;&#9;&#9;Excel_html += str_temp + "&#10;&#9;&#9;&#9;&#9;&lt;/table&gt;";&#10;&#9;&#9;}&#10;&#9;&#9;&#10;&#9;&#9;if (visible_legend)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;_idx += 2;&#10;&#9;&#9;&#9;oCell = oWorksheet.Cells.GetCell("A" + _idx); &#10;&#9;&#9;&#9;oCell.Value = "Интерпретация результатов производится по следующей шкале:"; &#10;&#9;&#9;&#9;oCell.Style.FontSize = 10;&#10;&#9;&#9;&#9;_idx++;&#10;&#9;&#9;&#9;for (_lg = (cnt_legend - 1); _lg &gt;=0; _lg--)&#10;&#9;&#9;&#9;{&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;oCell = oWorksheet.Cells.GetCell("A" + _idx); &#10;&#9;&#9;&#9;&#9;oCell.Value = color_array_legend[_lg].title;&#10;&#9;&#9;&#9;&#9;oCell.Style.Borders.SetStyle("Thin"); &#10;&#9;&#9;&#9;&#9;oCell.Style.Borders.SetColor("#000000"); &#10;&#9;&#9;&#9;&#9;oCell.Style.IsTextWrapped = true;&#10;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;oCell = oWorksheet.Cells.GetCell("B" + _idx); &#10;&#9;&#9;&#9;&#9;oCell.Value = (color_array_legend[_lg].min + " - " + color_array_legend[_lg].max) + ""; &#10;&#9;&#9;&#9;&#9;oCell.Style.Borders.SetStyle("Thin"); &#10;&#9;&#9;&#9;&#9;oCell.Style.Borders.SetColor("#000000"); &#10;&#9;&#9;&#9;&#9;oCell.Style.IsTextWrapped = true;&#10;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;oCell = oWorksheet.Cells.GetCell("C" + _idx); &#10;&#9;&#9;&#9;&#9;oCell.Value = ""; &#10;&#9;&#9;&#9;&#9;oCell.Style.Borders.SetStyle("Thin"); &#10;&#9;&#9;&#9;&#9;oCell.Style.Borders.SetColor("#000000"); &#10;&#9;&#9;&#9;&#9;oCell.Style.IsTextWrapped = true;&#10;&#9;&#9;&#9;&#9;oCell.Style.ForegroundColor = color_array_legend[_lg].color;&#10;&#9;&#9;&#9;&#9;_idx++;&#10;&#9;&#9;&#9;}&#10;&#9;&#9;}&#10;&#9;&#9;&#9;&#10;count_row += 8;&#10;&#10;// это график. №1&#10;//отчет для отображения в браузере (String)&#10;Excel_html_gr_1 = "";&#10;// заголовок листа Excel&#10;SHEET_CAPTION = "Заголовок листа";&#10;// флаг отображать ли таблицу данных графика в Excel&#10;SHOW_DATA_TABLE = false;&#10;// флаг отображать ли таблицу данных с веделением оценок с отклонением от порогового значения&#10;SHOW_DATA_TABLE_WITH_LAG = false;&#10;// порогвое значение отклонения оценки&#10;curLagValue = 1;&#10;// данные для построения графика. Элемент массива:&#10;ResultArray = Array();&#10;&#10;// заполним данные для графиков&#10;for (i = 1; i &lt;= 1; i++)&#10;{&#10; &#9;obj = Object();&#10;&#9;_nobj_text = '';&#10; &#9;// id графика&#10; &#9;obj.id = i;&#10;&#9;// заголовок графика&#10;&#9;obj.name = "Оценки по компетенциям(по категориям оценивающих)";&#10;&#9;// график или таблица&#10;&#9;obj.is_chart = true;//( i%3 != 0);&#10;&#9;// категории графика&#10;&#9;obj.categories = name_comp;&#10;&#9;// массив серий графика&#10;&#9;obj.rows = Array();&#10;&#9;name_obj = Array();&#10;&#9;mark_array = Array();&#10;&#9;&#10;&#9;mark_array[0] = selfconc;&#10;&#9;mark_array[1] = ass_leader;&#10;&#9;mark_array[2] = ass_coll;&#10;&#9;mark_array[3] = ass_subord;&#10;&#9;&#10;&#9;name_obj[0] = 'Самооценка';&#10;&#9;name_obj[1] = 'Оценка руководителя';&#10;&#9;name_obj[2] = 'Оценка коллег';&#10;&#9;name_obj[3] = 'Оценка подчиненных';&#10;&#9;for (j = 1; j &lt;= 4; j++)&#10;&#9;{&#10; &#9;&#9;row = Object();&#10;&#9;&#9;// id серии&#10; &#9;&#9;row.obj_id = j;&#10;&#9;&#9;// название серии&#9;&#9;&#9;&#10;&#9;&#9;row.obj_name = name_obj[j-1];&#10; &#9;&#9;// массив значений в серии&#10;&#9;&#9;row.data = Array(mark_array[j-1]);&#10;&#9;&#9;obj.rows[ArrayCount(obj.rows)] = row;&#10;&#9;}&#10;&#9;ResultArray[ArrayCount(ResultArray)] = obj;&#10;}&#10;&#10;&#9;array_colors = Array("#70A840", "#4070C0", "#F8E098", "#98C0E0", "#D0A028", "#A8D090", "#4060A8");&#10;//****&#10;if (str_srr_arr != '' &amp;&amp; str_srr_arr_full != '' &amp;&amp; name_comp != '')&#10;{&#10;&#9;_idx++;&#10;&#10;&#9;_idx += string_page;&#10;&#10;&#9;diff_page_int = ((_idx - 1) / string_page);&#10;&#9;diff_page_real = (Real(_idx - 1) / Real(string_page));&#10;&#9;diff_page = diff_page_int == diff_page_real ? diff_page_int : (diff_page_int + 1);&#9;&#10;&#10;&#9;chart01 = oWorksheet.Charts.AddFloatingChart("Column", 0, diff_page*570, 860, 600);&#10;&#9;chart01.ValueAxis.MinValue = 0;&#10;&#9;//chart01.ValueAxis.MaxValue = 100;&#10;&#9;_idx_color = 0;&#10;&#9;for (j = 1; j &lt;= 4; j++)&#10;&#9;{&#10;&#9;&#9;if (mark_array[j-1]!="")&#10;&#9;&#9;&#9;continue;&#10;&#9;&#9;series01 = chart01.AddSeries("Column", '{"' + StrReplace(mark_array[j-1], ",", '","') + '"}', true);&#10;&#9;&#9;series01.Name = name_obj[j-1];&#10;&#9;&#9;//series01.ForegroundColor = array_colors[_idx_color];&#10;&#9;&#9;series01.DataLabels.ShowValue = true;&#10;&#9;&#9;series01.DataLabels.Position = "Center";&#10;&#9;&#9;_idx_color++;&#10;&#9;}&#10;&#10;&#9;// Добавляем линейный график  &#10;&#9;oSeries01 = chart01.AddSeries("Line", '{"' + StrReplace(str_srr_arr, ",", '","') + '"}', true);&#10;&#9;oSeries01.Area.BackgroundColor = "#DE0006";&#10;&#9;oSeries01.DataLabels.ShowValue = true;&#10;&#9;oSeries01.DataLabels.Position = "Below";&#10;&#9;oSeries01.Border.Color = "#DE0006";&#10;&#9;oSeries01.Border.WeightPx = 5;&#10;&#9;oSeries01.DataLabels.Font.Color = "#DE0006";&#10;&#9;oSeries01.DataLabels.Font.IsBold = true;&#10;&#9;oSeries01.Name = "Средняя оценка";&#10;/*&#10;&#9;// Добавляем линейный график 2&#10;&#9;oSeries011 = chart01.AddSeries("Line", '{"' + StrReplace(str_srr_arr_full, ",", '","') + '"}', true);&#10;&#9;oSeries011.Area.BackgroundColor = "#F8C000";&#10;&#9;oSeries011.DataLabels.ShowValue = true;&#10;&#9;oSeries011.DataLabels.Position = "Below";&#10;&#9;oSeries011.Border.Color = "#F8C000";&#10;&#9;oSeries011.Border.WeightPx = 5;&#10;&#9;oSeries011.DataLabels.Font.Color = "#000000";&#10;&#9;oSeries011.DataLabels.Font.IsBold = true;&#10;&#9;oSeries011.Name = "Фактическая модель ТОП-500 ГО";&#9;&#10;*/&#10;&#10;  chart01.Title.Text = "Оценки по компетенциям(по категориям оценивающих)"; &#10;  chart01.Title.IsBold = true;&#10;  chart01.LegendPosition = "Bottom";&#10;  name_comp = StrReplace(name_comp, ",", ";");&#10;  chart01.CategoryData = "{" + StrReplace(name_comp, "|", ",") + "}";&#10;  chart01.CategoryAxis.TickLabels.RotationAngle = 0;&#10;  &#10;  chart01.PlotArea.Area.ForegroundColor = "#FFFFFF";&#10;  chart01.PlotArea.Area.BackgroundColor = "#FFFFFF";&#10;  &#10;  chart01.ShowCategoryGriglines = true;&#10;}&#10; //*** &#10;&#10;cnt = 18;&#10;Excel_html_Export_Up = "";&#10;&#10;Excel_html_Export = ""; &#10;Name_ser_line_2 = "Средняя оценка"; &#10;i = 0;&#10;_ind=0;&#10;for (_graph in ResultArray)&#10;{&#10;&#9;i++;&#10;&#10;&#9;array_colors = Array("#70A840", "#4070C0", "#F8E098", "#98C0E0", "#D0A028", "#A8D090", "#4060A8");&#10;&#9;if(ArrayCount(mark_array) != 0 &amp;&amp; str_srr_arr != 0 &amp;&amp; str_srr_arr_full != 0 &amp;&amp; name_comp != '')&#10;&#9;{&#10;&#9;&#9;oExcelDoc1 = new ActiveXObject("Websoft.Office.Excel.Document");&#10;&#9;&#9;oExcelDoc1.CreateWorkBook();&#10;&#9;&#9;oWorksheet1 = oExcelDoc1.GetWorksheet(0);&#10;&#9;&#9;chart1 = oWorksheet1.Charts.AddFloatingChart("Column", 0, 0, 860, 620);&#10;&#9;&#9;chart1.ValueAxis.MinValue = 0;&#10;&#9;&#9;//chart1.ValueAxis.MaxValue = 100;&#10;&#9;&#9;_idx_color = 0;&#10;&#9;&#9;for (j = 1; j &lt;= 4; j++)&#10;&#9;&#9;{&#9;&#10;&#9;&#9;&#9;if (mark_array[j-1]!="")&#10;&#9;&#9;&#9;&#9;continue;&#10;&#9;&#9;&#9;series1 = chart1.AddSeries("Column", "{" + mark_array[j-1] + "}", true); &#10;&#9;&#9;&#9;series1.Name = name_obj[j-1];&#10;&#9;&#9;&#9;//series1.ForegroundColor = array_colors[_idx_color];&#10;&#9;&#9;&#9;series1.DataLabels.ShowValue = true;&#10;&#9;&#9;&#9;series1.DataLabels.Position = "Center";&#10;&#9;&#9;&#9;_idx_color++;&#10;&#9;&#9;}&#10;&#9;&#9;&#10;&#9;&#9;// Добавляем линейный график  &#10;&#9;&#9;oSeries = chart1.AddSeries("Line", "{" + str_srr_arr + "}", true);&#10;&#9;&#9;oSeries.Area.BackgroundColor = "#DE0006";&#10;&#9;&#9;oSeries.DataLabels.ShowValue = true;&#10;&#9;&#9;oSeries.DataLabels.Position = "Below";&#10;&#9;&#9;oSeries.Border.Color = "#DE0006";&#10;&#9;&#9;oSeries.Border.WeightPx = 5;&#10;&#9;&#9;oSeries.DataLabels.Font.Color = "#DE0006";&#10;&#9;&#9;oSeries.DataLabels.Font.IsBold = true;&#10;&#9;&#9;oSeries.Name = Name_ser_line_2;&#9;&#10;/*&#9;&#9;&#10;&#9;&#9;// Добавляем линейный график 2 &#10;&#9;&#9;oSeries_22 = chart1.AddSeries("Line", "{" + str_srr_arr_full + "}", true);&#10;&#9;&#9;oSeries_22.Area.BackgroundColor = "#F8C000";&#10;&#9;&#9;oSeries_22.DataLabels.ShowValue = true;&#10;&#9;&#9;oSeries_22.DataLabels.Position = "Below";&#10;&#9;&#9;oSeries_22.Border.Color = "#F8C000";&#10;&#9;&#9;oSeries_22.Border.WeightPx = 5;&#10;&#9;&#9;oSeries_22.DataLabels.Font.Color = "#000000";&#10;&#9;&#9;oSeries_22.DataLabels.Font.IsBold = true;&#10;&#9;&#9;oSeries_22.Name = "Фактическая модель ТОП-500 ГО";&#9;&#10;*/&#9;&#9;&#10;&#10;&#9;  chart1.Title.Text = "Оценки по компетенциям(по категориям оценивающих)"; &#10;&#9;  chart1.Title.IsBold = true;&#10;&#9;  chart1.LegendPosition = "Bottom";&#10;&#9;  chart1.CategoryData = "{" + StrReplace(name_comp, "|", ",") + "}";&#10;&#9;  chart1.CategoryAxis.TickLabels.RotationAngle = 0;&#10;&#9;  &#10;&#9;  chart1.PlotArea.Area.ForegroundColor = "#FFFFFF";&#10;&#9;  chart1.PlotArea.Area.BackgroundColor = "#FFFFFF";&#10;&#9;  &#10;&#9;  chart1.ShowCategoryGriglines = true;&#10;&#9;  str_image = chart1.GetImageInBase64String('png');&#10;&#10;&#9;&#9;Excel_html += "&#10;&#9;&#9;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&#10;&#9;&#9; &lt;div style='text-align: center'&gt;&lt;img src='data:image/png;base64, " + str_image + " '&gt;&lt;/div&gt;&#10;&#9;&#9;";&#9;&#10;&#9;}&#10;} //for (_graph in ResultArray)&#10;&#10;// график №2. График в виде горизонтальных столбцов.&#10;&#10;//отчет для отображения в браузере (String)&#10;Excel_html_gr_1 += "";&#10;// заголовок листа Excel&#10;SHEET_CAPTION = "Заголовок листа";&#10;// флаг отображать ли таблицу данных графика в Excel&#10;SHOW_DATA_TABLE = false;&#10;// флаг отображать ли таблицу данных с веделением оценок с отклонением от порогового значения&#10;SHOW_DATA_TABLE_WITH_LAG = false;&#10;// порогвое значение отклонения оценки&#10;curLagValue = 1;&#10;// данные для построения графика. Элемент массива:&#10;ResultArray = Array();&#10;&#10;// заполним данные для графиков&#10;for (i = 1; i &lt;= 1; i++)&#10;{&#10; &#9;obj = Object();&#10; &#9;// id графика&#10; &#9;obj.id = i;&#10;&#9;// заголовок графика&#10;&#9;obj.name = "Средние значения оценок по компетенциям";&#10;&#9;// график или таблица&#10;&#9;obj.is_chart = true;//( i%3 != 0);&#10;&#9;// категории графика&#10;&#9;obj.categories = name_comp;&#10;&#9;// массив серий графика&#10;&#9;obj.rows = Array();&#10;&#9;for (j = 1; j &lt;= 1; j++)&#10;&#9;{&#10; &#9;&#9;row = Object();&#10;&#9;&#9;// название серии&#9;&#9;&#9;&#10;&#9;&#9;row.obj_name = "Серия " + j; &#10; &#9;&#9;// массив значений в серии&#10;&#9;&#9;row.data = Array(arr_aver);&#10;&#9;&#9;obj.rows[ArrayCount(obj.rows)] = row;&#10;&#9;}&#10;&#9;ResultArray[ArrayCount(ResultArray)] = obj;&#10;}&#10;//**&#10;if (arr_aver != '' &amp;&amp; name_comp != '')&#10;{&#10;&#9;_idx += 2;&#10;&#9;_idx += string_page;&#10;&#10;&#9;diff_page_int = ((_idx - 1) / string_page);&#10;&#9;diff_page_real = (Real(_idx - 1) / Real(string_page));&#10;&#9;diff_page = diff_page_int == diff_page_real ? diff_page_int : (diff_page_int + 1);&#9;&#10;&#9;&#9;&#10;&#9;chart02 = oWorksheet.Charts.AddFloatingChart("Bar", 0, diff_page*590, 860, 600);&#9;&#10;&#9;chart02.ValueAxis.MinValue = 0;&#10;&#9;//chart02.ValueAxis.MaxValue = 100;&#10;&#10;&#9;//series02 = chart02.AddSeries("Bar", "{" + arr_aver + "}", true);&#10;&#9;series02 = chart02.AddSeries("Bar", '{"' + StrReplace(arr_aver, ",", '","') + '"}', true);&#10;&#9;series02.ForegroundColor = "#00A5F7";&#10;&#9;series02.DataLabels.ShowValue = true;&#10;&#9;series02.DataLabels.Position = "center";&#10;&#10;&#9;chart02.Title.Text = "Средние значения оценок по компетенциям"; &#10;&#9;chart02.Title.IsBold = true;&#10;&#9;chart02.CategoryData = "{" + StrReplace(StrReplace(name_comp, ",", " "), "|", ",") + "}";&#10;&#9;chart02.ShowLegend = false;&#10;&#10;&#9;chart02.PlotArea.Area.ForegroundColor = "#FFFFFF";&#10;&#9;chart02.PlotArea.Area.BackgroundColor = "#FFFFFF";&#10;&#10;&#9;chart02.ShowCategoryGriglines = true;&#10;&#10;&#9;for (_graph in ResultArray)&#10;&#9;{&#10;&#9;&#9;i++;&#10;&#10;&#9;&#9;oExcelDoc2 = new ActiveXObject("Websoft.Office.Excel.Document");&#10;&#9;&#9;oExcelDoc2.CreateWorkBook();&#10;&#9;&#9;oWorksheet2 = oExcelDoc2.GetWorksheet(0);&#10;&#9;&#9;chart2 = oWorksheet2.Charts.AddFloatingChart("Bar", 0, 0, 860, 620);&#10;&#9;&#9;chart2.ValueAxis.MinValue = 0;&#10;&#9;&#9;//chart2.ValueAxis.MaxValue = 100;&#10;&#10;&#9;&#9;series2 = chart2.AddSeries("Bar", "{" + arr_aver + "}", true); &#10;&#9;&#9;series2.ForegroundColor = "#00A5F7";&#10;&#9;&#9;series2.DataLabels.ShowValue = true;&#10;&#9;&#9;series2.DataLabels.Position = "center";&#10;&#10;&#9;&#9;chart2.Title.Text = "Средние значения оценок по компетенциям"; &#10;&#9;&#9;chart2.Title.IsBold = true;&#10;&#9;&#9;chart2.CategoryData = "{" + StrReplace(StrReplace(name_comp, ",", " "), "|", ",") + "}";&#10;&#9;&#9;chart2.ShowLegend = false;&#10;&#10;&#9;&#9;chart2.PlotArea.Area.ForegroundColor = "#FFFFFF";&#10;&#9;&#9;chart2.PlotArea.Area.BackgroundColor = "#FFFFFF";&#10;&#10;&#9;&#9;chart2.ShowCategoryGriglines = true;&#10;&#9;&#9;str_image = chart2.GetImageInBase64String('png');&#10;&#10;&#9;Excel_html += "&#10;&#9;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&#10;&#9; &lt;div style='text-align: center'&gt;&lt;img src='data:image/png;base64, " + str_image + " '&gt;&lt;/div&gt;&#10;&#9;";&#10;&#9;//****&#10;&#9;} // for (_graph in ResultArray)&#10;}&#10;&#10;array_competences_max = sort_array(array_competences, "-");&#10;array_competences_min = sort_array(array_competences, "+");&#10;&#10;Excel_html_up_table = "&#10;&lt;table cellspacing=\"0\" cellpadding=\"0\" style='' border='0'&gt;&#10;&#9;&lt;tr&gt;&#10;&#9;&#9;&lt;td height=17 colspan='3' class=\"style3\" align='center'&gt;&lt;strong&gt;Сильные стороны&lt;/strong&gt;&lt;/td&gt;&#10;&#9;&#9;&lt;td height=17 colspan='4' class=\"style3\" align='center'&gt;&lt;strong&gt;Зоны развития&lt;/strong&gt;&lt;/td&gt;&#10;&#9;&#9;&lt;td&gt;&lt;/td&gt;&#10;&#9;&lt;/tr&gt;&#10;&#9;&lt;tr&gt;&#10;&#9;&#9;&lt;td height=17 colspan='3' class=\"style3\" align='center'&gt;&lt;i&gt;1-2 компетенции, получившие самую высокую оценку:&lt;/i&gt;&lt;/td&gt;&#10;&#9;&#9;&lt;td height=17 colspan='4' class=\"style3\" align='center'&gt;&lt;i&gt;1-2 компетенции, получившие самую низкую оценку:&lt;/i&gt;&lt;/td&gt;&#10;&#9;&#9;&lt;td&gt;&lt;/td&gt;&#10;&#9;&lt;/tr&gt;&#9;&#10;&#9;"; &#10;&#10;&#9;&#9;&#9;_idx += string_page;&#10;&#9;&#9;&#9;//_idx++;&#10;&#9;&#9;&#9;diff_page_int = ((_idx - 1) / string_page);&#10;&#9;&#9;&#9;diff_page_real = (Real(_idx - 1) / Real(string_page));&#10;&#9;&#9;&#9;diff_page = diff_page_int == diff_page_real ? diff_page_int : (diff_page_int + 1);&#9;&#10;&#9;&#9;&#9;&#10;&#9;&#9;&#9;_idx = diff_page * string_page + 10;&#10;&#10;&#9;&#9;&#9;oCell = oWorksheet.Cells.GetCell("A" + _idx); &#10;&#9;&#9;&#9;oWorksheet.Cells.Merge(_idx - 1, 0, 1, 2);&#10;&#9;&#9;&#9;oCell.Value = "Сильные стороны"; &#10;&#9;&#9;&#9;oCell.Style.Borders.SetStyle("Thin"); &#10;&#9;&#9;&#9;oCell.Style.Borders.SetColor("#000000"); &#10;&#9;&#9;&#9;oCell.Style.IsTextWrapped = true;&#10;&#9;&#9;&#9;oCell.Style.IsBold = true;&#10;&#9;&#9;&#9;oCell.Style.HorizontalAlignment = "Center";&#10;&#9;&#9;&#9;&#10;&#9;&#9;&#9;oCell = oWorksheet.Cells.GetCell("C" + _idx); &#10;&#9;&#9;&#9;oWorksheet.Cells.Merge(_idx - 1, 2, 1, 5);&#10;&#9;&#9;&#9;oCell.Value = "Зоны развития"; &#10;&#9;&#9;&#9;oCell.Style.Borders.SetStyle("Thin"); &#10;&#9;&#9;&#9;oCell.Style.Borders.SetColor("#000000"); &#10;&#9;&#9;&#9;oCell.Style.IsTextWrapped = true;&#10;&#9;&#9;&#9;oCell.Style.IsBold = true;&#10;&#9;&#9;&#9;oCell.Style.HorizontalAlignment = "Center";&#10;&#9;&#9;&#9;_idx++;&#10;&#9;&#9;&#9;&#10;&#9;&#9;&#9;oCell = oWorksheet.Cells.GetCell("A" + _idx); &#10;&#9;&#9;&#9;oWorksheet.Cells.Merge(_idx - 1, 0, 1, 2);&#10;&#9;&#9;&#9;oCell.Value = "1-2 компетенции, получившие самую высокую оценку:"; &#10;&#9;&#9;&#9;oCell.Style.Borders.SetStyle("Thin"); &#10;&#9;&#9;&#9;oCell.Style.Borders.SetColor("#000000"); &#10;&#9;&#9;&#9;oCell.Style.IsTextWrapped = true;&#10;&#9;&#9;&#9;oCell.Style.IsItalic = true;&#10;&#9;&#9;&#9;oCell.Style.HorizontalAlignment = "Center";&#10;&#9;&#9;&#9;&#10;&#9;&#9;&#9;oCell = oWorksheet.Cells.GetCell("C" + _idx); &#10;&#9;&#9;&#9;oWorksheet.Cells.Merge(_idx - 1, 2, 1, 5);&#10;&#9;&#9;&#9;oCell.Value = "1-2 компетенции, получившие самую низкую оценку:"; &#10;&#9;&#9;&#9;oCell.Style.Borders.SetStyle("Thin"); &#10;&#9;&#9;&#9;oCell.Style.Borders.SetColor("#000000"); &#10;&#9;&#9;&#9;oCell.Style.IsTextWrapped = true;&#10;&#9;&#9;&#9;oCell.Style.IsItalic = true;&#10;&#9;&#9;&#9;oCell.Style.HorizontalAlignment = "Center";&#10;&#9;&#9;&#9;_idx++;&#10;for (i = 0; i &lt;= 1; i++)&#10;{&#10;&#9;&#9;array_indics_max = new Array();&#10;&#9;&#9;array_indics_min = new Array();&#10;&#9;if (ArrayCount(array_competences_max) != 0 &amp;&amp; ArrayCount(array_competences_min) != 0 )&#10;&#9;{&#10;&#9;&#9;Excel_html_up_table += "&#10;&#9;&#9;&#9;&lt;tr&gt;&#10;&#9;&#9;&#9;&#9;&lt;td class=\"style3\" colspan='3' style='padding-left: 5px; white-space: normal;'&gt;&lt;strong&gt;" + array_competences_max[i].name_comp + "&lt;/strong&gt;&lt;/td&gt;&#10;&#9;&#9;&#9;&#9;&lt;td class=\"style3\" colspan='4' style='padding-left: 5px; white-space: normal;'&gt;&lt;strong&gt;" + array_competences_min[i].name_comp + "&lt;/strong&gt;&lt;/td&gt;&#10;&#9;&#9;&#9;&#9;&lt;td&gt;&lt;/td&gt;&#10;&#9;&#9;&#9;&lt;/tr&gt;";&#10;&#9;&#9;&#9;&#9;oCell = oWorksheet.Cells.GetCell("A" + _idx);&#10;&#9;&#9;&#9;&#9;oCell.Style.IsTextWrapped = true;&#10;&#9;&#9;&#9;&#9;oCell = oWorksheet.Cells.GetCell("B" + _idx);&#10;&#9;&#9;&#9;&#9;oCell.Style.IsTextWrapped = true;&#10;&#10;&#9;&#9;&#9;&#9;oCell = oWorksheet.Cells.GetCell("A" + _idx); &#10;&#9;&#9;&#9;&#9;oWorksheet.Cells.Merge(_idx - 1, 0, 1, 2);&#10;&#9;&#9;&#9;&#9;oCell.Value = array_competences_max[i].name_comp; &#10;&#9;&#9;&#9;&#9;oCell.Style.Borders.SetStyle("Thin"); &#10;&#9;&#9;&#9;&#9;oCell.Style.Borders.SetColor("#000000"); &#10;&#9;&#9;&#9;&#9;oCell.Style.IsTextWrapped = true;&#10;&#9;&#9;&#9;&#9;oCell.Style.IsBold = true;&#10;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;oCell = oWorksheet.Cells.GetCell("C" + _idx); &#10;&#9;&#9;&#9;&#9;oWorksheet.Cells.Merge(_idx - 1, 2, 1, 5);&#10;&#9;&#9;&#9;&#9;oCell.Value = array_competences_min[i].name_comp; &#10;&#9;&#9;&#9;&#9;oCell.Style.Borders.SetStyle("Thin"); &#10;&#9;&#9;&#9;&#9;oCell.Style.Borders.SetColor("#000000"); &#10;&#9;&#9;&#9;&#9;oCell.Style.IsTextWrapped = true;&#10;&#9;&#9;&#9;&#9;oCell.Style.IsBold = true;&#10;&#9;&#9;&#9;&#9;_idx++;&#10;&#9;&#9;&#10;&#9;&#9;array_indics_max = sort_array(array_competences_max[i].indicators, "-");&#10;&#9;&#9;array_indics_min = sort_array(array_competences_min[i].indicators, "+");&#10;&#9;}&#10;&#10;&#9;for (k = 0; k &lt;= 1; k++)&#10;&#9;{&#10;&#9;&#9;if (ArrayCount(array_indics_max)&gt;k &amp;&amp; ArrayCount(array_indics_min) &gt;k)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;Excel_html_up_table += "&#10;&#9;&#9;&#9;&#9;&lt;tr&gt;&#10;&#9;&#9;&#9;&#9;&#9;&lt;td class=\"style3\" colspan='3' style='padding-left: 5px; white-space: normal; vertical-align:top;'&gt;&lt;i&gt;" + array_indics_max[k].GetOptProperty("name_ind","") + "&lt;/i&gt;&lt;/td&gt;&#10;&#9;&#9;&#9;&#9;&#9;&lt;td class=\"style3\" colspan='4' style='padding-left: 5px; white-space: normal; vertical-align:top;'&gt;&lt;i&gt;" + array_indics_min[k].GetOptProperty("name_ind","") + "&lt;/i&gt;&lt;/td&gt;&#10;&#9;&#9;&#9;&#9;&#9;&lt;td style='border:none'&gt;#999#&lt;/td&gt;&#10;&#9;&#9;&#9;&#9;&lt;/tr&gt;";&#10;&#10;&#9;&#9;&#9;oCell = oWorksheet.Cells.GetCell("A" + _idx);&#10;&#9;&#9;&#9;oWorksheet.Cells.SetRowHeight((_idx - 1), 45);&#10;&#9;&#9;&#9;oWorksheet.Cells.Merge(_idx - 1, 0, 1, 2);&#10;&#9;&#9;&#9;oCell.Value = array_indics_max[k].name_ind; &#10;&#9;&#9;&#9;oCell.Style.Borders.SetStyle("Thin"); &#10;&#9;&#9;&#9;oCell.Style.Borders.SetColor("#000000"); &#10;&#9;&#9;&#9;oCell.Style.IsTextWrapped = true;&#10;&#9;&#9;&#9;oCell.Style.IsItalic = true;&#10;&#9;&#9;&#10;&#9;&#9;&#9;oCell = oWorksheet.Cells.GetCell("C" + _idx);&#10;&#9;&#9;&#9;oWorksheet.Cells.Merge(_idx - 1, 2, 1, 5);&#10;&#9;&#9;&#9;oCell.Value = array_indics_min[k].name_ind; &#10;&#9;&#9;&#9;oCell.Style.Borders.SetStyle("Thin"); &#10;&#9;&#9;&#9;oCell.Style.Borders.SetColor("#000000"); &#10;&#9;&#9;&#9;oCell.Style.IsTextWrapped = true;&#10;&#9;&#9;&#9;oCell.Style.IsItalic = true;&#10;&#9;&#9;&#9;&#10;&#9;&#9;&#9;oCell = oWorksheet.Cells.GetCell("D" + _idx);&#9;&#9;&#9;&#10;&#9;&#9;&#9;oCell.Value = "&amp;nbsp;"; &#10;&#9;&#9;&#9;oCell.Style.IsTextWrapped = true;&#9;&#9;&#9;&#10;&#9;&#9;&#9;_idx++;&#10;&#9;&#9;}&#10;&#9;}&#10;}&#10;_idx++;&#10;Excel_html_up_table += "&#10;&lt;/table&gt;&#10;&lt;p&gt;&lt;strong&gt;Комментарии к оценке:&lt;/strong&gt;&lt;/p&gt;";&#10;&#10;&#9;oCell = oWorksheet.Cells.GetCell("A" + _idx); &#10;&#9;oCell.Value = "Комментарии к оценке:";&#10;&#9;oCell.Style.FontSize = 10;&#10;&#9;oCell.Style.IsBold = true;&#10;&#9;_idx++;&#10;&#10;&#9;oCell = oWorksheet.Cells.GetCell("A" + _idx);&#10;&#9;oWorksheet.Cells.Merge(_idx - 1, 0, 1, 3);&#10;&#9;oCell.Value = "Компетенция";&#10;&#9;oCell.Style.Borders.SetStyle("Thin");&#10;&#9;oCell.Style.Borders.SetColor("#000000");&#10;&#9;oCell.Style.IsTextWrapped = true;&#10;&#9;oCell.Style.IsBold = true;&#10;&#10;&#9;oCell = oWorksheet.Cells.GetCell("D" + _idx);&#10;&#9;oCell.Value = "Роль";&#10;&#9;oCell.Style.Borders.SetStyle("Thin");&#10;&#9;oCell.Style.Borders.SetColor("#000000");&#10;&#9;oCell.Style.IsTextWrapped = true;&#10;&#9;oCell.Style.IsBold = true;&#10;&#9;&#10;&#9;oCell = oWorksheet.Cells.GetCell("E" + _idx); &#10;&#9;oWorksheet.Cells.Merge(_idx - 1, 4, 1, 3);&#10;&#9;oCell.Value = "Комментарии"; &#10;&#9;oCell.Style.Borders.SetStyle("Thin"); &#10;&#9;oCell.Style.Borders.SetColor("#000000"); &#10;&#9;oCell.Style.IsTextWrapped = true;&#10;&#9;oCell.Style.IsBold = true;&#10;&#9;_idx++;&#10;&#10;// это массив анкет&#10;ancetsDoc = undefined;&#10;comp_elem = XQuery("for $elem in pas where $elem/person_id = " + curCollID + " and $elem/assessment_appraise_id = " + curAssID + " return $elem");&#10;ancets_elem = ArrayOptFirstElem(comp_elem);&#10;if (ancets_elem != undefined)&#10;{&#10;&#9;try&#10;&#9;{&#10;&#9;&#9;ancetsDoc = OpenDoc(UrlFromDocID(ancets_elem.id)).TopElem;&#10;&#9;}&#10;&#9;catch(err) &#10;&#9;{&#10;&#9;&#9;ancetsDoc = undefined;&#10;&#9;}&#10;}&#10;array_status = Array("manager", "coll", "staff");&#10;&#10;if (ancetsDoc != undefined)&#10;{&#10;&#9;Excel_html_up_table += "&#10;&#9;&lt;table style=\"width: 100%\" cellspacing=\"0\" cellpadding=\"0\" border='0'&gt;&#10;&#9;&#9;&lt;tr&gt;&#10;&#9;&#9;&#9;&lt;td height=17 class=\"style3\" style='padding-left: 5px'&gt;&lt;strong&gt;Компетенция&lt;/strong&gt;&lt;/td&gt;&#10;&#9;&#9;&#9;&lt;td height=17 colspan='2' class=\"style3\" width='10%' style='padding-left: 5px'&gt;&lt;strong&gt;Роль&lt;/strong&gt;&lt;/td&gt;&#10;&#9;&#9;&#9;&lt;td height=17 colspan='2' class=\"style3\" style='padding-left: 5px'&gt;&lt;strong&gt;Комментарии&lt;/strong&gt;&lt;/td&gt;&#10;&#9;&#9;&#9;&lt;td&gt;&lt;/td&gt;&#10;&#9;&#9;&lt;/tr&gt;";&#10;&#9;for ( _cmps in ancetsDoc.competences)&#10;&#9;{&#10;&#9;&#9;scht = 0;&#10;&#9;&#9;for (_st in array_status)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;new_pas = ArraySelect(comp_elem, "This.status == _st");&#10;&#9;&#9;&#9;switch (_st) &#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;case "manager": &#10;&#9;&#9;&#9;&#9;&#9;st_val = "Руководитель"; &#10;&#9;&#9;&#9;&#9;&#9;break; &#10;&#9;&#9;&#9;&#9;case "coll": &#10;&#9;&#9;&#9;&#9;&#9;st_val = "Коллега"; &#10;&#9;&#9;&#9;&#9;&#9;break; &#10;&#9;&#9;&#9;&#9;case "staff": &#10;&#9;&#9;&#9;&#9;&#9;st_val = "Подчиненный"; &#10;&#9;&#9;&#9;&#9;&#9;break; &#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;for (_new in new_pas)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;try&#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;newDoc = OpenDoc(UrlFromDocID(_new.id)).TopElem;&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;catch(err)&#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;continue;&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;find_comps = ArrayOptFind(newDoc.competences, "This.competence_id == _cmps.competence_id");&#10;&#9;&#9;&#9;&#9;commentariy = "";&#10;&#9;&#9;&#9;&#9;if (find_comps != undefined)&#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;commentariy = find_comps.comment;&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;if (commentariy != "" &amp;&amp; commentariy != null)&#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;_cmpsFE = _cmps.competence_id.OptForeignElem;&#10;&#9;&#9;&#9;&#9;&#9;_cmps_name = _cmpsFE != undefined ? _cmpsFE.name.Value : "";&#10;&#9;&#9;&#9;&#9;&#9;Excel_html_up_table += "&#10;&#9;&#9;&#9;&#9;&#9;&#9;&lt;tr&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;td class=\"style3\" style='vertical-align:top;'&gt;" + ( scht == 0 ? _cmps_name : "&amp;nbsp;") + "&lt;/td&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;td class=\"style3\" colspan='2' style='vertical-align:top;'&gt;" + st_val + "&lt;/td&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;td class=\"style3\" colspan='2' style='vertical-align:top;'&gt;" + commentariy + "&lt;/td&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;td style='border:none'&gt;#999#&lt;/td&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&lt;/tr&gt;";&#10;&#10;&#9;&#9;&#9;&#9;&#9;oCell = oWorksheet.Cells.GetCell("A" + _idx); &#10;&#9;&#9;&#9;&#9;&#9;oWorksheet.Cells.Merge(_idx - 1, 0, 1, 3);&#10;&#9;&#9;&#9;&#9;&#9;oWorksheet.Cells.SetRowHeight((_idx - 1), 45);&#10;&#9;&#9;&#9;&#9;&#9;oCell.Value = ( scht == 0 ? _cmps_name : "");&#10;&#9;&#9;&#9;&#9;&#9;oCell.Style.Borders.SetStyle("Thin"); &#10;&#9;&#9;&#9;&#9;&#9;oCell.Style.Borders.SetColor("#000000"); &#10;&#9;&#9;&#9;&#9;&#9;oCell.Style.IsTextWrapped = true;&#10;&#9;&#9;&#9;&#9;&#9;oCell.Style.IsItalic = true;&#10;&#9;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;oCell = oWorksheet.Cells.GetCell("D" + _idx); &#10;&#9;&#9;&#9;&#9;&#9;oWorksheet.Cells.Merge(_idx - 1, 2, 1, 1);&#10;&#9;&#9;&#9;&#9;&#9;oCell.Value = st_val; &#10;&#9;&#9;&#9;&#9;&#9;oCell.Style.Borders.SetStyle("Thin"); &#10;&#9;&#9;&#9;&#9;&#9;oCell.Style.Borders.SetColor("#000000"); &#10;&#9;&#9;&#9;&#9;&#9;oCell.Style.IsTextWrapped = true;&#10;&#9;&#9;&#9;&#9;&#9;oCell.Style.IsItalic = true;&#10;&#9;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;oCell = oWorksheet.Cells.GetCell("E" + _idx); &#10;&#9;&#9;&#9;&#9;&#9;oWorksheet.Cells.Merge(_idx - 1, 4, 1, 3);&#10;&#9;&#9;&#9;&#9;&#9;oCell.Value = commentariy; &#10;&#9;&#9;&#9;&#9;&#9;oCell.Style.Borders.SetStyle("Thin"); &#10;&#9;&#9;&#9;&#9;&#9;oCell.Style.Borders.SetColor("#000000"); &#10;&#9;&#9;&#9;&#9;&#9;oCell.Style.IsTextWrapped = true;&#10;&#9;&#9;&#9;&#9;&#9;oCell.Style.IsItalic = true;&#10;&#9;&#9;&#9;&#9;&#9;_idx++;&#10;&#10;&#9;&#9;&#9;&#9;&#9;scht++;&#9;&#10;&#9;&#9;&#9;&#9;}&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;}&#10;&#9;&#9;}&#10;&#9;}&#10;&#9;Excel_html_up_table +="&#10;&#9;&lt;/table&gt;";&#10;&#10;&#9;array_status2 = Array("manager", "coll", "staff", "self");&#10;&#10;&#9;Excel_html_up_table += "&#10;&#9;&lt;p&gt;&lt;strong&gt;&#10;&#9;Итоговый комментарий к форме:&#10;&#9;&lt;/strong&gt;&lt;/p&gt;&#10;&#9;&lt;table style=\"width: 100%\" class=\"style3_tab\" cellspacing=\"0\" cellpadding=\"0\"&gt;&#10;&#9;&#9;&lt;tr height=17&gt;&#10;&#9;&#9;&#9;&lt;td class=\"style3\" align='center'&gt;&lt;strong&gt;Роль&lt;/strong&gt;&lt;/td&gt;&#10;&#9;&#9;&#9;&lt;td class=\"style3\" colspan='4' align='center'&gt;&lt;strong&gt;Комментарий&lt;/strong&gt;&lt;/td&gt;&#10;&#9;&#9;&lt;/tr&gt;";&#10;&#9;&#9;&#10;&#9;oCell = oWorksheet.Cells.GetCell("A" + _idx); &#10;&#9;oCell.Value = "";&#10;&#9;oCell.Style.FontSize = 10;&#10;&#9;oCell.Style.IsBold = true;&#10;&#9;_idx++;&#10;&#10;&#9;oCell = oWorksheet.Cells.GetCell("A" + _idx); &#10;&#9;oCell.Value = "Итоговый комментарий к форме: ";&#10;&#9;oCell.Style.FontSize = 10;&#10;&#9;oCell.Style.IsBold = true;&#10;&#9;_idx++;&#10;&#10;&#9;oCell = oWorksheet.Cells.GetCell("A" + _idx);&#10;&#9;oWorksheet.Cells.Merge(_idx - 1, 0, 1, 2);&#10;&#9;oCell.Value = "Роль";&#10;&#9;oCell.Style.Borders.SetStyle("Thin");&#10;&#9;oCell.Style.Borders.SetColor("#000000");&#10;&#9;oCell.Style.IsTextWrapped = true;&#10;&#9;oCell.Style.IsBold = true;&#10;&#10;&#9;oCell = oWorksheet.Cells.GetCell("C" + _idx);&#10;&#9;oWorksheet.Cells.Merge(_idx - 1, 2, 1, 5);&#10;&#9;oCell.Value = "Комментарий";&#10;&#9;oCell.Style.Borders.SetStyle("Thin");&#10;&#9;oCell.Style.Borders.SetColor("#000000");&#10;&#9;oCell.Style.IsTextWrapped = true;&#10;&#9;oCell.Style.IsBold = true;&#10;&#9;_idx++;&#10;&#9;&#9;&#10;&#9;_comments = XQuery("for $elem in pas where $elem/person_id = " + curCollID + " and $elem/assessment_appraise_id = " + curAssID + " return $elem");&#10;&#10;&#9;for (_comm in _comments)&#10;&#9;{&#10;&#9;&#9;try&#10;&#9;&#9;&#9;CollDoc = OpenDoc(UrlFromDocID(_comm.id)).TopElem;&#10;&#9;&#9;catch(err)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;continue;&#10;&#9;&#9;}&#10;&#10;&#9;&#9;st_val = '';&#10;&#9;&#9;switch (CollDoc.status) &#10;&#9;&#9;{&#10;&#9;&#9;&#9;case "manager": &#10;&#9;&#9;&#9;&#9;st_val = "Руководитель"; &#10;&#9;&#9;&#9;&#9;break; &#10;&#9;&#9;&#9;case "coll": &#10;&#9;&#9;&#9;&#9;st_val = "Коллега"; &#10;&#9;&#9;&#9;&#9;break; &#10;&#9;&#9;&#9;case "staff": &#10;&#9;&#9;&#9;&#9;st_val = "Подчиненный"; &#10;&#9;&#9;&#9;&#9;break;&#10;&#9;&#9;&#9;case "self": &#10;&#9;&#9;&#9;&#9;st_val = "Самооценка"; &#10;&#9;&#9;&#9;&#9;break;&#10;&#9;&#9;}&#10;&#9;&#9;&#10;&#9;&#9;Excel_html_up_table += "&#10;&#9;&#9;&lt;tr height=17&gt;&#10;&#9;&#9;&#9;&lt;td class=\"style3\" style='padding-left: 5px'&gt;" + st_val + "&lt;/td&gt;&#10;&#9;&#9;&#9;&lt;td class=\"style3\" colspan='4' style='padding-left: 5px'&gt;" + CollDoc.comment + "&lt;/td&gt;&#10;&#9;&#9;&lt;/tr&gt;";&#10;&#10;&#9;&#9;oCell = oWorksheet.Cells.GetCell("A" + _idx); &#10;&#9;&#9;oWorksheet.Cells.Merge(_idx - 1, 0, 1, 2);&#10;&#9;&#9;oWorksheet.Cells.SetRowHeight((_idx - 1), 30);&#10;&#9;&#9;oCell.Value = st_val;&#10;&#9;&#9;oCell.Style.Borders.SetStyle("Thin"); &#10;&#9;&#9;oCell.Style.Borders.SetColor("#000000"); &#10;&#9;&#9;oCell.Style.IsTextWrapped = true;&#10;&#9;&#9;oCell.Style.IsItalic = true;&#10;&#9;&#9;&#10;&#9;&#9;oCell = oWorksheet.Cells.GetCell("C" + _idx); &#10;&#9;&#9;oWorksheet.Cells.Merge(_idx - 1, 2, 1, 5);&#10;&#9;&#9;oCell.Value = CollDoc.comment; &#10;&#9;&#9;oCell.Style.Borders.SetStyle("Thin"); &#10;&#9;&#9;oCell.Style.Borders.SetColor("#000000"); &#10;&#9;&#9;oCell.Style.IsTextWrapped = true;&#10;&#9;&#9;oCell.Style.IsItalic = true&#10;&#9;&#9;_idx++;&#10;&#9;}&#10;&#9;Excel_html_up_table += "&#10;&#9;&lt;/table&gt;";&#10;}&#10;&#10;Excel_html_Export += "&#10;&lt;![if supportMisalignedColumns]&gt;&#10;&lt;tr height=0 style='display:none'&gt;&#10;&#9;&lt;td width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;&#9;&lt;td width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;&#9;&lt;td width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;&#9;&lt;td width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;&#9;&lt;td width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;&#9;&lt;td width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;&#9;&lt;td width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;&lt;/tr&gt;&#10;&lt;![endif]&gt;&#10;&lt;/table&gt;";&#10;&#10;str_table_ps = "&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&#10;";&#9;&#9;&#9;&#10;&#10;Excel_html_Export = Excel_html_Export_Up + Excel_html + Excel_html_Export + Excel_html_up_table;&#10;&#9;tools_web.remove_user_data("excel_html_" + curUserID);&#10;&#9;tools_web.set_user_data( "excel_html_" + curUserID , { 'html': StrReplace(Excel_html_Export, "#999#", str_table_ps)  }, 86000 ); &#10;&#9;Response.Write(Excel_html + Excel_html_gr_1 + StrReplace(Excel_html_up_table, "#999#" , "")); &#10;&#10;&#9;oExcelDoc.SaveAs(temp_folder + "\\" + file_name);&#10;&#9; result = oExcelDoc.LoadHtmlString(Excel_html, "");&#10;&#9;//alert("result = " + result);&#10;&#9;if(result == 0)&#10;&#9;{&#10;&#9;&#9;//alert("Ошибка: " + oExcelDoc.GetError());&#10;&#9;}&#9;&#10;&#9;&#10;} // if ( isFilter )&#10;%&gt;</code_text>
			</exec_code>
			<html>&lt;%&#10;// ---------------------------------------------------------------------------------------------------------------------------&#10;// автор:   ER&#10;// создан:  04.12.2013&#10;// изменен:  07.04.2016&#10;// -------------------------------------------------Предупреждение--------------------------------------------------------------&#10;// &lt;нет&gt;&#10;// ------------------------------------------------Параметры шаблона------------------------------------------------------------&#10;// &lt;нет&gt;&#10;// ----------------------------------------------Глобальные переменные----------------------------------------------------------&#10;// &lt;нет&gt;&#10;// ---------------------------------------------------Константы-----------------------------------------------------------------&#10;// &lt;нет&gt;&#10;// -----------------------------------------------------------------------------------------------------------------------------&#10;&#10;legend_color = '[' + legend_color + ']';&#10;color_array_legend =tools.read_object(legend_color);&#10;&#10;&#10;&#9;string_page = 32;&#10;&#10;function func_over(func_asid, f_comp_id, str_status)&#10;{&#10;&#9;f_mmang = 0;&#10;&#9;f_nummang = 0;&#10;&#9;f_rat_mang = 0;&#10;&#9;f_pas_elem = XQuery("for $elem in pas where $elem/assessment_appraise_id = " + func_asid + " and $elem/status = '" + str_status + "' return $elem");&#10;&#9;for (_pa in f_pas_elem)&#10;&#9;{&#10;&#9;&#9;try&#10;&#9;&#9;{&#10;&#9;&#9;&#9;f_pa_doc_elem = OpenDoc(UrlFromDocID(_pa.id)).TopElem;&#10;&#9;&#9;}&#10;&#9;&#9;catch(err)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;continue;&#10;&#9;&#9;}&#10;&#9;&#9;f_elem = ArrayOptFind(f_pa_doc_elem.competences, "This.competence_id == f_comp_id");&#10;&#9;&#9;if (f_elem != undefined)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;mng_m = f_elem.mark_value != null &amp;&amp; f_elem.mark_value != "" ? Real(f_elem.mark_value) : 0;&#10;&#9;&#9;&#9;if (mng_m != 0)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;f_mmang += Real(mng_m);&#10;&#9;&#9;&#9;&#9;f_nummang ++;&#10;&#9;&#9;&#9;}&#10;&#9;&#9;}&#10;&#9;}&#10;&#9;f_rat_mang = f_nummang != 0 ? Real(StrRealFixed(Real(f_mmang)/Real(f_nummang), 2, true)) : 0;&#10;&#9;&#10;&#9;return f_rat_mang;&#10;}&#10;&#10;function func_over_func(func_asid, f_comp_id, str_status, comps_arr)&#10;{&#10;&#9;mfunc = 0;&#10;&#9;numfunc = 0;&#10;&#9;rat_func = 0;&#10;&#9;pas_func = XQuery("for $elem in pas where $elem/assessment_appraise_id = " + func_asid + " and $elem/status = '" + str_status + "' and $elem/overall != null() return $elem");&#10;&#10;&#9;rat_ind_func = 0;&#10;&#9;full_value = 0;&#10;&#9;full_cnt = 0;&#10;&#9;for(_ind_func in comps_arr.indicators)&#10;&#9;{&#10;&#9;&#9;m_ind_func = 0;&#10;&#9;&#9;num_ind_func = 0;&#10;&#9;&#9;for (_pa_s in pas_func)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;try&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;DocPasFunc = OpenDoc(UrlFromDocID(_pa_s.id)).TopElem;&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;catch(err)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;continue;&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;ffunc = ArrayOptFind(DocPasFunc.competences, "This.competence_id == f_comp_id");&#10;&#9;&#9;&#9;if (ffunc != undefined)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;ffunc_ind = ArrayOptFind(ffunc.indicators, "This.indicator_id == _ind_func.indicator_id");&#10;&#9;&#9;&#9;&#9;if (ffunc_ind != undefined &amp;&amp; ffunc_ind.mark_value != null)&#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;m_ind_func += Real(ffunc_ind.mark_value);&#10;&#9;&#9;&#9;&#9;&#9;num_ind_func ++;&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;}&#10;&#9;&#9;}&#10;&#9;&#9;rat_ind_func = num_ind_func != 0 ? Real(StrRealFixed(Real(m_ind_func)/Real(num_ind_func), 2, true)) : 0;&#10;&#9;&#9;full_value += rat_ind_func;&#10;&#9;&#9;full_cnt += rat_ind_func != 0 ? 1 : 0;&#10;&#9;}&#10;&#10;&#9;rat_func = full_cnt != 0 ? Real(StrRealFixed(Real(full_value)/Real(full_cnt), 2, true)) : 0;&#10;&#9;return rat_func;&#10;}&#10;&#10;try&#10;{&#10;&#9;lng_id = curLng.short_id;&#10;}&#10;catch (err)&#10;{&#10;&#9;lng_id = "ru";&#10;}&#10;TRUTH = Request.Form.HasProperty( 'state' ) &amp;&amp; Request.Form.state != "" &amp;&amp; Request.Form.state != "null" ? Int(Request.Form.state) : 0;&#10;str_truth = "Fixed";&#10;_idx = 0;&#10;count_row = 0;&#10;switch ( TRUTH ) &#10;{ &#10;&#9;case 0: &#10;&#9;&#9;str_truth = '0'; &#10;&#9;&#9;break; &#10;&#9;case 1: &#10;&#9;&#9;str_truth = '"0\.0"'; &#10;&#9;&#9;break;&#9;&#10;&#9;case 2: &#10;&#9;&#9;str_truth = '"0\.00"'; &#10;&#9;&#9;break;&#9;&#9;&#9;&#10;}&#10;&#10;url_temp_folder = 'x-local://wt/web/temp_files';&#10;ObtainDirectory(url_temp_folder);&#10;url_temp_folder = 'x-local://wt/web/temp_files/' + String(curUserID);&#10;ObtainDirectory(url_temp_folder);&#10;temp_folder = UrlToFilePath(url_temp_folder);&#10;&#10;file_name = "itog_report_" + DateToRawSeconds(Date()) + ".xlsx";&#10;oExcelDoc = null;&#10;&#10;try&#10;{&#10;&#9;oExcelDoc = new ActiveXObject("Websoft.Office.Excel.Document");&#10;&#9;oExcelDoc.CreateWorkBook();&#10;&#10;&#9;oWorksheet = oExcelDoc.GetWorksheet(0);&#10;&#9;oWorksheet.PageSetup.Orientation = "Landscape";&#10;&#9;oWorksheet.PageSetup.PaperSize = "PaperA4";&#10;&#10;&#9;oExcelDoc.Open(temp_folder + "\\" + file_name);&#10;}&#10;catch(err)&#10;{&#10;&#9;oExcelDoc = null;&#10;&#9;Response.Write("&lt;b&gt;&lt;p&gt;При построении данного отчета произошла ошибка с библиотекой для построения графиков! " + err + "&lt;/p&gt;&lt;/b&gt;");&#10;&#9;alert("При построении данного отчета произошла ошибка с библиотекой для построения графиков! " + err);&#10;}&#10;&#10;str_graph = '&lt;BuiltInFormat&gt;1&lt;/BuiltInFormat&gt;';&#10;switch ( TRUTH ) &#10;{ &#10;&#9;case 0: &#10;&#9;&#9;str_graph = '&lt;BuiltInFormat&gt;1&lt;/BuiltInFormat&gt;'; &#10;&#9;&#9;break; &#10;&#9;case 1: &#10;&#9;&#9;str_graph = '&lt;FormatString&gt;0.0&lt;/FormatString&gt;'; &#10;&#9;&#9;break;&#9;&#10;&#9;case 2: &#10;&#9;&#9;str_graph = '&lt;BuiltInFormat&gt;2&lt;/BuiltInFormat&gt;'; &#10;&#9;&#9;break;&#9;&#9;&#9;&#10;}&#10;&#10;str_graph_excel = '&lt;x:BuiltInFormat&gt;1&lt;/x:BuiltInFormat&gt;';&#10;switch ( TRUTH ) &#10;{ &#10;&#9;case 0: &#10;&#9;&#9;str_graph_excel = '&lt;x:BuiltInFormat&gt;1&lt;/x:BuiltInFormat&gt;'; &#10;&#9;&#9;break; &#10;&#9;case 1: &#10;&#9;&#9;str_graph_excel = '&lt;x:FormatString&gt;0.0&lt;/x:FormatString&gt;'; &#10;&#9;&#9;break;&#9;&#10;&#9;case 2: &#10;&#9;&#9;str_graph_excel = '&lt;x:BuiltInFormat&gt;2&lt;/x:BuiltInFormat&gt;'; &#10;&#9;&#9;break;&#9;&#9;&#9;&#10;}&#10;&#10;function okrugl(var_func)&#10;{&#10;&#9;_rez_func = var_func;&#10;&#9;if (Trim(_rez_func) == "")&#10;&#9;{&#10;&#9;&#9;return _rez_func&#10;&#9;}&#10;&#9;&#10;&#9;arr_func = new Array();&#10;&#9;arr_func = var_func.split(",");&#10;&#9;if ( TRUTH == 0 )&#10;&#9;{&#10;&#9;&#9;return _rez_func;&#10;&#9;}&#10;&#9;if ( TRUTH == 1 )&#10;&#9;{&#10;&#9;&#9;if ( ArrayCount(arr_func) == 1 ) &#10;&#9;&#9;{ &#10;&#9;&#9;&#9;_rez_func = _rez_func + ",0"; &#10;&#9;&#9;}&#10;&#9;}&#10;&#9;if ( TRUTH == 2 )&#10;&#9;{&#10;&#9;&#9;if ( ArrayCount(arr_func) == 1 ) &#10;&#9;&#9;{ &#10;&#9;&#9;&#9;_rez_func = _rez_func + ",00"; &#10;&#9;&#9;}&#10;&#9;&#9;if ( ArrayCount(arr_func) == 2 &amp;&amp; StrLen(arr_func[1]) == 1 ) &#10;&#9;&#9;{ &#10;&#9;&#9;&#9;_rez_func = _rez_func + "0"; &#10;&#9;&#9;}&#9;&#9;&#10;&#9;}&#10;&#9;&#10;&#9;return _rez_func;&#10;}&#10;&#10;function Perevod(_var)&#10;{&#10;&#9;_rez = "";&#10;&#9;_var = StrReal(_var, TRUTH);&#10;&#9;_rez = StrReplace(String(_var), ".", ",");&#10;&#9;&#10;&#9;_rez = okrugl(_rez);&#10;&#9;&#10;&#9;return _rez;&#10;}&#10;&#10;function check_color(_clr)&#10;{&#10;&#9;_rez = "";&#10;&#9;if (visible_legend)&#10;&#9;{&#10;&#9;&#9;_clr = Int(_clr);&#10;&#9;&#9;for (_clg in color_array_legend)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;if ( _clr &gt;= Int(_clg.min) &amp;&amp; _clr &lt;= Int(_clg.max) )&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;_rez = "bgcolor='" + _clg.color + "'";&#10;&#9;&#9;&#9;&#9;break;&#10;&#9;&#9;&#9;}&#10;&#9;&#9;}&#10;&#9;}&#10;&#10;&#9;return _rez;&#10;}&#10;&#10;function check_color_dll(_clr)&#10;{&#10;&#9;_rez = "";&#10;&#9;if (visible_legend)&#10;&#9;{&#10;&#9;&#9;_clr = Int(_clr);&#10;&#9;&#9;for (_clg in color_array_legend)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;if ( _clr &gt;= _clg.min &amp;&amp; _clr &lt;= _clg.max )&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;_rez = _clg.color;&#10;&#9;&#9;&#9;&#9;break;&#10;&#9;&#9;&#9;}&#10;&#9;&#9;}&#10;&#9;}&#10;&#9;return _rez;&#10;}&#10;&#10;function color_font(_clr)&#10;{&#10;&#9;_rez = "";&#10;&#9;if (visible_legend)&#10;&#9;{&#10;&#9;&#9;_clr = OptInt(_clr, 0);&#10;/*&#9;&#9;&#10;&#9;&#9;if(_clr &gt;= 90 &amp;&amp; _clr &lt;= 100)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;_rez = " color: white; ";&#10;&#9;&#9;}&#10;*/&#10;&#9;&#9;elem_lg = color_array_legend[ArrayCount(color_array_legend) - 1];&#10;&#9;&#9;if (_clr &gt;= elem_lg.min &amp;&amp; _clr &lt;= elem_lg.max)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;_rez = " color: white; ";&#10;&#9;&#9;}&#10;&#9;}&#10;&#9;return _rez;&#10;}&#10;&#10;function color_font_dll(_clr)&#10;{&#10;&#9;_rez = "";&#10;&#9;if (visible_legend)&#10;&#9;{&#10;&#9;&#9;_clr = OptInt(_clr, 0);&#10;/*&#10;&#9;&#9;if(_clr &gt;= 90 &amp;&amp; _clr &lt;= 100)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;_rez = "#FFFFFF";&#10;&#9;&#9;}&#10;*/&#10;&#9;&#9;elem_lg = color_array_legend[ArrayCount(color_array_legend) - 1];&#10;&#9;&#9;if (_clr &gt;= elem_lg.min &amp;&amp; _clr &lt;= elem_lg.max)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;_rez = "#FFFFFF";&#10;&#9;&#9;}&#10;&#9;&#9;return _rez;&#10;&#9;}&#10;}&#10;&#10;function check_type(_clr)&#10;{&#10;&#9;_clr = Int(_clr);&#10;&#9;_rez2 = "";&#10;&#9;&#10;&#9;for (_clg in color_array_legend)&#10;&#9;{&#10;&#9;&#9;if ( _clr &gt;= _clg.min &amp;&amp; _clr &lt;= _clg.max )&#10;&#9;&#9;{&#10;&#9;&#9;&#9;_rez2 = _clg.title;&#10;&#9;&#9;&#9;break;&#10;&#9;&#9;}&#10;&#9;}&#9;&#10;&#9;return _rez2;&#10;}&#10;&#10;function sort_array(_array, _how)&#10;{&#10;&#9;array_func = new Array();&#10;&#9;array_func = ArraySelectAll(_array);&#10;&#9;cnt_var = ArrayCount(array_func);&#10;&#9;for (z = 0; z &lt; cnt_var; z++)&#10;&#9;{&#10;&#9;&#9;for (f = 0; f &lt; cnt_var; f++)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;if (_how == "-" &amp;&amp; f != z &amp;&amp; array_func[z].aver &gt; array_func[f].aver)&#10;&#9;&#9;&#9;{&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;temp_elem = array_func[z];&#10;&#9;&#9;&#9;&#9;array_func[z] = array_func[f];&#10;&#9;&#9;&#9;&#9;array_func[f] = temp_elem;&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;if (_how == "+" &amp;&amp; f != z &amp;&amp; array_func[z].aver &lt; array_func[f].aver)&#10;&#9;&#9;&#9;{&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;temp_elem = array_func[z];&#10;&#9;&#9;&#9;&#9;array_func[z] = array_func[f];&#10;&#9;&#9;&#9;&#9;array_func[f] = temp_elem;&#10;&#9;&#9;&#9;}&#9;&#9;&#9;&#10;&#9;&#9;}&#10;&#9;}&#10;&#10;&#9;return array_func;&#10;}&#10;%&gt;&#10;&lt;script language="JAVASCRIPT"&gt;&#10;&#10;function show( title, inputIds, inputNames, catalog, disp_object_ids, m_sel )&#10;{&#10;&#9;var pars=new Object();&#10;&#9;pars.title = title;&#10;&#9;var strAttr="status:no;dialogWidth:750px;dialogHeight:580px;help:no";&#10;&#9;&#10;&#9;pars.elemNamesArray = Array();&#10;&#9;&#10;&#9;var i = 0;&#10;&#10;&#9;ids = "";&#10;&#9;arr = document.forms['main'][inputIds].value.split(',');&#10;&#9;for ( i=0; i&lt;arr.length; i++ )&#10;&#9;{&#10;&#9;&#9;if ( arr[i] == '' ) continue;&#10;&#9;&#9;ids += ";" + arr[i];&#10;&#9;}&#10;&#9;pars.selected_object_ids = ids;&#10;&#9;pars.display_object_ids = disp_object_ids;&#10;&#9;arr = document.forms['main'][inputNames].value.split("|");&#10;&#9;for ( i=0; i&lt;arr.length; i++ )&#10;&#9;{&#10;&#9;&#9;pars.elemNamesArray[i] = arr[i];&#10;&#9;}&#10;&#10;&#9;//xShowModalDialog('dlg_select.html?doc_id=&lt;%=curDocID%&gt;&amp;catalog_name='+catalog+'&amp;show_all=1&amp;multi_select='+m_sel+'&amp;rand='+ Math.random(), pars, strAttr);&#10;&#9;&#10;&#9;xShowSelectDialog(&#10;&#9;&#9;{&#10;&#9;&#9;&#9;"catalog_name": catalog,&#10;&#9;&#9;&#9;"multi_select": m_sel,&#10;&#9;&#9;&#9;"can_be_empty": "true",&#10;&#9;&#9;&#9;"disp_filter": "false",&#10;&#9;&#9;&#9;"check_access": "false",&#10;&#9;&#9;&#9;"display_object_ids": disp_object_ids,&#10;&#9;&#9;&#9;"selected_object_ids": ids, &#10;&#9;&#9;&#9;"title": "Выбор сотрудника"&#10;&#9;&#9;},&#10;&#9;&#9;function(oParams)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;id_mas = oParams.selected_object_ids.split(";");&#10;&#10;&#9;&#9;&#9;if (!oParams.handle) return null;&#10;&#10;&#9;&#9;&#9;names = "";&#10;&#9;&#9;&#9;ids = "";&#10;&#9;&#9;&#9;id_ar = oParams.selected_object_ids.split(";");&#10;&#9;&#9;&#9;isFirst = true;&#10;&#9;&#9;&#9;for (i=0;i&lt;id_ar.length;i++)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;if ( id_ar[i] == "" || id_ar[i] == null ) continue;&#10;&#9;&#9;&#9;&#9;ids += ( isFirst ? '' : ',' ) + id_ar[i];&#10;&#9;&#9;&#9;&#9;isFirst = false;&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;for (i=0;i&lt;oParams.elemNamesArray.length;i++)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;if( oParams.elemNamesArray[i]!=null )&#10;&#9;&#9;&#9;&#9;names += ( i != 0 ? "|" : "" ) + oParams.elemNamesArray[i];&#10;&#9;&#9;&#9;}&#10;&#10;&#9;&#9;&#9;if (document.forms['main'][inputIds].value != ids)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;document.forms['main'][inputIds].value = ids;&#10;&#9;&#9;&#9;&#9;document.forms['main'][inputNames].value = names;&#10;&#9;&#9;&#9;}&#10;&#9;&#9;});&#10;&#9;&#10;}&#10;&#10;function do_submit()&#10;{&#10;&#9;document.forms['main']['is_posted'].value = "1";&#10;&#9;document.forms['main'].submit();&#10;}&#10;&#10;function export_archive()&#10;{&#10;&#9;window.open('temp_files/&lt;%=String(curUserID) + "/" + file_name%&gt;');&#10;}&#10;&lt;/script&gt;&#10;&lt;%&#10;if (oExcelDoc != null)&#10;{&#10;%&gt;&#10;&lt;form id="main" name="main" action="&lt;%=Request.Url%&gt;" METHOD="POST"&gt;&#10;&#9;&lt;input type="hidden" name="is_posted" value=""&gt;&#10;&#9;&lt;table&gt;&#10;&#9;&#9;&lt;tr&gt;&#10;&#9;&#9;&#9;&lt;td align="right"&gt;&#10;&lt;%&#10;_pi = tools.get_sub_persons_by_func_manager_id(curUserID, "collaborator,subdivision,org,position");&#10;collaborators_ids = "";&#10;if (curUser.access.access_role == "admin")&#10;{&#10;&#9;collaborators_ids = "";&#10;}&#10;else if (ArrayOptFirstElem(_pi) != undefined)&#10;{&#10;&#9;collaborators_ids = ArraySelectDistinct( ArrayExtract( _pi,"id" ) ).join(";");&#10;}&#10;else&#10;{&#10;&#9;collaborators_ids = curUserID;&#10;}&#10;_width = 120;&#10;&#10;ass_pl = XQuery("for $elem in assessment_plans where MatchSome($elem/person_id,(" + collaborators_ids + ")) return $elem");&#10;ass_pls = ArraySelectDistinct( ArrayExtract( ass_pl , "assessment_appraise_id" )).join(";");&#10;&#10;%&gt;&#10;&#9;&#9;&#9;&#9;&lt;input type="button" style="width:&lt;%=_width%&gt;px" value="Сотрудник" class="inputButton" onClick="show('Сотрудник', 'coll_ids', 'coll_names', 'collaborator', '&lt;%=collaborators_ids%&gt;', 0)" onMouseOver="this.className='inputButtonOver';" onMouseOut="this.className='inputButton';"&gt;&#10;&#9;&#9;&#9;&lt;/td&gt;&#10;&#9;&#9;&#9;&lt;td&gt;&#10;&#9;&#9;&#9;&#9;&lt;input type="text" readonly name="coll_names" value="&lt;%=( Request.Form.HasProperty( 'coll_names' ) ? Request.Form.coll_names : '' )%&gt;" size="100"&gt;&lt;br&gt;&#10;&#9;&#9;&#9;&#9;&lt;input type="hidden" name="coll_ids" value="&lt;%=( Request.Form.HasProperty( 'coll_ids' ) ? Request.Form.coll_ids : '' )%&gt;"&gt;&#10;&#9;&#9;&#9;&lt;/td&gt;&#10;&#9;&#9;&lt;/tr&gt;&#10;&#10;&#9;&#9;&lt;tr align="right"&gt;&#10;&#9;&#9;&#9;&lt;td&gt;&#10;&#9;&#9;&#9;&#9;&lt;input type="button" style="width:&lt;%=_width%&gt;px" value="Процедура" class="inputButton" onClick="show('Процедура', 'ass_ids', 'ass_names', 'assessment_appraise', '&lt;%=ass_pls%&gt;', 0)" onMouseOver="this.className='inputButtonOver';" onMouseOut="this.className='inputButton';"&gt;&#10;&#9;&#9;&#9;&lt;/td&gt;&#10;&#9;&#9;&#9;&lt;td&gt;&#10;&#9;&#9;&#9;&#9;&lt;input type="text" readonly name="ass_names" value="&lt;%=( Request.Form.HasProperty( 'ass_names' ) ? Request.Form.ass_names : '' )%&gt;" size="100"&gt;&lt;br&gt;&#10;&#9;&#9;&#9;&#9;&lt;input type="hidden" name="ass_ids" value="&lt;%=( Request.Form.HasProperty( 'ass_ids' ) ? Request.Form.ass_ids : '' )%&gt;"&gt;&#10;&#9;&#9;&#9;&lt;/td&gt;&#10;&#9;&#9;&lt;/tr&gt;&#10;&#9;&#9;&lt;tr&gt;&#10;&#9;&#9;&#9;&lt;td align="right"&gt;&#10;&#9;&#9;&#9;&#9;знаков после запятой:&#10;&#9;&#9;&#9;&lt;/td&gt;&#10;&#9;&#9;&#9;&lt;td&gt;&#10;&#9;&#9;&#9;&#9;&lt;select name="state"&gt;&#10;&#9;&#9;&#9;&#9;&#9;&lt;option value='0' &lt;%=(( Request.Form.HasProperty( 'state' ) &amp;&amp; Request.Form.state == '0') ? 'selected' : '' )%&gt;&gt; 0 &lt;/option&gt;&#10;&#9;&#9;&#9;&#9;&#9;&lt;option value='1' &lt;%=(( Request.Form.HasProperty( 'state' ) &amp;&amp; Request.Form.state == '1') ? 'selected' : '' )%&gt;&gt; 1 &lt;/option&gt;&#10;&#9;&#9;&#9;&#9;&#9;&lt;option value='2' &lt;%=(( Request.Form.HasProperty( 'state' ) &amp;&amp; Request.Form.state == '2') ? 'selected' : '' )%&gt;&gt; 2 &lt;/option&gt;&#10;&#9;&#9;&#9;&#9;&lt;/select&gt;&#10;&#9;&#9;&#9;&lt;/td&gt;&#10;&#9;&#9;&lt;/tr&gt;&#10;&#10;&#9;&#9;&lt;tr&gt;&#10;&#9;&#9;&#9;&lt;td colspan=2 align=center&gt;&#10;&#9;&#9;&#9;&#9;&lt;input type="button" value="Показать" onClick="do_submit();" class="inputButton" onMouseOver="this.className='inputButtonOver';" onMouseOut="this.className='inputButton';"&gt;&#10;&#10;&#9;&#9;&#9;&#9;&lt;!-- &lt;input type="button" value="Экспорт в Excel" onclick="modalWin=window.open('assessment_excel_export.html','','')" class="inputButton" onMouseOver="this.className='inputButtonOver';" onMouseOut="this.className='inputButton';"&gt; --&gt;&#10;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&lt;input type="button" value="Экспорт в Excel" onClick="export_archive()" class="inputButton" onMouseOver="this.className='inputButtonOver';" onMouseOut="this.className='inputButton';"&gt;&#10;&#9;&#9;&#9;&lt;/td&gt;&#10;&#9;&#9;&lt;/tr&gt;&#10;&#9;&lt;/table&gt;&#10;&lt;/form&gt;&#10;&lt;br&gt;&lt;br&gt;&#10;&lt;%&#10;}&#10;//проверим выбран ли сотрудник&#10;isFilter = Request.Form.HasProperty("is_posted") &amp;&amp; (Request.Form.GetProperty("is_posted") != '');&#10;if ( isFilter &amp;&amp; oExcelDoc != null )&#10;{&#10;&#9;// выбор сотрудника&#10;&#9;try&#10;&#9;{&#10;&#9;&#9;curCollID = Int(Request.Form.GetProperty("coll_ids"));&#10;&#9;&#9;try&#10;&#9;&#9;{&#10;&#9;&#9;&#9;DocPers = OpenDoc(UrlFromDocID(curCollID)).TopElem;&#10;&#9;&#9;}&#10;&#9;&#9;catch(err)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;continue;&#10;&#9;&#9;}&#10;&#9;}&#10;&#9;catch(err)&#10;&#9;{&#10;&#9;&#9;curCollID = '';&#10;&#9;}&#10;&#10;&#9;// выбор процедуры&#10;&#9;try&#10;&#9;{&#10;&#9;&#9;curAssID = Int(Request.Form.GetProperty("ass_ids"));&#10;&#9;}&#10;&#9;catch(err)&#10;&#9;{&#10;&#9;&#9;curAssID = '';&#10;&#9;}&#10;&#10;//******************************************************************************&#10;&#9;array_competences = new Array();&#10;&#9;Excel_html = "&#10;&#9;&#9;&#9;&lt;style type=\"text/css\"&gt;&#10;&#9;&#9;&#9;p.MsoNormal&#10;&#9;&#9;&#9;&#9;{margin-top:0cm;&#10;&#9;&#9;&#9;&#9;margin-right:0cm;&#10;&#9;&#9;&#9;&#9;margin-bottom:10.0pt;&#10;&#9;&#9;&#9;&#9;margin-left:0cm;&#10;&#9;&#9;&#9;&#9;line-height:115%;&#10;&#9;&#9;&#9;&#9;font-size:11.0pt;&#10;&#9;&#9;&#9;&#9;font-family:Calibri;&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;table.MsoNormalTable&#10;&#9;&#9;&#9;&#9;{font-size:10.0pt;&#10;&#9;&#9;&#9;&#9;font-family:\"Times New Roman\";&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;p.MsoFootnoteText&#10;&#9;&#9;&#9;&#9;{margin-bottom:.0001pt;&#10;&#9;&#9;&#9;&#9;font-size:10.0pt;&#10;&#9;&#9;&#9;&#9;font-family:Calibri;&#10;&#9;&#9;&#9;&#9;margin-left: 0cm;&#10;&#9;&#9;&#9;&#9;margin-right: 0cm;&#10;&#9;&#9;&#9;&#9;margin-top: 0cm;&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;span.MsoFootnoteReference&#10;&#9;&#9;&#9;&#9;{font-family:\"Times New Roman\";&#10;&#9;&#9;&#9;&#9;vertical-align:super;&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;.style3 {&#10;&#9;&#9;&#9;&#9;padding: 5px;&#10;&#9;&#9;&#9;&#9;border: 1px solid #000000;font-size:12.0px;&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;.style3_tab {&#10;&#9;&#9;&#9;&#9;border: 1px solid #000000;font-size:12.0px;&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;.style33 {&#10;&#9;&#9;&#9;&#9;padding: 5px;&#10;&#9;&#9;&#9;&#9;border: 1px solid #000000;&#10;&#9;&#9;&#9;&#9;mso-style-parent:style0;&#10;&#9;&#9;&#9;&#9;mso-number-format:" + str_truth + ";&#10;&#9;&#9;&#9;&#9;font-size:12.0px;&#10;&#9;&#9;&#9;&#9;}&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;.style4 {&#10;&#9;&#9;&#9;&#9;padding: 5px;&#10;&#9;&#9;&#9;&#9;border-color: #000000;&#10;&#9;&#9;&#9;&#9;border-width: 1px;&#10;&#9;&#9;&#9;&#9;background-color: #008000;&#10;&#9;&#9;&#9;&#9;font-size:10.0px;&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;.style5 {&#10;&#9;&#9;&#9;&#9;padding: 5px;&#10;&#9;&#9;&#9;&#9;border: 1px solid #000000;&#10;&#9;&#9;&#9;&#9;background-color: #00FF00;&#10;&#9;&#9;&#9;&#9;font-size:10.0px;&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;.style6 {&#10;&#9;&#9;&#9;&#9;background-color: #FFFF00;&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;.style7 {&#10;&#9;&#9;&#9;&#9;background-color: #F8C000;&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;.style8 {&#10;&#9;&#9;&#9;&#9;background-color: #CC0000;&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;.style9 {&#10;&#9;&#9;&#9;&#9;background-color: #C0C0C0;&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&lt;/style&gt;&#10;&#9;&#9;&#9;&lt;p class=\"MsoNormal\" style=\"margin-bottom:0cm;margin-bottom:.0001pt;line-height: normal\"&gt;&lt;b&gt;&#10;&#9;&#9;&#9;&lt;span style=\"font-size:12.0pt;font-family:&amp;quot;Times New Roman&amp;quot;\"&gt;Оценка по компетенциям - 360°&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/b&gt;&lt;/p&gt;&#10;&#9;&#9;&#9;&lt;p class=\"MsoNormal\" style=\"margin-bottom:0cm;margin-bottom:.0001pt;line-height:normal\"&gt;&lt;span style=\"font-size:12.0pt;font-family:&amp;quot;Times New Roman&amp;quot;\"&gt;Ф.И.О. оцениваемого сотрудника:  " + DocPers.name + "&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt;&#10;&#9;&#9;&#9;&lt;p class=\"MsoNormal\" style=\"margin-bottom:0cm;margin-bottom:.0001pt;line-height:normal\"&gt;&lt;span style=\"font-size:12.0pt;font-family:&amp;quot;Times New Roman&amp;quot;\"&gt;Должность:  " + DocPers.position_name + "&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt;&#10;&#9;&#9;&#9;&lt;p class=\"MsoNormal\" style=\"margin-bottom:0cm;margin-bottom:.0001pt;line-height:normal\"&gt;&lt;span style=\"font-size:12.0pt;font-family:&amp;quot;Times New Roman&amp;quot;\"&gt;Подразделение:  " + DocPers.position_parent_name + "&lt;o:p&gt;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt;&#10;&#9;&#9;&#9;&lt;p class=\"MsoNormal\" style=\"margin-bottom:0cm;margin-bottom:.0001pt;line-height:normal\"&gt;&lt;span style=\"font-size:1.0pt;font-family:&amp;quot;Times New Roman&amp;quot;\"&gt;&lt;o:p&gt;&amp;nbsp;&lt;/o:p&gt;&lt;/span&gt;&lt;/p&gt;&#10;&#9;&#9;&#9;&lt;p class=\"MsoNormal\" style=\"margin-bottom:0cm;margin-bottom:.0001pt;line-height:normal\"&gt;&lt;b&gt;&lt;i&gt;&#10;&#9;&#9;&#9;&lt;span style=\"font-size:12.0pt;font-family:&amp;quot;Times New Roman&amp;quot;\"&gt;Компетенции/индикаторы&lt;/span&gt;&lt;/i&gt;&lt;/b&gt;&lt;/p&gt;&#10;&#10;&#9;&#9;&#9;&lt;table style=\"width: 100%\" class=\"style3_tab\" cellspacing=\"0\" cellpadding=\"0\"&gt;&#10;&#9;&#9;&#9;&#9;&lt;tr&gt;&#10;&#9;&#9;&#9;&#9;&#9;&lt;td class=\"style3\"&gt;&amp;nbsp;&lt;/td&gt;&#10;&#9;&#9;&#9;&#9;&#9;&lt;td class=\"style3\"&gt;Самооценка&lt;/td&gt;&#10;&#9;&#9;&#9;&#9;&#9;&lt;td class=\"style3\"&gt;Оценка руководителя&lt;/td&gt;&#10;&#9;&#9;&#9;&#9;&#9;&lt;td class=\"style3\"&gt;Оценка коллег&lt;/td&gt;&#10;&#9;&#9;&#9;&#9;&#9;&lt;td class=\"style3\"&gt;Оценка подчиненных&lt;/td&gt;&#10;&#9;&#9;&#9;&#9;&#9;&lt;td class=\"style3\"&gt;Средняя оценка&lt;/td&gt;&#10;&#9;&#9;&#9;&#9;&#9;&lt;!-- &lt;td class=\"style3\"&gt;Уровень&lt;sup&gt;[1]&lt;/sup&gt;&lt;/td&gt; --&gt;&#10;&#9;&#9;&#9;&#9;&lt;/tr&gt;";&#9;&#10;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;oCell = oWorksheet.Cells.GetCell("A1"); &#10;&#9;&#9;&#9;oCell.Value = "Оценка по компетенциям - 360°"; &#10;&#9;&#9;&#9;oCell.Style.FontSize = 12; &#10;&#9;&#9;&#9;oCell.Style.IsBold = true;&#10;&#9;&#9;&#9;oWorksheet.Cells.SetColumnWidth(0, 50);&#10;&#10;&#9;&#9;&#9;oCell = oWorksheet.Cells.GetCell("A2"); &#10;&#9;&#9;&#9;oCell.Value = "Ф.И.О. оцениваемого сотрудника:  " + DocPers.name; &#10;&#9;&#9;&#9;oCell.Style.FontSize = 12;&#10;&#9;&#9;&#9;&#10;&#9;&#9;&#9;oCell = oWorksheet.Cells.GetCell("A3"); &#10;&#9;&#9;&#9;oCell.Value = "Должность:  " + DocPers.position_name; &#10;&#9;&#9;&#9;oCell.Style.FontSize = 12;&#10;&#9;&#9;&#9;&#10;&#9;&#9;&#9;oCell = oWorksheet.Cells.GetCell("A4"); &#10;&#9;&#9;&#9;oCell.Value = "Подразделение:  " + DocPers.position_parent_name; &#10;&#9;&#9;&#9;oCell.Style.FontSize = 12;&#10;&#9;&#9;&#9;&#10;&#9;&#9;&#9;oCell = oWorksheet.Cells.GetCell("A5"); &#10;&#9;&#9;&#9;oCell.Value = "Компетенции/индикаторы"; &#10;&#9;&#9;&#9;oCell.Style.FontSize = 12; &#10;&#9;&#9;&#9;oCell.Style.IsBold = true; &#10;&#9;&#9;&#9;oCell.Style.IsItalic = true;&#10;&#9;&#9;&#9;&#10;&#9;&#9;&#9;oCell = oWorksheet.Cells.GetCell("A6"); &#10;&#9;&#9;&#9;oCell.Value = "";&#10;&#9;&#9;&#9;oCell.Style.Borders.SetStyle("Thin"); &#10;&#9;&#9;&#9;oCell.Style.Borders.SetColor("#000000"); &#10;&#9;&#9;&#9;oCell.Style.IsTextWrapped = true;&#10;&#9;&#9;&#9;&#10;&#9;&#9;&#9;oCell = oWorksheet.Cells.GetCell("B6"); &#10;&#9;&#9;&#9;oCell.Value = "Самооценка"; &#10;&#9;&#9;&#9;oCell.Style.Borders.SetStyle("Thin"); &#10;&#9;&#9;&#9;oCell.Style.Borders.SetColor("#000000"); &#10;&#9;&#9;&#9;oCell.Style.IsTextWrapped = true;&#10;&#9;&#9;&#9;oWorksheet.Cells.SetColumnWidth(1, 12);&#10;&#10;&#9;&#9;&#9;oCell = oWorksheet.Cells.GetCell("C6"); &#10;&#9;&#9;&#9;oCell.Value = "Оценка руководителя"; &#10;&#9;&#9;&#9;oCell.Style.Borders.SetStyle("Thin"); &#10;&#9;&#9;&#9;oCell.Style.Borders.SetColor("#000000"); &#10;&#9;&#9;&#9;oCell.Style.IsTextWrapped = true;&#10;&#9;&#9;&#9;oWorksheet.Cells.SetColumnWidth(2, 12);&#10;&#9;&#9;&#9;&#10;&#9;&#9;&#9;oCell = oWorksheet.Cells.GetCell("D6"); &#10;&#9;&#9;&#9;oCell.Value = "Оценка коллег"; &#10;&#9;&#9;&#9;oCell.Style.Borders.SetStyle("Thin"); &#10;&#9;&#9;&#9;oCell.Style.Borders.SetColor("#000000"); &#10;&#9;&#9;&#9;oCell.Style.IsTextWrapped = true;&#10;&#9;&#9;&#9;oWorksheet.Cells.SetColumnWidth(3, 12);&#10;&#9;&#9;&#9;&#10;&#9;&#9;&#9;oCell = oWorksheet.Cells.GetCell("E6"); &#10;&#9;&#9;&#9;oCell.Value = "Оценка подчиненных"; &#10;&#9;&#9;&#9;oCell.Style.Borders.SetStyle("Thin"); &#10;&#9;&#9;&#9;oCell.Style.Borders.SetColor("#000000"); &#10;&#9;&#9;&#9;oCell.Style.IsTextWrapped = true;&#10;&#9;&#9;&#9;oWorksheet.Cells.SetColumnWidth(4, 12);&#10;&#9;&#9;&#9;&#10;&#9;&#9;&#9;oCell = oWorksheet.Cells.GetCell("F6"); &#10;&#9;&#9;&#9;oCell.Value = "Средняя оценка"; &#10;&#9;&#9;&#9;oCell.Style.Borders.SetStyle("Thin"); &#10;&#9;&#9;&#9;oCell.Style.Borders.SetColor("#000000"); &#10;&#9;&#9;&#9;oCell.Style.IsTextWrapped = true;&#10;&#9;&#9;&#9;oWorksheet.Cells.SetColumnWidth(5, 12);&#10;&#10;/*&#9;&#9;&#9;&#10;&#9;&#9;&#9;oCell = oWorksheet.Cells.GetCell("G6"); &#10;&#9;&#9;&#9;oCell.Value = "Уровень[1]"; &#10;&#9;&#9;&#9;oCell.Style.Borders.SetStyle("Thin"); &#10;&#9;&#9;&#9;oCell.Style.Borders.SetColor("#000000"); &#10;&#9;&#9;&#9;oCell.Style.IsTextWrapped = true;&#10;&#9;&#9;&#9;oWorksheet.Cells.SetColumnWidth(6, 12);&#10;*/&#10;&#9;&#9;&#9;&#10;&#9;&#9;&#9;comp_elem = ArrayOptFirstElem(XQuery("for $elem in pas where $elem/person_id = " + curCollID + " and $elem/assessment_appraise_id = " + curAssID + " return $elem"));&#10;&#10;&#9;&#9;&#9;try&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;DocComp = OpenDoc(UrlFromDocID(comp_elem.id)).TopElem;&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;catch(err)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;DocComp = undefined;&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;arr_aver = '';&#10;&#9;&#9;&#9;name_comp = '';&#10;&#9;&#9;&#9;//самооценка&#10;&#9;&#9;&#9;selfconc = "";&#10;&#9;&#9;&#9;//оц. рук-ля&#10;&#9;&#9;&#9;ass_leader = "";&#10;&#9;&#9;&#9;//оц. коллег&#10;&#9;&#9;&#9;ass_coll = "";&#10;&#9;&#9;&#9;//оц. подчинен-х&#10;&#9;&#9;&#9;ass_subord = "";&#10;&#9;&#9;&#9;str_srr_arr = "";&#10;&#9;&#9;&#9;str_srr_arr_full = "";&#10;&#9;&#9;&#9;if(DocComp != undefined)&#10;&#9;&#9;&#9;{&#10;// тут по ТОП-500&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;for(_comp in DocComp.competences)&#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;// самооценка&#10;&#9;&#9;&#9;&#9;&#9;ms = func_over(curAssID, _comp.competence_id, 'self');&#10;&#9;&#9;&#9;&#9;&#9;// руководитель&#10;&#9;&#9;&#9;&#9;&#9;rat_mang = func_over(curAssID, _comp.competence_id, 'manager');&#10;&#10;&#9;&#9;&#9;&#9;&#9;// коллеги&#10;&#9;&#9;&#9;&#9;&#9;rat_coll = func_over_func(curAssID, _comp.competence_id, 'coll', _comp)&#10;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;// подчиненные&#10;&#9;&#9;&#9;&#9;&#9;rat_sub = func_over(curAssID, _comp.competence_id, 'staff');&#10;&#9;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;str_srr = (Real(ms) + Real(rat_mang) + Real(rat_coll) + Real(rat_sub))/4;&#10;&#9;&#9;&#9;&#9;&#9;str_srr_arr_full += (str_srr_arr_full == "" ? "" : ",") + StrReplace(Perevod(Real(str_srr)), ",", ".");&#9;&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;count_row = ArrayCount(DocComp.competences) + 9;&#10;&#9;&#9;&#9;&#9;_idx = 6;&#10;&#9;&#9;&#9;&#9;for(_comp in DocComp.competences)&#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;pas_self = ArrayOptFirstElem(XQuery("for $elem in pas where $elem/person_id = "+ curCollID +" and $elem/assessment_appraise_id = "+ curAssID +" and $elem/status = 'self' return $elem"));&#10;&#9;&#9;&#9;&#9;&#9;try&#10;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;pa_docself = OpenDoc(UrlFromDocID(pas_self.id)).TopElem;&#10;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;catch(err)&#10;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;continue;&#10;&#9;&#9;&#9;&#9;&#9;}&#10;&#10;&#9;&#9;&#9;&#9;&#9;ms = 0;&#10;&#9;&#9;&#9;&#9;&#9;find_mark_self = ArrayOptFind(pa_docself.competences, "This.competence_id == _comp.competence_id")&#10;&#9;&#9;&#9;&#9;&#9;if (find_mark_self != undefined &amp;&amp; find_mark_self.mark_value != null)&#10;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;ms = find_mark_self.mark_value;&#10;&#9;&#9;&#9;&#9;&#9;}&#10;&#10;&#9;&#9;&#9;&#9;&#9;// здесь начало&#10;&#9;&#9;&#9;&#9;&#9;mmang = 0;&#10;&#9;&#9;&#9;&#9;&#9;nummang = 0;&#10;&#9;&#9;&#9;&#9;&#9;rat_mang = 0;&#10;&#9;&#9;&#9;&#9;&#9;pas_manag = XQuery("for $elem in pas where $elem/person_id = "+ curCollID +" and $elem/assessment_appraise_id = "+ curAssID +" and $elem/status = 'manager' return $elem");&#10;&#9;&#9;&#9;&#9;&#9;for (_pa in pas_manag)&#10;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;try&#10;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;pa_docmanag = OpenDoc(UrlFromDocID(_pa.id)).TopElem;&#10;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;catch(err)&#10;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;continue;&#10;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;fmang = ArrayOptFind(pa_docmanag.competences, "This.competence_id == _comp.competence_id");&#10;&#9;&#9;&#9;&#9;&#9;&#9;if (fmang != undefined)&#10;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;mng_m = fmang.mark_value != null &amp;&amp; fmang.mark_value != "" ? Real(fmang.mark_value) : 0;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if (mng_m != 0)&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;mmang += Real(mng_m);&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;nummang ++;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;rat_mang = nummang != 0 ? Real(StrRealFixed(Real(mmang)/Real(nummang), 2, true)) : 0;&#10;&#10;&#9;&#9;&#9;&#9;&#9;mcoll = 0;&#10;&#9;&#9;&#9;&#9;&#9;numcoll = 0;&#10;&#9;&#9;&#9;&#9;&#9;rat_coll = 0;&#10;&#9;&#9;&#9;&#9;&#9;pas_coll = XQuery("for $elem in pas where $elem/person_id = "+ curCollID +" and $elem/assessment_appraise_id = "+ curAssID +" and $elem/status = 'coll' and $elem/overall != null() return $elem");&#10;&#10;&#9;&#9;&#9;&#9;&#9;rat_ind_coll = 0;&#10;&#9;&#9;&#9;&#9;&#9;full_value = 0;&#10;&#9;&#9;&#9;&#9;&#9;full_cnt = 0;&#10;&#9;&#9;&#9;&#9;&#9;for(_ind in _comp.indicators)&#10;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;m_ind_coll = 0;&#10;&#9;&#9;&#9;&#9;&#9;&#9;num_ind_coll = 0;&#10;&#9;&#9;&#9;&#9;&#9;&#9;for (_pa_s in pas_coll)&#10;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;try&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;DocPas = OpenDoc(UrlFromDocID(_pa_s.id)).TopElem;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;catch(err)&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;continue;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;fcoll = ArrayOptFind(DocPas.competences, "This.competence_id == _comp.competence_id");&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if (fcoll != undefined)&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;fcoll_ind = ArrayOptFind(fcoll.indicators, "This.indicator_id == _ind.indicator_id");&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if (fcoll_ind != undefined &amp;&amp; fcoll_ind.mark_value != null)&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;m_ind_coll += Real(fcoll_ind.mark_value);&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;num_ind_coll ++;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;rat_ind_coll = num_ind_coll != 0 ? Real(StrRealFixed(Real(m_ind_coll)/Real(num_ind_coll), 2, true)) : 0;&#10;&#9;&#9;&#9;&#9;&#9;&#9;full_value += rat_ind_coll;&#10;&#9;&#9;&#9;&#9;&#9;&#9;full_cnt += rat_ind_coll != 0 ? 1 : 0;&#10;&#9;&#9;&#9;&#9;&#9;}&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;if (ArrayOptFirstElem(_comp.indicators) == undefined)&#10;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;for (_pa_s in pas_coll)&#10;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;try&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;DocPas = OpenDoc(UrlFromDocID(_pa_s.id)).TopElem;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;catch(err)&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;continue;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;fcoll = ArrayOptFind(DocPas.competences, "This.competence_id == _comp.competence_id");&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if (fcoll != undefined)&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;col_m = fcoll.mark_value != null &amp;&amp; fcoll.mark_value != "" ? Real(fcoll.mark_value) : 0;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if (col_m != 0)&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;full_value += Real(col_m);&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;full_cnt ++;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;}&#10;&#10;&#9;&#9;&#9;&#9;&#9;rat_coll = full_cnt != 0 ? Real(StrRealFixed(Real(full_value)/Real(full_cnt), 2, true)) : 0;&#10;&#10;&#9;&#9;&#9;&#9;&#9;msub = 0;&#10;&#9;&#9;&#9;&#9;&#9;numsub = 0;&#10;&#9;&#9;&#9;&#9;&#9;rat_sub = 0;&#10;&#9;&#9;&#9;&#9;&#9;pas_sub = XQuery("for $elem in pas where $elem/person_id = "+ curCollID +" and $elem/assessment_appraise_id = "+ curAssID +" and $elem/status = 'staff' return $elem");&#10;&#9;&#9;&#9;&#9;&#9;for (_pa in pas_sub)&#10;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;try&#10;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;DocPa = OpenDoc(UrlFromDocID(_pa.id)).TopElem;&#10;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;catch(err)&#10;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;continue;&#10;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;fsub = ArrayOptFind(DocPa.competences, "This.competence_id == _comp.competence_id");&#10;&#9;&#9;&#9;&#9;&#9;&#9;if (fsub != undefined)&#10;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;fsub_m = fsub.mark_value != null &amp;&amp; fsub.mark_value != '' ? Real(fsub.mark_value) : 0;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if (fsub_m != 0)&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;msub += Real(fsub.mark_value);&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;numsub ++;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;rat_sub = numsub != 0 ? Real(StrRealFixed(Real(msub)/Real(numsub), 2, true)) : 0;&#10;&#10;&#9;&#9;&#9;&#9;&#9;aver = 0;&#10;&#9;&#9;&#9;&#9;&#9;numav = 0;&#10;&#9;&#9;&#9;&#9;&#9;rat = 0;&#10;&#10;&#9;&#9;&#9;&#9;&#9;if(rat_mang != 0 &amp;&amp; rat_mang != "")&#10;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;rat += rat_mang;&#10;&#9;&#9;&#9;&#9;&#9;&#9;numav ++;&#10;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;if(rat_coll != 0 &amp;&amp; rat_coll != "")&#10;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;rat += rat_coll;&#10;&#9;&#9;&#9;&#9;&#9;&#9;numav ++;&#10;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;if(rat_sub != 0 &amp;&amp; rat_sub != "")&#10;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;rat += rat_sub;&#10;&#9;&#9;&#9;&#9;&#9;&#9;numav ++;&#10;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;if (numav != 0)&#10;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;aver = Real(StrRealFixed(Real(rat)/Real(numav), 2, true));&#10;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;else&#10;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;aver = 0;&#10;&#9;&#9;&#9;&#9;&#9;}&#10;&#10;&#9;&#9;&#9;&#9;&#9;arr_comps = new Object(); &#10;&#9;&#9;&#9;&#9;&#9;arr_comps.id = _comp.competence_id;&#10;&#9;&#9;&#9;&#9;&#9;_compFE = _comp.competence_id.OptForeignElem;&#10;&#9;&#9;&#9;&#9;&#9;_comp_name = _compFE != undefined ? _compFE.name.Value : "";&#10;&#9;&#9;&#9;&#9;&#9;arr_comps.name_comp = _comp_name;&#10;&#9;&#9;&#9;&#9;&#9;arr_comps.aver = Real(aver);&#10;&#9;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;arr_aver += (arr_aver == "" ? "" : ",") + StrReplace(Perevod(Real(aver)), ",", ".");&#10;&#10;&#9;&#9;&#9;&#9;&#9;if ( _comp_name != "" )&#10;&#9;&#9;&#9;&#9;&#9;&#9;name_comp += (name_comp == "" ? "" : "|") + tools_web.get_cur_lng_name(_comp_name, lng_id);&#10;&#9;&#9;&#9;&#9;&#9;Excel_html += "&#10;&#9;&#9;&#9;&#9;&#9;&#9;&lt;tr&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;td class=\"style3\" style='font-size:15px' bgcolor='#D4D0C8'&gt;&lt;b&gt;" + tools_web.get_cur_lng_name(_comp_name, lng_id) + "&lt;/b&gt;&lt;/td&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;td class=\"style33\" style='font-size:12px;" + color_font(Real(Perevod(ms))) + "' " + check_color(Real(Perevod(ms))) + "  x:num='" + ms + "'&gt;"+ Perevod(ms) + "&lt;/td&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;td class=\"style33\" style='font-size:12px;" + color_font(Real(Perevod(rat_mang))) + "' " + check_color(Real(Perevod(rat_mang))) + "  x:num='" + rat_mang + "'&gt;"+ Perevod(rat_mang) + "&lt;/td&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;td class=\"style33\" style='font-size:12px;" + color_font(Real(Perevod(rat_coll))) + "' " + check_color(Real(Perevod(rat_coll))) + "  x:num='" + rat_coll + "'&gt;" + Perevod(rat_coll) + "&lt;/td&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;td class=\"style33\" style='font-size:12px;" + color_font(Real(Perevod(rat_sub))) + "' " + check_color(Real(Perevod(rat_sub))) + "  x:num='" + rat_sub + "'&gt;" + Perevod(rat_sub) + "&lt;/td&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;td class=\"style33\" style='font-size:12px;" + color_font(Real(Perevod(aver))) + "' " + check_color(Real(Perevod(aver))) + "  x:num='" + aver + "'&gt;" + Perevod(aver) + "&lt;/td&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;!-- &lt;td class=\"style3\" style='font-size:12px;" + color_font(aver) + "' " + check_color(aver) + "&gt;" + check_type(aver) + "&lt;/td&gt; --&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&lt;/tr&gt;";&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;_idx++;&#10;&#9;&#9;&#9;&#9;&#9;oCell = oWorksheet.Cells.GetCell("A" + _idx); &#10;&#9;&#9;&#9;&#9;&#9;oCell.Value = tools_web.get_cur_lng_name(_comp_name, lng_id);&#10;&#9;&#9;&#9;&#9;&#9;oCell.Style.Borders.SetStyle("Thin"); &#10;&#9;&#9;&#9;&#9;&#9;oCell.Style.Borders.SetColor("#000000"); &#10;&#9;&#9;&#9;&#9;&#9;oCell.Style.FontSize = 12;&#10;&#9;&#9;&#9;&#9;&#9;oCell.Style.IsBold = true;&#10;&#9;&#9;&#9;&#9;&#9;oCell.Style.IsTextWrapped = true;&#10;&#9;&#9;&#9;&#9;&#9;oCell.Style.ForegroundColor = "#D4D0C8";&#10;&#10;&#9;&#9;&#9;&#9;&#9;oCell = oWorksheet.Cells.GetCell("B" + _idx);&#10;&#9;&#9;&#9;&#9;&#9;oCell.Value = Perevod(ms);&#10;&#9;&#9;&#9;&#9;&#9;oCell.Style.Borders.SetStyle("Thin");&#10;&#9;&#9;&#9;&#9;&#9;oCell.Style.Borders.SetColor("#000000");&#10;&#9;&#9;&#9;&#9;&#9;oCell.Style.FontSize = 10;&#10;&#9;&#9;&#9;&#9;&#9;oCell.Style.FontColor = color_font_dll(Real(Perevod(ms)));&#10;&#9;&#9;&#9;&#9;&#9;oCell.Style.ForegroundColor = check_color_dll(Real(Perevod(ms)));&#9;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;oCell.Style.IsTextWrapped = true;&#10;&#9;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;oCell = oWorksheet.Cells.GetCell("C" + _idx);&#10;&#9;&#9;&#9;&#9;&#9;oCell.Value = Perevod(rat_mang);&#10;&#9;&#9;&#9;&#9;&#9;oCell.Style.Borders.SetStyle("Thin");&#10;&#9;&#9;&#9;&#9;&#9;oCell.Style.Borders.SetColor("#000000");&#10;&#9;&#9;&#9;&#9;&#9;oCell.Style.FontSize = 10;&#10;&#9;&#9;&#9;&#9;&#9;oCell.Style.FontColor = color_font_dll(Real(Perevod(rat_mang)));&#10;&#9;&#9;&#9;&#9;&#9;oCell.Style.ForegroundColor = check_color_dll(Real(Perevod(rat_mang)));&#9;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;oCell.Style.IsTextWrapped = true;&#10;&#9;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;oCell = oWorksheet.Cells.GetCell("D" + _idx);&#10;&#9;&#9;&#9;&#9;&#9;oCell.Value = Perevod(rat_coll);&#10;&#9;&#9;&#9;&#9;&#9;oCell.Style.Borders.SetStyle("Thin");&#10;&#9;&#9;&#9;&#9;&#9;oCell.Style.Borders.SetColor("#000000");&#10;&#9;&#9;&#9;&#9;&#9;oCell.Style.FontSize = 10;&#10;&#9;&#9;&#9;&#9;&#9;oCell.Style.FontColor = color_font_dll(Real(Perevod(rat_coll)));&#10;&#9;&#9;&#9;&#9;&#9;oCell.Style.ForegroundColor = check_color_dll(Real(Perevod(rat_coll)));&#9;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;oCell.Style.IsTextWrapped = true;&#10;&#9;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;oCell = oWorksheet.Cells.GetCell("E" + _idx);&#10;&#9;&#9;&#9;&#9;&#9;oCell.Value = Perevod(rat_sub);&#10;&#9;&#9;&#9;&#9;&#9;oCell.Style.Borders.SetStyle("Thin");&#10;&#9;&#9;&#9;&#9;&#9;oCell.Style.Borders.SetColor("#000000");&#10;&#9;&#9;&#9;&#9;&#9;oCell.Style.FontSize = 10;&#10;&#9;&#9;&#9;&#9;&#9;oCell.Style.FontColor = color_font_dll(Real(Perevod(rat_sub)));&#10;&#9;&#9;&#9;&#9;&#9;oCell.Style.ForegroundColor = check_color_dll(Real(Perevod(rat_sub)));&#9;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;oCell.Style.IsTextWrapped = true;&#10;&#9;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;oCell = oWorksheet.Cells.GetCell("F" + _idx);&#10;&#9;&#9;&#9;&#9;&#9;oCell.Value = Perevod(aver);&#10;&#9;&#9;&#9;&#9;&#9;oCell.Style.Borders.SetStyle("Thin");&#10;&#9;&#9;&#9;&#9;&#9;oCell.Style.Borders.SetColor("#000000");&#10;&#9;&#9;&#9;&#9;&#9;oCell.Style.FontSize = 10;&#10;&#9;&#9;&#9;&#9;&#9;oCell.Style.FontColor = color_font_dll(Real(Perevod(aver)));&#10;&#9;&#9;&#9;&#9;&#9;oCell.Style.ForegroundColor = check_color_dll(Real(Perevod(aver)));&#9;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;oCell.Style.IsTextWrapped = true;&#10;/*&#9;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;oCell = oWorksheet.Cells.GetCell("G" + _idx);&#10;&#9;&#9;&#9;&#9;&#9;oCell.Value = check_type(aver);&#10;&#9;&#9;&#9;&#9;&#9;oCell.Style.Borders.SetStyle("Thin");&#10;&#9;&#9;&#9;&#9;&#9;oCell.Style.Borders.SetColor("#000000");&#10;&#9;&#9;&#9;&#9;&#9;oCell.Style.FontSize = 10;&#10;&#9;&#9;&#9;&#9;&#9;oCell.Style.FontColor = color_font_dll(rat_coll);&#10;&#9;&#9;&#9;&#9;&#9;oCell.Style.ForegroundColor = check_color_dll(rat_coll);&#9;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;oCell.Style.IsTextWrapped = true;&#10;*/&#9;&#9;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;selfconc += (selfconc == "" ? "" : ",") + StrReplace(Perevod(Real(ms)), ",", ".");&#10;&#9;&#9;&#9;&#9;&#9;ass_leader += (ass_leader == "" ? "" : ",") + StrReplace(Perevod(Real(rat_mang)), ",", ".");&#10;&#9;&#9;&#9;&#9;&#9;ass_coll += (ass_coll == "" ? "" : ",") + StrReplace(Perevod(Real(rat_coll)), ",", ".");&#10;&#9;&#9;&#9;&#9;&#9;ass_subord += (ass_subord == "" ? "" : ",") + StrReplace(Perevod(Real(rat_sub)), ",", ".");&#10;&#10;&#9;&#9;&#9;&#9;&#9;_cnt_srr_srr = 0;&#10;&#9;&#9;&#9;&#9;&#9;if (Real(ms) != 0)&#10;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;_cnt_srr_srr++;&#10;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;if (Real(rat_mang) != 0)&#10;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;_cnt_srr_srr++;&#10;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;if (Real(rat_coll) != 0)&#10;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;_cnt_srr_srr++;&#10;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;if (Real(rat_sub) != 0)&#10;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;_cnt_srr_srr++;&#10;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;str_srr = _cnt_srr_srr != 0 ? ((Real(ms) + Real(rat_mang) + Real(rat_coll) + Real(rat_sub))/_cnt_srr_srr) : 0;&#10;&#9;&#9;&#9;&#9;&#9;str_srr_arr += (str_srr_arr == "" ? "" : ",") + StrReplace(Perevod(Real(str_srr)), ",", ".");&#10;&#10;&#9;&#9;&#9;&#9;&#9;count_row += ArrayCount(_comp.indicators);&#10;&#9;&#9;&#9;&#9;&#9;array_indicators = new Array();&#10;&#9;&#9;&#9;&#9;&#9;for(_ind in _comp.indicators)&#10;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;mark_ind_self = 0;&#10;&#9;&#9;&#9;&#9;&#9;&#9;find_ind_self = ArrayOptFind(find_mark_self.indicators, "This.indicator_id == _ind.indicator_id");&#10;&#9;&#9;&#9;&#9;&#9;&#9;if (find_ind_self != undefined)&#10;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;mark_ind_self = find_ind_self.mark_value;&#10;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#10;&#9;&#9;&#9;&#9;&#9;&#9;mark_ind_manag = 0;&#10;&#9;&#9;&#9;&#9;&#9;&#9;num_ind_mang = 0;&#10;&#9;&#9;&#9;&#9;&#9;&#9;rat_ind_mang = 0;&#10;&#9;&#9;&#9;&#9;&#9;&#9;for (_pa in pas_manag)&#10;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;try&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;DocPa = OpenDoc(UrlFromDocID(_pa.id)).TopElem;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;catch(err)&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;continue;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;fmang = ArrayOptFind(DocPa.competences, "This.competence_id == _comp.competence_id");&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if (fmang != undefined)&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;f_ind_mang = ArrayOptFind(fmang.indicators, "This.indicator_id == _ind.indicator_id");&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if (f_ind_mang != undefined &amp;&amp; f_ind_mang.mark_value != null)&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;mark_ind_manag += Real(f_ind_mang.mark_value);&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;num_ind_mang ++;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;rat_ind_mang = num_ind_mang != 0 ? Real(StrRealFixed(Real(mark_ind_manag)/Real(num_ind_mang), 2, true)) : "";&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;&#9;//**********************************************************&#10;&#9;&#9;&#9;&#9;&#9;&#9;m_ind_coll = 0;&#10;&#9;&#9;&#9;&#9;&#9;&#9;num_ind_coll = 0;&#10;&#9;&#9;&#9;&#9;&#9;&#9;rat_ind_coll = 0;&#10;&#9;&#9;&#9;&#9;&#9;&#9;for (_pa in pas_coll)&#10;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;try&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;DocPa = OpenDoc(UrlFromDocID(_pa.id)).TopElem;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;catch(err)&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;continue;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;fcoll = ArrayOptFind(DocPa.competences, "This.competence_id == _comp.competence_id");&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if (fcoll != undefined)&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;f_ind_coll = ArrayOptFind(fcoll.indicators, "This.indicator_id == _ind.indicator_id");&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if (f_ind_coll != undefined &amp;&amp; f_ind_coll.mark_value != null)&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;m_ind_coll += Real(f_ind_coll.mark_value);&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;num_ind_coll ++;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;rat_ind_coll = num_ind_coll != 0 ? Real(StrRealFixed(Real(m_ind_coll)/Real(num_ind_coll), 2, true)) : "";&#10;&#10;&#9;&#9;&#9;&#9;&#9;&#9;m_ind_sub = 0;&#10;&#9;&#9;&#9;&#9;&#9;&#9;num_ind_sub = 0;&#10;&#9;&#9;&#9;&#9;&#9;&#9;rat_ind_sub = 0;&#10;&#9;&#9;&#9;&#9;&#9;&#9;for (_pa in pas_sub)&#10;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;try&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;DocPa = OpenDoc(UrlFromDocID(_pa.id)).TopElem;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;catch(err)&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;continue;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;fsub = ArrayOptFind(DocPa.competences, "This.competence_id == _comp.competence_id");&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if (fsub != undefined )&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;f_ind_sub = ArrayOptFind(fsub.indicators, "This.indicator_id == _ind.indicator_id");&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if (f_ind_sub != undefined &amp;&amp; f_ind_sub.mark_value != null)&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;m_ind_sub += Real(f_ind_sub.mark_value);&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;num_ind_sub ++;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;rat_ind_sub = num_ind_sub != 0 ? Real(StrRealFixed(Real(m_ind_sub)/Real(num_ind_sub), 2, true)) : "";&#10;&#9;&#9;&#9;&#9;&#9;&#9;aver_ind = 0;&#10;&#9;&#9;&#9;&#9;&#9;&#9;numav_ind = 0;&#10;&#9;&#9;&#9;&#9;&#9;&#9;rat_ind = 0;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;&#9;if(rat_ind_mang != 0 &amp;&amp; rat_ind_mang != "" &amp;&amp; rat_ind_mang != null)&#10;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;rat_ind += rat_ind_mang;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;numav_ind ++;&#10;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;&#9;if(rat_ind_coll != 0 &amp;&amp; rat_ind_coll != "" &amp;&amp; rat_ind_coll != null)&#10;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;rat_ind += rat_ind_coll;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;numav_ind ++;&#10;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;if(rat_ind_sub != 0 &amp;&amp; rat_ind_sub != "" &amp;&amp; rat_ind_sub != null)&#10;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;rat_ind += rat_ind_sub;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;numav_ind ++;&#10;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;&#9;aver_ind = numav_ind != 0 ? Real(StrRealFixed(Real(rat_ind)/numav_ind, 2, true)) : 0;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;&#9;arr_inds = new Object(); &#10;&#9;&#9;&#9;&#9;&#9;&#9;arr_inds.comp_id = _comp.competence_id;&#10;&#9;&#9;&#9;&#9;&#9;&#9;arr_inds.ind_id = _ind.indicator_id;&#10;&#9;&#9;&#9;&#9;&#9;&#9;arr_inds.aver = aver_ind;&#10;&#9;&#9;&#9;&#9;&#9;&#9;_indFE = _ind.indicator_id.OptForeignElem;&#10;&#9;&#9;&#9;&#9;&#9;&#9;_ind_name = _indFE != undefined ? _indFE.name.Value : "";&#10;&#9;&#9;&#9;&#9;&#9;&#9;arr_inds.name_ind = _ind_name;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;&#9;Excel_html += "&#10;&#9;&#9;&#9;&#9;&#9;&#9;&lt;tr&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;td class=\"style3\" style='font-size:12px'&gt;" + tools_web.get_cur_lng_name(_ind_name, lng_id) + "&lt;/td&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;td class=\"style33\" style='font-size:12px;' x:num='" + mark_ind_self + "'&gt;" + (mark_ind_self != 0 &amp;&amp; mark_ind_self != null ? Perevod(mark_ind_self) : "") + "&lt;/td&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;td class=\"style33\" style='font-size:12px;' x:num='" + rat_ind_mang + "'&gt;" + (rat_ind_mang != 0 &amp;&amp; rat_ind_mang != null ? Perevod(rat_ind_mang) : "") + "&lt;/td&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;td class=\"style33\" style='font-size:12px;' x:num='" + rat_ind_coll + "'&gt;" + Perevod(rat_ind_coll) + "&lt;/td&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;td class=\"style33\" style='font-size:12px;' x:num='" + rat_ind_sub + "'&gt;" + Perevod(rat_ind_sub) + "&lt;/td&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;td class=\"style33\" style='font-size:12px;" + color_font(Real(Perevod(aver_ind))) + "'" + check_color(Real(Perevod(aver_ind))) + " x:num='" + aver_ind + "'&gt;" + Perevod(aver_ind) + "&lt;/td&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;!-- &lt;td class=\"style3\" style='font-size:12px;" + color_font(aver_ind) + "' " + check_color(aver_ind) + "&gt;&lt;i&gt;" + check_type(aver_ind) + "&lt;/i&gt;&lt;/td&gt; --&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&lt;/tr&gt;";&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;&#9;_idx++;&#10;&#9;&#9;&#9;&#9;&#9;&#9;oCell = oWorksheet.Cells.GetCell("A" + _idx);&#10;&#9;&#9;&#9;&#9;&#9;&#9;oCell.Value = tools_web.get_cur_lng_name(_ind_name, lng_id);&#10;&#9;&#9;&#9;&#9;&#9;&#9;oCell.Style.Borders.SetStyle("Thin");&#10;&#9;&#9;&#9;&#9;&#9;&#9;oCell.Style.Borders.SetColor("#000000");&#10;&#9;&#9;&#9;&#9;&#9;&#9;oCell.Style.FontSize = 10;&#10;&#9;&#9;&#9;&#9;&#9;&#9;oCell.Style.IsTextWrapped = true;&#10;&#9;&#9;&#9;&#9;&#9;&#9;//oCell.Style.ForegroundColor = "#C5D9F1";&#10;&#9;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;&#9;oCell = oWorksheet.Cells.GetCell("B" + _idx);&#10;&#9;&#9;&#9;&#9;&#9;&#9;oCell.Value = (mark_ind_self != 0 &amp;&amp; mark_ind_self != null ? Perevod(mark_ind_self) : "");&#10;&#9;&#9;&#9;&#9;&#9;&#9;oCell.Style.Borders.SetStyle("Thin");&#10;&#9;&#9;&#9;&#9;&#9;&#9;oCell.Style.Borders.SetColor("#000000");&#10;&#9;&#9;&#9;&#9;&#9;&#9;oCell.Style.FontSize = 10;&#10;&#9;&#9;&#9;&#9;&#9;&#9;oCell.Style.IsTextWrapped = true;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;&#9;oCell = oWorksheet.Cells.GetCell("C" + _idx);&#10;&#9;&#9;&#9;&#9;&#9;&#9;oCell.Value = (rat_ind_mang != 0 &amp;&amp; rat_ind_mang != null ? Perevod(rat_ind_mang) : "");&#10;&#9;&#9;&#9;&#9;&#9;&#9;oCell.Style.Borders.SetStyle("Thin");&#10;&#9;&#9;&#9;&#9;&#9;&#9;oCell.Style.Borders.SetColor("#000000");&#10;&#9;&#9;&#9;&#9;&#9;&#9;oCell.Style.FontSize = 10;&#10;&#9;&#9;&#9;&#9;&#9;&#9;oCell.Style.IsTextWrapped = true;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;&#9;oCell = oWorksheet.Cells.GetCell("D" + _idx);&#10;&#9;&#9;&#9;&#9;&#9;&#9;oCell.Value = Perevod(rat_ind_coll);&#10;&#9;&#9;&#9;&#9;&#9;&#9;oCell.Style.Borders.SetStyle("Thin");&#10;&#9;&#9;&#9;&#9;&#9;&#9;oCell.Style.Borders.SetColor("#000000");&#10;&#9;&#9;&#9;&#9;&#9;&#9;oCell.Style.FontSize = 10;&#10;&#9;&#9;&#9;&#9;&#9;&#9;oCell.Style.IsTextWrapped = true;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;&#9;oCell = oWorksheet.Cells.GetCell("E" + _idx);&#10;&#9;&#9;&#9;&#9;&#9;&#9;oCell.Value = Perevod(rat_ind_sub);&#10;&#9;&#9;&#9;&#9;&#9;&#9;oCell.Style.Borders.SetStyle("Thin");&#10;&#9;&#9;&#9;&#9;&#9;&#9;oCell.Style.Borders.SetColor("#000000");&#10;&#9;&#9;&#9;&#9;&#9;&#9;oCell.Style.FontSize = 10;&#10;&#9;&#9;&#9;&#9;&#9;&#9;oCell.Style.IsTextWrapped = true;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;&#9;oCell = oWorksheet.Cells.GetCell("F" + _idx);&#10;&#9;&#9;&#9;&#9;&#9;&#9;oCell.Value = Perevod(aver_ind);&#10;&#9;&#9;&#9;&#9;&#9;&#9;oCell.Style.Borders.SetStyle("Thin");&#10;&#9;&#9;&#9;&#9;&#9;&#9;oCell.Style.Borders.SetColor("#000000");&#10;&#9;&#9;&#9;&#9;&#9;&#9;oCell.Style.FontSize = 10;&#10;&#9;&#9;&#9;&#9;&#9;&#9;oCell.Style.FontColor = (aver_ind != null ? color_font_dll(Real(Perevod(aver_ind))) : "");&#10;&#9;&#9;&#9;&#9;&#9;&#9;oCell.Style.ForegroundColor = (aver_ind != null ? check_color_dll(Real(Perevod(aver_ind))) : "");&#9;&#9;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;&#9;oCell.Style.IsTextWrapped = true;&#10;/*&#9;&#9;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;&#9;oCell = oWorksheet.Cells.GetCell("G" + _idx);&#10;&#9;&#9;&#9;&#9;&#9;&#9;oCell.Value = check_type(aver_ind);&#10;&#9;&#9;&#9;&#9;&#9;&#9;oCell.Style.Borders.SetStyle("Thin");&#10;&#9;&#9;&#9;&#9;&#9;&#9;oCell.Style.Borders.SetColor("#000000");&#10;&#9;&#9;&#9;&#9;&#9;&#9;oCell.Style.FontSize = 10;&#10;&#9;&#9;&#9;&#9;&#9;&#9;oCell.Style.FontColor = (aver_ind != null ? color_font_dll(aver_ind) : "");&#10;&#9;&#9;&#9;&#9;&#9;&#9;oCell.Style.ForegroundColor = (aver_ind != null ? check_color_dll(aver_ind) : "");&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;&#9;oCell.Style.IsTextWrapped = true;&#10;*/&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;&#9;array_indicators[ArrayCount(array_indicators)] = arr_inds;&#10;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;arr_comps.indicators = array_indicators;&#10;&#9;&#9;&#9;&#9;&#9;array_competences[ArrayCount(array_competences)] = arr_comps;&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#10;&#9;&#9;Excel_html += "&#9;&#10;&#9;&#9;&#9;&lt;/table&gt;&#10;&#9;&#9;&#9;&lt;p style='font-size:4px;'&gt;&lt;/p&gt;";&#10;&#9;&#9;if (visible_legend)&#10;&#9;&#9;{&#9;&#9;&#10;&#9;&#9;&#9;Excel_html += "&#10;&#9;&#9;&#9;&#9;&lt;sup&gt;1&lt;/sup&gt;Интерпретация результатов производится по следующей шкале:&#10;&#9;&#9;&#9;&#9;&lt;table style=\"width: 30%\" cellspacing=\"0\" cellpadding=\"0\" class=\"style3_tab\"&gt;";&#10;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;str_temp = "";&#10;&#10;&#9;&#9;&#9;cnt_legend = ArrayCount(color_array_legend);&#10;&#9;&#9;&#9;for (_lg = (cnt_legend - 1); _lg &gt;=0; _lg--)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;str_temp += "&#10;&#9;&#9;&#9;&#9;&#9;&lt;tr&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&lt;td width='65%' class=\"style3\"&gt;" + color_array_legend[_lg].title + "&lt;/td&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&lt;td width='25%' align='center' class=\"style3\"&gt; " + color_array_legend[_lg].min + " - " + color_array_legend[_lg].max + " &lt;/td&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&lt;td width='10%' style='background-color: " + color_array_legend[_lg].color + ";'&gt;&amp;nbsp;&lt;/td&gt;&#10;&#9;&#9;&#9;&#9;&#9;&lt;/tr&gt;";&#9;&#9;&#9;&#10;&#9;&#9;&#9;}&#10;&#10;&#9;&#9;&#9;&#9;Excel_html += str_temp + "&#10;&#9;&#9;&#9;&#9;&lt;/table&gt;";&#10;&#9;&#9;}&#10;&#9;&#9;&#10;&#9;&#9;if (visible_legend)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;_idx += 2;&#10;&#9;&#9;&#9;oCell = oWorksheet.Cells.GetCell("A" + _idx); &#10;&#9;&#9;&#9;oCell.Value = "Интерпретация результатов производится по следующей шкале:"; &#10;&#9;&#9;&#9;oCell.Style.FontSize = 10;&#10;&#9;&#9;&#9;_idx++;&#10;&#9;&#9;&#9;for (_lg = (cnt_legend - 1); _lg &gt;=0; _lg--)&#10;&#9;&#9;&#9;{&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;oCell = oWorksheet.Cells.GetCell("A" + _idx); &#10;&#9;&#9;&#9;&#9;oCell.Value = color_array_legend[_lg].title;&#10;&#9;&#9;&#9;&#9;oCell.Style.Borders.SetStyle("Thin"); &#10;&#9;&#9;&#9;&#9;oCell.Style.Borders.SetColor("#000000"); &#10;&#9;&#9;&#9;&#9;oCell.Style.IsTextWrapped = true;&#10;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;oCell = oWorksheet.Cells.GetCell("B" + _idx); &#10;&#9;&#9;&#9;&#9;oCell.Value = (color_array_legend[_lg].min + " - " + color_array_legend[_lg].max) + ""; &#10;&#9;&#9;&#9;&#9;oCell.Style.Borders.SetStyle("Thin"); &#10;&#9;&#9;&#9;&#9;oCell.Style.Borders.SetColor("#000000"); &#10;&#9;&#9;&#9;&#9;oCell.Style.IsTextWrapped = true;&#10;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;oCell = oWorksheet.Cells.GetCell("C" + _idx); &#10;&#9;&#9;&#9;&#9;oCell.Value = ""; &#10;&#9;&#9;&#9;&#9;oCell.Style.Borders.SetStyle("Thin"); &#10;&#9;&#9;&#9;&#9;oCell.Style.Borders.SetColor("#000000"); &#10;&#9;&#9;&#9;&#9;oCell.Style.IsTextWrapped = true;&#10;&#9;&#9;&#9;&#9;oCell.Style.ForegroundColor = color_array_legend[_lg].color;&#10;&#9;&#9;&#9;&#9;_idx++;&#10;&#9;&#9;&#9;}&#10;&#9;&#9;}&#10;&#9;&#9;&#9;&#10;count_row += 8;&#10;&#10;// это график. №1&#10;//отчет для отображения в браузере (String)&#10;Excel_html_gr_1 = "";&#10;// заголовок листа Excel&#10;SHEET_CAPTION = "Заголовок листа";&#10;// флаг отображать ли таблицу данных графика в Excel&#10;SHOW_DATA_TABLE = false;&#10;// флаг отображать ли таблицу данных с веделением оценок с отклонением от порогового значения&#10;SHOW_DATA_TABLE_WITH_LAG = false;&#10;// порогвое значение отклонения оценки&#10;curLagValue = 1;&#10;// данные для построения графика. Элемент массива:&#10;ResultArray = Array();&#10;&#10;// заполним данные для графиков&#10;for (i = 1; i &lt;= 1; i++)&#10;{&#10; &#9;obj = Object();&#10;&#9;_nobj_text = '';&#10; &#9;// id графика&#10; &#9;obj.id = i;&#10;&#9;// заголовок графика&#10;&#9;obj.name = "Оценки по компетенциям(по категориям оценивающих)";&#10;&#9;// график или таблица&#10;&#9;obj.is_chart = true;//( i%3 != 0);&#10;&#9;// категории графика&#10;&#9;obj.categories = name_comp;&#10;&#9;// массив серий графика&#10;&#9;obj.rows = Array();&#10;&#9;name_obj = Array();&#10;&#9;mark_array = Array();&#10;&#9;&#10;&#9;mark_array[0] = selfconc;&#10;&#9;mark_array[1] = ass_leader;&#10;&#9;mark_array[2] = ass_coll;&#10;&#9;mark_array[3] = ass_subord;&#10;&#9;&#10;&#9;name_obj[0] = 'Самооценка';&#10;&#9;name_obj[1] = 'Оценка руководителя';&#10;&#9;name_obj[2] = 'Оценка коллег';&#10;&#9;name_obj[3] = 'Оценка подчиненных';&#10;&#9;for (j = 1; j &lt;= 4; j++)&#10;&#9;{&#10; &#9;&#9;row = Object();&#10;&#9;&#9;// id серии&#10; &#9;&#9;row.obj_id = j;&#10;&#9;&#9;// название серии&#9;&#9;&#9;&#10;&#9;&#9;row.obj_name = name_obj[j-1];&#10; &#9;&#9;// массив значений в серии&#10;&#9;&#9;row.data = Array(mark_array[j-1]);&#10;&#9;&#9;obj.rows[ArrayCount(obj.rows)] = row;&#10;&#9;}&#10;&#9;ResultArray[ArrayCount(ResultArray)] = obj;&#10;}&#10;&#10;&#9;array_colors = Array("#70A840", "#4070C0", "#F8E098", "#98C0E0", "#D0A028", "#A8D090", "#4060A8");&#10;//****&#10;if (str_srr_arr != '' &amp;&amp; str_srr_arr_full != '' &amp;&amp; name_comp != '')&#10;{&#10;&#9;_idx++;&#10;&#10;&#9;_idx += string_page;&#10;&#10;&#9;diff_page_int = ((_idx - 1) / string_page);&#10;&#9;diff_page_real = (Real(_idx - 1) / Real(string_page));&#10;&#9;diff_page = diff_page_int == diff_page_real ? diff_page_int : (diff_page_int + 1);&#9;&#10;&#10;&#9;chart01 = oWorksheet.Charts.AddFloatingChart("Column", 0, diff_page*570, 860, 600);&#10;&#9;chart01.ValueAxis.MinValue = 0;&#10;&#9;//chart01.ValueAxis.MaxValue = 100;&#10;&#9;_idx_color = 0;&#10;&#9;for (j = 1; j &lt;= 4; j++)&#10;&#9;{&#10;&#9;&#9;if (mark_array[j-1]!="")&#10;&#9;&#9;&#9;continue;&#10;&#9;&#9;series01 = chart01.AddSeries("Column", '{"' + StrReplace(mark_array[j-1], ",", '","') + '"}', true);&#10;&#9;&#9;series01.Name = name_obj[j-1];&#10;&#9;&#9;//series01.ForegroundColor = array_colors[_idx_color];&#10;&#9;&#9;series01.DataLabels.ShowValue = true;&#10;&#9;&#9;series01.DataLabels.Position = "Center";&#10;&#9;&#9;_idx_color++;&#10;&#9;}&#10;&#10;&#9;// Добавляем линейный график  &#10;&#9;oSeries01 = chart01.AddSeries("Line", '{"' + StrReplace(str_srr_arr, ",", '","') + '"}', true);&#10;&#9;oSeries01.Area.BackgroundColor = "#DE0006";&#10;&#9;oSeries01.DataLabels.ShowValue = true;&#10;&#9;oSeries01.DataLabels.Position = "Below";&#10;&#9;oSeries01.Border.Color = "#DE0006";&#10;&#9;oSeries01.Border.WeightPx = 5;&#10;&#9;oSeries01.DataLabels.Font.Color = "#DE0006";&#10;&#9;oSeries01.DataLabels.Font.IsBold = true;&#10;&#9;oSeries01.Name = "Средняя оценка";&#10;/*&#10;&#9;// Добавляем линейный график 2&#10;&#9;oSeries011 = chart01.AddSeries("Line", '{"' + StrReplace(str_srr_arr_full, ",", '","') + '"}', true);&#10;&#9;oSeries011.Area.BackgroundColor = "#F8C000";&#10;&#9;oSeries011.DataLabels.ShowValue = true;&#10;&#9;oSeries011.DataLabels.Position = "Below";&#10;&#9;oSeries011.Border.Color = "#F8C000";&#10;&#9;oSeries011.Border.WeightPx = 5;&#10;&#9;oSeries011.DataLabels.Font.Color = "#000000";&#10;&#9;oSeries011.DataLabels.Font.IsBold = true;&#10;&#9;oSeries011.Name = "Фактическая модель ТОП-500 ГО";&#9;&#10;*/&#10;&#10;  chart01.Title.Text = "Оценки по компетенциям(по категориям оценивающих)"; &#10;  chart01.Title.IsBold = true;&#10;  chart01.LegendPosition = "Bottom";&#10;  name_comp = StrReplace(name_comp, ",", ";");&#10;  chart01.CategoryData = "{" + StrReplace(name_comp, "|", ",") + "}";&#10;  chart01.CategoryAxis.TickLabels.RotationAngle = 0;&#10;  &#10;  chart01.PlotArea.Area.ForegroundColor = "#FFFFFF";&#10;  chart01.PlotArea.Area.BackgroundColor = "#FFFFFF";&#10;  &#10;  chart01.ShowCategoryGriglines = true;&#10;}&#10; //*** &#10;&#10;cnt = 18;&#10;Excel_html_Export_Up = "";&#10;&#10;Excel_html_Export = ""; &#10;Name_ser_line_2 = "Средняя оценка"; &#10;i = 0;&#10;_ind=0;&#10;for (_graph in ResultArray)&#10;{&#10;&#9;i++;&#10;&#10;&#9;array_colors = Array("#70A840", "#4070C0", "#F8E098", "#98C0E0", "#D0A028", "#A8D090", "#4060A8");&#10;&#9;if(ArrayCount(mark_array) != 0 &amp;&amp; str_srr_arr != 0 &amp;&amp; str_srr_arr_full != 0 &amp;&amp; name_comp != '')&#10;&#9;{&#10;&#9;&#9;oExcelDoc1 = new ActiveXObject("Websoft.Office.Excel.Document");&#10;&#9;&#9;oExcelDoc1.CreateWorkBook();&#10;&#9;&#9;oWorksheet1 = oExcelDoc1.GetWorksheet(0);&#10;&#9;&#9;chart1 = oWorksheet1.Charts.AddFloatingChart("Column", 0, 0, 860, 620);&#10;&#9;&#9;chart1.ValueAxis.MinValue = 0;&#10;&#9;&#9;//chart1.ValueAxis.MaxValue = 100;&#10;&#9;&#9;_idx_color = 0;&#10;&#9;&#9;for (j = 1; j &lt;= 4; j++)&#10;&#9;&#9;{&#9;&#10;&#9;&#9;&#9;if (mark_array[j-1]!="")&#10;&#9;&#9;&#9;&#9;continue;&#10;&#9;&#9;&#9;series1 = chart1.AddSeries("Column", "{" + mark_array[j-1] + "}", true); &#10;&#9;&#9;&#9;series1.Name = name_obj[j-1];&#10;&#9;&#9;&#9;//series1.ForegroundColor = array_colors[_idx_color];&#10;&#9;&#9;&#9;series1.DataLabels.ShowValue = true;&#10;&#9;&#9;&#9;series1.DataLabels.Position = "Center";&#10;&#9;&#9;&#9;_idx_color++;&#10;&#9;&#9;}&#10;&#9;&#9;&#10;&#9;&#9;// Добавляем линейный график  &#10;&#9;&#9;oSeries = chart1.AddSeries("Line", "{" + str_srr_arr + "}", true);&#10;&#9;&#9;oSeries.Area.BackgroundColor = "#DE0006";&#10;&#9;&#9;oSeries.DataLabels.ShowValue = true;&#10;&#9;&#9;oSeries.DataLabels.Position = "Below";&#10;&#9;&#9;oSeries.Border.Color = "#DE0006";&#10;&#9;&#9;oSeries.Border.WeightPx = 5;&#10;&#9;&#9;oSeries.DataLabels.Font.Color = "#DE0006";&#10;&#9;&#9;oSeries.DataLabels.Font.IsBold = true;&#10;&#9;&#9;oSeries.Name = Name_ser_line_2;&#9;&#10;/*&#9;&#9;&#10;&#9;&#9;// Добавляем линейный график 2 &#10;&#9;&#9;oSeries_22 = chart1.AddSeries("Line", "{" + str_srr_arr_full + "}", true);&#10;&#9;&#9;oSeries_22.Area.BackgroundColor = "#F8C000";&#10;&#9;&#9;oSeries_22.DataLabels.ShowValue = true;&#10;&#9;&#9;oSeries_22.DataLabels.Position = "Below";&#10;&#9;&#9;oSeries_22.Border.Color = "#F8C000";&#10;&#9;&#9;oSeries_22.Border.WeightPx = 5;&#10;&#9;&#9;oSeries_22.DataLabels.Font.Color = "#000000";&#10;&#9;&#9;oSeries_22.DataLabels.Font.IsBold = true;&#10;&#9;&#9;oSeries_22.Name = "Фактическая модель ТОП-500 ГО";&#9;&#10;*/&#9;&#9;&#10;&#10;&#9;  chart1.Title.Text = "Оценки по компетенциям(по категориям оценивающих)"; &#10;&#9;  chart1.Title.IsBold = true;&#10;&#9;  chart1.LegendPosition = "Bottom";&#10;&#9;  chart1.CategoryData = "{" + StrReplace(name_comp, "|", ",") + "}";&#10;&#9;  chart1.CategoryAxis.TickLabels.RotationAngle = 0;&#10;&#9;  &#10;&#9;  chart1.PlotArea.Area.ForegroundColor = "#FFFFFF";&#10;&#9;  chart1.PlotArea.Area.BackgroundColor = "#FFFFFF";&#10;&#9;  &#10;&#9;  chart1.ShowCategoryGriglines = true;&#10;&#9;  str_image = chart1.GetImageInBase64String('png');&#10;&#10;&#9;&#9;Excel_html += "&#10;&#9;&#9;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&#10;&#9;&#9; &lt;div style='text-align: center'&gt;&lt;img src='data:image/png;base64, " + str_image + " '&gt;&lt;/div&gt;&#10;&#9;&#9;";&#9;&#10;&#9;}&#10;} //for (_graph in ResultArray)&#10;&#10;// график №2. График в виде горизонтальных столбцов.&#10;&#10;//отчет для отображения в браузере (String)&#10;Excel_html_gr_1 += "";&#10;// заголовок листа Excel&#10;SHEET_CAPTION = "Заголовок листа";&#10;// флаг отображать ли таблицу данных графика в Excel&#10;SHOW_DATA_TABLE = false;&#10;// флаг отображать ли таблицу данных с веделением оценок с отклонением от порогового значения&#10;SHOW_DATA_TABLE_WITH_LAG = false;&#10;// порогвое значение отклонения оценки&#10;curLagValue = 1;&#10;// данные для построения графика. Элемент массива:&#10;ResultArray = Array();&#10;&#10;// заполним данные для графиков&#10;for (i = 1; i &lt;= 1; i++)&#10;{&#10; &#9;obj = Object();&#10; &#9;// id графика&#10; &#9;obj.id = i;&#10;&#9;// заголовок графика&#10;&#9;obj.name = "Средние значения оценок по компетенциям";&#10;&#9;// график или таблица&#10;&#9;obj.is_chart = true;//( i%3 != 0);&#10;&#9;// категории графика&#10;&#9;obj.categories = name_comp;&#10;&#9;// массив серий графика&#10;&#9;obj.rows = Array();&#10;&#9;for (j = 1; j &lt;= 1; j++)&#10;&#9;{&#10; &#9;&#9;row = Object();&#10;&#9;&#9;// название серии&#9;&#9;&#9;&#10;&#9;&#9;row.obj_name = "Серия " + j; &#10; &#9;&#9;// массив значений в серии&#10;&#9;&#9;row.data = Array(arr_aver);&#10;&#9;&#9;obj.rows[ArrayCount(obj.rows)] = row;&#10;&#9;}&#10;&#9;ResultArray[ArrayCount(ResultArray)] = obj;&#10;}&#10;//**&#10;if (arr_aver != '' &amp;&amp; name_comp != '')&#10;{&#10;&#9;_idx += 2;&#10;&#9;_idx += string_page;&#10;&#10;&#9;diff_page_int = ((_idx - 1) / string_page);&#10;&#9;diff_page_real = (Real(_idx - 1) / Real(string_page));&#10;&#9;diff_page = diff_page_int == diff_page_real ? diff_page_int : (diff_page_int + 1);&#9;&#10;&#9;&#9;&#10;&#9;chart02 = oWorksheet.Charts.AddFloatingChart("Bar", 0, diff_page*590, 860, 600);&#9;&#10;&#9;chart02.ValueAxis.MinValue = 0;&#10;&#9;//chart02.ValueAxis.MaxValue = 100;&#10;&#10;&#9;//series02 = chart02.AddSeries("Bar", "{" + arr_aver + "}", true);&#10;&#9;series02 = chart02.AddSeries("Bar", '{"' + StrReplace(arr_aver, ",", '","') + '"}', true);&#10;&#9;series02.ForegroundColor = "#00A5F7";&#10;&#9;series02.DataLabels.ShowValue = true;&#10;&#9;series02.DataLabels.Position = "center";&#10;&#10;&#9;chart02.Title.Text = "Средние значения оценок по компетенциям"; &#10;&#9;chart02.Title.IsBold = true;&#10;&#9;chart02.CategoryData = "{" + StrReplace(StrReplace(name_comp, ",", " "), "|", ",") + "}";&#10;&#9;chart02.ShowLegend = false;&#10;&#10;&#9;chart02.PlotArea.Area.ForegroundColor = "#FFFFFF";&#10;&#9;chart02.PlotArea.Area.BackgroundColor = "#FFFFFF";&#10;&#10;&#9;chart02.ShowCategoryGriglines = true;&#10;&#10;&#9;for (_graph in ResultArray)&#10;&#9;{&#10;&#9;&#9;i++;&#10;&#10;&#9;&#9;oExcelDoc2 = new ActiveXObject("Websoft.Office.Excel.Document");&#10;&#9;&#9;oExcelDoc2.CreateWorkBook();&#10;&#9;&#9;oWorksheet2 = oExcelDoc2.GetWorksheet(0);&#10;&#9;&#9;chart2 = oWorksheet2.Charts.AddFloatingChart("Bar", 0, 0, 860, 620);&#10;&#9;&#9;chart2.ValueAxis.MinValue = 0;&#10;&#9;&#9;//chart2.ValueAxis.MaxValue = 100;&#10;&#10;&#9;&#9;series2 = chart2.AddSeries("Bar", "{" + arr_aver + "}", true); &#10;&#9;&#9;series2.ForegroundColor = "#00A5F7";&#10;&#9;&#9;series2.DataLabels.ShowValue = true;&#10;&#9;&#9;series2.DataLabels.Position = "center";&#10;&#10;&#9;&#9;chart2.Title.Text = "Средние значения оценок по компетенциям"; &#10;&#9;&#9;chart2.Title.IsBold = true;&#10;&#9;&#9;chart2.CategoryData = "{" + StrReplace(StrReplace(name_comp, ",", " "), "|", ",") + "}";&#10;&#9;&#9;chart2.ShowLegend = false;&#10;&#10;&#9;&#9;chart2.PlotArea.Area.ForegroundColor = "#FFFFFF";&#10;&#9;&#9;chart2.PlotArea.Area.BackgroundColor = "#FFFFFF";&#10;&#10;&#9;&#9;chart2.ShowCategoryGriglines = true;&#10;&#9;&#9;str_image = chart2.GetImageInBase64String('png');&#10;&#10;&#9;Excel_html += "&#10;&#9;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&#10;&#9; &lt;div style='text-align: center'&gt;&lt;img src='data:image/png;base64, " + str_image + " '&gt;&lt;/div&gt;&#10;&#9;";&#10;&#9;//****&#10;&#9;} // for (_graph in ResultArray)&#10;}&#10;&#10;array_competences_max = sort_array(array_competences, "-");&#10;array_competences_min = sort_array(array_competences, "+");&#10;&#10;Excel_html_up_table = "&#10;&lt;table cellspacing=\"0\" cellpadding=\"0\" style='' border='0'&gt;&#10;&#9;&lt;tr&gt;&#10;&#9;&#9;&lt;td height=17 colspan='3' class=\"style3\" align='center'&gt;&lt;strong&gt;Сильные стороны&lt;/strong&gt;&lt;/td&gt;&#10;&#9;&#9;&lt;td height=17 colspan='4' class=\"style3\" align='center'&gt;&lt;strong&gt;Зоны развития&lt;/strong&gt;&lt;/td&gt;&#10;&#9;&#9;&lt;td&gt;&lt;/td&gt;&#10;&#9;&lt;/tr&gt;&#10;&#9;&lt;tr&gt;&#10;&#9;&#9;&lt;td height=17 colspan='3' class=\"style3\" align='center'&gt;&lt;i&gt;1-2 компетенции, получившие самую высокую оценку:&lt;/i&gt;&lt;/td&gt;&#10;&#9;&#9;&lt;td height=17 colspan='4' class=\"style3\" align='center'&gt;&lt;i&gt;1-2 компетенции, получившие самую низкую оценку:&lt;/i&gt;&lt;/td&gt;&#10;&#9;&#9;&lt;td&gt;&lt;/td&gt;&#10;&#9;&lt;/tr&gt;&#9;&#10;&#9;"; &#10;&#10;&#9;&#9;&#9;_idx += string_page;&#10;&#9;&#9;&#9;//_idx++;&#10;&#9;&#9;&#9;diff_page_int = ((_idx - 1) / string_page);&#10;&#9;&#9;&#9;diff_page_real = (Real(_idx - 1) / Real(string_page));&#10;&#9;&#9;&#9;diff_page = diff_page_int == diff_page_real ? diff_page_int : (diff_page_int + 1);&#9;&#10;&#9;&#9;&#9;&#10;&#9;&#9;&#9;_idx = diff_page * string_page + 10;&#10;&#10;&#9;&#9;&#9;oCell = oWorksheet.Cells.GetCell("A" + _idx); &#10;&#9;&#9;&#9;oWorksheet.Cells.Merge(_idx - 1, 0, 1, 2);&#10;&#9;&#9;&#9;oCell.Value = "Сильные стороны"; &#10;&#9;&#9;&#9;oCell.Style.Borders.SetStyle("Thin"); &#10;&#9;&#9;&#9;oCell.Style.Borders.SetColor("#000000"); &#10;&#9;&#9;&#9;oCell.Style.IsTextWrapped = true;&#10;&#9;&#9;&#9;oCell.Style.IsBold = true;&#10;&#9;&#9;&#9;oCell.Style.HorizontalAlignment = "Center";&#10;&#9;&#9;&#9;&#10;&#9;&#9;&#9;oCell = oWorksheet.Cells.GetCell("C" + _idx); &#10;&#9;&#9;&#9;oWorksheet.Cells.Merge(_idx - 1, 2, 1, 5);&#10;&#9;&#9;&#9;oCell.Value = "Зоны развития"; &#10;&#9;&#9;&#9;oCell.Style.Borders.SetStyle("Thin"); &#10;&#9;&#9;&#9;oCell.Style.Borders.SetColor("#000000"); &#10;&#9;&#9;&#9;oCell.Style.IsTextWrapped = true;&#10;&#9;&#9;&#9;oCell.Style.IsBold = true;&#10;&#9;&#9;&#9;oCell.Style.HorizontalAlignment = "Center";&#10;&#9;&#9;&#9;_idx++;&#10;&#9;&#9;&#9;&#10;&#9;&#9;&#9;oCell = oWorksheet.Cells.GetCell("A" + _idx); &#10;&#9;&#9;&#9;oWorksheet.Cells.Merge(_idx - 1, 0, 1, 2);&#10;&#9;&#9;&#9;oCell.Value = "1-2 компетенции, получившие самую высокую оценку:"; &#10;&#9;&#9;&#9;oCell.Style.Borders.SetStyle("Thin"); &#10;&#9;&#9;&#9;oCell.Style.Borders.SetColor("#000000"); &#10;&#9;&#9;&#9;oCell.Style.IsTextWrapped = true;&#10;&#9;&#9;&#9;oCell.Style.IsItalic = true;&#10;&#9;&#9;&#9;oCell.Style.HorizontalAlignment = "Center";&#10;&#9;&#9;&#9;&#10;&#9;&#9;&#9;oCell = oWorksheet.Cells.GetCell("C" + _idx); &#10;&#9;&#9;&#9;oWorksheet.Cells.Merge(_idx - 1, 2, 1, 5);&#10;&#9;&#9;&#9;oCell.Value = "1-2 компетенции, получившие самую низкую оценку:"; &#10;&#9;&#9;&#9;oCell.Style.Borders.SetStyle("Thin"); &#10;&#9;&#9;&#9;oCell.Style.Borders.SetColor("#000000"); &#10;&#9;&#9;&#9;oCell.Style.IsTextWrapped = true;&#10;&#9;&#9;&#9;oCell.Style.IsItalic = true;&#10;&#9;&#9;&#9;oCell.Style.HorizontalAlignment = "Center";&#10;&#9;&#9;&#9;_idx++;&#10;for (i = 0; i &lt;= 1; i++)&#10;{&#10;&#9;&#9;array_indics_max = new Array();&#10;&#9;&#9;array_indics_min = new Array();&#10;&#9;if (ArrayCount(array_competences_max) != 0 &amp;&amp; ArrayCount(array_competences_min) != 0 )&#10;&#9;{&#10;&#9;&#9;Excel_html_up_table += "&#10;&#9;&#9;&#9;&lt;tr&gt;&#10;&#9;&#9;&#9;&#9;&lt;td class=\"style3\" colspan='3' style='padding-left: 5px; white-space: normal;'&gt;&lt;strong&gt;" + array_competences_max[i].name_comp + "&lt;/strong&gt;&lt;/td&gt;&#10;&#9;&#9;&#9;&#9;&lt;td class=\"style3\" colspan='4' style='padding-left: 5px; white-space: normal;'&gt;&lt;strong&gt;" + array_competences_min[i].name_comp + "&lt;/strong&gt;&lt;/td&gt;&#10;&#9;&#9;&#9;&#9;&lt;td&gt;&lt;/td&gt;&#10;&#9;&#9;&#9;&lt;/tr&gt;";&#10;&#9;&#9;&#9;&#9;oCell = oWorksheet.Cells.GetCell("A" + _idx);&#10;&#9;&#9;&#9;&#9;oCell.Style.IsTextWrapped = true;&#10;&#9;&#9;&#9;&#9;oCell = oWorksheet.Cells.GetCell("B" + _idx);&#10;&#9;&#9;&#9;&#9;oCell.Style.IsTextWrapped = true;&#10;&#10;&#9;&#9;&#9;&#9;oCell = oWorksheet.Cells.GetCell("A" + _idx); &#10;&#9;&#9;&#9;&#9;oWorksheet.Cells.Merge(_idx - 1, 0, 1, 2);&#10;&#9;&#9;&#9;&#9;oCell.Value = array_competences_max[i].name_comp; &#10;&#9;&#9;&#9;&#9;oCell.Style.Borders.SetStyle("Thin"); &#10;&#9;&#9;&#9;&#9;oCell.Style.Borders.SetColor("#000000"); &#10;&#9;&#9;&#9;&#9;oCell.Style.IsTextWrapped = true;&#10;&#9;&#9;&#9;&#9;oCell.Style.IsBold = true;&#10;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;oCell = oWorksheet.Cells.GetCell("C" + _idx); &#10;&#9;&#9;&#9;&#9;oWorksheet.Cells.Merge(_idx - 1, 2, 1, 5);&#10;&#9;&#9;&#9;&#9;oCell.Value = array_competences_min[i].name_comp; &#10;&#9;&#9;&#9;&#9;oCell.Style.Borders.SetStyle("Thin"); &#10;&#9;&#9;&#9;&#9;oCell.Style.Borders.SetColor("#000000"); &#10;&#9;&#9;&#9;&#9;oCell.Style.IsTextWrapped = true;&#10;&#9;&#9;&#9;&#9;oCell.Style.IsBold = true;&#10;&#9;&#9;&#9;&#9;_idx++;&#10;&#9;&#9;&#10;&#9;&#9;array_indics_max = sort_array(array_competences_max[i].indicators, "-");&#10;&#9;&#9;array_indics_min = sort_array(array_competences_min[i].indicators, "+");&#10;&#9;}&#10;&#10;&#9;for (k = 0; k &lt;= 1; k++)&#10;&#9;{&#10;&#9;&#9;if (ArrayCount(array_indics_max)&gt;k &amp;&amp; ArrayCount(array_indics_min) &gt;k)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;Excel_html_up_table += "&#10;&#9;&#9;&#9;&#9;&lt;tr&gt;&#10;&#9;&#9;&#9;&#9;&#9;&lt;td class=\"style3\" colspan='3' style='padding-left: 5px; white-space: normal; vertical-align:top;'&gt;&lt;i&gt;" + array_indics_max[k].GetOptProperty("name_ind","") + "&lt;/i&gt;&lt;/td&gt;&#10;&#9;&#9;&#9;&#9;&#9;&lt;td class=\"style3\" colspan='4' style='padding-left: 5px; white-space: normal; vertical-align:top;'&gt;&lt;i&gt;" + array_indics_min[k].GetOptProperty("name_ind","") + "&lt;/i&gt;&lt;/td&gt;&#10;&#9;&#9;&#9;&#9;&#9;&lt;td style='border:none'&gt;#999#&lt;/td&gt;&#10;&#9;&#9;&#9;&#9;&lt;/tr&gt;";&#10;&#10;&#9;&#9;&#9;oCell = oWorksheet.Cells.GetCell("A" + _idx);&#10;&#9;&#9;&#9;oWorksheet.Cells.SetRowHeight((_idx - 1), 45);&#10;&#9;&#9;&#9;oWorksheet.Cells.Merge(_idx - 1, 0, 1, 2);&#10;&#9;&#9;&#9;oCell.Value = array_indics_max[k].name_ind; &#10;&#9;&#9;&#9;oCell.Style.Borders.SetStyle("Thin"); &#10;&#9;&#9;&#9;oCell.Style.Borders.SetColor("#000000"); &#10;&#9;&#9;&#9;oCell.Style.IsTextWrapped = true;&#10;&#9;&#9;&#9;oCell.Style.IsItalic = true;&#10;&#9;&#9;&#10;&#9;&#9;&#9;oCell = oWorksheet.Cells.GetCell("C" + _idx);&#10;&#9;&#9;&#9;oWorksheet.Cells.Merge(_idx - 1, 2, 1, 5);&#10;&#9;&#9;&#9;oCell.Value = array_indics_min[k].name_ind; &#10;&#9;&#9;&#9;oCell.Style.Borders.SetStyle("Thin"); &#10;&#9;&#9;&#9;oCell.Style.Borders.SetColor("#000000"); &#10;&#9;&#9;&#9;oCell.Style.IsTextWrapped = true;&#10;&#9;&#9;&#9;oCell.Style.IsItalic = true;&#10;&#9;&#9;&#9;&#10;&#9;&#9;&#9;oCell = oWorksheet.Cells.GetCell("D" + _idx);&#9;&#9;&#9;&#10;&#9;&#9;&#9;oCell.Value = "&amp;nbsp;"; &#10;&#9;&#9;&#9;oCell.Style.IsTextWrapped = true;&#9;&#9;&#9;&#10;&#9;&#9;&#9;_idx++;&#10;&#9;&#9;}&#10;&#9;}&#10;}&#10;_idx++;&#10;Excel_html_up_table += "&#10;&lt;/table&gt;&#10;&lt;p&gt;&lt;strong&gt;Комментарии к оценке:&lt;/strong&gt;&lt;/p&gt;";&#10;&#10;&#9;oCell = oWorksheet.Cells.GetCell("A" + _idx); &#10;&#9;oCell.Value = "Комментарии к оценке:";&#10;&#9;oCell.Style.FontSize = 10;&#10;&#9;oCell.Style.IsBold = true;&#10;&#9;_idx++;&#10;&#10;&#9;oCell = oWorksheet.Cells.GetCell("A" + _idx);&#10;&#9;oWorksheet.Cells.Merge(_idx - 1, 0, 1, 3);&#10;&#9;oCell.Value = "Компетенция";&#10;&#9;oCell.Style.Borders.SetStyle("Thin");&#10;&#9;oCell.Style.Borders.SetColor("#000000");&#10;&#9;oCell.Style.IsTextWrapped = true;&#10;&#9;oCell.Style.IsBold = true;&#10;&#10;&#9;oCell = oWorksheet.Cells.GetCell("D" + _idx);&#10;&#9;oCell.Value = "Роль";&#10;&#9;oCell.Style.Borders.SetStyle("Thin");&#10;&#9;oCell.Style.Borders.SetColor("#000000");&#10;&#9;oCell.Style.IsTextWrapped = true;&#10;&#9;oCell.Style.IsBold = true;&#10;&#9;&#10;&#9;oCell = oWorksheet.Cells.GetCell("E" + _idx); &#10;&#9;oWorksheet.Cells.Merge(_idx - 1, 4, 1, 3);&#10;&#9;oCell.Value = "Комментарии"; &#10;&#9;oCell.Style.Borders.SetStyle("Thin"); &#10;&#9;oCell.Style.Borders.SetColor("#000000"); &#10;&#9;oCell.Style.IsTextWrapped = true;&#10;&#9;oCell.Style.IsBold = true;&#10;&#9;_idx++;&#10;&#10;// это массив анкет&#10;ancetsDoc = undefined;&#10;comp_elem = XQuery("for $elem in pas where $elem/person_id = " + curCollID + " and $elem/assessment_appraise_id = " + curAssID + " return $elem");&#10;ancets_elem = ArrayOptFirstElem(comp_elem);&#10;if (ancets_elem != undefined)&#10;{&#10;&#9;try&#10;&#9;{&#10;&#9;&#9;ancetsDoc = OpenDoc(UrlFromDocID(ancets_elem.id)).TopElem;&#10;&#9;}&#10;&#9;catch(err) &#10;&#9;{&#10;&#9;&#9;ancetsDoc = undefined;&#10;&#9;}&#10;}&#10;array_status = Array("manager", "coll", "staff");&#10;&#10;if (ancetsDoc != undefined)&#10;{&#10;&#9;Excel_html_up_table += "&#10;&#9;&lt;table style=\"width: 100%\" cellspacing=\"0\" cellpadding=\"0\" border='0'&gt;&#10;&#9;&#9;&lt;tr&gt;&#10;&#9;&#9;&#9;&lt;td height=17 class=\"style3\" style='padding-left: 5px'&gt;&lt;strong&gt;Компетенция&lt;/strong&gt;&lt;/td&gt;&#10;&#9;&#9;&#9;&lt;td height=17 colspan='2' class=\"style3\" width='10%' style='padding-left: 5px'&gt;&lt;strong&gt;Роль&lt;/strong&gt;&lt;/td&gt;&#10;&#9;&#9;&#9;&lt;td height=17 colspan='2' class=\"style3\" style='padding-left: 5px'&gt;&lt;strong&gt;Комментарии&lt;/strong&gt;&lt;/td&gt;&#10;&#9;&#9;&#9;&lt;td&gt;&lt;/td&gt;&#10;&#9;&#9;&lt;/tr&gt;";&#10;&#9;for ( _cmps in ancetsDoc.competences)&#10;&#9;{&#10;&#9;&#9;scht = 0;&#10;&#9;&#9;for (_st in array_status)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;new_pas = ArraySelect(comp_elem, "This.status == _st");&#10;&#9;&#9;&#9;switch (_st) &#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;case "manager": &#10;&#9;&#9;&#9;&#9;&#9;st_val = "Руководитель"; &#10;&#9;&#9;&#9;&#9;&#9;break; &#10;&#9;&#9;&#9;&#9;case "coll": &#10;&#9;&#9;&#9;&#9;&#9;st_val = "Коллега"; &#10;&#9;&#9;&#9;&#9;&#9;break; &#10;&#9;&#9;&#9;&#9;case "staff": &#10;&#9;&#9;&#9;&#9;&#9;st_val = "Подчиненный"; &#10;&#9;&#9;&#9;&#9;&#9;break; &#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;for (_new in new_pas)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;try&#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;newDoc = OpenDoc(UrlFromDocID(_new.id)).TopElem;&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;catch(err)&#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;continue;&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;find_comps = ArrayOptFind(newDoc.competences, "This.competence_id == _cmps.competence_id");&#10;&#9;&#9;&#9;&#9;commentariy = "";&#10;&#9;&#9;&#9;&#9;if (find_comps != undefined)&#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;commentariy = find_comps.comment;&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;if (commentariy != "" &amp;&amp; commentariy != null)&#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;_cmpsFE = _cmps.competence_id.OptForeignElem;&#10;&#9;&#9;&#9;&#9;&#9;_cmps_name = _cmpsFE != undefined ? _cmpsFE.name.Value : "";&#10;&#9;&#9;&#9;&#9;&#9;Excel_html_up_table += "&#10;&#9;&#9;&#9;&#9;&#9;&#9;&lt;tr&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;td class=\"style3\" style='vertical-align:top;'&gt;" + ( scht == 0 ? _cmps_name : "&amp;nbsp;") + "&lt;/td&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;td class=\"style3\" colspan='2' style='vertical-align:top;'&gt;" + st_val + "&lt;/td&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;td class=\"style3\" colspan='2' style='vertical-align:top;'&gt;" + commentariy + "&lt;/td&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&lt;td style='border:none'&gt;#999#&lt;/td&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&lt;/tr&gt;";&#10;&#10;&#9;&#9;&#9;&#9;&#9;oCell = oWorksheet.Cells.GetCell("A" + _idx); &#10;&#9;&#9;&#9;&#9;&#9;oWorksheet.Cells.Merge(_idx - 1, 0, 1, 3);&#10;&#9;&#9;&#9;&#9;&#9;oWorksheet.Cells.SetRowHeight((_idx - 1), 45);&#10;&#9;&#9;&#9;&#9;&#9;oCell.Value = ( scht == 0 ? _cmps_name : "");&#10;&#9;&#9;&#9;&#9;&#9;oCell.Style.Borders.SetStyle("Thin"); &#10;&#9;&#9;&#9;&#9;&#9;oCell.Style.Borders.SetColor("#000000"); &#10;&#9;&#9;&#9;&#9;&#9;oCell.Style.IsTextWrapped = true;&#10;&#9;&#9;&#9;&#9;&#9;oCell.Style.IsItalic = true;&#10;&#9;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;oCell = oWorksheet.Cells.GetCell("D" + _idx); &#10;&#9;&#9;&#9;&#9;&#9;oWorksheet.Cells.Merge(_idx - 1, 2, 1, 1);&#10;&#9;&#9;&#9;&#9;&#9;oCell.Value = st_val; &#10;&#9;&#9;&#9;&#9;&#9;oCell.Style.Borders.SetStyle("Thin"); &#10;&#9;&#9;&#9;&#9;&#9;oCell.Style.Borders.SetColor("#000000"); &#10;&#9;&#9;&#9;&#9;&#9;oCell.Style.IsTextWrapped = true;&#10;&#9;&#9;&#9;&#9;&#9;oCell.Style.IsItalic = true;&#10;&#9;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;oCell = oWorksheet.Cells.GetCell("E" + _idx); &#10;&#9;&#9;&#9;&#9;&#9;oWorksheet.Cells.Merge(_idx - 1, 4, 1, 3);&#10;&#9;&#9;&#9;&#9;&#9;oCell.Value = commentariy; &#10;&#9;&#9;&#9;&#9;&#9;oCell.Style.Borders.SetStyle("Thin"); &#10;&#9;&#9;&#9;&#9;&#9;oCell.Style.Borders.SetColor("#000000"); &#10;&#9;&#9;&#9;&#9;&#9;oCell.Style.IsTextWrapped = true;&#10;&#9;&#9;&#9;&#9;&#9;oCell.Style.IsItalic = true;&#10;&#9;&#9;&#9;&#9;&#9;_idx++;&#10;&#10;&#9;&#9;&#9;&#9;&#9;scht++;&#9;&#10;&#9;&#9;&#9;&#9;}&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;}&#10;&#9;&#9;}&#10;&#9;}&#10;&#9;Excel_html_up_table +="&#10;&#9;&lt;/table&gt;";&#10;&#10;&#9;array_status2 = Array("manager", "coll", "staff", "self");&#10;&#10;&#9;Excel_html_up_table += "&#10;&#9;&lt;p&gt;&lt;strong&gt;&#10;&#9;Итоговый комментарий к форме:&#10;&#9;&lt;/strong&gt;&lt;/p&gt;&#10;&#9;&lt;table style=\"width: 100%\" class=\"style3_tab\" cellspacing=\"0\" cellpadding=\"0\"&gt;&#10;&#9;&#9;&lt;tr height=17&gt;&#10;&#9;&#9;&#9;&lt;td class=\"style3\" align='center'&gt;&lt;strong&gt;Роль&lt;/strong&gt;&lt;/td&gt;&#10;&#9;&#9;&#9;&lt;td class=\"style3\" colspan='4' align='center'&gt;&lt;strong&gt;Комментарий&lt;/strong&gt;&lt;/td&gt;&#10;&#9;&#9;&lt;/tr&gt;";&#10;&#9;&#9;&#10;&#9;oCell = oWorksheet.Cells.GetCell("A" + _idx); &#10;&#9;oCell.Value = "";&#10;&#9;oCell.Style.FontSize = 10;&#10;&#9;oCell.Style.IsBold = true;&#10;&#9;_idx++;&#10;&#10;&#9;oCell = oWorksheet.Cells.GetCell("A" + _idx); &#10;&#9;oCell.Value = "Итоговый комментарий к форме: ";&#10;&#9;oCell.Style.FontSize = 10;&#10;&#9;oCell.Style.IsBold = true;&#10;&#9;_idx++;&#10;&#10;&#9;oCell = oWorksheet.Cells.GetCell("A" + _idx);&#10;&#9;oWorksheet.Cells.Merge(_idx - 1, 0, 1, 2);&#10;&#9;oCell.Value = "Роль";&#10;&#9;oCell.Style.Borders.SetStyle("Thin");&#10;&#9;oCell.Style.Borders.SetColor("#000000");&#10;&#9;oCell.Style.IsTextWrapped = true;&#10;&#9;oCell.Style.IsBold = true;&#10;&#10;&#9;oCell = oWorksheet.Cells.GetCell("C" + _idx);&#10;&#9;oWorksheet.Cells.Merge(_idx - 1, 2, 1, 5);&#10;&#9;oCell.Value = "Комментарий";&#10;&#9;oCell.Style.Borders.SetStyle("Thin");&#10;&#9;oCell.Style.Borders.SetColor("#000000");&#10;&#9;oCell.Style.IsTextWrapped = true;&#10;&#9;oCell.Style.IsBold = true;&#10;&#9;_idx++;&#10;&#9;&#9;&#10;&#9;_comments = XQuery("for $elem in pas where $elem/person_id = " + curCollID + " and $elem/assessment_appraise_id = " + curAssID + " return $elem");&#10;&#10;&#9;for (_comm in _comments)&#10;&#9;{&#10;&#9;&#9;try&#10;&#9;&#9;&#9;CollDoc = OpenDoc(UrlFromDocID(_comm.id)).TopElem;&#10;&#9;&#9;catch(err)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;continue;&#10;&#9;&#9;}&#10;&#10;&#9;&#9;st_val = '';&#10;&#9;&#9;switch (CollDoc.status) &#10;&#9;&#9;{&#10;&#9;&#9;&#9;case "manager": &#10;&#9;&#9;&#9;&#9;st_val = "Руководитель"; &#10;&#9;&#9;&#9;&#9;break; &#10;&#9;&#9;&#9;case "coll": &#10;&#9;&#9;&#9;&#9;st_val = "Коллега"; &#10;&#9;&#9;&#9;&#9;break; &#10;&#9;&#9;&#9;case "staff": &#10;&#9;&#9;&#9;&#9;st_val = "Подчиненный"; &#10;&#9;&#9;&#9;&#9;break;&#10;&#9;&#9;&#9;case "self": &#10;&#9;&#9;&#9;&#9;st_val = "Самооценка"; &#10;&#9;&#9;&#9;&#9;break;&#10;&#9;&#9;}&#10;&#9;&#9;&#10;&#9;&#9;Excel_html_up_table += "&#10;&#9;&#9;&lt;tr height=17&gt;&#10;&#9;&#9;&#9;&lt;td class=\"style3\" style='padding-left: 5px'&gt;" + st_val + "&lt;/td&gt;&#10;&#9;&#9;&#9;&lt;td class=\"style3\" colspan='4' style='padding-left: 5px'&gt;" + CollDoc.comment + "&lt;/td&gt;&#10;&#9;&#9;&lt;/tr&gt;";&#10;&#10;&#9;&#9;oCell = oWorksheet.Cells.GetCell("A" + _idx); &#10;&#9;&#9;oWorksheet.Cells.Merge(_idx - 1, 0, 1, 2);&#10;&#9;&#9;oWorksheet.Cells.SetRowHeight((_idx - 1), 30);&#10;&#9;&#9;oCell.Value = st_val;&#10;&#9;&#9;oCell.Style.Borders.SetStyle("Thin"); &#10;&#9;&#9;oCell.Style.Borders.SetColor("#000000"); &#10;&#9;&#9;oCell.Style.IsTextWrapped = true;&#10;&#9;&#9;oCell.Style.IsItalic = true;&#10;&#9;&#9;&#10;&#9;&#9;oCell = oWorksheet.Cells.GetCell("C" + _idx); &#10;&#9;&#9;oWorksheet.Cells.Merge(_idx - 1, 2, 1, 5);&#10;&#9;&#9;oCell.Value = CollDoc.comment; &#10;&#9;&#9;oCell.Style.Borders.SetStyle("Thin"); &#10;&#9;&#9;oCell.Style.Borders.SetColor("#000000"); &#10;&#9;&#9;oCell.Style.IsTextWrapped = true;&#10;&#9;&#9;oCell.Style.IsItalic = true&#10;&#9;&#9;_idx++;&#10;&#9;}&#10;&#9;Excel_html_up_table += "&#10;&#9;&lt;/table&gt;";&#10;}&#10;&#10;Excel_html_Export += "&#10;&lt;![if supportMisalignedColumns]&gt;&#10;&lt;tr height=0 style='display:none'&gt;&#10;&#9;&lt;td width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;&#9;&lt;td width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;&#9;&lt;td width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;&#9;&lt;td width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;&#9;&lt;td width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;&#9;&lt;td width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;&#9;&lt;td width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;&lt;/tr&gt;&#10;&lt;![endif]&gt;&#10;&lt;/table&gt;";&#10;&#10;str_table_ps = "&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&#10;";&#9;&#9;&#9;&#10;&#10;Excel_html_Export = Excel_html_Export_Up + Excel_html + Excel_html_Export + Excel_html_up_table;&#10;&#9;tools_web.remove_user_data("excel_html_" + curUserID);&#10;&#9;tools_web.set_user_data( "excel_html_" + curUserID , { 'html': StrReplace(Excel_html_Export, "#999#", str_table_ps)  }, 86000 ); &#10;&#9;Response.Write(Excel_html + Excel_html_gr_1 + StrReplace(Excel_html_up_table, "#999#" , "")); &#10;&#10;&#9;oExcelDoc.SaveAs(temp_folder + "\\" + file_name);&#10;&#9; result = oExcelDoc.LoadHtmlString(Excel_html, "");&#10;&#9;//alert("result = " + result);&#10;&#9;if(result == 0)&#10;&#9;{&#10;&#9;&#9;//alert("Ошибка: " + oExcelDoc.GetError());&#10;&#9;}&#9;&#10;&#9;&#10;} // if ( isFilter )&#10;%&gt;</html>
			<use_session_cache>false</use_session_cache>
			<cwt_type>default</cwt_type>
			<out_type>undefined</out_type>
			<wvars>
				<wvar>
					<name>visible_legend</name>
					<value>1</value>
					<type>bool</type>
					<description>Показывать интерпретацию результатов</description>
					<position>1</position>
				</wvar>
				<wvar>
					<name>legend_color</name>
					<value>{ min: 0, max: 2, color: '#FF00AE', title: 'Не проявляется' },{ min: 2, max: 3, color: '#FFFF00', title: 'Базовый' },{ min: 4, max: 5, color: '#008000', title: 'Высокий' }</value>
					<type>string</type>
					<position>2</position>
				</wvar>
			</wvars>
			<access>
				<access_level>0</access_level>
			</access>
			<doc_info>
				<creation>
					<user_login>user1</user_login>
					<user_id>6148914691236517121</user_id>
					<date>2013-12-04T09:59:47Z</date>
				</creation>
				<modification>
					<user_login>user1</user_login>
					<user_id>6148914691236517121</user_id>
					<date>2021-06-28T17:13:01Z</date>
				</modification>
			</doc_info>
			<is_std>false</is_std>
			<changed>false</changed>
			<is_enabled>true</is_enabled>
		</custom_web_template>
		<custom_web_template>
			<id>0x4BFE5FD8431C2983</id>
			<code>websoft_report_360_3</code>
			<name>Отчет по результатам обратной связи 360 градусов</name>
			<category>websoft</category>
			<exec_code>
				<code_text>&lt;%&#10;// -----------------------------------------------------------------------------------------------------------------------------&#10;// автор:&#9;RH&#10;// создан:&#9;30.05.2010 &#10;// изменен:&#9;&#10;// -------------------------------------------------Предупреждение--------------------------------------------------------------&#10;// &lt;нет&gt;&#10;// ------------------------------------------------Параметры шаблона------------------------------------------------------------&#10;// признак - использовать вес компетенции при расчете оценки или нет&#10;USE_WEIGHT_FLAG = false;&#10;// формула расчета итоговой оценки&#10;OVERALL_MARK_FORMULA = "SUM/COUNT";&#10;// ----------------------------------------------Глобальные переменные----------------------------------------------------------&#10;// &lt;нет&gt;&#10;// ---------------------------------------------------Константы-----------------------------------------------------------------&#10;// код шаблона документа графической части отчета&#10;GRAPH_TEMPLATE = "rolf_competence_appraisal_graph_part";&#10;// длина надписи на графике - применяется к названиям отображаемым на графиках&#10;FIXED_LENGTH = 25;&#10;// код шаблона отчета "Аналитика по индикаторам"&#10;INDICATOR_TEMPLATE = "rolf_indicator_common_report";&#10;// код шаблона отчета "Отчет по результатам оценки (общая статистика)"&#10;FINALL_TEMPLATE = "rolf_finall_common_report";&#10;// стиль отчетов&#10;CSS_TEMPLATE = "rolf_css_report";&#10;// путь к порталу с учетом шаблона дизайна, если не используется шаблон по умолчанию &#10;PORTAL_URL = ( curHostSettings.default_web_design != 'default' ? (global_settings.settings.portal_base_url + "/" + curWebDesignUrl) : global_settings.settings.portal_base_url );&#10;// -----------------------------------------------------------------------------------------------------------------------------&#10;%&gt;&#10;&#10;&lt;script language="JavaScript"&gt;&#10;function show( title, inputIds, inputNames, catalog, disp_object_ids, m_sel )&#10;{&#10;&#9;var pars=new Object();&#10;&#9;pars.title = title;&#10;&#9;var strAttr="status:no;dialogWidth:750px;dialogHeight:580px;help:no";&#10;&#9;&#10;&#9;pars.elemNamesArray = Array();&#10;&#9;&#10;&#9;var i = 0;&#10;&#10;&#9;ids = "";&#10;&#9;arr = document.forms['main'][inputIds].value.split(',');&#10;&#9;for ( i=0; i&lt;arr.length; i++ )&#10;&#9;{&#10;&#9;&#9;if ( arr[i] == '' ) continue;&#10;&#9;&#9;ids += ";" + arr[i];&#10;&#9;}&#10;&#9;pars.selected_object_ids = ids;&#10;&#9;pars.display_object_ids = disp_object_ids;&#10;&#9;arr = document.forms['main'][inputNames].value.split("|");&#10;&#9;for ( i=0; i&lt;arr.length; i++ )&#10;&#9;{&#10;&#9;&#9;pars.elemNamesArray[i] = arr[i];&#10;&#9;}&#10;&#10;&#9;//xShowModalDialog('dlg_select.html?doc_id=&lt;%=curDocID%&gt;&amp;catalog_name='+catalog+'&amp;show_all=1&amp;multi_select='+m_sel+'&amp;rand='+ Math.random(), pars, strAttr);&#10;&#9;xShowSelectDialog(&#10;&#9;{&#10;&#9;&#9;"catalog_name": catalog,&#10;&#9;&#9;"multi_select": m_sel,&#10;&#9;&#9;"can_be_empty": "true",&#10;&#9;&#9;"disp_filter": "false",&#10;&#9;&#9;"check_access": "false",&#10;&#9;&#9;"display_object_ids": disp_object_ids,&#10;&#9;&#9;"selected_object_ids": ids&#10;&#9;}, &#10;&#9;function(oParams)&#10;&#9;{&#10;&#9;&#9;id_mas = oParams.selected_object_ids.split(";");&#10;&#10;&#9;&#9;if (!oParams.handle) return null;&#10;&#10;&#9;&#9;names = "";&#10;&#9;&#9;ids = "";&#10;&#9;&#9;id_ar = oParams.selected_object_ids.split(";");&#10;&#9;&#9;isFirst = true;&#10;&#9;&#9;for (i=0;i&lt;id_ar.length;i++)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;if ( id_ar[i] == "" || id_ar[i] == null ) continue;&#10;&#9;&#9;&#9;ids += ( isFirst ? '' : ',' ) + id_ar[i];&#10;&#9;&#9;&#9;isFirst = false;&#10;&#9;&#9;}&#10;&#9;&#9;for (i=0;i&lt;oParams.elemNamesArray.length;i++)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;if( oParams.elemNamesArray[i]!=null )&#10;&#9;&#9;&#9;names += ( i != 0 ? "|" : "" ) + oParams.elemNamesArray[i];&#10;&#9;&#9;}&#10;&#10;&#9;&#9;if (document.forms['main'][inputIds].value != ids)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;document.forms['main'][inputIds].value = ids;&#10;&#9;&#9;&#9;document.forms['main'][inputNames].value = names;&#10;&#9;&#9;&#9;document.forms['main'].submit();&#10;&#9;&#9;}&#10;&#9;});&#10;}&#10;&#10;function do_display(flag)&#10;{&#10;&#9;periodTR = document.getElementById('tr_period');&#10;&#9;assTR = document.getElementById('tr_ass');&#10;&#10;&#9;if (flag == '10')&#10;&#9;{&#10;&#9;&#9;periodTR.style.display = 'none';&#10;&#9;&#9;assTR.style.display = 'inline';&#10;&#9;}&#10;&#9;else if (flag == '11')&#10;&#9;{&#10;&#9;&#9;periodTR.style.display = 'inline';&#10;&#9;&#9;assTR.style.display = 'none';&#10;&#9;}&#10;}&#10;&lt;/script&gt;&#10;&lt;script src="scripts/calendar/calendar.js"&gt;&lt;/script&gt;&#10;&#10;&lt;%&#10;&#9;disp_obj_ids_app = ArraySelectDistinct( ArrayExtract( XQuery("for $elem in pas where $elem/assessment_appraise_type = 'competence_appraisal' return $elem"),"assessment_appraise_id" ) ).join(";");&#10;&#10;%&gt;&#10;&lt;form id="main" name="main" action="&lt;%=Request.Url%&gt;" METHOD="POST"&gt;&#10;&#9;&lt;table&gt;&#10;&#9;&#9;&lt;tr&gt;&#10;&#9;&#9;&#9;&lt;td&gt;&#10;&#9;&#9;&#9;&#9;&lt;input type="button" value="      Процедура оценки      " class="inputButton" onClick="show('Процедуры оценки', 'assessment_app_ids', 'assessment_app_names', 'assessment_appraise', '&lt;%=disp_obj_ids_app%&gt;', 0 ); " onMouseOver="this.className='inputButtonOver';" onMouseOut="this.className='inputButton';"&gt;&#10;&#9;&#9;&#9;&lt;/td&gt;&#10;&#9;&#9;&#9;&lt;td&gt;&#10;&#9;&#9;&#9;&#9;&lt;input type="text" readonly name="assessment_app_names" value="&lt;%=( Request.Form.HasProperty( 'assessment_app_names' ) ? Request.Form.assessment_app_names : '' )%&gt;" size="100"&gt;&lt;br&gt;&#10;&#9;&#9;&#9;&#9;&lt;input type="hidden" name="assessment_app_ids" onchange="submit();" value="&lt;%=( Request.Form.HasProperty( 'assessment_app_ids' ) ? Request.Form.assessment_app_ids : '' )%&gt;"&gt;&#10;&#9;&#9;&#9;&lt;/td&gt;&#10;&#9;&#9;&lt;/tr&gt;&#10;&lt;%&#10;&#9;if(Request.Form.HasProperty( 'assessment_app_ids' ) &amp;&amp; Request.Form.assessment_app_ids!=null &amp;&amp; Request.Form.assessment_app_ids!='')&#10;&#9;{&#9;disp_obj_ids_coll = ArraySelectDistinct( ArrayExtract( XQuery("for $elem in pas where $elem/assessment_appraise_id = "+Request.Form.assessment_app_ids+" return $elem"),"person_id" ) ).join(";");&#10;%&gt;&#10;&#9;&#9;&lt;tr&gt;&#10;&#9;&#9;&#9;&lt;td&gt;&#10;&#9;&#9;&#9;&#9;&lt;input type="button" value="Оцениваемый сотрудник" class="inputButton" onClick="show('Оцениваемые сотрудники', 'coll_ids', 'coll_names', 'collaborator', '&lt;%=disp_obj_ids_coll%&gt;' )" onMouseOver="this.className='inputButtonOver';" onMouseOut="this.className='inputButton';"&gt;&#10;&#9;&#9;&#9;&lt;/td&gt;&#10;&#9;&#9;&#9;&lt;td&gt;&#10;&#9;&#9;&#9;&#9;&lt;input type="text" readonly name="coll_names" value="&lt;%=( Request.Form.HasProperty( 'coll_names' ) ? Request.Form.coll_names : '' )%&gt;" size="100"&gt;&lt;br&gt;&#10;&#9;&#9;&#9;&#9;&lt;input type="hidden" name="coll_ids" value="&lt;%=( Request.Form.HasProperty( 'coll_ids' ) ? Request.Form.coll_ids : '' )%&gt;"&gt;&#10;&#9;&#9;&#9;&lt;/td&gt;&#10;&#9;&#9;&lt;/tr&gt;&#10;&#9;&#9;&lt;tr&gt;&#10;&#9;&#9;&#9;&lt;td colspan=2 align=center&gt;&#10;&#9;&#9;&#9;&#9;&lt;input type="submit" value="Сформировать отчет" class="inputButton" onMouseOver="this.className='inputButtonOver';" onMouseOut="this.className='inputButton';"&gt;&#10;&#9;&#9;&#9;&#9;&lt;input type="button" value="Экспорт в Excel" onclick="modalWin=window.open('assessment_excel_export.html','','')" class="inputButton" onMouseOver="this.className='inputButtonOver';" onMouseOut="this.className='inputButton';"&gt;&#10;&#9;&#9;&#9;&lt;/td&gt;&#10;&#9;&#9;&lt;/tr&gt;&#10;&lt;%&#10;&#9;}&#10;%&gt;&#10;&#9;&lt;/table&gt;&#10;&lt;/form&gt;&#10;&lt;br&gt;&lt;br&gt;&#10;&lt;div style="padding: 10px; width: 900px; overflow: visible; overflow-x: auto; overflow-y: hidden;"&gt;&#10;&lt;%&#10;//-----------------------------РАЗРЫВ ШАБЛОНА-------------------------------------&#10;&#10;&#9;function GetMarkFromCompetence(SOURCE, EVAL_SOURCE)&#10;&#9;{&#10;&#9;&#9;if (SOURCE.EvalPath(EVAL_SOURCE).Value == 'N') return 0;&#10;&#9;&#9;&#10;&#9;&#9;try&#10;&#9;&#9;{&#10;&#9;&#9;&#9;objDoc = OpenDoc(UrlFromDocID( SOURCE.PrimaryKey ) ).TopElem;&#10;&#9;&#9;}&#10;&#9;&#9;catch(err)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;alert(err);&#10;&#9;&#9;&#9;return 0;&#10;&#9;&#9;}&#10;&#9;&#9;&#10;&#9;&#9;_scale = objDoc.scales.GetOptChildByKey(SOURCE.EvalPath(EVAL_SOURCE).Value);&#10;&#9;&#9;res = null;&#10;&#9;&#9;&#10;&#9;&#9;if (_scale != undefined)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;if (_scale.percent.HasValue)&#10;&#9;&#9;&#9;&#9;res =  Real(_scale.percent) * ( USE_WEIGHT_FLAG ? (SOURCE.weight / 100.0) : 1 );&#10;&#9;&#9;&#9;else&#10;&#9;&#9;&#9;&#9;res = (_scale.ChildIndex + 1) * ( USE_WEIGHT_FLAG ? (SOURCE.weight / 100.0) : 1 );&#10;&#9;&#9;}&#10;&#9;&#9;else&#10;&#9;&#9;{&#10;&#9;&#9;&#9;try&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;res = Real(SOURCE.EvalPath(EVAL_SOURCE).Value) * ( USE_WEIGHT_FLAG ? (SOURCE.weight / 100.0) : 1 );&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;catch(err){}&#10;&#9;&#9;}&#10;&#10;&#9;&#9;return res;&#10;&#9;}&#10;&#9;function GetMark(SOURCE, EVAL_COLLECTION, FORMULA, EVAL_SOURCE)&#10;&#9;{&#10;&#9;&#9;TOTAL = 0.0;&#10;&#9;&#9;SUM = 0.0;&#10;&#9;&#9;COUNT = 0;&#10;&#9;&#9;MIN = null;&#10;&#9;&#9;MAX = null;&#10;&#9;&#9;NA_COUNT = 0;&#10;&#9;&#9;// счиатем оценку по компетенциям&#10;&#9;&#9;for (_obj in SOURCE.EvalPath(EVAL_COLLECTION))&#10;&#9;&#9;{&#10;&#9;&#9;&#9;if (_obj.EvalPath(EVAL_SOURCE).Value == 'N')&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;NA_COUNT++;&#10;&#9;&#9;&#9;&#9;continue;&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;try&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;objDoc = OpenDoc(UrlFromDocID( _obj.PrimaryKey ) ).TopElem;&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;catch(err)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;continue;&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#10;&#9;&#9;&#9;_scale = objDoc.scales.GetOptChildByKey(_obj.EvalPath(EVAL_SOURCE).Value);&#10;&#9;&#9;&#9;_cur_markk = null;&#10;&#9;&#9;&#9;if (_scale != undefined)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;if (_scale.percent.HasValue)&#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;_cur_markk =  Real(_scale.percent) * (_obj.weight / 100.0);&#10;&#9;&#9;&#9;&#9;&#9;SUM = SUM + Real(_scale.percent);&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;else&#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;_cur_markk = (_scale.ChildIndex + 1) * (_obj.weight / 100.0);&#10;&#9;&#9;&#9;&#9;&#9;SUM = SUM + _scale.ChildIndex + 1;&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;else&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;try&#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;_cur_markk = Real(_obj.EvalPath(EVAL_SOURCE).Value) * (_obj.weight / 100.0);&#10;&#9;&#9;&#9;&#9;&#9;SUM = SUM + Real(_obj.EvalPath(EVAL_SOURCE).Value);&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;catch(err)&#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;_cur_markk = null;&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;if (_cur_markk != null)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;COUNT++;&#10;&#9;&#9;&#9;&#9;TOTAL = TOTAL + Real(_cur_markk);&#10;&#9;&#9;&#9;&#9;if (MAX == null || MAX &lt; _cur_markk) MAX = _cur_markk;&#10;&#9;&#9;&#9;&#9;if (MIN == null || MIN &gt; _cur_markk) MIN = _cur_markk;&#10;&#9;&#9;&#9;}&#10;&#9;&#9;}&#10;&#9;&#9;// итоговая оценка&#10;&#9;&#9;res = null;&#10;&#9;&#9;try&#10;&#9;&#9;{&#10;&#9;&#9;&#9;eval(' res = ' + FORMULA);&#10;&#9;&#9;}&#10;&#9;&#9;catch(err){}&#10;&#10;&#9;&#9;return res;&#10;&#9;}&#10;&#9;function GetScaleFromCompetence(SOURCE, EVAL_SOURCE)&#10;&#9;{&#10;&#9;&#9;if (SOURCE.EvalPath(EVAL_SOURCE).Value == 'N') return 0;&#10;&#9;&#9;&#10;&#9;&#9;try&#10;&#9;&#9;{&#10;&#9;&#9;&#9;objDoc = OpenDoc(UrlFromDocID( SOURCE.PrimaryKey ) ).TopElem;&#10;&#9;&#9;}&#10;&#9;&#9;catch(err)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;alert(err);&#10;&#9;&#9;&#9;return 0;&#10;&#9;&#9;}&#10;&#9;&#9;&#10;&#9;&#9;_scale = objDoc.scales.GetOptChildByKey(SOURCE.EvalPath(EVAL_SOURCE).Value);&#10;&#9;&#9;res = null;&#10;&#9;&#9;&#10;&#9;&#9;if (_scale != undefined)&#10;&#9;&#9;{&#10;&#10;&#9;&#9;&#9;&#9;res = (_scale.ChildIndex + 1);&#10;&#9;&#9;}&#10;&#9;&#9;else&#10;&#9;&#9;{&#10;&#9;&#9;&#9;try&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;res = Real(SOURCE.EvalPath(EVAL_SOURCE).Value) * ( USE_WEIGHT_FLAG ? (SOURCE.weight / 100.0) : 1 );&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;catch(err){}&#10;&#9;&#9;}&#10;&#9;&#9;return res;&#10;&#9;}&#9;&#10;// ******************ОСНОВНАЯ ОБЛАСТЬ*************************&#10;&#10;&#9;Session.excel_html = "";&#10;&#9;html_TEXT = "&#10;&lt;!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\"&gt;&#10;&lt;HTML&gt;&lt;HEAD&gt;&#10;&lt;META content=\"text/html; charset=utf-8\" http-equiv=Content-Type&gt;";&#10;&#10;html_TEXT = "";&#10;&#10;isFilter = Request.Form.HasProperty("assessment_app_ids") &amp;&amp; Trim( Request.Form.assessment_app_ids ) != "" &amp;&amp; Request.Form.HasProperty("coll_ids") &amp;&amp; Trim( Request.Form.coll_ids ) != "";&#10;if (isFilter)&#10;{&#10;&#9;_str = "&#10;&lt;html xmlns:v=\"urn:schemas-microsoft-com:vml\"&#10;xmlns:o=\"urn:schemas-microsoft-com:office:office\"&#10;xmlns:x=\"urn:schemas-microsoft-com:office:excel\"&#10;xmlns=\"http://www.w3.org/TR/REC-html40\"&gt;&#10;&#10;&lt;head&gt;&#10;&lt;meta http-equiv=Content-Type content=\"text/html; charset=utf-8\"&gt;&#10;&lt;meta name=ProgId content=Excel.Sheet&gt;&#10;&lt;meta name=Generator content=\"Microsoft Excel 11\"&gt;&#10;&lt;!--[if gte mso 9]&gt;&lt;xml&gt;&#10;&lt;o:DocumentProperties&gt;&#10;&#9;&lt;o:Author&gt;РОЛЬФ&lt;/o:Author&gt;&#10;&#9;&lt;o:LastAuthor&gt;РОЛЬФ&lt;/o:LastAuthor&gt;&#10;&#9;&lt;o:Created&gt;2010-05-30T12:51:09Z&lt;/o:Created&gt;&#10;&#9;&lt;o:LastSaved&gt;2010-05-30T13:03:28Z&lt;/o:LastSaved&gt;&#10;&#9;&lt;o:Version&gt;11.9999&lt;/o:Version&gt;&#10;&lt;/o:DocumentProperties&gt;&#10;&lt;/xml&gt;&lt;![endif]--&gt;";&#10;&#10;// Стиль отчета&#10;&#9;try&#10;&#9;{&#10;&#9;&#9;CSS_Module = ArrayOptFirstElem( XQuery("for $elem in custom_web_templates where $elem/code = '" + CSS_TEMPLATE + "' return $elem") );&#10;&#9;&#9;if ( CSS_Module != undefined  )&#10;&#9;&#9;{&#10;&#9;&#9;&#9;CSS_Module = OpenDoc(UrlFromDocID(CSS_Module.PrimaryKey)).TopElem;&#10;&#9;&#9;&#9;EvalCodePage(CSS_Module.html.Value);&#10;&#9;&#9;}&#10;&#9;}&#10;&#9;catch(err)&#10;&#9;{&#10;&#9;&#9;alert("ОШИБКА: Ошибка получения настраиваемого web-шаблона одной из частей отчета. " + err);&#10;&#9;}&#10;&#9;_str+="&#10;&lt;!--[if gte mso 9]&gt;&lt;xml&gt;&#10; &lt;x:ExcelWorkbook&gt;&#10;  &lt;x:ExcelWorksheets&gt;&#10;   &lt;x:ExcelWorksheet&gt;&#10;    &lt;x:Name&gt;Отчет по оценке компетенций&lt;/x:Name&gt;&#10;    &lt;x:WorksheetOptions&gt;&#10;     &lt;x:Print&gt;&#10;      &lt;x:ValidPrinterInfo/&gt;&#10;      &lt;x:PaperSizeIndex&gt;9&lt;/x:PaperSizeIndex&gt;&#10;      &lt;x:Scale&gt;21&lt;/x:Scale&gt;&#10;      &lt;x:HorizontalResolution&gt;600&lt;/x:HorizontalResolution&gt;&#10;      &lt;x:VerticalResolution&gt;0&lt;/x:VerticalResolution&gt;&#10;     &lt;/x:Print&gt;&#10;     &lt;x:ShowPageBreakZoom/&gt;&#10;     &lt;x:Selected/&gt;&#10;     &lt;x:LeftColumnVisible&gt;3&lt;/x:LeftColumnVisible&gt;&#10;     &lt;x:Panes&gt;&#10;      &lt;x:Pane&gt;&#10;       &lt;x:Number&gt;3&lt;/x:Number&gt;&#10;       &lt;x:ActiveRow&gt;19&lt;/x:ActiveRow&gt;&#10;       &lt;x:ActiveCol&gt;3&lt;/x:ActiveCol&gt;&#10;      &lt;/x:Pane&gt;&#10;     &lt;/x:Panes&gt;&#10;     &lt;x:ProtectContents&gt;False&lt;/x:ProtectContents&gt;&#10;     &lt;x:ProtectObjects&gt;False&lt;/x:ProtectObjects&gt;&#10;     &lt;x:ProtectScenarios&gt;False&lt;/x:ProtectScenarios&gt;&#10;    &lt;/x:WorksheetOptions&gt;&#10;    &lt;x:PageBreaks&gt;&#10;     &lt;x:RowBreaks&gt;&#10;      &lt;x:RowBreak&gt;&#10;       &lt;x:Row&gt;45&lt;/x:Row&gt;&#10;      &lt;/x:RowBreak&gt;&#10;     &lt;/x:RowBreaks&gt;&#10;    &lt;/x:PageBreaks&gt;&#10;   &lt;/x:ExcelWorksheet&gt;&#10;  &lt;/x:ExcelWorksheets&gt;&#10;  &lt;x:WindowHeight&gt;12240&lt;/x:WindowHeight&gt;&#10;  &lt;x:WindowWidth&gt;19440&lt;/x:WindowWidth&gt;&#10;  &lt;x:WindowTopX&gt;480&lt;/x:WindowTopX&gt;&#10;  &lt;x:WindowTopY&gt;120&lt;/x:WindowTopY&gt;&#10;  &lt;x:ProtectStructure&gt;False&lt;/x:ProtectStructure&gt;&#10;  &lt;x:ProtectWindows&gt;False&lt;/x:ProtectWindows&gt;&#10; &lt;/x:ExcelWorkbook&gt;&#10;&lt;/xml&gt;&lt;![endif]--&gt;&#10;&#10;&lt;/head&gt;&#10;&lt;body link=blue vlink=purple lang=RU style='tab-interval:35.4pt'&gt;";&#10;&#9;&#10;&#9;html_TEXT += _str;&#10;&#9;Session.excel_html += _str;&#10;&#9;&#10;&#9;// выбранные процедуры оценки&#10;&#9;AssessmentAppraises = Trim( Request.Form.assessment_app_ids ).split(",");&#10;&#9;for (_ass_id in AssessmentAppraises)&#10;&#9;{&#10;&#9;&#9;RowNum = 0;&#10;&#10;&#9;&#9;_ass_name = OpenDoc(UrlFromDocID(Int(_ass_id))).TopElem.name;&#10;&#9;&#9;_str = '';&#10;&#9;&#9;_str += "&lt;h3&gt;" + _ass_name + "&lt;/h3&gt;&#10;&#9;&#9;&lt;p align='left'&gt;&lt;b&gt;Аналитические данные по оценке компетенций&lt;/b&gt;&lt;/p&gt;";&#10;&#9;&#9;html_TEXT += _str;&#10;&#9;&#9;Session.excel_html += _str;&#10;&#10;&#9;&#9;Plans = XQuery("for $obj in assessment_plans where $obj/assessment_appraise_id = " + _ass_id + &#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;" and $obj/person_id = " + Request.Form.coll_ids + " order by $obj/person_fullname return $obj");&#10;&#9;&#9;_plan = ArrayOptFirstElem(Plans);&#10;&#9;&#9;if (_plan == undefined)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;html_TEXT += "&lt;center&gt;&lt;font&gt;&lt;color='red'&gt;Отсутствует план оценки сотрудника для процедуры " + _ass_name + "&lt;/color&gt;&lt;/font&gt;&lt;center&gt;";&#10;&#9;&#9;&#9;continue;&#10;&#9;&#9;}&#10;&#9;&#9;// план оценки сотрудника&#10;&#9;&#9;try&#10;&#9;&#9;{&#10;&#9;&#9;&#9;plan_id = _plan.id;&#10;&#9;&#9;&#9;planDoc = OpenDoc(UrlFromDocID(plan_id)).TopElem;&#10;&#9;&#9;}&#10;&#9;&#9;catch(err)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;alert("ОШИБКА: невозможно получить карточку плана оценки сотрудника. " + err);&#10;&#9;&#9;&#9;continue;&#10;&#9;&#9;}&#10;&#10;&#9;&#9;graph_competence_str = "";&#10;&#9;&#9;graph_comp_code_str = "";&#10;&#9;&#9;graph_plan_str = "";&#10;&#10;&#9;&#9;graph_mark_str = Array();&#10;&#10;&#9;&#9;graph_mark_str[0] = "";&#10;&#9;&#9;graph_mark_str[1] = "";&#10;&#9;&#9;graph_mark_str[2] = "";&#10;&#10;&#9;&#9;// карточка оцениваемого сотрудника&#10;&#9;&#9;collDoc = OpenDoc(UrlFromDocID(planDoc.person_id)).TopElem;&#10;&#9;&#9;&#10;&#9;&#9;// процедура оценки&#10;&#9;&#9;AssessmentAppraise = OpenDoc(UrlFromDocID(planDoc.assessment_appraise_id)).TopElem;&#10;&#9;&#9;&#10;&#9;&#9;RowNum = 0;&#10;&#9;&#9;//Аналитика полученных данных по компетенциям&#10;&#9;&#9;_str = "&#10;&lt;table x:str border=0 cellpadding=0 cellspacing=0 style='border-collapse:collapse'&gt;&#10;&#9;&lt;tr style='mso-height-source:userset;mso-yfti-irow:" + RowNum + "'&gt;" + "&#10;&#9;&lt;td class=xl35_comp width='100'&gt;&amp;nbsp&lt;/td&gt;&#10;&#9;&lt;td class=xl37_comp &gt;Отклонение&gt;0 &lt;/td&gt;&#10;&#9;&lt;td class=xl37_comp &gt;&amp;nbsp&lt;/td&gt;&#10;&#9;&lt;td class=xl36_comp width='100'&gt;&amp;nbsp&lt;/td&gt;&#10;&#9;&lt;td class=xl37 &gt;Отклонение&lt;0 &lt;/td&gt;&#10;&#9;&lt;/tr&gt;&#10;&lt;/table&gt;&#10;&lt;br&gt;&#10;&lt;table x:str border=0 cellpadding=0 cellspacing=0 style='border-collapse:collapse'&gt;&#10;&#9;&lt;tr style='mso-height-source:userset;mso-yfti-irow:" + RowNum + "'&gt;" + "&#10;&#9;&lt;td class=xl37 &gt;&amp;nbsp&lt;/td&gt;&#10;&#9;&lt;/tr&gt;&#10;&#9;&lt;tr height=81 style='height:60.75pt;mso-yfti-firstrow:yes;mso-yfti-irow:" + RowNum + "'&gt;&#10;&#9;&lt;td class=xl31&gt;Компетенции&lt;/td&gt;&#10;&#9;&lt;td class=xl31&gt;Стандартный профиль&lt;/td&gt;&#10;&#9;&lt;td class=xl31&gt;Отклонение самооценки от стандартного профиля&lt;/td&gt;&#10;&#9;&lt;td class=xl31&gt;Отклонение оценки руководителя от стандартного профиля&lt;/td&gt;&#10;&#9;&lt;td class=xl31&gt;Отклонение оценки подчиненных от стандартного профиля&lt;/td&gt;&#10;&#9;&lt;td class=xl31&gt;Отклонение оценки коллег от стандартного профиля&lt;/td&gt;&#10;&#9;&lt;td class=xl31&gt;Отклонение оценки экспертов от стандартного профиля&lt;/td&gt;&#10;&#9;&lt;/tr&gt;";&#10;&#9;&#9;&#10;&#9;&#9;html_TEXT += _str;&#10;&#9;&#9;Session.excel_html += _str;&#10;&#10;&#9;&#9;try&#10;&#9;&#9;{&#10;&#9;&#9;&#9;_pa = ArrayOptFirstElem(XQuery("for $obj in pas where $obj/assessment_appraise_id = " + planDoc.assessment_appraise_id + &#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;" and $obj/person_id = " + planDoc.person_id + " and $obj/assessment_appraise_type = 'competence_appraisal' return $obj"));&#10;&#9;&#9;&#9;if (_pa == undefined)&#10;&#9;&#9;&#9;&#9;throw 'No pa exists';&#10;&#9;&#9;&#9;_profile_id = OpenDoc(UrlFromDocID(_pa.id)).TopElem.competence_profile_id;&#10;&#9;&#9;&#9;Profile = OpenDoc(UrlFromDocID(Int(_profile_id))).TopElem;&#10;&#9;&#9;}&#10;&#9;&#9;catch(err)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;alert("ОШИБКА: Невозможно получить профиль компетенций. " + err);&#10;&#9;&#9;&#9;Profile = null;&#10;&#9;&#9;}&#10;&#10;&#9;&#9;// цикл по компетенциям&#10;&#9;&#9;for (_comp in Profile.competences)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;// компетенция&#10;&#9;&#9;&#9;CompetenceCode = OpenDoc(UrlFromDocID(_comp.competence_id)).TopElem.code;&#10;&#9;&#9;&#9;CompetenceName = OpenDoc(UrlFromDocID(_comp.competence_id)).TopElem.name;&#10;&#9;&#9;&#9;//graph_competence_str += graph_competence_str == "" ? StrReplace(CompetenceName, ","," ").substr(0, FIXED_LENGTH) : "," + StrReplace(CompetenceName, ","," ").substr(0, FIXED_LENGTH);&#10;&#9;&#9;&#9;graph_competence_str += (graph_competence_str != "" ? "," : "" ) + StrReplace(CompetenceName, ","," ");&#10;&#9;&#9;&#9;graph_comp_code_str += graph_comp_code_str == "" ? StrReplace(CompetenceCode, ","," ").substr(0, FIXED_LENGTH) : "," + StrReplace(CompetenceCode, ","," ").substr(0, FIXED_LENGTH);&#10;&#9;&#9;&#9;// плановая оценка&#10;&#9;&#9;&#9;PlanMark = GetMarkFromCompetence(_comp, "plan");&#10;&#9;&#9;&#9;if (PlanMark != null)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;PlanMark = Real(StrRealFixed(PlanMark, 2));&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;else&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;PlanMark = "";&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;graph_plan_str += graph_plan_str == "" ? PlanMark : "," + PlanMark;&#10;&#9;&#9;&#9;// самооценка&#10;&#9;&#9;&#9;SelfMark = null;&#10;&#9;&#9;&#9;Pas = XQuery("for $obj in pas where $obj/assessment_appraise_id = " + planDoc.assessment_appraise_id + " and $obj/person_id = " + planDoc.person_id + " and $obj/assessment_appraise_type = 'competence_appraisal' and $obj/status = 'self' return $obj");&#10;&#9;&#9;&#9;_pa = ArrayOptFirstElem(Pas);&#10;&#9;&#9;&#9;if (_pa != undefined)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;Comp = OpenDoc(UrlFromDocID(_pa.id)).TopElem.competences.GetOptChildByKey(_comp.competence_id);&#10;&#9;&#9;&#9;&#9;_getMark=GetMarkFromCompetence(Comp, "mark");&#10;&#9;&#9;&#9;&#9;if (Comp != undefined) {&#10;&#9;&#9;&#9;&#9;&#9;SelfMark = (_getMark!=null) ? _getMark : GetMark(Comp, "indicators", OVERALL_MARK_FORMULA, "mark");&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;if (SelfMark != null)&#10;&#9;&#9;&#9;&#9;SelfMark = Real(StrRealFixed(SelfMark, 2));&#10;&#9;&#9;&#9;else&#10;&#9;&#9;&#9;&#9;SelfMark = "";&#10;&#9;&#9;&#9;graph_mark_str[0] += graph_mark_str[0] == "" ? SelfMark : "," + SelfMark;&#10;&#9;&#9;&#9;&#10;&#9;&#9;&#9;// средняя оценка руководителя&#10;&#9;&#9;&#9;ManagerMark = Real(0.0);&#10;&#9;&#9;&#9;ManagerMarkCount = 0;&#10;&#9;&#9;&#9;Pas = XQuery("for $obj in pas where $obj/assessment_appraise_id = " + planDoc.assessment_appraise_id + " and $obj/person_id = " + planDoc.person_id + " and $obj/assessment_appraise_type = 'competence_appraisal' and $obj/status = 'manager' return $obj");&#10;&#9;&#9;&#9;for (_pa in Pas)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;if (_pa != undefined)&#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;Comp = OpenDoc(UrlFromDocID(_pa.id)).TopElem.competences.GetOptChildByKey(_comp.competence_id);&#10;&#9;&#9;&#9;&#9;&#9;_getMark=GetMarkFromCompetence(Comp, "mark");&#10;&#9;&#9;&#9;&#9;&#9;if (Comp != undefined) {&#10;&#9;&#9;&#9;&#9;&#9;&#9;_mmark = (_getMark!=null) ? _getMark : GetMark(Comp, "indicators", OVERALL_MARK_FORMULA, "mark");&#10;&#9;&#9;&#9;&#9;&#9;&#9;if (_mmark != null)&#10;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;ManagerMark += _mmark;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;ManagerMarkCount++;&#10;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;if (ManagerMarkCount &gt; 0)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;ManagerMark = ManagerMark / ManagerMarkCount;&#10;&#9;&#9;&#9;&#9;ManagerMark = Real(StrRealFixed(ManagerMark, 2));&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;else&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;ManagerMark = "";&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;graph_mark_str[1] += graph_mark_str[1] == "" ? ManagerMark : "," + ManagerMark;&#10;&#10;&#9;&#9;&#9;// средняя оценка коллег&#10;&#9;&#9;&#9;CollMark = Real(0.0);&#10;&#9;&#9;&#9;CollMarkCount = 0;&#10;&#9;&#9;&#9;Pas = XQuery("for $obj in pas where $obj/assessment_appraise_id = " + planDoc.assessment_appraise_id + " and $obj/person_id = " + planDoc.person_id + " and $obj/assessment_appraise_type = 'competence_appraisal' and $obj/status = 'coll' return $obj");&#10;&#9;&#9;&#9;for (_pa in Pas)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;if (_pa != undefined) {&#10;&#9;&#9;&#9;&#9;&#9;Comp = OpenDoc(UrlFromDocID(_pa.id)).TopElem.competences.GetOptChildByKey(_comp.competence_id);&#10;&#9;&#9;&#9;&#9;&#9;_getMark=GetMarkFromCompetence(Comp, "mark");&#10;&#9;&#9;&#9;&#9;&#9;if (Comp != undefined) {&#10;&#9;&#9;&#9;&#9;&#9;&#9;_cmark = (_getMark!=null) ? _getMark : GetMark(Comp, "indicators", OVERALL_MARK_FORMULA, "mark");&#10;&#9;&#9;&#9;&#9;&#9;&#9;if (_cmark != null)&#10;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;CollMark += _cmark;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;CollMarkCount++;&#10;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;if (CollMarkCount &gt; 0)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;CollMark = CollMark / CollMarkCount;&#10;&#9;&#9;&#9;&#9;CollMark = Real(StrRealFixed(CollMark, 2));&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;else&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;CollMark = "";&#10;&#9;&#9;&#9;}&#10;&#10;&#9;&#9;&#9;// средняя оценка подчиненных&#10;&#9;&#9;&#9;StaffMark = Real(0.0);&#10;&#9;&#9;&#9;StaffMarkCount = 0;&#10;&#9;&#9;&#9;Pas = XQuery("for $obj in pas where $obj/assessment_appraise_id = " + planDoc.assessment_appraise_id + " and $obj/person_id = " + planDoc.person_id + " and $obj/assessment_appraise_type = 'competence_appraisal' and $obj/status = 'staff' return $obj");&#10;&#9;&#9;&#9;for (_pa in Pas)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;if (_pa != undefined) {&#10;&#9;&#9;&#9;&#9;&#9;Comp = OpenDoc(UrlFromDocID(_pa.id)).TopElem.competences.GetOptChildByKey(_comp.competence_id);&#10;&#9;&#9;&#9;&#9;&#9;_getMark=GetMarkFromCompetence(Comp, "mark");&#10;&#9;&#9;&#9;&#9;&#9;if (Comp != undefined) {&#10;&#9;&#9;&#9;&#9;&#9;&#9;_smark = (_getMark!=null) ? _getMark : GetMark(Comp, "indicators", OVERALL_MARK_FORMULA, "mark");&#10;&#9;&#9;&#9;&#9;&#9;&#9;if (_smark != null)&#10;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;StaffMark += _smark;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;StaffMarkCount++;&#10;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;if (StaffMarkCount &gt; 0) &#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;StaffMark = StaffMark / StaffMarkCount;&#10;&#9;&#9;&#9;&#9;StaffMark = Real(StrRealFixed(StaffMark, 2));&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;else&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;//StaffMark = "";&#10;&#9;&#9;&#9;&#9;StaffMark = "0";&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;graph_mark_str[2] += graph_mark_str[2] == "" ? StaffMark : "," + StaffMark;&#10;&#9;&#9;&#9;&#10;&#9;&#9;&#9;// средняя оценка экспертов&#10;&#9;&#9;&#9;ExpertMark = Real(0.0);&#10;&#9;&#9;&#9;ExpertMarkCount = 0;&#10;&#9;&#9;&#9;Pas = XQuery("for $obj in pas where $obj/assessment_appraise_id = " + planDoc.assessment_appraise_id + " and $obj/person_id = " + planDoc.person_id + " and $obj/assessment_appraise_type = 'competence_appraisal' and $obj/status = 'expert' return $obj");&#10;&#9;&#9;&#9;for (_pa in Pas)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;if (_pa != undefined) {&#10;&#9;&#9;&#9;&#9;&#9;Comp = OpenDoc(UrlFromDocID(_pa.id)).TopElem.competences.GetOptChildByKey(_comp.competence_id);&#10;&#9;&#9;&#9;&#9;&#9;_getMark=GetMarkFromCompetence(Comp, "mark");&#10;&#9;&#9;&#9;&#9;&#9;if (Comp != undefined) {&#10;&#9;&#9;&#9;&#9;&#9;&#9;_emark = (_getMark!=null) ? _getMark : GetMark(Comp, "indicators", OVERALL_MARK_FORMULA, "mark");&#10;&#9;&#9;&#9;&#9;&#9;&#9;if (_emark != null)&#10;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;ExpertMark += _emark;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;ExpertMarkCount++;&#10;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;if (ExpertMarkCount &gt; 0)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;ExpertMark = ExpertMark / ExpertMarkCount;&#10;&#9;&#9;&#9;&#9;ExpertMark = Real(StrRealFixed(ExpertMark, 2));&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;else&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;ExpertMark = "";&#10;&#9;&#9;&#9;}&#10;&#9;&#10;&#9;&#9;&#9;RowNum++;&#10;&#10;&#9;&#9;&#9;_selfDifference=((SelfMark=='' &amp;&amp; PlanMark=='') ? '' :(((SelfMark!='')? Real(SelfMark) : 0) -((PlanMark!='')? Real(PlanMark) : 0)));&#10;&#9;&#9;&#9;_managerDifference=((ManagerMark=='' &amp;&amp; PlanMark=='') ? '' :(((ManagerMark!='')? Real(ManagerMark) : 0) -((PlanMark!='')? Real(PlanMark) : 0)));&#10;&#9;&#9;&#9;_staffDifference=((StaffMark=='') ? '' :(((StaffMark!='')? Real(StaffMark) : 0) -((PlanMark!='')? Real(PlanMark) : 0)));&#10;&#9;&#9;&#9;_collDifference=((CollMark=='') ? '' :(((CollMark!='')? Real(CollMark) : 0) -((PlanMark!='')? Real(PlanMark) : 0)));&#10;&#9;&#9;&#9;_expertDifference=((ExpertMark=='') ? '' :(((ExpertMark!='')? Real(ExpertMark) : 0) -((PlanMark!='')? Real(PlanMark) : 0)));&#10;&#10;&#9;&#9;&#9;_selfDifference_temp=(_selfDifference=='') ? '' : (1000*_selfDifference);&#10;&#9;&#9;&#9;_managerDifference_temp=(_managerDifference=='') ? '' : (1000*_managerDifference);&#10;&#9;&#9;&#9;_staffDifference_temp=(_staffDifference=='') ? '' : (1000*_staffDifference);&#10;&#9;&#9;&#9;_collDifference_temp=(_collDifference=='') ? '' : (1000*_collDifference);&#10;&#9;&#9;&#9;_expertDifference_temp=(_expertDifference=='') ? '' : (1000*_expertDifference);&#10;&#10;&#10;&#9;&#9;&#9;_selfStyle=(_selfDifference_temp=='' || _selfDifference_temp==0) ? "xl34" :((_selfDifference_temp&gt;0)? "xl33_comp" : "xl32_comp");&#10;&#9;&#9;&#9;_managerStyle=(_managerDifference_temp=='' || _managerDifference_temp==0) ? "xl34" :((_managerDifference_temp&gt;0)? "xl33_comp" : "xl32_comp");&#10;&#9;&#9;&#9;_staffStyle=(_staffDifference_temp=='' || _staffDifference_temp==0) ? "xl34" :((_staffDifference_temp&gt;0)? "xl33_comp" : "xl32_comp");&#10;&#9;&#9;&#9;_collStyle=(_collDifference_temp=='' || _collDifference_temp==0) ? "xl34" :((_collDifference_temp&gt;0)? "xl33_comp" : "xl32_comp");&#10;&#9;&#9;&#9;_expertStyle=(_expertDifference_temp=='' || _expertDifference_temp==0) ? "xl34" :((_expertDifference_temp&gt;0)? "xl33_comp" : "xl32_comp");&#10;&#9;&#9;&#9;&#10;&#10;&#9;&#9;&#9;_str = "&#10;&#9;&lt;tr style='mso-height-source:userset;mso-yfti-irow:" + RowNum + "'&gt;" + "&#10;&#9;&lt;td class=xl30&gt;" + CompetenceName + "&lt;/td&gt;&#10;&#9;&lt;td class=xl34 x:num=\"" + PlanMark + "\"&gt;" + PlanMark + "&lt;/td&gt;&#10;&#9;&lt;td class="+_selfStyle+" x:num=\"" + _selfDifference + "\"&gt;" + _selfDifference + "&lt;/td&gt;&#10;&#9;&lt;td class="+_managerStyle+" x:num=\"" + _managerDifference + "\"&gt;" + _managerDifference + "&lt;/td&gt;&#10;&#9;&lt;td class="+_staffStyle+" x:num=\"" + _staffDifference + "\"&gt;" + _staffDifference + "&lt;/td&gt;&#10;&#9;&lt;td class="+_collStyle+" x:num=\"" + _collDifference + "\"&gt;" + _collDifference + "&lt;/td&gt;&#10;&#9;&lt;td class="+_expertStyle+" x:num=\"" + _expertDifference + "\"&gt;" + _expertDifference  + "&lt;/td&gt;&#10;&#9;&lt;/tr&gt;";&#10;&#10;&#9;&#9;&#9;html_TEXT += _str;&#10;&#9;&#9;&#9;Session.excel_html += _str;&#10;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#10;&#9;&#9;_str = "&#10;&lt;/table&gt;&#10;&lt;br&gt;";&#10;&#9;&#9;RowNum++;&#10;&#9;&#9;html_TEXT += _str;&#10;&#9;&#9;Session.excel_html += _str;&#10;&#10;&#9;&#9;&#10;&#9;&#9;_str = "    &#10;&lt;x:PageBreaks&gt;&#10;&#9;&lt;x:RowBreaks&gt;&#10;&#9;&#9;&lt;x:RowBreak&gt;&#10;&#9;&#9;&lt;x:Row&gt;" + (RowNum + 7) + "&lt;/x:Row&gt;&#10;&#9;&#9;&lt;/x:RowBreak&gt;&#10;&#9;&lt;/x:RowBreaks&gt;&#10;&lt;/x:PageBreaks&gt;";&#10;&#9;&#9;&#10;&#9;&#9;html_TEXT = StrReplace(html_TEXT, "&lt;x:PageBreaks&gt;&lt;/x:PageBreaks&gt;", _str);&#10;&#9;&#9;Session.excel_html = StrReplace(Session.excel_html, "&lt;x:PageBreaks&gt;&lt;/x:PageBreaks&gt;", _str);&#10;&#10;// Лепестковая диаграмма по профилям(самооценка, оценка руководителя, средним по подчиненным)&#10;&#9;&#9;try&#10;&#9;&#9;{&#10;&#9;&#9;&#9;Graph_Module = ArrayOptFirstElem( XQuery("for $elem in custom_web_templates where $elem/code = '" + GRAPH_TEMPLATE + "' return $elem") );&#10;&#9;&#9;&#9;if ( Graph_Module != undefined  )&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;Graph_Module = OpenDoc(UrlFromDocID(Graph_Module.PrimaryKey)).TopElem;&#10;&#9;&#9;&#9;&#9;EvalCodePage(Graph_Module.html.Value);&#10;&#9;&#9;&#9;}&#10;&#9;&#9;}&#10;&#9;&#9;catch(err)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;alert("ОШИБКА: Ошибка получения настраиваемого web-шаблона одной из частей отчета. " + err);&#10;&#9;&#9;}&#10;// Аналитика по индикаторам&#10;&#9;&#9;try&#10;&#9;&#9;{&#10;&#9;&#9;&#9;Indicator_Module = ArrayOptFirstElem( XQuery("for $elem in custom_web_templates where $elem/code = '" + INDICATOR_TEMPLATE + "' return $elem") );&#10;&#9;&#9;&#9;if ( Indicator_Module != undefined  )&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;Indicator_Module = OpenDoc(UrlFromDocID(Indicator_Module.PrimaryKey)).TopElem;&#10;&#9;&#9;&#9;&#9;EvalCodePage(Indicator_Module.html.Value);&#10;&#9;&#9;&#9;}&#10;&#9;&#9;}&#10;&#9;&#9;catch(err)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;alert("ОШИБКА: Ошибка получения настраиваемого web-шаблона одной из частей отчета. " + err);&#10;&#9;&#9;}&#10;&#10;// Отчет по результатам оценки (общая статистика)&#10;&#9;&#9;try&#10;&#9;&#9;{&#10;&#9;&#9;&#9;FINALL_Module = ArrayOptFirstElem( XQuery("for $elem in custom_web_templates where $elem/code = '" + FINALL_TEMPLATE + "' return $elem") );&#10;&#9;&#9;&#9;if ( FINALL_Module != undefined  )&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;FINALL_Module = OpenDoc(UrlFromDocID(FINALL_Module.PrimaryKey)).TopElem;&#10;&#9;&#9;&#9;&#9;EvalCodePage(FINALL_Module.html.Value);&#10;&#9;&#9;&#9;}&#10;&#9;&#9;}&#10;&#9;&#9;catch(err)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;alert("ОШИБКА: Ошибка получения настраиваемого web-шаблона одной из частей отчета. " + err);&#10;&#9;&#9;}&#10;&#9;} // for (_ass in AssessmentAppraises)&#10;&#10;&#9;Response.Write(html_TEXT);&#10;&#10;&#9;RES_STR = new Object(); &#10;&#9;RES_STR.html = Session.excel_html; &#10;&#9;//tools_web.set_user_data('excel_html_'+curUserID,RES_STR,118600);&#10;&#9;tools_web.remove_user_data("excel_html_" + curUserID);&#10;&#9;tools_web.set_user_data( "excel_html_" + curUserID , { 'html': Session.excel_html }, 86000 ); &#10;&#10;} // if (isFilter)&#10;%&gt;&#10;&lt;/div&gt;</code_text>
			</exec_code>
			<html>&lt;%&#10;// -----------------------------------------------------------------------------------------------------------------------------&#10;// автор:&#9;RH&#10;// создан:&#9;30.05.2010 &#10;// изменен:&#9;&#10;// -------------------------------------------------Предупреждение--------------------------------------------------------------&#10;// &lt;нет&gt;&#10;// ------------------------------------------------Параметры шаблона------------------------------------------------------------&#10;// признак - использовать вес компетенции при расчете оценки или нет&#10;USE_WEIGHT_FLAG = false;&#10;// формула расчета итоговой оценки&#10;OVERALL_MARK_FORMULA = "SUM/COUNT";&#10;// ----------------------------------------------Глобальные переменные----------------------------------------------------------&#10;// &lt;нет&gt;&#10;// ---------------------------------------------------Константы-----------------------------------------------------------------&#10;// код шаблона документа графической части отчета&#10;GRAPH_TEMPLATE = "rolf_competence_appraisal_graph_part";&#10;// длина надписи на графике - применяется к названиям отображаемым на графиках&#10;FIXED_LENGTH = 25;&#10;// код шаблона отчета "Аналитика по индикаторам"&#10;INDICATOR_TEMPLATE = "rolf_indicator_common_report";&#10;// код шаблона отчета "Отчет по результатам оценки (общая статистика)"&#10;FINALL_TEMPLATE = "rolf_finall_common_report";&#10;// стиль отчетов&#10;CSS_TEMPLATE = "rolf_css_report";&#10;// путь к порталу с учетом шаблона дизайна, если не используется шаблон по умолчанию &#10;PORTAL_URL = ( curHostSettings.default_web_design != 'default' ? (global_settings.settings.portal_base_url + "/" + curWebDesignUrl) : global_settings.settings.portal_base_url );&#10;// -----------------------------------------------------------------------------------------------------------------------------&#10;%&gt;&#10;&#10;&lt;script language="JavaScript"&gt;&#10;function show( title, inputIds, inputNames, catalog, disp_object_ids, m_sel )&#10;{&#10;&#9;var pars=new Object();&#10;&#9;pars.title = title;&#10;&#9;var strAttr="status:no;dialogWidth:750px;dialogHeight:580px;help:no";&#10;&#9;&#10;&#9;pars.elemNamesArray = Array();&#10;&#9;&#10;&#9;var i = 0;&#10;&#10;&#9;ids = "";&#10;&#9;arr = document.forms['main'][inputIds].value.split(',');&#10;&#9;for ( i=0; i&lt;arr.length; i++ )&#10;&#9;{&#10;&#9;&#9;if ( arr[i] == '' ) continue;&#10;&#9;&#9;ids += ";" + arr[i];&#10;&#9;}&#10;&#9;pars.selected_object_ids = ids;&#10;&#9;pars.display_object_ids = disp_object_ids;&#10;&#9;arr = document.forms['main'][inputNames].value.split("|");&#10;&#9;for ( i=0; i&lt;arr.length; i++ )&#10;&#9;{&#10;&#9;&#9;pars.elemNamesArray[i] = arr[i];&#10;&#9;}&#10;&#10;&#9;//xShowModalDialog('dlg_select.html?doc_id=&lt;%=curDocID%&gt;&amp;catalog_name='+catalog+'&amp;show_all=1&amp;multi_select='+m_sel+'&amp;rand='+ Math.random(), pars, strAttr);&#10;&#9;xShowSelectDialog(&#10;&#9;{&#10;&#9;&#9;"catalog_name": catalog,&#10;&#9;&#9;"multi_select": m_sel,&#10;&#9;&#9;"can_be_empty": "true",&#10;&#9;&#9;"disp_filter": "false",&#10;&#9;&#9;"check_access": "false",&#10;&#9;&#9;"display_object_ids": disp_object_ids,&#10;&#9;&#9;"selected_object_ids": ids&#10;&#9;}, &#10;&#9;function(oParams)&#10;&#9;{&#10;&#9;&#9;id_mas = oParams.selected_object_ids.split(";");&#10;&#10;&#9;&#9;if (!oParams.handle) return null;&#10;&#10;&#9;&#9;names = "";&#10;&#9;&#9;ids = "";&#10;&#9;&#9;id_ar = oParams.selected_object_ids.split(";");&#10;&#9;&#9;isFirst = true;&#10;&#9;&#9;for (i=0;i&lt;id_ar.length;i++)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;if ( id_ar[i] == "" || id_ar[i] == null ) continue;&#10;&#9;&#9;&#9;ids += ( isFirst ? '' : ',' ) + id_ar[i];&#10;&#9;&#9;&#9;isFirst = false;&#10;&#9;&#9;}&#10;&#9;&#9;for (i=0;i&lt;oParams.elemNamesArray.length;i++)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;if( oParams.elemNamesArray[i]!=null )&#10;&#9;&#9;&#9;names += ( i != 0 ? "|" : "" ) + oParams.elemNamesArray[i];&#10;&#9;&#9;}&#10;&#10;&#9;&#9;if (document.forms['main'][inputIds].value != ids)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;document.forms['main'][inputIds].value = ids;&#10;&#9;&#9;&#9;document.forms['main'][inputNames].value = names;&#10;&#9;&#9;&#9;document.forms['main'].submit();&#10;&#9;&#9;}&#10;&#9;});&#10;}&#10;&#10;function do_display(flag)&#10;{&#10;&#9;periodTR = document.getElementById('tr_period');&#10;&#9;assTR = document.getElementById('tr_ass');&#10;&#10;&#9;if (flag == '10')&#10;&#9;{&#10;&#9;&#9;periodTR.style.display = 'none';&#10;&#9;&#9;assTR.style.display = 'inline';&#10;&#9;}&#10;&#9;else if (flag == '11')&#10;&#9;{&#10;&#9;&#9;periodTR.style.display = 'inline';&#10;&#9;&#9;assTR.style.display = 'none';&#10;&#9;}&#10;}&#10;&lt;/script&gt;&#10;&lt;script src="scripts/calendar/calendar.js"&gt;&lt;/script&gt;&#10;&#10;&lt;%&#10;&#9;disp_obj_ids_app = ArraySelectDistinct( ArrayExtract( XQuery("for $elem in pas where $elem/assessment_appraise_type = 'competence_appraisal' return $elem"),"assessment_appraise_id" ) ).join(";");&#10;&#10;%&gt;&#10;&lt;form id="main" name="main" action="&lt;%=Request.Url%&gt;" METHOD="POST"&gt;&#10;&#9;&lt;table&gt;&#10;&#9;&#9;&lt;tr&gt;&#10;&#9;&#9;&#9;&lt;td&gt;&#10;&#9;&#9;&#9;&#9;&lt;input type="button" value="      Процедура оценки      " class="inputButton" onClick="show('Процедуры оценки', 'assessment_app_ids', 'assessment_app_names', 'assessment_appraise', '&lt;%=disp_obj_ids_app%&gt;', 0 ); " onMouseOver="this.className='inputButtonOver';" onMouseOut="this.className='inputButton';"&gt;&#10;&#9;&#9;&#9;&lt;/td&gt;&#10;&#9;&#9;&#9;&lt;td&gt;&#10;&#9;&#9;&#9;&#9;&lt;input type="text" readonly name="assessment_app_names" value="&lt;%=( Request.Form.HasProperty( 'assessment_app_names' ) ? Request.Form.assessment_app_names : '' )%&gt;" size="100"&gt;&lt;br&gt;&#10;&#9;&#9;&#9;&#9;&lt;input type="hidden" name="assessment_app_ids" onchange="submit();" value="&lt;%=( Request.Form.HasProperty( 'assessment_app_ids' ) ? Request.Form.assessment_app_ids : '' )%&gt;"&gt;&#10;&#9;&#9;&#9;&lt;/td&gt;&#10;&#9;&#9;&lt;/tr&gt;&#10;&lt;%&#10;&#9;if(Request.Form.HasProperty( 'assessment_app_ids' ) &amp;&amp; Request.Form.assessment_app_ids!=null &amp;&amp; Request.Form.assessment_app_ids!='')&#10;&#9;{&#9;disp_obj_ids_coll = ArraySelectDistinct( ArrayExtract( XQuery("for $elem in pas where $elem/assessment_appraise_id = "+Request.Form.assessment_app_ids+" return $elem"),"person_id" ) ).join(";");&#10;%&gt;&#10;&#9;&#9;&lt;tr&gt;&#10;&#9;&#9;&#9;&lt;td&gt;&#10;&#9;&#9;&#9;&#9;&lt;input type="button" value="Оцениваемый сотрудник" class="inputButton" onClick="show('Оцениваемые сотрудники', 'coll_ids', 'coll_names', 'collaborator', '&lt;%=disp_obj_ids_coll%&gt;' )" onMouseOver="this.className='inputButtonOver';" onMouseOut="this.className='inputButton';"&gt;&#10;&#9;&#9;&#9;&lt;/td&gt;&#10;&#9;&#9;&#9;&lt;td&gt;&#10;&#9;&#9;&#9;&#9;&lt;input type="text" readonly name="coll_names" value="&lt;%=( Request.Form.HasProperty( 'coll_names' ) ? Request.Form.coll_names : '' )%&gt;" size="100"&gt;&lt;br&gt;&#10;&#9;&#9;&#9;&#9;&lt;input type="hidden" name="coll_ids" value="&lt;%=( Request.Form.HasProperty( 'coll_ids' ) ? Request.Form.coll_ids : '' )%&gt;"&gt;&#10;&#9;&#9;&#9;&lt;/td&gt;&#10;&#9;&#9;&lt;/tr&gt;&#10;&#9;&#9;&lt;tr&gt;&#10;&#9;&#9;&#9;&lt;td colspan=2 align=center&gt;&#10;&#9;&#9;&#9;&#9;&lt;input type="submit" value="Сформировать отчет" class="inputButton" onMouseOver="this.className='inputButtonOver';" onMouseOut="this.className='inputButton';"&gt;&#10;&#9;&#9;&#9;&#9;&lt;input type="button" value="Экспорт в Excel" onclick="modalWin=window.open('assessment_excel_export.html','','')" class="inputButton" onMouseOver="this.className='inputButtonOver';" onMouseOut="this.className='inputButton';"&gt;&#10;&#9;&#9;&#9;&lt;/td&gt;&#10;&#9;&#9;&lt;/tr&gt;&#10;&lt;%&#10;&#9;}&#10;%&gt;&#10;&#9;&lt;/table&gt;&#10;&lt;/form&gt;&#10;&lt;br&gt;&lt;br&gt;&#10;&lt;div style="padding: 10px; width: 900px; overflow: visible; overflow-x: auto; overflow-y: hidden;"&gt;&#10;&lt;%&#10;//-----------------------------РАЗРЫВ ШАБЛОНА-------------------------------------&#10;&#10;&#9;function GetMarkFromCompetence(SOURCE, EVAL_SOURCE)&#10;&#9;{&#10;&#9;&#9;if (SOURCE.EvalPath(EVAL_SOURCE).Value == 'N') return 0;&#10;&#9;&#9;&#10;&#9;&#9;try&#10;&#9;&#9;{&#10;&#9;&#9;&#9;objDoc = OpenDoc(UrlFromDocID( SOURCE.PrimaryKey ) ).TopElem;&#10;&#9;&#9;}&#10;&#9;&#9;catch(err)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;alert(err);&#10;&#9;&#9;&#9;return 0;&#10;&#9;&#9;}&#10;&#9;&#9;&#10;&#9;&#9;_scale = objDoc.scales.GetOptChildByKey(SOURCE.EvalPath(EVAL_SOURCE).Value);&#10;&#9;&#9;res = null;&#10;&#9;&#9;&#10;&#9;&#9;if (_scale != undefined)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;if (_scale.percent.HasValue)&#10;&#9;&#9;&#9;&#9;res =  Real(_scale.percent) * ( USE_WEIGHT_FLAG ? (SOURCE.weight / 100.0) : 1 );&#10;&#9;&#9;&#9;else&#10;&#9;&#9;&#9;&#9;res = (_scale.ChildIndex + 1) * ( USE_WEIGHT_FLAG ? (SOURCE.weight / 100.0) : 1 );&#10;&#9;&#9;}&#10;&#9;&#9;else&#10;&#9;&#9;{&#10;&#9;&#9;&#9;try&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;res = Real(SOURCE.EvalPath(EVAL_SOURCE).Value) * ( USE_WEIGHT_FLAG ? (SOURCE.weight / 100.0) : 1 );&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;catch(err){}&#10;&#9;&#9;}&#10;&#10;&#9;&#9;return res;&#10;&#9;}&#10;&#9;function GetMark(SOURCE, EVAL_COLLECTION, FORMULA, EVAL_SOURCE)&#10;&#9;{&#10;&#9;&#9;TOTAL = 0.0;&#10;&#9;&#9;SUM = 0.0;&#10;&#9;&#9;COUNT = 0;&#10;&#9;&#9;MIN = null;&#10;&#9;&#9;MAX = null;&#10;&#9;&#9;NA_COUNT = 0;&#10;&#9;&#9;// счиатем оценку по компетенциям&#10;&#9;&#9;for (_obj in SOURCE.EvalPath(EVAL_COLLECTION))&#10;&#9;&#9;{&#10;&#9;&#9;&#9;if (_obj.EvalPath(EVAL_SOURCE).Value == 'N')&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;NA_COUNT++;&#10;&#9;&#9;&#9;&#9;continue;&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;try&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;objDoc = OpenDoc(UrlFromDocID( _obj.PrimaryKey ) ).TopElem;&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;catch(err)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;continue;&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#10;&#9;&#9;&#9;_scale = objDoc.scales.GetOptChildByKey(_obj.EvalPath(EVAL_SOURCE).Value);&#10;&#9;&#9;&#9;_cur_markk = null;&#10;&#9;&#9;&#9;if (_scale != undefined)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;if (_scale.percent.HasValue)&#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;_cur_markk =  Real(_scale.percent) * (_obj.weight / 100.0);&#10;&#9;&#9;&#9;&#9;&#9;SUM = SUM + Real(_scale.percent);&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;else&#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;_cur_markk = (_scale.ChildIndex + 1) * (_obj.weight / 100.0);&#10;&#9;&#9;&#9;&#9;&#9;SUM = SUM + _scale.ChildIndex + 1;&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;else&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;try&#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;_cur_markk = Real(_obj.EvalPath(EVAL_SOURCE).Value) * (_obj.weight / 100.0);&#10;&#9;&#9;&#9;&#9;&#9;SUM = SUM + Real(_obj.EvalPath(EVAL_SOURCE).Value);&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;catch(err)&#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;_cur_markk = null;&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;if (_cur_markk != null)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;COUNT++;&#10;&#9;&#9;&#9;&#9;TOTAL = TOTAL + Real(_cur_markk);&#10;&#9;&#9;&#9;&#9;if (MAX == null || MAX &lt; _cur_markk) MAX = _cur_markk;&#10;&#9;&#9;&#9;&#9;if (MIN == null || MIN &gt; _cur_markk) MIN = _cur_markk;&#10;&#9;&#9;&#9;}&#10;&#9;&#9;}&#10;&#9;&#9;// итоговая оценка&#10;&#9;&#9;res = null;&#10;&#9;&#9;try&#10;&#9;&#9;{&#10;&#9;&#9;&#9;eval(' res = ' + FORMULA);&#10;&#9;&#9;}&#10;&#9;&#9;catch(err){}&#10;&#10;&#9;&#9;return res;&#10;&#9;}&#10;&#9;function GetScaleFromCompetence(SOURCE, EVAL_SOURCE)&#10;&#9;{&#10;&#9;&#9;if (SOURCE.EvalPath(EVAL_SOURCE).Value == 'N') return 0;&#10;&#9;&#9;&#10;&#9;&#9;try&#10;&#9;&#9;{&#10;&#9;&#9;&#9;objDoc = OpenDoc(UrlFromDocID( SOURCE.PrimaryKey ) ).TopElem;&#10;&#9;&#9;}&#10;&#9;&#9;catch(err)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;alert(err);&#10;&#9;&#9;&#9;return 0;&#10;&#9;&#9;}&#10;&#9;&#9;&#10;&#9;&#9;_scale = objDoc.scales.GetOptChildByKey(SOURCE.EvalPath(EVAL_SOURCE).Value);&#10;&#9;&#9;res = null;&#10;&#9;&#9;&#10;&#9;&#9;if (_scale != undefined)&#10;&#9;&#9;{&#10;&#10;&#9;&#9;&#9;&#9;res = (_scale.ChildIndex + 1);&#10;&#9;&#9;}&#10;&#9;&#9;else&#10;&#9;&#9;{&#10;&#9;&#9;&#9;try&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;res = Real(SOURCE.EvalPath(EVAL_SOURCE).Value) * ( USE_WEIGHT_FLAG ? (SOURCE.weight / 100.0) : 1 );&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;catch(err){}&#10;&#9;&#9;}&#10;&#9;&#9;return res;&#10;&#9;}&#9;&#10;// ******************ОСНОВНАЯ ОБЛАСТЬ*************************&#10;&#10;&#9;Session.excel_html = "";&#10;&#9;html_TEXT = "&#10;&lt;!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\"&gt;&#10;&lt;HTML&gt;&lt;HEAD&gt;&#10;&lt;META content=\"text/html; charset=utf-8\" http-equiv=Content-Type&gt;";&#10;&#10;html_TEXT = "";&#10;&#10;isFilter = Request.Form.HasProperty("assessment_app_ids") &amp;&amp; Trim( Request.Form.assessment_app_ids ) != "" &amp;&amp; Request.Form.HasProperty("coll_ids") &amp;&amp; Trim( Request.Form.coll_ids ) != "";&#10;if (isFilter)&#10;{&#10;&#9;_str = "&#10;&lt;html xmlns:v=\"urn:schemas-microsoft-com:vml\"&#10;xmlns:o=\"urn:schemas-microsoft-com:office:office\"&#10;xmlns:x=\"urn:schemas-microsoft-com:office:excel\"&#10;xmlns=\"http://www.w3.org/TR/REC-html40\"&gt;&#10;&#10;&lt;head&gt;&#10;&lt;meta http-equiv=Content-Type content=\"text/html; charset=utf-8\"&gt;&#10;&lt;meta name=ProgId content=Excel.Sheet&gt;&#10;&lt;meta name=Generator content=\"Microsoft Excel 11\"&gt;&#10;&lt;!--[if gte mso 9]&gt;&lt;xml&gt;&#10;&lt;o:DocumentProperties&gt;&#10;&#9;&lt;o:Author&gt;РОЛЬФ&lt;/o:Author&gt;&#10;&#9;&lt;o:LastAuthor&gt;РОЛЬФ&lt;/o:LastAuthor&gt;&#10;&#9;&lt;o:Created&gt;2010-05-30T12:51:09Z&lt;/o:Created&gt;&#10;&#9;&lt;o:LastSaved&gt;2010-05-30T13:03:28Z&lt;/o:LastSaved&gt;&#10;&#9;&lt;o:Version&gt;11.9999&lt;/o:Version&gt;&#10;&lt;/o:DocumentProperties&gt;&#10;&lt;/xml&gt;&lt;![endif]--&gt;";&#10;&#10;// Стиль отчета&#10;&#9;try&#10;&#9;{&#10;&#9;&#9;CSS_Module = ArrayOptFirstElem( XQuery("for $elem in custom_web_templates where $elem/code = '" + CSS_TEMPLATE + "' return $elem") );&#10;&#9;&#9;if ( CSS_Module != undefined  )&#10;&#9;&#9;{&#10;&#9;&#9;&#9;CSS_Module = OpenDoc(UrlFromDocID(CSS_Module.PrimaryKey)).TopElem;&#10;&#9;&#9;&#9;EvalCodePage(CSS_Module.html.Value);&#10;&#9;&#9;}&#10;&#9;}&#10;&#9;catch(err)&#10;&#9;{&#10;&#9;&#9;alert("ОШИБКА: Ошибка получения настраиваемого web-шаблона одной из частей отчета. " + err);&#10;&#9;}&#10;&#9;_str+="&#10;&lt;!--[if gte mso 9]&gt;&lt;xml&gt;&#10; &lt;x:ExcelWorkbook&gt;&#10;  &lt;x:ExcelWorksheets&gt;&#10;   &lt;x:ExcelWorksheet&gt;&#10;    &lt;x:Name&gt;Отчет по оценке компетенций&lt;/x:Name&gt;&#10;    &lt;x:WorksheetOptions&gt;&#10;     &lt;x:Print&gt;&#10;      &lt;x:ValidPrinterInfo/&gt;&#10;      &lt;x:PaperSizeIndex&gt;9&lt;/x:PaperSizeIndex&gt;&#10;      &lt;x:Scale&gt;21&lt;/x:Scale&gt;&#10;      &lt;x:HorizontalResolution&gt;600&lt;/x:HorizontalResolution&gt;&#10;      &lt;x:VerticalResolution&gt;0&lt;/x:VerticalResolution&gt;&#10;     &lt;/x:Print&gt;&#10;     &lt;x:ShowPageBreakZoom/&gt;&#10;     &lt;x:Selected/&gt;&#10;     &lt;x:LeftColumnVisible&gt;3&lt;/x:LeftColumnVisible&gt;&#10;     &lt;x:Panes&gt;&#10;      &lt;x:Pane&gt;&#10;       &lt;x:Number&gt;3&lt;/x:Number&gt;&#10;       &lt;x:ActiveRow&gt;19&lt;/x:ActiveRow&gt;&#10;       &lt;x:ActiveCol&gt;3&lt;/x:ActiveCol&gt;&#10;      &lt;/x:Pane&gt;&#10;     &lt;/x:Panes&gt;&#10;     &lt;x:ProtectContents&gt;False&lt;/x:ProtectContents&gt;&#10;     &lt;x:ProtectObjects&gt;False&lt;/x:ProtectObjects&gt;&#10;     &lt;x:ProtectScenarios&gt;False&lt;/x:ProtectScenarios&gt;&#10;    &lt;/x:WorksheetOptions&gt;&#10;    &lt;x:PageBreaks&gt;&#10;     &lt;x:RowBreaks&gt;&#10;      &lt;x:RowBreak&gt;&#10;       &lt;x:Row&gt;45&lt;/x:Row&gt;&#10;      &lt;/x:RowBreak&gt;&#10;     &lt;/x:RowBreaks&gt;&#10;    &lt;/x:PageBreaks&gt;&#10;   &lt;/x:ExcelWorksheet&gt;&#10;  &lt;/x:ExcelWorksheets&gt;&#10;  &lt;x:WindowHeight&gt;12240&lt;/x:WindowHeight&gt;&#10;  &lt;x:WindowWidth&gt;19440&lt;/x:WindowWidth&gt;&#10;  &lt;x:WindowTopX&gt;480&lt;/x:WindowTopX&gt;&#10;  &lt;x:WindowTopY&gt;120&lt;/x:WindowTopY&gt;&#10;  &lt;x:ProtectStructure&gt;False&lt;/x:ProtectStructure&gt;&#10;  &lt;x:ProtectWindows&gt;False&lt;/x:ProtectWindows&gt;&#10; &lt;/x:ExcelWorkbook&gt;&#10;&lt;/xml&gt;&lt;![endif]--&gt;&#10;&#10;&lt;/head&gt;&#10;&lt;body link=blue vlink=purple lang=RU style='tab-interval:35.4pt'&gt;";&#10;&#9;&#10;&#9;html_TEXT += _str;&#10;&#9;Session.excel_html += _str;&#10;&#9;&#10;&#9;// выбранные процедуры оценки&#10;&#9;AssessmentAppraises = Trim( Request.Form.assessment_app_ids ).split(",");&#10;&#9;for (_ass_id in AssessmentAppraises)&#10;&#9;{&#10;&#9;&#9;RowNum = 0;&#10;&#10;&#9;&#9;_ass_name = OpenDoc(UrlFromDocID(Int(_ass_id))).TopElem.name;&#10;&#9;&#9;_str = '';&#10;&#9;&#9;_str += "&lt;h3&gt;" + _ass_name + "&lt;/h3&gt;&#10;&#9;&#9;&lt;p align='left'&gt;&lt;b&gt;Аналитические данные по оценке компетенций&lt;/b&gt;&lt;/p&gt;";&#10;&#9;&#9;html_TEXT += _str;&#10;&#9;&#9;Session.excel_html += _str;&#10;&#10;&#9;&#9;Plans = XQuery("for $obj in assessment_plans where $obj/assessment_appraise_id = " + _ass_id + &#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;" and $obj/person_id = " + Request.Form.coll_ids + " order by $obj/person_fullname return $obj");&#10;&#9;&#9;_plan = ArrayOptFirstElem(Plans);&#10;&#9;&#9;if (_plan == undefined)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;html_TEXT += "&lt;center&gt;&lt;font&gt;&lt;color='red'&gt;Отсутствует план оценки сотрудника для процедуры " + _ass_name + "&lt;/color&gt;&lt;/font&gt;&lt;center&gt;";&#10;&#9;&#9;&#9;continue;&#10;&#9;&#9;}&#10;&#9;&#9;// план оценки сотрудника&#10;&#9;&#9;try&#10;&#9;&#9;{&#10;&#9;&#9;&#9;plan_id = _plan.id;&#10;&#9;&#9;&#9;planDoc = OpenDoc(UrlFromDocID(plan_id)).TopElem;&#10;&#9;&#9;}&#10;&#9;&#9;catch(err)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;alert("ОШИБКА: невозможно получить карточку плана оценки сотрудника. " + err);&#10;&#9;&#9;&#9;continue;&#10;&#9;&#9;}&#10;&#10;&#9;&#9;graph_competence_str = "";&#10;&#9;&#9;graph_comp_code_str = "";&#10;&#9;&#9;graph_plan_str = "";&#10;&#10;&#9;&#9;graph_mark_str = Array();&#10;&#10;&#9;&#9;graph_mark_str[0] = "";&#10;&#9;&#9;graph_mark_str[1] = "";&#10;&#9;&#9;graph_mark_str[2] = "";&#10;&#10;&#9;&#9;// карточка оцениваемого сотрудника&#10;&#9;&#9;collDoc = OpenDoc(UrlFromDocID(planDoc.person_id)).TopElem;&#10;&#9;&#9;&#10;&#9;&#9;// процедура оценки&#10;&#9;&#9;AssessmentAppraise = OpenDoc(UrlFromDocID(planDoc.assessment_appraise_id)).TopElem;&#10;&#9;&#9;&#10;&#9;&#9;RowNum = 0;&#10;&#9;&#9;//Аналитика полученных данных по компетенциям&#10;&#9;&#9;_str = "&#10;&lt;table x:str border=0 cellpadding=0 cellspacing=0 style='border-collapse:collapse'&gt;&#10;&#9;&lt;tr style='mso-height-source:userset;mso-yfti-irow:" + RowNum + "'&gt;" + "&#10;&#9;&lt;td class=xl35_comp width='100'&gt;&amp;nbsp&lt;/td&gt;&#10;&#9;&lt;td class=xl37_comp &gt;Отклонение&gt;0 &lt;/td&gt;&#10;&#9;&lt;td class=xl37_comp &gt;&amp;nbsp&lt;/td&gt;&#10;&#9;&lt;td class=xl36_comp width='100'&gt;&amp;nbsp&lt;/td&gt;&#10;&#9;&lt;td class=xl37 &gt;Отклонение&lt;0 &lt;/td&gt;&#10;&#9;&lt;/tr&gt;&#10;&lt;/table&gt;&#10;&lt;br&gt;&#10;&lt;table x:str border=0 cellpadding=0 cellspacing=0 style='border-collapse:collapse'&gt;&#10;&#9;&lt;tr style='mso-height-source:userset;mso-yfti-irow:" + RowNum + "'&gt;" + "&#10;&#9;&lt;td class=xl37 &gt;&amp;nbsp&lt;/td&gt;&#10;&#9;&lt;/tr&gt;&#10;&#9;&lt;tr height=81 style='height:60.75pt;mso-yfti-firstrow:yes;mso-yfti-irow:" + RowNum + "'&gt;&#10;&#9;&lt;td class=xl31&gt;Компетенции&lt;/td&gt;&#10;&#9;&lt;td class=xl31&gt;Стандартный профиль&lt;/td&gt;&#10;&#9;&lt;td class=xl31&gt;Отклонение самооценки от стандартного профиля&lt;/td&gt;&#10;&#9;&lt;td class=xl31&gt;Отклонение оценки руководителя от стандартного профиля&lt;/td&gt;&#10;&#9;&lt;td class=xl31&gt;Отклонение оценки подчиненных от стандартного профиля&lt;/td&gt;&#10;&#9;&lt;td class=xl31&gt;Отклонение оценки коллег от стандартного профиля&lt;/td&gt;&#10;&#9;&lt;td class=xl31&gt;Отклонение оценки экспертов от стандартного профиля&lt;/td&gt;&#10;&#9;&lt;/tr&gt;";&#10;&#9;&#9;&#10;&#9;&#9;html_TEXT += _str;&#10;&#9;&#9;Session.excel_html += _str;&#10;&#10;&#9;&#9;try&#10;&#9;&#9;{&#10;&#9;&#9;&#9;_pa = ArrayOptFirstElem(XQuery("for $obj in pas where $obj/assessment_appraise_id = " + planDoc.assessment_appraise_id + &#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;" and $obj/person_id = " + planDoc.person_id + " and $obj/assessment_appraise_type = 'competence_appraisal' return $obj"));&#10;&#9;&#9;&#9;if (_pa == undefined)&#10;&#9;&#9;&#9;&#9;throw 'No pa exists';&#10;&#9;&#9;&#9;_profile_id = OpenDoc(UrlFromDocID(_pa.id)).TopElem.competence_profile_id;&#10;&#9;&#9;&#9;Profile = OpenDoc(UrlFromDocID(Int(_profile_id))).TopElem;&#10;&#9;&#9;}&#10;&#9;&#9;catch(err)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;alert("ОШИБКА: Невозможно получить профиль компетенций. " + err);&#10;&#9;&#9;&#9;Profile = null;&#10;&#9;&#9;}&#10;&#10;&#9;&#9;// цикл по компетенциям&#10;&#9;&#9;for (_comp in Profile.competences)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;// компетенция&#10;&#9;&#9;&#9;CompetenceCode = OpenDoc(UrlFromDocID(_comp.competence_id)).TopElem.code;&#10;&#9;&#9;&#9;CompetenceName = OpenDoc(UrlFromDocID(_comp.competence_id)).TopElem.name;&#10;&#9;&#9;&#9;//graph_competence_str += graph_competence_str == "" ? StrReplace(CompetenceName, ","," ").substr(0, FIXED_LENGTH) : "," + StrReplace(CompetenceName, ","," ").substr(0, FIXED_LENGTH);&#10;&#9;&#9;&#9;graph_competence_str += (graph_competence_str != "" ? "," : "" ) + StrReplace(CompetenceName, ","," ");&#10;&#9;&#9;&#9;graph_comp_code_str += graph_comp_code_str == "" ? StrReplace(CompetenceCode, ","," ").substr(0, FIXED_LENGTH) : "," + StrReplace(CompetenceCode, ","," ").substr(0, FIXED_LENGTH);&#10;&#9;&#9;&#9;// плановая оценка&#10;&#9;&#9;&#9;PlanMark = GetMarkFromCompetence(_comp, "plan");&#10;&#9;&#9;&#9;if (PlanMark != null)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;PlanMark = Real(StrRealFixed(PlanMark, 2));&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;else&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;PlanMark = "";&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;graph_plan_str += graph_plan_str == "" ? PlanMark : "," + PlanMark;&#10;&#9;&#9;&#9;// самооценка&#10;&#9;&#9;&#9;SelfMark = null;&#10;&#9;&#9;&#9;Pas = XQuery("for $obj in pas where $obj/assessment_appraise_id = " + planDoc.assessment_appraise_id + " and $obj/person_id = " + planDoc.person_id + " and $obj/assessment_appraise_type = 'competence_appraisal' and $obj/status = 'self' return $obj");&#10;&#9;&#9;&#9;_pa = ArrayOptFirstElem(Pas);&#10;&#9;&#9;&#9;if (_pa != undefined)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;Comp = OpenDoc(UrlFromDocID(_pa.id)).TopElem.competences.GetOptChildByKey(_comp.competence_id);&#10;&#9;&#9;&#9;&#9;_getMark=GetMarkFromCompetence(Comp, "mark");&#10;&#9;&#9;&#9;&#9;if (Comp != undefined) {&#10;&#9;&#9;&#9;&#9;&#9;SelfMark = (_getMark!=null) ? _getMark : GetMark(Comp, "indicators", OVERALL_MARK_FORMULA, "mark");&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;if (SelfMark != null)&#10;&#9;&#9;&#9;&#9;SelfMark = Real(StrRealFixed(SelfMark, 2));&#10;&#9;&#9;&#9;else&#10;&#9;&#9;&#9;&#9;SelfMark = "";&#10;&#9;&#9;&#9;graph_mark_str[0] += graph_mark_str[0] == "" ? SelfMark : "," + SelfMark;&#10;&#9;&#9;&#9;&#10;&#9;&#9;&#9;// средняя оценка руководителя&#10;&#9;&#9;&#9;ManagerMark = Real(0.0);&#10;&#9;&#9;&#9;ManagerMarkCount = 0;&#10;&#9;&#9;&#9;Pas = XQuery("for $obj in pas where $obj/assessment_appraise_id = " + planDoc.assessment_appraise_id + " and $obj/person_id = " + planDoc.person_id + " and $obj/assessment_appraise_type = 'competence_appraisal' and $obj/status = 'manager' return $obj");&#10;&#9;&#9;&#9;for (_pa in Pas)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;if (_pa != undefined)&#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;Comp = OpenDoc(UrlFromDocID(_pa.id)).TopElem.competences.GetOptChildByKey(_comp.competence_id);&#10;&#9;&#9;&#9;&#9;&#9;_getMark=GetMarkFromCompetence(Comp, "mark");&#10;&#9;&#9;&#9;&#9;&#9;if (Comp != undefined) {&#10;&#9;&#9;&#9;&#9;&#9;&#9;_mmark = (_getMark!=null) ? _getMark : GetMark(Comp, "indicators", OVERALL_MARK_FORMULA, "mark");&#10;&#9;&#9;&#9;&#9;&#9;&#9;if (_mmark != null)&#10;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;ManagerMark += _mmark;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;ManagerMarkCount++;&#10;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;if (ManagerMarkCount &gt; 0)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;ManagerMark = ManagerMark / ManagerMarkCount;&#10;&#9;&#9;&#9;&#9;ManagerMark = Real(StrRealFixed(ManagerMark, 2));&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;else&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;ManagerMark = "";&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;graph_mark_str[1] += graph_mark_str[1] == "" ? ManagerMark : "," + ManagerMark;&#10;&#10;&#9;&#9;&#9;// средняя оценка коллег&#10;&#9;&#9;&#9;CollMark = Real(0.0);&#10;&#9;&#9;&#9;CollMarkCount = 0;&#10;&#9;&#9;&#9;Pas = XQuery("for $obj in pas where $obj/assessment_appraise_id = " + planDoc.assessment_appraise_id + " and $obj/person_id = " + planDoc.person_id + " and $obj/assessment_appraise_type = 'competence_appraisal' and $obj/status = 'coll' return $obj");&#10;&#9;&#9;&#9;for (_pa in Pas)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;if (_pa != undefined) {&#10;&#9;&#9;&#9;&#9;&#9;Comp = OpenDoc(UrlFromDocID(_pa.id)).TopElem.competences.GetOptChildByKey(_comp.competence_id);&#10;&#9;&#9;&#9;&#9;&#9;_getMark=GetMarkFromCompetence(Comp, "mark");&#10;&#9;&#9;&#9;&#9;&#9;if (Comp != undefined) {&#10;&#9;&#9;&#9;&#9;&#9;&#9;_cmark = (_getMark!=null) ? _getMark : GetMark(Comp, "indicators", OVERALL_MARK_FORMULA, "mark");&#10;&#9;&#9;&#9;&#9;&#9;&#9;if (_cmark != null)&#10;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;CollMark += _cmark;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;CollMarkCount++;&#10;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;if (CollMarkCount &gt; 0)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;CollMark = CollMark / CollMarkCount;&#10;&#9;&#9;&#9;&#9;CollMark = Real(StrRealFixed(CollMark, 2));&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;else&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;CollMark = "";&#10;&#9;&#9;&#9;}&#10;&#10;&#9;&#9;&#9;// средняя оценка подчиненных&#10;&#9;&#9;&#9;StaffMark = Real(0.0);&#10;&#9;&#9;&#9;StaffMarkCount = 0;&#10;&#9;&#9;&#9;Pas = XQuery("for $obj in pas where $obj/assessment_appraise_id = " + planDoc.assessment_appraise_id + " and $obj/person_id = " + planDoc.person_id + " and $obj/assessment_appraise_type = 'competence_appraisal' and $obj/status = 'staff' return $obj");&#10;&#9;&#9;&#9;for (_pa in Pas)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;if (_pa != undefined) {&#10;&#9;&#9;&#9;&#9;&#9;Comp = OpenDoc(UrlFromDocID(_pa.id)).TopElem.competences.GetOptChildByKey(_comp.competence_id);&#10;&#9;&#9;&#9;&#9;&#9;_getMark=GetMarkFromCompetence(Comp, "mark");&#10;&#9;&#9;&#9;&#9;&#9;if (Comp != undefined) {&#10;&#9;&#9;&#9;&#9;&#9;&#9;_smark = (_getMark!=null) ? _getMark : GetMark(Comp, "indicators", OVERALL_MARK_FORMULA, "mark");&#10;&#9;&#9;&#9;&#9;&#9;&#9;if (_smark != null)&#10;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;StaffMark += _smark;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;StaffMarkCount++;&#10;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;if (StaffMarkCount &gt; 0) &#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;StaffMark = StaffMark / StaffMarkCount;&#10;&#9;&#9;&#9;&#9;StaffMark = Real(StrRealFixed(StaffMark, 2));&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;else&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;//StaffMark = "";&#10;&#9;&#9;&#9;&#9;StaffMark = "0";&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;graph_mark_str[2] += graph_mark_str[2] == "" ? StaffMark : "," + StaffMark;&#10;&#9;&#9;&#9;&#10;&#9;&#9;&#9;// средняя оценка экспертов&#10;&#9;&#9;&#9;ExpertMark = Real(0.0);&#10;&#9;&#9;&#9;ExpertMarkCount = 0;&#10;&#9;&#9;&#9;Pas = XQuery("for $obj in pas where $obj/assessment_appraise_id = " + planDoc.assessment_appraise_id + " and $obj/person_id = " + planDoc.person_id + " and $obj/assessment_appraise_type = 'competence_appraisal' and $obj/status = 'expert' return $obj");&#10;&#9;&#9;&#9;for (_pa in Pas)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;if (_pa != undefined) {&#10;&#9;&#9;&#9;&#9;&#9;Comp = OpenDoc(UrlFromDocID(_pa.id)).TopElem.competences.GetOptChildByKey(_comp.competence_id);&#10;&#9;&#9;&#9;&#9;&#9;_getMark=GetMarkFromCompetence(Comp, "mark");&#10;&#9;&#9;&#9;&#9;&#9;if (Comp != undefined) {&#10;&#9;&#9;&#9;&#9;&#9;&#9;_emark = (_getMark!=null) ? _getMark : GetMark(Comp, "indicators", OVERALL_MARK_FORMULA, "mark");&#10;&#9;&#9;&#9;&#9;&#9;&#9;if (_emark != null)&#10;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;ExpertMark += _emark;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;ExpertMarkCount++;&#10;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;if (ExpertMarkCount &gt; 0)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;ExpertMark = ExpertMark / ExpertMarkCount;&#10;&#9;&#9;&#9;&#9;ExpertMark = Real(StrRealFixed(ExpertMark, 2));&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;else&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;ExpertMark = "";&#10;&#9;&#9;&#9;}&#10;&#9;&#10;&#9;&#9;&#9;RowNum++;&#10;&#10;&#9;&#9;&#9;_selfDifference=((SelfMark=='' &amp;&amp; PlanMark=='') ? '' :(((SelfMark!='')? Real(SelfMark) : 0) -((PlanMark!='')? Real(PlanMark) : 0)));&#10;&#9;&#9;&#9;_managerDifference=((ManagerMark=='' &amp;&amp; PlanMark=='') ? '' :(((ManagerMark!='')? Real(ManagerMark) : 0) -((PlanMark!='')? Real(PlanMark) : 0)));&#10;&#9;&#9;&#9;_staffDifference=((StaffMark=='') ? '' :(((StaffMark!='')? Real(StaffMark) : 0) -((PlanMark!='')? Real(PlanMark) : 0)));&#10;&#9;&#9;&#9;_collDifference=((CollMark=='') ? '' :(((CollMark!='')? Real(CollMark) : 0) -((PlanMark!='')? Real(PlanMark) : 0)));&#10;&#9;&#9;&#9;_expertDifference=((ExpertMark=='') ? '' :(((ExpertMark!='')? Real(ExpertMark) : 0) -((PlanMark!='')? Real(PlanMark) : 0)));&#10;&#10;&#9;&#9;&#9;_selfDifference_temp=(_selfDifference=='') ? '' : (1000*_selfDifference);&#10;&#9;&#9;&#9;_managerDifference_temp=(_managerDifference=='') ? '' : (1000*_managerDifference);&#10;&#9;&#9;&#9;_staffDifference_temp=(_staffDifference=='') ? '' : (1000*_staffDifference);&#10;&#9;&#9;&#9;_collDifference_temp=(_collDifference=='') ? '' : (1000*_collDifference);&#10;&#9;&#9;&#9;_expertDifference_temp=(_expertDifference=='') ? '' : (1000*_expertDifference);&#10;&#10;&#10;&#9;&#9;&#9;_selfStyle=(_selfDifference_temp=='' || _selfDifference_temp==0) ? "xl34" :((_selfDifference_temp&gt;0)? "xl33_comp" : "xl32_comp");&#10;&#9;&#9;&#9;_managerStyle=(_managerDifference_temp=='' || _managerDifference_temp==0) ? "xl34" :((_managerDifference_temp&gt;0)? "xl33_comp" : "xl32_comp");&#10;&#9;&#9;&#9;_staffStyle=(_staffDifference_temp=='' || _staffDifference_temp==0) ? "xl34" :((_staffDifference_temp&gt;0)? "xl33_comp" : "xl32_comp");&#10;&#9;&#9;&#9;_collStyle=(_collDifference_temp=='' || _collDifference_temp==0) ? "xl34" :((_collDifference_temp&gt;0)? "xl33_comp" : "xl32_comp");&#10;&#9;&#9;&#9;_expertStyle=(_expertDifference_temp=='' || _expertDifference_temp==0) ? "xl34" :((_expertDifference_temp&gt;0)? "xl33_comp" : "xl32_comp");&#10;&#9;&#9;&#9;&#10;&#10;&#9;&#9;&#9;_str = "&#10;&#9;&lt;tr style='mso-height-source:userset;mso-yfti-irow:" + RowNum + "'&gt;" + "&#10;&#9;&lt;td class=xl30&gt;" + CompetenceName + "&lt;/td&gt;&#10;&#9;&lt;td class=xl34 x:num=\"" + PlanMark + "\"&gt;" + PlanMark + "&lt;/td&gt;&#10;&#9;&lt;td class="+_selfStyle+" x:num=\"" + SelfMark + "\"&gt;" + _selfDifference + "&lt;/td&gt;&#10;&#9;&lt;td class="+_managerStyle+" x:num=\"" + ManagerMark + "\"&gt;" + _managerDifference + "&lt;/td&gt;&#10;&#9;&lt;td class="+_staffStyle+" x:num=\"" + StaffMark + "\"&gt;" + _staffDifference + "&lt;/td&gt;&#10;&#9;&lt;td class="+_collStyle+" x:num=\"" + CollMark + "\"&gt;" + _collDifference + "&lt;/td&gt;&#10;&#9;&lt;td class="+_expertStyle+" x:num=\"" + ExpertMark + "\"&gt;" + _expertDifference  + "&lt;/td&gt;&#10;&#9;&lt;/tr&gt;";&#10;&#10;&#9;&#9;&#9;html_TEXT += _str;&#10;&#9;&#9;&#9;Session.excel_html += _str;&#10;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#10;&#9;&#9;_str = "&#10;&lt;/table&gt;&#10;&lt;br&gt;";&#10;&#9;&#9;RowNum++;&#10;&#9;&#9;html_TEXT += _str;&#10;&#9;&#9;Session.excel_html += _str;&#10;&#10;&#9;&#9;&#10;&#9;&#9;_str = "    &#10;&lt;x:PageBreaks&gt;&#10;&#9;&lt;x:RowBreaks&gt;&#10;&#9;&#9;&lt;x:RowBreak&gt;&#10;&#9;&#9;&lt;x:Row&gt;" + (RowNum + 7) + "&lt;/x:Row&gt;&#10;&#9;&#9;&lt;/x:RowBreak&gt;&#10;&#9;&lt;/x:RowBreaks&gt;&#10;&lt;/x:PageBreaks&gt;";&#10;&#9;&#9;&#10;&#9;&#9;html_TEXT = StrReplace(html_TEXT, "&lt;x:PageBreaks&gt;&lt;/x:PageBreaks&gt;", _str);&#10;&#9;&#9;Session.excel_html = StrReplace(Session.excel_html, "&lt;x:PageBreaks&gt;&lt;/x:PageBreaks&gt;", _str);&#10;&#10;// Лепестковая диаграмма по профилям(самооценка, оценка руководителя, средним по подчиненным)&#10;&#9;&#9;try&#10;&#9;&#9;{&#10;&#9;&#9;&#9;Graph_Module = ArrayOptFirstElem( XQuery("for $elem in custom_web_templates where $elem/code = '" + GRAPH_TEMPLATE + "' return $elem") );&#10;&#9;&#9;&#9;if ( Graph_Module != undefined  )&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;Graph_Module = OpenDoc(UrlFromDocID(Graph_Module.PrimaryKey)).TopElem;&#10;&#9;&#9;&#9;&#9;EvalCodePage(Graph_Module.html.Value);&#10;&#9;&#9;&#9;}&#10;&#9;&#9;}&#10;&#9;&#9;catch(err)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;alert("ОШИБКА: Ошибка получения настраиваемого web-шаблона одной из частей отчета. " + err);&#10;&#9;&#9;}&#10;// Аналитика по индикаторам&#10;&#9;&#9;try&#10;&#9;&#9;{&#10;&#9;&#9;&#9;Indicator_Module = ArrayOptFirstElem( XQuery("for $elem in custom_web_templates where $elem/code = '" + INDICATOR_TEMPLATE + "' return $elem") );&#10;&#9;&#9;&#9;if ( Indicator_Module != undefined  )&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;Indicator_Module = OpenDoc(UrlFromDocID(Indicator_Module.PrimaryKey)).TopElem;&#10;&#9;&#9;&#9;&#9;EvalCodePage(Indicator_Module.html.Value);&#10;&#9;&#9;&#9;}&#10;&#9;&#9;}&#10;&#9;&#9;catch(err)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;alert("ОШИБКА: Ошибка получения настраиваемого web-шаблона одной из частей отчета. " + err);&#10;&#9;&#9;}&#10;&#10;// Отчет по результатам оценки (общая статистика)&#10;&#9;&#9;try&#10;&#9;&#9;{&#10;&#9;&#9;&#9;FINALL_Module = ArrayOptFirstElem( XQuery("for $elem in custom_web_templates where $elem/code = '" + FINALL_TEMPLATE + "' return $elem") );&#10;&#9;&#9;&#9;if ( FINALL_Module != undefined  )&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;FINALL_Module = OpenDoc(UrlFromDocID(FINALL_Module.PrimaryKey)).TopElem;&#10;&#9;&#9;&#9;&#9;EvalCodePage(FINALL_Module.html.Value);&#10;&#9;&#9;&#9;}&#10;&#9;&#9;}&#10;&#9;&#9;catch(err)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;alert("ОШИБКА: Ошибка получения настраиваемого web-шаблона одной из частей отчета. " + err);&#10;&#9;&#9;}&#10;&#9;} // for (_ass in AssessmentAppraises)&#10;&#10;&#9;Response.Write(html_TEXT);&#10;&#10;&#9;RES_STR = new Object(); &#10;&#9;RES_STR.html = Session.excel_html; &#10;&#9;//tools_web.set_user_data('excel_html_'+curUserID,RES_STR,118600);&#10;&#9;tools_web.remove_user_data("excel_html_" + curUserID);&#10;&#9;tools_web.set_user_data( "excel_html_" + curUserID , { 'html': Session.excel_html }, 86000 ); &#10;&#10;} // if (isFilter)&#10;%&gt;&#10;&lt;/div&gt;</html>
			<use_session_cache>false</use_session_cache>
			<cwt_type>default</cwt_type>
			<out_type>undefined</out_type>
			<access>
				<access_level>0</access_level>
			</access>
			<doc_info>
				<creation>
					<user_login>user1</user_login>
					<date>2010-05-30T13:18:44Z</date>
				</creation>
				<modification>
					<user_login>admin</user_login>
					<user_id>6148914691236517121</user_id>
					<date>2021-06-28T13:29:25Z</date>
				</modification>
			</doc_info>
			<is_std>false</is_std>
			<changed>false</changed>
			<is_enabled>true</is_enabled>
		</custom_web_template>
		<custom_web_template>
			<id>0x5706674A2AD76A38</id>
			<code>websoft_report_360_4</code>
			<name>Отчет по результатам оценки сотрудников (вариант 1)</name>
			<category>websoft</category>
			<exec_code>
				<code_text>&lt;%&#10;// ---------------------------------------------------------------------------------------------------------------------------&#10;// автор:   ER&#10;// создан:  04.12.2013&#10;// изменен:  07.04.2016&#10;// -------------------------------------------------Предупреждение--------------------------------------------------------------&#10;// &lt;нет&gt;&#10;// ------------------------------------------------Параметры шаблона------------------------------------------------------------&#10;// &lt;нет&gt;&#10;// ----------------------------------------------Глобальные переменные----------------------------------------------------------&#10;// &lt;нет&gt;&#10;// ---------------------------------------------------Константы-----------------------------------------------------------------&#10;// &lt;нет&gt;&#10;// -----------------------------------------------------------------------------------------------------------------------------&#10;legend_color = '[' + legend_color + ']';&#10;color_array_legend =tools.read_object(legend_color)&#10;&#10;function func_over(func_asid, f_comp_id, str_status)&#10;{&#10;&#9;f_mmang = 0;&#10;&#9;f_nummang = 0;&#10;&#9;f_rat_mang = 0;&#10;&#9;f_pas_elem = XQuery("for $elem in pas where $elem/assessment_appraise_id = " + func_asid + " and $elem/status = '" + str_status + "' return $elem");&#10;&#9;for (_pa in f_pas_elem)&#10;&#9;{&#10;&#9;&#9;try&#10;&#9;&#9;{&#10;&#9;&#9;&#9;f_pa_doc_elem = OpenDoc(UrlFromDocID(_pa.id)).TopElem;&#10;&#9;&#9;}&#10;&#9;&#9;catch(err)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;continue;&#10;&#9;&#9;}&#10;&#9;&#9;f_elem = ArrayOptFind(f_pa_doc_elem.competences, "This.competence_id == f_comp_id");&#10;&#9;&#9;if (f_elem != undefined)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;mng_m = f_elem.mark_value != null &amp;&amp; f_elem.mark_value != "" ? Real(f_elem.mark_value) : 0;&#10;&#9;&#9;&#9;if (mng_m != 0)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;f_mmang += Real(mng_m);&#10;&#9;&#9;&#9;&#9;f_nummang ++;&#10;&#9;&#9;&#9;}&#10;&#9;&#9;}&#10;&#9;}&#10;&#9;f_rat_mang = f_nummang != 0 ? Real(StrRealFixed(Real(f_mmang)/Real(f_nummang), 2, true)) : 0;&#10;&#9;&#10;&#9;return f_rat_mang;&#10;}&#10;&#10;function func_over_func(func_asid, f_comp_id, str_status, comps_arr)&#10;{&#10;&#9;mfunc = 0;&#10;&#9;numfunc = 0;&#10;&#9;rat_func = 0;&#10;&#9;pas_func = XQuery("for $elem in pas where $elem/assessment_appraise_id = " + func_asid + " and $elem/status = '" + str_status + "' and $elem/overall != null() return $elem");&#10;&#10;&#9;rat_ind_func = 0;&#10;&#9;full_value = 0;&#10;&#9;full_cnt = 0;&#10;&#9;for(_ind_func in comps_arr.indicators)&#10;&#9;{&#10;&#9;&#9;m_ind_func = 0;&#10;&#9;&#9;num_ind_func = 0;&#10;&#9;&#9;for (_pa_s in pas_func)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;try&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;DocPasFunc = OpenDoc(UrlFromDocID(_pa_s.id)).TopElem;&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;catch(err)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;continue;&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;ffunc = ArrayOptFind(DocPasFunc.competences, "This.competence_id == f_comp_id");&#10;&#9;&#9;&#9;if (ffunc != undefined)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;ffunc_ind = ArrayOptFind(ffunc.indicators, "This.indicator_id == _ind_func.indicator_id");&#10;&#9;&#9;&#9;&#9;if (ffunc_ind != undefined &amp;&amp; ffunc_ind.mark_value != null)&#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;m_ind_func += Real(ffunc_ind.mark_value);&#10;&#9;&#9;&#9;&#9;&#9;num_ind_func ++;&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;}&#10;&#9;&#9;}&#10;&#9;&#9;rat_ind_func = num_ind_func != 0 ? Real(StrRealFixed(Real(m_ind_func)/Real(num_ind_func), 2, true)) : 0;&#10;&#9;&#9;full_value += rat_ind_func;&#10;&#9;&#9;full_cnt += rat_ind_func != 0 ? 1 : 0;&#10;&#9;}&#10;&#10;&#9;rat_func = full_cnt != 0 ? Real(StrRealFixed(Real(full_value)/Real(full_cnt), 2, true)) : 0;&#10;&#9;return rat_func;&#10;}&#10;&#10;try&#10;{&#10;&#9;lng_id = curLng.short_id;&#9;&#10;}&#10;catch (err)&#10;{&#10;&#9;lng_id = "ru";&#10;}&#10;&#10;url_temp_folder = 'x-local://wt/web/temp_files';&#10;ObtainDirectory(url_temp_folder);&#10;url_temp_folder = 'x-local://wt/web/temp_files/' + String(curUserID);&#10;ObtainDirectory(url_temp_folder);&#10;temp_folder = UrlToFilePath(url_temp_folder);&#10;&#10;file_name = "rez_prov_" + DateToRawSeconds(Date()) + ".xlsx";&#10;oExcelDoc = null;&#10;&#10;try&#10;{&#10;&#9;oExcelDoc = tools.get_object_assembly('Excel');&#10;&#9;oExcelDoc.CreateWorkBook();&#10;&#10;&#9;oWorksheet = oExcelDoc.GetWorksheet(0);&#10;&#9;oWorksheet.PageSetup.Orientation = "Landscape";&#10;&#9;oWorksheet.PageSetup.PaperSize = "PaperA4";&#10;&#10;&#9;oExcelDoc.Open(temp_folder + "\\" + file_name);&#10;}&#10;catch(err)&#10;{&#10;&#9;oExcelDoc = null;&#10;&#9;Response.Write("&lt;b&gt;&lt;p&gt;При построении данного отчета произошла ошибка с библиотекой для построения графиков! " + err + "&lt;/p&gt;&lt;/b&gt;");&#10;&#9;alert("При построении данного отчета произошла ошибка с библиотекой для построения графиков! " + err);&#10;}&#10;&#10;function color_font_dll(_clr)&#10;{&#10;&#9;_rez = "";&#10;&#9;if (visible_legend)&#10;&#9;{&#10;/*&#10;&#9;&#9;_clr = OptInt(_clr, 0);&#10;&#9;&#9;if(_clr &gt;= 90 &amp;&amp; _clr &lt;= 100)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;_rez = "#FFFFFF";&#10;&#9;&#9;}&#10;*/&#10;&#10;&#9;&#9;cnt_legend_func = ArrayCount(color_array_legend);&#10;&#9;&#9;_clr_fn = OptInt(_clr, 0);&#10;&#9;&#9;if (_clr_fn != 0)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;_clr = Real(_clr);&#10;&#9;&#9;&#9;if(_clr &gt;= color_array_legend[cnt_legend_func-1].min &amp;&amp; _clr &lt;= color_array_legend[cnt_legend_func-1].max)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;_rez = "#FFFFFF";&#10;&#9;&#9;&#9;}&#10;&#9;&#9;}&#10;&#9;}&#10;&#9;return _rez;&#10;}&#10;&#10;function Perevod(_var)&#10;{&#10;&#9;_rez = "";&#10;&#9;_var = StrReal(Real(_var), 1);&#10;&#9;_rez = StrReplace(String(_var), ".", ",");&#10;&#9;return _rez;&#10;}&#10;&#10;function check_text(_str_aver)&#10;{&#10;&#9;str_text = "";&#10;&#9;_str_aver = Math.round(Real(_str_aver));&#10;&#10;&#9;for (_clg in color_array_legend)&#10;&#9;{&#10;&#9;&#9;if ( _str_aver &gt;= _clg.min &amp;&amp; _str_aver &lt;= _clg.max )&#10;&#9;&#9;{&#10;&#9;&#9;&#9;str_text = _clg.title;&#10;&#9;&#9;&#9;break;&#10;&#9;&#9;}&#10;&#9;}&#10;&#9;&#10;&#9;return str_text;&#10;}&#10;&#10;function check_color(_str_data)&#10;{&#10;&#9;str_rezult = "";&#10;&#9;if (visible_legend)&#10;&#9;{&#10;&#9;&#9;//_str_data = Math.round(Real(_str_data));&#10;&#9;&#9;_str_data = Real(_str_data);&#10;&#9;&#9;&#10;&#9;&#9;for (_clg in color_array_legend)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;//if ( _str_data &gt;= _clg.min &amp;&amp; _str_data &lt;= _clg.max )&#10;&#9;&#9;&#9;if ( _str_data &gt;= _clg.min &amp;&amp; _str_data &lt; _clg.max )&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;str_rezult = _clg.color;&#10;&#9;&#9;&#9;&#9;break;&#10;&#9;&#9;&#9;}&#10;&#9;&#9;}&#10;&#9;}&#10;&#9;return str_rezult;&#10;}&#10;&#10;function color_font(_clr)&#10;{&#10;&#9;_rez = "";&#10;&#9;if (visible_legend)&#10;&#9;{&#10;&#9;&#9;cnt_legend_func = ArrayCount(color_array_legend);&#10;&#9;&#9;_clr_fn = OptInt(_clr, 0);&#10;&#9;&#9;if (_clr_fn != 0)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;_clr = Real(_clr);&#10;&#9;&#9;&#9;if(_clr &gt;= color_array_legend[cnt_legend_func-1].min &amp;&amp; _clr &lt;= color_array_legend[cnt_legend_func-1].max)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;_rez = " color: white; ";&#10;&#9;&#9;&#9;}&#10;&#9;&#9;}&#10;&#9;}&#10;&#9;return _rez;&#10;}&#10;&#10;%&gt;&#10;&lt;script language="JAVASCRIPT"&gt;&#10;function show( title, inputIds, inputNames, catalog, disp_object_ids,m_sel )&#10;{&#10;&#9;var pars=new Object();&#10;&#9;pars.title = title;&#10;&#9;var strAttr="status:no;dialogWidth:750px;dialogHeight:580px;help:no";&#10;&#9;&#10;&#9;pars.elemNamesArray = Array();&#10;&#9;&#10;&#9;var i = 0;&#10;&#10;&#9;ids = "";&#10;&#9;arr = document.forms['main'][inputIds].value.split(',');&#10;&#9;for ( i=0; i&lt;arr.length; i++ )&#10;&#9;{&#10;&#9;&#9;if ( arr[i] == '' ) continue;&#10;&#9;&#9;ids += ";" + arr[i];&#10;&#9;}&#10;&#9;pars.selected_object_ids = ids;&#10;&#9;pars.display_object_ids = disp_object_ids;&#10;&#9;arr = document.forms['main'][inputNames].value.split("|");&#10;&#9;for ( i=0; i&lt;arr.length; i++ )&#10;&#9;{&#10;&#9;&#9;pars.elemNamesArray[i] = arr[i];&#10;&#9;}&#10;&#10;&#9;//xShowModalDialog('dlg_select.html?doc_id=&lt;%=curDocID%&gt;&amp;catalog_name='+catalog+'&amp;show_all=1&amp;multi_select='+m_sel+'&amp;rand='+ Math.random(), pars, strAttr);&#10;&#9;xShowSelectDialog(&#10;&#9;{&#10;&#9;&#9;"catalog_name": catalog,&#10;&#9;&#9;"multi_select": m_sel,&#10;&#9;&#9;"can_be_empty": "true",&#10;&#9;&#9;"disp_filter": "false",&#10;&#9;&#9;"check_access": "false",&#10;&#9;&#9;"display_object_ids": disp_object_ids,&#10;&#9;&#9;"selected_object_ids": ids&#10;&#9;}, &#10;&#9;function(oParams)&#10;&#9;{&#10;&#9;&#9;id_mas = oParams.selected_object_ids.split(";");&#10;&#10;&#9;&#9;if (!oParams.handle) return null;&#10;&#10;&#9;&#9;names = "";&#10;&#9;&#9;ids = "";&#10;&#9;&#9;id_ar = oParams.selected_object_ids.split(";");&#10;&#9;&#9;isFirst = true;&#10;&#9;&#9;for (i=0;i&lt;id_ar.length;i++)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;if ( id_ar[i] == "" || id_ar[i] == null ) continue;&#10;&#9;&#9;&#9;ids += ( isFirst ? '' : ',' ) + id_ar[i];&#10;&#9;&#9;&#9;isFirst = false;&#10;&#9;&#9;}&#10;&#9;&#9;for (i=0;i&lt;oParams.elemNamesArray.length;i++)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;if( oParams.elemNamesArray[i]!=null )&#10;&#9;&#9;&#9;names += ( i != 0 ? "|" : "" ) + oParams.elemNamesArray[i];&#10;&#9;&#9;}&#10;&#10;&#9;&#9;if (document.forms['main'][inputIds].value != ids)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;document.forms['main'][inputIds].value = ids;&#10;&#9;&#9;&#9;document.forms['main'][inputNames].value = names;&#10;&#9;&#9;}&#10;&#9;});&#10;}&#10;&#10;function do_submit()&#10;{&#10;&#9;document.forms['main']['is_posted'].value = "1";&#10;&#9;document.forms['main'].submit();&#10;}&#10;function export_archive()&#10;{&#10;&#9;window.open('temp_files/&lt;%=String(curUserID) + "/" + file_name%&gt;');&#10;}&#10;&lt;/script&gt;&#10;&lt;%&#10;if (oExcelDoc != null)&#10;{&#10;%&gt;&#10;&lt;form id="main" name="main" action="&lt;%=Request.Url%&gt;" METHOD="POST"&gt;&#10;&#9;&lt;input type="hidden" name="is_posted" value=""&gt;&#10;&#9;&lt;table&gt;&#10;&#9;&#9;&lt;tr&gt;&#10;&#9;&#9;&#9;&lt;td&gt;&#10;&#9;&#9;&#9;&#9;&lt;input type="button" value=" Процедура оценки " class="inputButton" onClick="show('Процедура оценки', 'ass_ids', 'ass_names', 'assessment_appraise', '', 0)" onMouseOver="this.className='inputButtonOver';" onMouseOut="this.className='inputButton';"&gt;&#10;&#9;&#9;&#9;&lt;/td&gt;&#10;&#9;&#9;&#9;&lt;td&gt;&#10;&#9;&#9;&#9;&#9;&lt;input type="text" readonly name="ass_names" value="&lt;%=( Request.Form.HasProperty( 'ass_names' ) ? Request.Form.ass_names : '' )%&gt;" size="100"&gt;&lt;br&gt;&#10;&#9;&#9;&#9;&#9;&lt;input type="hidden" name="ass_ids" value="&lt;%=( Request.Form.HasProperty( 'ass_ids' ) ? Request.Form.ass_ids : '' )%&gt;"&gt;&#10;&#9;&#9;&#9;&lt;/td&gt;&#10;&#9;&#9;&lt;/tr&gt;&#10;&#10;&#9;&#9;&lt;tr&gt;&#10;&#9;&#9;&#9;&lt;td&gt;&#10;&#9;&#9;&#9;&#9;&lt;input type="button" value="    Подразделение   " class="inputButton" onClick="show('Подразделение', 'sub_ids', 'sub_names', 'subdivision', '', 0)" onMouseOver="this.className='inputButtonOver';" onMouseOut="this.className='inputButton';"&gt;&#10;&#9;&#9;&#9;&lt;/td&gt;&#10;&#9;&#9;&#9;&lt;td&gt;&#10;&#9;&#9;&#9;&#9;&lt;input type="text" readonly name="sub_names" value="&lt;%=( Request.Form.HasProperty( 'sub_names' ) ? Request.Form.sub_names : '' )%&gt;" size="100"&gt;&lt;br&gt;&#10;&#9;&#9;&#9;&#9;&lt;input type="hidden" name="sub_ids" value="&lt;%=( Request.Form.HasProperty( 'sub_ids' ) ? Request.Form.sub_ids : '' )%&gt;"&gt;&#10;&#9;&#9;&#9;&lt;/td&gt;&#10;&#9;&#9;&lt;/tr&gt;&#10;&#10;&#9;&#9;&lt;tr&gt;&#10;&#9;&#9;&#9;&lt;td colspan=2 align=center&gt;&#10;&#9;&#9;&#9;&#9;&lt;input type="button" value="Показать" onClick="do_submit();" class="inputButton" onMouseOver="this.className='inputButtonOver';" onMouseOut="this.className='inputButton';"&gt;&#10;&#10;&#9;&#9;&#9;&#9;&lt;!--&lt;input type="button" value="Экспорт в Excel" onclick="modalWin=window.open('assessment_excel_export.html','','')" class="inputButton" onMouseOver="this.className='inputButtonOver';" onMouseOut="this.className='inputButton';"&gt;--&gt;&#10;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&lt;input type="button" value="Экспорт в Excel" onClick="export_archive()" class="inputButton" onMouseOver="this.className='inputButtonOver';" onMouseOut="this.className='inputButton';"&gt;&#10;&#9;&#9;&#9;&lt;/td&gt;&#10;&#9;&#9;&lt;/tr&gt;&#10;&#9;&lt;/table&gt;&#10;&lt;/form&gt;&#10;&lt;br&gt;&lt;br&gt;&#10;&lt;%&#10;}&#10;isFilter = Request.Form.HasProperty("is_posted") &amp;&amp; (Request.Form.GetProperty("is_posted") != '') &amp;&amp; Request.Form.HasProperty("ass_names") &amp;&amp; (Request.Form.GetProperty("ass_names") != '') &amp;&amp; Request.Form.HasProperty("sub_ids") &amp;&amp; (Request.Form.GetProperty("sub_ids") != '');&#10;if ( isFilter &amp;&amp; oExcelDoc != null)&#10;{&#10;&#9;// выбор подразделения&#10;&#9;try&#10;&#9;{&#10;&#9;&#9;curSubID = Request.Form.GetProperty("sub_ids");&#10;&#9;}&#10;&#9;catch(err)&#10;&#9;{&#10;&#9;&#9;curSubID = '';&#10;&#9;}&#10;&#9;&#10;&#9;try&#10;&#9;{&#10;&#9;&#9;curSubNames = Request.Form.GetProperty("sub_names");&#10;&#9;}&#10;&#9;catch(err)&#10;&#9;{&#10;&#9;&#9;curSubNames = '';&#10;&#9;}&#10;&#10;&#9;// выбор процедуры&#10;&#9;try&#10;&#9;{&#10;&#9;&#9;curAssID = Request.Form.GetProperty("ass_ids");&#10;&#9;}&#10;&#9;catch(err)&#10;&#9;{&#10;&#9;&#9;curAssID = '';&#10;&#9;}&#10;&#10;//******************************************************************************&#10;npp = 1;&#10;&#9;Excel_html = "&#10;&lt;style type=\"text/css\"&gt;&#10; table.MsoNormalTable&#10;&#9;{font-size:10.0pt;&#10;&#9;font-family:\"Times New Roman\";&#10;&#9;}&#10; p.MsoNormal&#10;&#9;{margin-top:0cm;&#10;&#9;margin-right:0cm;&#10;&#9;margin-bottom:10.0pt;&#10;&#9;margin-left:0cm;&#10;&#9;line-height:115%;&#10;&#9;font-size:11.0pt;&#10;&#9;font-family:Calibri;&#10;&#9;}&#10;p.MsoFootnoteText&#10;&#9;{margin-bottom:.0001pt;&#10;&#9;font-size:10.0pt;&#10;&#9;font-family:Calibri;&#10;&#9;margin-left: 0cm;&#10;&#9;margin-right: 0cm;&#10;&#9;margin-top: 0cm;&#10;}&#10;span.MsoFootnoteReference&#10;&#9;{font-family:\"Times New Roman\";&#10;&#9;vertical-align:super;&#10;}&#10;.style1 {&#10;&#9;border-style: solid;&#10;&#9;border-width: 1px;&#10;&#9;text-align: center;&#10;}&#10;.style2 {&#10;&#9;border-width: 0px;&#10;}&#10;.style3 {&#10;&#9;border: 1px solid #000000;&#10;}&#10;.style4 {&#10;&#9;border-color: #000000;&#10;&#9;border-width: 1px;&#10;&#9;background-color: #008000;&#10;}&#10;.style5 {&#10;&#9;border: 1px solid #000000;&#10;&#9;background-color: #00FF00;&#10;}&#10;.style6 {&#10;&#9;background-color: #FFFF00;&#10;}&#10;.style7 {&#10;&#9;background-color: #F8C000;&#10;}&#10;.style8 {&#10;&#9;background-color: #CC0000;&#10;}&#10;.style9 {&#10;&#9;background-color: #C0C0C0;&#10;}&#10;.style10 {&#10;&#9;border-style: solid;&#10;&#9;border-width: 1px;&#10;&#9;text-align: center;&#10;}&#10;&lt;/style&gt;&#10;&#10;&lt;table style=\"width: 100%\" class=\"style2\" cellspacing=\"0\" cellpadding=\"0\"&gt;&#10;&#9;&lt;tr&gt;&#10;&#9;&#9;&lt;td colspan=8&gt;&lt;strong&gt;Отчет по результатам оценки работников (для руководителя)&lt;/strong&gt;&lt;/td&gt;&#10;&#9;&lt;/tr&gt;&#10;&#9;&lt;tr&gt;&#10;&#9;&#9;&lt;td colspan=8&gt;Структурное подразделение:   " + curSubNames + "&lt;/td&gt;&#10;&#9;&lt;/tr&gt;&#10;&#9;&lt;tr&gt;&#10;&#9;&#9;&lt;td colspan=8&gt;Дата формирования отчета:    " + DateNewTime(Date()) + "&lt;/td&gt;&#10;&#9;&lt;/tr&gt;&#9;&#10;&#9;&lt;tr&gt;&#10;&#9;&#9;&lt;td colspan=8&gt;&lt;strong&gt;Итоги оценки по компетенциям работников Вашего подразделения (по категориям)&lt;/strong&gt;&lt;/td&gt;&#10;&#9;&lt;/tr&gt;&#10;&#9;&lt;tr&gt;&#10;&#9;&#9;&lt;td colspan=8 &gt;&amp;nbsp;&lt;/td&gt;&#10;&#9;&lt;/tr&gt;&#9;&#10;&lt;/table&gt;&#10;&lt;table style=\"width: 100%\" class=\"style2\" cellspacing=\"0\" cellpadding=\"0\"&gt;&#10;&#9;&lt;tr&gt;&#10;&#9;&#9;&lt;td class=\"style10\"&gt;&lt;strong&gt;№&lt;/strong&gt;&lt;/td&gt;&#10;&#9;&#9;&lt;td class=\"style10\"&gt;&lt;strong&gt;Ф.И.О.&lt;/strong&gt;&lt;/td&gt;&#10;&#9;&#9;&lt;td class=\"style10\"&gt;&lt;strong&gt;Самооценка&lt;/strong&gt;&lt;/td&gt;&#10;&#9;&#9;&lt;td class=\"style10\"&gt;&lt;strong&gt;Оценка &lt;br /&gt; руководителя&lt;/strong&gt;&lt;/td&gt;&#10;&#9;&#9;&lt;td class=\"style10\"&gt;&lt;strong&gt;Оценка&lt;br /&gt; коллег&lt;/strong&gt;&lt;/td&gt;&#10;&#9;&#9;&lt;td class=\"style10\"&gt;&lt;strong&gt;Оценка&lt;br /&gt; подчиненных&lt;/strong&gt;&lt;/td&gt;&#10;&#9;&#9;&lt;td class=\"style10\"&gt;&lt;strong&gt;Средняя&lt;br /&gt; оценка&lt;/strong&gt;&lt;/td&gt;&#10;&#9;&#9;&lt;!-- &lt;td class=\"style10\"&gt;&lt;strong&gt;Уровень&lt;/strong&gt;&lt;/td&gt; --&gt;&#10;&#9;&lt;/tr&gt;";&#10;&#9;&#10;&#9;&#9;&#9;oCell = oWorksheet.Cells.GetCell("A1"); &#10;&#9;&#9;&#9;oCell.Value = "Отчет по результатам оценки работников (для руководителя)"; &#10;&#9;&#9;&#9;oCell.Style.FontSize = 12; &#10;&#9;&#9;&#9;oCell.Style.IsBold = true;&#10;&#9;&#9;&#9;&#10;&#10;&#9;&#9;&#9;oCell = oWorksheet.Cells.GetCell("A2"); &#10;&#9;&#9;&#9;oCell.Value = "Структурное подразделение:   " + curSubNames; &#10;&#9;&#9;&#9;oCell.Style.FontSize = 12;&#10;&#9;&#9;&#9;&#10;&#9;&#9;&#9;oCell = oWorksheet.Cells.GetCell("A3"); &#10;&#9;&#9;&#9;oCell.Value = "Дата формирования отчета:    " + DateNewTime(Date()); &#10;&#9;&#9;&#9;oCell.Style.FontSize = 12;&#10;&#9;&#9;&#9;&#10;&#9;&#9;&#9;oCell = oWorksheet.Cells.GetCell("A4");&#10;&#9;&#9;&#9;oCell.Value = "Итоги оценки по компетенциям работников Вашего подразделения (по категориям)"; &#10;&#9;&#9;&#9;oCell.Style.FontSize = 12;&#10;&#9;&#9;&#9;oCell.Style.IsBold = true;&#10;&#9;&#9;&#9;&#10;&#9;&#9;&#9;oCell = oWorksheet.Cells.GetCell("A5"); &#10;&#9;&#9;&#9;oCell.Value = "№ "; &#10;&#9;&#9;&#9;oCell.Style.Borders.SetStyle("Thin"); &#10;&#9;&#9;&#9;oCell.Style.Borders.SetColor("#000000");&#10;&#9;&#9;&#9;oCell.Style.HorizontalAlignment = "Center";&#10;&#9;&#9;&#9;oCell.Style.IsBold = true;&#10;&#9;&#9;&#9;oCell.Style.IsTextWrapped = true;&#10;&#9;&#9;&#9;oWorksheet.Cells.SetColumnWidth(0, 5.0);&#10;&#10;&#9;&#9;&#9;oCell = oWorksheet.Cells.GetCell("B5"); &#10;&#9;&#9;&#9;oCell.Value = "Ф.И.О.";&#10;&#9;&#9;&#9;oCell.Style.Borders.SetStyle("Thin"); &#10;&#9;&#9;&#9;oCell.Style.Borders.SetColor("#000000");&#10;&#9;&#9;&#9;oCell.Style.HorizontalAlignment = "Center";&#10;&#9;&#9;&#9;oCell.Style.IsBold = true;&#10;&#9;&#9;&#9;oCell.Style.IsTextWrapped = true;&#10;&#9;&#9;&#9;oWorksheet.Cells.SetColumnWidth(1, 30.0);&#10;&#9;&#9;&#9;&#10;&#9;&#9;&#9;oCell = oWorksheet.Cells.GetCell("C5"); &#10;&#9;&#9;&#9;oCell.Value = "Самооценка"; &#10;&#9;&#9;&#9;oCell.Style.Borders.SetStyle("Thin"); &#10;&#9;&#9;&#9;oCell.Style.Borders.SetColor("#000000");&#10;&#9;&#9;&#9;oCell.Style.HorizontalAlignment = "Center";&#10;&#9;&#9;&#9;oCell.Style.IsBold = true;&#10;&#9;&#9;&#9;oCell.Style.IsTextWrapped = true;&#10;&#9;&#9;&#9;oWorksheet.Cells.SetColumnWidth(2, 12.0);&#10;&#9;&#9;&#9;&#10;&#10;&#9;&#9;&#9;oCell = oWorksheet.Cells.GetCell("D5"); &#10;&#9;&#9;&#9;oCell.Value = "Оценка руководителя"; &#10;&#9;&#9;&#9;oCell.Style.Borders.SetStyle("Thin"); &#10;&#9;&#9;&#9;oCell.Style.Borders.SetColor("#000000");&#10;&#9;&#9;&#9;oCell.Style.HorizontalAlignment = "Center";&#10;&#9;&#9;&#9;oCell.Style.IsBold = true;&#10;&#9;&#9;&#9;oCell.Style.IsTextWrapped = true;&#10;&#9;&#9;&#9;oWorksheet.Cells.SetColumnWidth(3, 12.0);&#10;&#9;&#9;&#9;&#10;&#9;&#9;&#9;oCell = oWorksheet.Cells.GetCell("E5"); &#10;&#9;&#9;&#9;oCell.Value = "Оценка коллег"; &#10;&#9;&#9;&#9;oCell.Style.Borders.SetStyle("Thin"); &#10;&#9;&#9;&#9;oCell.Style.Borders.SetColor("#000000");&#10;&#9;&#9;&#9;oCell.Style.HorizontalAlignment = "Center";&#10;&#9;&#9;&#9;oCell.Style.IsBold = true;&#10;&#9;&#9;&#9;oCell.Style.IsTextWrapped = true;&#10;&#9;&#9;&#9;oWorksheet.Cells.SetColumnWidth(4, 12.0);&#10;&#10;&#9;&#9;&#9;oCell = oWorksheet.Cells.GetCell("F5"); &#10;&#9;&#9;&#9;oCell.Value = "Оценка подчиненных"; &#10;&#9;&#9;&#9;oCell.Style.Borders.SetStyle("Thin"); &#10;&#9;&#9;&#9;oCell.Style.Borders.SetColor("#000000");&#10;&#9;&#9;&#9;oCell.Style.HorizontalAlignment = "Center";&#10;&#9;&#9;&#9;oCell.Style.IsBold = true;&#10;&#9;&#9;&#9;oCell.Style.IsTextWrapped = true;&#10;&#9;&#9;&#9;oWorksheet.Cells.SetColumnWidth(5, 14.0);&#10;&#9;&#9;&#9;&#10;&#9;&#9;&#9;oCell = oWorksheet.Cells.GetCell("G5"); &#10;&#9;&#9;&#9;oCell.Value = "Средняя оценка"; &#10;&#9;&#9;&#9;oCell.Style.Borders.SetStyle("Thin"); &#10;&#9;&#9;&#9;oCell.Style.Borders.SetColor("#000000");&#10;&#9;&#9;&#9;oCell.Style.HorizontalAlignment = "Center";&#10;&#9;&#9;&#9;oCell.Style.IsBold = true;&#10;&#9;&#9;&#9;oCell.Style.IsTextWrapped = true;&#10;&#9;&#9;&#9;oWorksheet.Cells.SetColumnWidth(6, 14.0);&#10;/*&#9;&#9;&#9;&#10;&#9;&#9;&#9;oCell = oWorksheet.Cells.GetCell("H5"); &#10;&#9;&#9;&#9;oCell.Value = "Уровень";&#10;&#9;&#9;&#9;oCell.Style.Borders.SetStyle("Thin"); &#10;&#9;&#9;&#9;oCell.Style.Borders.SetColor("#000000");&#10;&#9;&#9;&#9;oCell.Style.HorizontalAlignment = "Center";&#10;&#9;&#9;&#9;oCell.Style.IsBold = true;&#10;&#9;&#9;&#9;oCell.Style.IsTextWrapped = true;&#10;&#9;&#9;&#9;oWorksheet.Cells.SetColumnWidth(7, 20);&#10;*/&#10;&#10;&#9;pasDoc = "";&#10;&#9;_cur_ass = ArrayOptFirstElem(XQuery("for $elem in pas where $elem/assessment_appraise_id = " + curAssID + " return $elem"));&#10;&#9;try&#10;&#9;{&#10;&#9;&#9;pasDoc = OpenDoc(UrlFromDocID(_cur_ass.id)).TopElem;&#10;&#9;}&#10;&#9;catch(err)&#10;&#9;{}&#10;&#10;&#9;level_arr = Array();&#10;&#9;mark_array = Array();&#10;&#10;&#10;&#9;_pi = tools.get_sub_persons_by_func_manager_id(curUserID, "collaborator,subdivision,org,position");&#10;&#9;collaborators_ids = "";&#10;&#9;if (curUser.access.access_role == "admin")&#10;&#9;{&#10;&#9;&#9;collaborators_ids = "";&#10;&#9;}&#10;&#9;else if (ArrayOptFirstElem(_pi) != undefined)&#10;&#9;{&#10;&#9;&#9;collaborators_ids = ArraySelectDistinct( ArrayExtract( _pi,"id" ) ).join(",");&#10;&#9;}&#10;&#9;else&#10;&#9;{&#10;&#9;&#9;collaborators_ids = curUserID;&#10;&#9;}&#10;&#10;&#9;str_match = "";&#10;&#9;if (collaborators_ids != "")&#10;&#9;{&#10;&#9;&#9;str_match = " and MatchSome($elem/person_id, (" + collaborators_ids + ")) ";&#10;&#9;}&#10;&#10;// тут по ТОП-500&#9;&#10;&#9;str_srr_arr_full = "";&#10;&#9;for(_comp in pasDoc.competences)&#10;&#9;{&#10;&#9;&#9;// самооценка&#10;&#9;&#9;//ms = func_over(curAssID, _comp.competence_id, 'self');&#10;&#9;&#9;// руководитель&#10;&#9;&#9;rat_mang = func_over(curAssID, _comp.competence_id, 'manager');&#10;&#10;&#9;&#9;// коллеги&#10;&#9;&#9;rat_coll = func_over_func(curAssID, _comp.competence_id, 'coll', _comp)&#10;&#9;&#10;&#9;&#9;// подчиненные&#10;&#9;&#9;rat_sub = func_over(curAssID, _comp.competence_id, 'staff');&#10;&#9;&#9;&#10;&#9;&#9;//str_srr = (Real(ms) + Real(rat_mang) + Real(rat_coll) + Real(rat_sub))/4;&#10;&#9;&#9;str_srr = (Real(rat_mang) + Real(rat_coll) + Real(rat_sub))/3;&#10;&#9;&#9;//str_srr_arr_full += (str_srr_arr_full == "" ? "" : ",") + StrReplace(Perevod(Real(str_srr)), ",", ".");&#9;&#10;&#9;&#9;str_srr_arr_full += (str_srr_arr_full == "" ? "" : ",") + Math.round(str_srr);&#10;&#9;}&#9;&#10;&#10;&#9;plan_elem = XQuery("for $elem in assessment_plans where $elem/assessment_appraise_id = " + curAssID + str_match + " return $elem");&#10;&#9;for(_compets in pasDoc.competences)&#10;&#9;{&#10;&#9;&#9;sum_aver = 0;&#10;&#9;&#9;npp = 0;&#10;&#9;&#9;aver_rez = 0;&#10;&#9;&#9;num_aver = 0;&#10;&#9;&#9;for (_plan in plan_elem)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;//если у людей подразд-е, к-ое задано&#10;&#9;&#9;&#9;_coll_elem = ArrayOptFirstElem(XQuery("for $elem in collaborators where MatchSome($elem/position_parent_id, (" + curSubID + ")) and $elem/id = " + _plan.person_id + " return $elem"));&#9;&#9;&#10;&#9;&#9;&#9;&#10;&#9;&#9;&#9;if(_coll_elem == undefined)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;continue;&#10;&#9;&#9;&#9;}&#10;&#10;&#9;&#9;&#9;npp++;&#10;&#9;&#9;&#9;_c_ass =  XQuery("for $elem in pas where $elem/assessment_appraise_id = " + curAssID + " and $elem/person_id = " + _plan.person_id + " return $elem");&#10;&#10;&#9;&#9;&#9;find_self = ArrayOptFind(_c_ass, "This.status == 'self'");&#10;&#9;&#9;&#9;mark_self = 0;&#10;&#9;&#9;&#9;fullname_pas = "";&#10;&#9;&#9;&#9;if (find_self != undefined)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;selfDoc = OpenDoc(UrlFromDocID(find_self.id)).TopElem;&#10;&#9;&#9;&#9;&#9;fullname_pas = find_self.person_fullname;&#10;&#9;&#9;&#9;&#9;find_mark = ArrayOptFind(selfDoc.competences, "This.competence_id == _compets.competence_id");&#10;&#9;&#9;&#9;&#9;if (find_mark != undefined &amp;&amp; find_mark.mark_value != null &amp;&amp; find_mark.mark_value != "")&#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;mark_self = find_mark.mark_value;&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;}&#10;&#10;&#9;&#9;&#9;mng_mark = 0;&#10;&#9;&#9;&#9;mng_arr = ArraySelect(_c_ass, "This.status == 'manager'");&#10;&#9;&#9;&#9;cnt_mng = 0;&#10;&#9;&#9;&#9;for (_mng in mng_arr)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;try&#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;mngDoc = OpenDoc(UrlFromDocID(_mng.id)).TopElem;&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;catch(err)&#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;continue;&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;find_mark = ArrayOptFind(mngDoc.competences, "This.competence_id == _compets.competence_id");&#10;&#9;&#9;&#9;&#9;if (find_mark != undefined)&#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;mng_m = find_mark.mark_value != null &amp;&amp; find_mark.mark_value != "" ? Real(find_mark.mark_value) : 0;&#10;&#9;&#9;&#9;&#9;&#9;if (mng_m != 0)&#10;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;mng_mark += Real(mng_m);&#10;&#9;&#9;&#9;&#9;&#9;&#9;cnt_mng++;&#10;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;if (cnt_mng != 0)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;mark_manager = Real(mng_mark) / Real(cnt_mng);&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;else&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;mark_manager = 0;&#10;&#9;&#9;&#9;}&#10;&#10;&#9;&#9;&#9;coll_mark = 0;&#10;&#9;&#9;&#9;coll_arr = ArraySelect(_c_ass, "This.status == 'coll'");&#10;&#9;&#9;&#9;//cnt_coll = 0;&#10;&#9;&#9;&#9;rat_ind_coll = 0;&#10;&#9;&#9;&#9;full_value = 0;&#10;&#9;&#9;&#9;full_cnt = 0;&#9;&#9;&#9;&#10;&#9;&#9;&#9;for(_ind in _compets.indicators)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;m_ind_coll = 0;&#10;&#9;&#9;&#9;&#9;num_ind_coll = 0;&#10;&#9;&#9;&#9;&#9;for (_pa_s in coll_arr)&#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;try&#10;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;DocPas = OpenDoc(UrlFromDocID(_pa_s.id)).TopElem;&#10;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;catch(err)&#10;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;continue;&#10;&#9;&#9;&#9;&#9;&#9;}&#9;&#10;&#9;&#9;&#9;&#9;&#9;fcoll = ArrayOptFind(DocPas.competences, "This.competence_id == _compets.competence_id");&#10;&#9;&#9;&#9;&#9;&#9;if (fcoll != undefined)&#10;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;fcoll_ind = ArrayOptFind(fcoll.indicators, "This.indicator_id == _ind.indicator_id");&#10;&#9;&#9;&#9;&#9;&#9;&#9;if (fcoll_ind != undefined &amp;&amp; fcoll_ind.mark_value != null)&#10;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;m_ind_coll += Real(fcoll_ind.mark_value);&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;num_ind_coll ++;&#10;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;rat_ind_coll = num_ind_coll != 0 ? Real(StrRealFixed(Real(m_ind_coll)/Real(num_ind_coll), 2, true)) : 0;&#10;&#9;&#9;&#9;&#9;full_value += rat_ind_coll;&#10;&#9;&#9;&#9;&#9;full_cnt += rat_ind_coll != 0 ? 1 : 0;&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;if (ArrayOptFirstElem(_compets.indicators) == undefined)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;for (_pa_s in coll_arr)&#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;try&#10;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;DocPas = OpenDoc(UrlFromDocID(_pa_s.id)).TopElem;&#10;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;catch(err)&#10;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;continue;&#10;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;fcoll = ArrayOptFind(DocPas.competences, "This.competence_id == _compets.competence_id");&#10;&#9;&#9;&#9;&#9;&#9;if (fcoll != undefined)&#10;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;col_m = fcoll.mark_value != null &amp;&amp; fcoll.mark_value != "" ? Real(fcoll.mark_value) : 0;&#10;&#9;&#9;&#9;&#9;&#9;&#9;if (col_m != 0)&#10;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;full_value += Real(col_m);&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;full_cnt ++;&#10;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#10;&#9;&#9;&#9;coll_mark = full_cnt != 0 ? Real(StrRealFixed(Real(full_value)/Real(full_cnt), 2, true)) : 0;&#10;&#9;&#9;&#9;&#10;&#9;&#9;&#9;staff_mark = 0;&#10;&#9;&#9;&#9;staff_arr = ArraySelect(_c_ass, "This.status == 'staff'");&#10;&#9;&#9;&#9;//cnt_staff = ArrayCount(staff_arr);&#10;&#9;&#9;&#9;cnt_staff = 0;&#10;&#9;&#9;&#9;for (_staff in staff_arr)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;try&#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;staffDoc = OpenDoc(UrlFromDocID(_staff.id)).TopElem;&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;catch(err)&#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;continue;&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;find_mark = ArrayOptFind(staffDoc.competences, "This.competence_id == _compets.competence_id");&#10;&#9;&#9;&#9;&#9;if (find_mark != undefined)&#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;staff_m = find_mark.mark_value != null &amp;&amp; find_mark.mark_value != "" ? Real(find_mark.mark_value) : 0;&#10;&#9;&#9;&#9;&#9;&#9;if (staff_m != 0)&#10;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;//staff_mark += Real(staff_m) / Real(cnt_staff);&#10;&#9;&#9;&#9;&#9;&#9;&#9;staff_mark += Real(staff_m);&#10;&#9;&#9;&#9;&#9;&#9;&#9;cnt_staff++;&#10;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;if (cnt_staff != 0)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;staff_mark = Real(staff_mark) / Real(cnt_staff);&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;else&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;staff_mark = 0;&#10;&#9;&#9;&#9;}&#10;&#10;&#9;&#9;&#9;num_ev = 0;&#10;&#10;&#9;&#9;&#9;_color = 'white';&#10;&#9;&#9;&#9;ur = '';&#10;&#9;&#9;&#9;//num_ev = mark_self != 0 ? num_ev + 1 : num_ev;&#10;&#9;&#9;&#9;num_ev = mark_manager != 0 ? num_ev + 1 : num_ev;&#10;&#9;&#9;&#9;num_ev = coll_mark != 0 ? num_ev + 1 : num_ev;&#10;&#9;&#9;&#9;num_ev = staff_mark != 0 ? num_ev + 1 : num_ev;&#10;&#9;&#9;&#9;_average = 0;&#10;&#9;&#9;&#9;if (num_ev != 0)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;_average = Real(Real(mark_manager + coll_mark + staff_mark)/Real(num_ev));&#10;&#9;&#9;&#9;}&#10;&#10;&#9;&#9;&#9;sum_aver += _average;&#10;&#9;&#9;&#9;num_aver = _average != 0 ? num_aver + 1 : num_aver;&#10;&#10;&#9;&#9;&#9;_obj = new Object();&#10;&#9;&#9;&#9;_obj.name = tools_web.get_cur_lng_name(_compets.competence_id.ForeignElem.name, lng_id);&#10;&#9;&#9;&#9;_obj.competence_id = _compets.competence_id;&#9;&#9;&#9;&#10;&#9;&#9;&#9;_obj.person_fullname = _plan.person_fullname;&#10;&#9;&#9;&#9;_obj.person_id = _plan.person_id;&#10;&#9;&#9;&#9;_obj.mark_self = StrRealFixed(mark_self, 1, true);&#10;&#9;&#9;&#9;_obj.mark_manager = StrRealFixed(mark_manager, 1, true);&#10;&#9;&#9;&#9;_obj.coll_mark = StrRealFixed(coll_mark, 1, true);&#10;&#9;&#9;&#9;_obj.staff_mark = StrRealFixed(staff_mark, 1, true);&#10;&#9;&#9;&#9;_obj.average = StrRealFixed(_average, 1, true);&#10;&#9;&#9;&#9;_obj.ur = check_text(_average);&#10;&#9;&#9;&#9;_obj.color = check_color(_average);&#10;&#9;&#9;&#9;level_arr[ArrayCount(level_arr)] = _obj; &#10;&#9;&#9;&#9;aver_rez = num_aver != 0 ? StrRealFixed(Real(sum_aver)/Real(num_aver), 1, true) : 0;&#10;&#9;&#9;}&#10;&#9;&#9;_new = new Object();&#10;&#9;&#9;temp_aver = num_aver != 0 ? Real( StrRealFixed(Real(sum_aver) / Real(num_aver) , 1, true)) : 0;&#10;&#9;&#9;_new.aver_rez = temp_aver;&#10;&#9;&#9;_new.competence_id = _compets.competence_id;&#10;&#9;&#9;_new.color = check_color(temp_aver);&#10;&#9;&#9;_new.ur = check_text(temp_aver);&#10;&#9;&#9;mark_array[ArrayCount(mark_array)] = _new;&#10;&#9;}&#10;&#10;&#9;array_gr2 = Array();&#10;&#9;str_competences = "";&#10;&#9;color_cnt = 14;&#10;&#9;for (_pl in plan_elem)&#10;&#9;{&#10;&#9;&#9;find_colls = ArrayOptFind(level_arr, "This.person_id == _pl.person_id");&#10;&#9;&#9;if (find_colls != undefined)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;temp_array = Array();&#10;&#9;&#9;&#9;temp_array = ArraySelect(level_arr, "This.person_id == _pl.person_id");&#10;&#9;&#9;&#9;if (str_competences == "")&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;str_competences = ArrayMerge(temp_array,"This.name","|");&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;_str_new_mark = ArrayMerge(temp_array,"This.average",",");&#10;&#9;&#9;&#9;&#10;&#9;&#9;&#9;_obj = new Object();&#10;&#9;&#9;&#9;_obj.person_fullname = find_colls.person_fullname;&#10;&#9;&#9;&#9;_obj.str_mark = _str_new_mark;&#10;&#9;&#9;&#9;_obj.color_cnt = color_cnt;&#10;&#9;&#9;&#9;array_gr2[ArrayCount(array_gr2)] = _obj;&#10;&#9;&#9;&#9;//color_cnt++;&#10;&#9;&#9;&#9;color_cnt += 3;&#10;&#9;&#9;}&#10;&#9;}&#10;&#9;&#10;&#9;array_gr1 = Array();&#10;&#9;_str_id = "";&#10;&#9;str_fio = "";&#10;&#9;color_cnt = 14;&#10;&#9;_idx = 6;&#10;&#9;for(_compets in pasDoc.competences)&#10;&#9;{&#10;&#9;&#9;find_comps = ArrayOptFind(level_arr, "This.competence_id == _compets.competence_id");&#10;&#9;&#9;if (find_comps != undefined)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;find_mark_comps = ArrayOptFind(mark_array, "This.competence_id == _compets.competence_id");&#10;&#9;&#9;&#9;text_col = "";&#10;&#9;&#9;&#9;text_ur = "&amp;nbsp;";&#10;&#9;&#9;&#9;text_full_mark = "&amp;nbsp;";&#10;&#9;&#9;&#9;text_color = "";&#10;&#9;&#9;&#9;text_color_font = "";&#10;&#9;&#9;&#9;comp_mark = 0;&#10;&#10;&#9;&#9;&#9;if (find_mark_comps != undefined)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;if (visible_legend)&#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;text_col = "bgcolor='" + find_mark_comps.color + "'";&#10;&#9;&#9;&#9;&#9;&#9;text_color = find_mark_comps.color;&#10;&#9;&#9;&#9;&#9;&#9;text_color_font = "style='" + color_font(comp_mark) + "'";&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;text_ur = find_mark_comps.ur;&#10;&#9;&#9;&#9;&#9;text_full_mark = find_mark_comps.aver_rez;&#10;&#9;&#9;&#9;&#9;comp_mark = Real(find_mark_comps.aver_rez);&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;}&#10;&#10;&#9;&#9;&#9;Excel_html += "&#10;&#9;&#9;&#9;&lt;tr&gt;&#10;&#9;&#9;&#9;&#9;&lt;td colspan='6' class='style1'&gt;&lt;strong&gt;" + find_comps.name + "&lt;/strong&gt;&lt;/td&gt;&#10;&#9;&#9;&#9;&#9;&lt;td class='style10' x:num='" + StrReal(Real(text_full_mark), 1) + "'&gt;" + Perevod(text_full_mark) + "&lt;/td&gt;&#10;&#9;&#9;&#9;&#9;&lt;!-- &lt;td class='style10' " + text_col + " " + text_color_font + "&gt;" + text_ur + "&lt;/td&gt; --&gt;&#10;&#9;&#9;&#9;&lt;/tr&gt;";&#10;&#10;&#9;&#9;&#9;oCell = oWorksheet.Cells.GetCell("A" + _idx); &#10;&#9;&#9;&#9;oWorksheet.Cells.Merge(_idx - 1, 0, 1, 6);&#10;&#9;&#9;&#9;oWorksheet.Cells.SetRowHeight((_idx - 1), 15.0);&#10;&#9;&#9;&#9;oCell.Value = find_comps.name;&#10;&#9;&#9;&#9;oCell.Style.Borders.SetStyle("Thin"); &#10;&#9;&#9;&#9;oCell.Style.Borders.SetColor("#000000"); &#10;&#9;&#9;&#9;oCell.Style.IsTextWrapped = true;&#10;&#9;&#9;&#9;oCell.Style.IsBold = true;&#10;&#9;&#9;&#9;oCell.Style.HorizontalAlignment = "Center";&#10;&#9;&#9;&#9;&#10;&#9;&#9;&#9;oCell = oWorksheet.Cells.GetCell("G" + _idx); &#10;&#9;&#9;&#9;oWorksheet.Cells.SetRowHeight((_idx - 1), 15.0);&#10;&#9;&#9;&#9;oCell.Value = Perevod(text_full_mark);&#10;&#9;&#9;&#9;oCell.Style.Borders.SetStyle("Thin"); &#10;&#9;&#9;&#9;oCell.Style.Borders.SetColor("#000000"); &#10;&#9;&#9;&#9;oCell.Style.IsTextWrapped = true;&#10;&#9;&#9;&#9;oCell.Style.IsBold = true;&#10;&#9;&#9;&#9;oCell.Style.HorizontalAlignment = "Center";&#10;/*&#9;&#9;&#9;&#10;&#9;&#9;&#9;oCell = oWorksheet.Cells.GetCell("H" + _idx); &#10;&#9;&#9;&#9;oWorksheet.Cells.SetRowHeight((_idx - 1), 15);&#10;&#9;&#9;&#9;oCell.Value = text_ur;&#10;&#9;&#9;&#9;oCell.Style.Borders.SetStyle("Thin"); &#10;&#9;&#9;&#9;oCell.Style.Borders.SetColor("#000000"); &#10;&#9;&#9;&#9;oCell.Style.IsTextWrapped = true;&#10;&#9;&#9;&#9;oCell.Style.IsBold = true;&#10;&#9;&#9;&#9;oCell.Style.HorizontalAlignment = "Center";&#10;&#9;&#9;&#9;oCell.Style.ForegroundColor = text_color;&#10;&#9;&#9;&#9;oCell.Style.FontColor = (comp_mark != 0 ? color_font_dll(comp_mark) : "");&#10;*/&#10;&#9;&#9;&#9;_idx++;&#10;&#9;&#9;&#9;&#10;&#9;&#9;&#9;temp_array = Array();&#10;&#9;&#9;&#9;temp_array = ArraySelect(level_arr, "This.competence_id == _compets.competence_id");&#10;&#10;&#9;&#9;&#9;_str_new_mark = ArrayMerge(temp_array,"This.average",",");&#10;&#10;&#9;&#9;&#9;_obj = new Object();&#10;&#9;&#9;&#9;_obj.competence_id = _compets.competence_id;&#10;&#9;&#9;&#9;_obj.name_competences = find_comps.name;&#10;&#9;&#9;&#9;_obj.str_mark = _str_new_mark;&#10;&#9;&#9;&#9;_obj.color_cnt = color_cnt;&#10;&#9;&#9;&#9;array_gr1[ArrayCount(array_gr1)] = _obj;&#9;&#9;&#10;&#9;&#9;&#9;//color_cnt++;&#10;&#9;&#9;&#9;color_cnt += 3;&#10;&#9;&#9;&#9;npp = 0;&#10;&#9;&#9;&#9;str_fio = "";&#10;&#9;&#9;&#9;_str_id = "";&#10;&#10;&#9;&#9;&#9;for (_tmp in temp_array)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;npp++;&#10;&#9;&#9;&#9;&#9;sum_aver += Real(_tmp.average);&#10;&#9;&#9;&#9;&#9;str_fio += (str_fio != "" ? "|" : "") +  _tmp.person_fullname;&#10;&#9;&#9;&#9;&#9;_str_id += (_str_id != "" ? "," : "") +  _tmp.person_id;&#10;&#10;&#9;&#9;&#9;&#9;Excel_html += "&#10;&#9;&#9;&#9;&#9;&lt;tr&gt;&#10;&#9;&#9;&#9;&#9;&#9;&lt;td class='style10' x:num='" + npp + "'&gt;" + npp + "&lt;/td&gt;&#10;&#9;&#9;&#9;&#9;&#9;&lt;td class='style10'&gt;" + _tmp.person_fullname + "&lt;/td&gt;&#10;&#9;&#9;&#9;&#9;&#9;&lt;td class='style10' bgcolor=" + check_color(Real(_tmp.mark_self)) + " x:num='" + StrReal(Real(_tmp.mark_self), 1) + "'&gt;" + Perevod(_tmp.mark_self) + "&lt;/td&gt;&#10;&#9;&#9;&#9;&#9;&#9;&lt;td class='style10' bgcolor=" + check_color(Real(_tmp.mark_manager)) + " x:num='" + StrReal(Real(_tmp.mark_manager), 1) + "'&gt;" + Perevod(_tmp.mark_manager) + "&lt;/td&gt;&#10;&#9;&#9;&#9;&#9;&#9;&lt;td class='style10' bgcolor=" + check_color(Real(_tmp.coll_mark)) + " x:num='" + StrReal(Real(_tmp.coll_mark), 1) + "'&gt;" + Perevod(_tmp.coll_mark) + "&lt;/td&gt;&#10;&#9;&#9;&#9;&#9;&#9;&lt;td class='style10' bgcolor=" + check_color(Real(_tmp.staff_mark)) + " x:num='" + StrReal(Real(_tmp.staff_mark), 1) + "'&gt;" + Perevod(_tmp.staff_mark) + "&lt;/td&gt;&#10;&#9;&#9;&#9;&#9;&#9;&lt;td class='style10' bgcolor=" + check_color(Real(_tmp.average)) + " x:num='" + StrReal(Real(_tmp.average), 1) + "'&gt;" + Perevod(_tmp.average) + "&lt;/td&gt;&#10;&#9;&#9;&#9;&#9;&#9;&lt;!-- &lt;td class='style10' bgcolor=" + check_color(Real(_tmp.average)) + " style='" + color_font(Real(_tmp.average)) + "'&gt;" + _tmp.ur + "&lt;/td&gt; --&gt;&#10;&#9;&#9;&#9;&#9;&lt;/tr&gt;";&#10;&#10;&#9;&#9;&#9;&#9;oCell = oWorksheet.Cells.GetCell("A" + _idx); &#10;&#9;&#9;&#9;&#9;oCell.Value = npp; &#10;&#9;&#9;&#9;&#9;oCell.Style.Borders.SetStyle("Thin"); &#10;&#9;&#9;&#9;&#9;oCell.Style.Borders.SetColor("#000000"); &#10;&#9;&#9;&#9;&#9;oCell.Style.IsTextWrapped = true;&#10;&#9;&#9;&#9;&#9;oCell.Style.HorizontalAlignment = "Center";&#10;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;oCell = oWorksheet.Cells.GetCell("B" + _idx); &#10;&#9;&#9;&#9;&#9;oCell.Value = _tmp.person_fullname; &#10;&#9;&#9;&#9;&#9;oCell.Style.Borders.SetStyle("Thin"); &#10;&#9;&#9;&#9;&#9;oCell.Style.Borders.SetColor("#000000"); &#10;&#9;&#9;&#9;&#9;oCell.Style.IsTextWrapped = true;&#10;&#9;&#9;&#9;&#9;oCell.Style.HorizontalAlignment = "Center";&#10;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;oCell = oWorksheet.Cells.GetCell("C" + _idx); &#10;&#9;&#9;&#9;&#9;oCell.Value = Perevod(_tmp.mark_self); &#10;&#9;&#9;&#9;&#9;oCell.Style.Borders.SetStyle("Thin"); &#10;&#9;&#9;&#9;&#9;oCell.Style.Borders.SetColor("#000000"); &#10;&#9;&#9;&#9;&#9;oCell.Style.IsTextWrapped = true;&#10;&#9;&#9;&#9;&#9;oCell.Style.HorizontalAlignment = "Center";&#10;&#9;&#9;&#9;&#9;oCell.Style.ForegroundColor = check_color(Real(_tmp.mark_self));&#10;&#9;&#9;&#9;&#9;oCell.Style.FontColor = color_font_dll(Real(_tmp.mark_self));&#10;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;oCell = oWorksheet.Cells.GetCell("D" + _idx); &#10;&#9;&#9;&#9;&#9;oCell.Value = Perevod(_tmp.mark_manager); &#10;&#9;&#9;&#9;&#9;oCell.Style.Borders.SetStyle("Thin"); &#10;&#9;&#9;&#9;&#9;oCell.Style.Borders.SetColor("#000000"); &#10;&#9;&#9;&#9;&#9;oCell.Style.IsTextWrapped = true;&#10;&#9;&#9;&#9;&#9;oCell.Style.HorizontalAlignment = "Center";&#10;&#9;&#9;&#9;&#9;oCell.Style.ForegroundColor = check_color(Real(_tmp.mark_manager));&#10;&#9;&#9;&#9;&#9;oCell.Style.FontColor = color_font_dll(Real(_tmp.mark_manager));&#10;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;oCell = oWorksheet.Cells.GetCell("E" + _idx); &#10;&#9;&#9;&#9;&#9;oCell.Value = Perevod(_tmp.coll_mark); &#10;&#9;&#9;&#9;&#9;oCell.Style.Borders.SetStyle("Thin"); &#10;&#9;&#9;&#9;&#9;oCell.Style.Borders.SetColor("#000000"); &#10;&#9;&#9;&#9;&#9;oCell.Style.IsTextWrapped = true;&#10;&#9;&#9;&#9;&#9;oCell.Style.HorizontalAlignment = "Center";&#10;&#9;&#9;&#9;&#9;oCell.Style.ForegroundColor = check_color(Real(_tmp.coll_mark));&#10;&#9;&#9;&#9;&#9;oCell.Style.FontColor = color_font_dll(Real(_tmp.coll_mark));&#10;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;oCell = oWorksheet.Cells.GetCell("F" + _idx); &#10;&#9;&#9;&#9;&#9;oCell.Value = Perevod(_tmp.staff_mark); &#10;&#9;&#9;&#9;&#9;oCell.Style.Borders.SetStyle("Thin"); &#10;&#9;&#9;&#9;&#9;oCell.Style.Borders.SetColor("#000000"); &#10;&#9;&#9;&#9;&#9;oCell.Style.IsTextWrapped = true;&#10;&#9;&#9;&#9;&#9;oCell.Style.HorizontalAlignment = "Center";&#10;&#9;&#9;&#9;&#9;oCell.Style.ForegroundColor = check_color(Real(_tmp.staff_mark));&#10;&#9;&#9;&#9;&#9;oCell.Style.FontColor = color_font_dll(Real(_tmp.staff_mark));&#10;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;oCell = oWorksheet.Cells.GetCell("G" + _idx); &#10;&#9;&#9;&#9;&#9;oCell.Value = Perevod(_tmp.average); &#10;&#9;&#9;&#9;&#9;oCell.Style.Borders.SetStyle("Thin"); &#10;&#9;&#9;&#9;&#9;oCell.Style.Borders.SetColor("#000000"); &#10;&#9;&#9;&#9;&#9;oCell.Style.IsTextWrapped = true;&#10;&#9;&#9;&#9;&#9;oCell.Style.HorizontalAlignment = "Center";&#10;&#9;&#9;&#9;&#9;oCell.Style.ForegroundColor = check_color(Real(_tmp.average));&#10;&#9;&#9;&#9;&#9;oCell.Style.FontColor = color_font_dll(Real(_tmp.average));&#9;&#9;&#9;&#9;&#10;&#10;/*&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;oCell = oWorksheet.Cells.GetCell("H" + _idx); &#10;&#9;&#9;&#9;&#9;oCell.Value = _tmp.ur; &#10;&#9;&#9;&#9;&#9;oCell.Style.Borders.SetStyle("Thin"); &#10;&#9;&#9;&#9;&#9;oCell.Style.Borders.SetColor("#000000"); &#10;&#9;&#9;&#9;&#9;oCell.Style.IsTextWrapped = true;&#10;&#9;&#9;&#9;&#9;oCell.Style.HorizontalAlignment = "Center";&#10;&#9;&#9;&#9;&#9;oCell.Style.ForegroundColor = check_color(Real(_tmp.average));&#10;&#9;&#9;&#9;&#9;oCell.Style.FontColor = color_font_dll(Real(_tmp.average));&#10;*/&#10;&#9;&#9;&#9;&#9;_idx++;&#10;&#9;&#9;&#9;}&#10;&#9;&#9;}&#10;&#9;}&#10;&#10;&#9;arr_aver = Array();&#10;&#9;aver_empl = 0;&#10;&#9;str_aver = "";&#10;&#9;arr_id = _str_id.split(",");&#10;&#9;for(_id in arr_id)&#10;&#9;{&#10;&#9;&#9;num_empl = 0;&#10;&#9;&#9;sum_empl = 0;&#10;&#9;&#9;arr_aver = ArraySelect(level_arr, "String(This.person_id) == _id")&#10;&#9;&#9;for(av_arr in arr_aver)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;sum_empl += Real(av_arr.average);&#10;&#9;&#9;&#9;if(av_arr.average != 0)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;num_empl++;&#10;&#9;&#9;&#9;}&#10;&#9;&#9;}&#10;&#9;&#9;if(num_empl != 0)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;aver_empl = Real( StrRealFixed(Real(sum_empl)/Real(num_empl), 2, true));&#10;&#9;&#9;}&#10;&#9;&#9;str_aver += (str_aver != "" ? "," : "") + aver_empl;&#10;///////////////////////////////////////////////////////////////////////////&#10;&#9;}&#10;&#10;&#9;Excel_html += "&#10;&lt;/table&gt;";&#10;&#9;if (visible_legend)&#10;&#9;{&#10;&#9;&#9;Excel_html += "&#10;&lt;p&gt;Интерпретация результатов производится по следующей шкале:&lt;/p&gt;&#10;&lt;table style=\"width: 30%\" cellspacing=\"0\" cellpadding=\"0\" class=\"style3\"&gt;";&#10;&#10;&#9;&#9;str_temp = "";&#10;&#9;&#9;cnt_legend = ArrayCount(color_array_legend);&#10;&#9;&#9;for (_lg = (cnt_legend - 1); _lg &gt;=0; _lg--)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;str_temp += "&#10;&#9;&#9;&#9;&lt;tr&gt;&#10;&#9;&#9;&#9;&#9;&lt;td colspan=2 width='65%' class=\"style3\"&gt;" + color_array_legend[_lg].title + "&lt;/td&gt;&#10;&#9;&#9;&#9;&#9;&lt;td width='25%' class=\"style3\"&gt; " + color_array_legend[_lg].min + " - " + color_array_legend[_lg].max + " &lt;/td&gt;&#10;&#9;&#9;&#9;&#9;&lt;td width='10%' style='background-color: " + color_array_legend[_lg].color + ";'&gt;&amp;nbsp;&lt;/td&gt;&#10;&#9;&#9;&#9;&lt;/tr&gt;";&#10;&#9;&#9;}&#10;&#9;&#10;&#9;&#9;Excel_html += str_temp + "&#10;&#9;&lt;/table&gt;";&#10;&#10;&#9;&#9;_idx += 2;&#10;&#9;&#9;oCell = oWorksheet.Cells.GetCell("A" + _idx); &#10;&#9;&#9;oCell.Value = "Интерпретация результатов производится по следующей шкале:"; &#10;&#9;&#9;oCell.Style.FontSize = 10;&#10;&#9;&#9;_idx++;&#10;&#9;&#9;for (_lg = (cnt_legend - 1); _lg &gt;=0; _lg--)&#10;&#9;&#9;{&#9;&#9;&#9;&#10;&#9;&#9;&#9;oCell = oWorksheet.Cells.GetCell("A" + _idx);&#10;&#9;&#9;&#9;oWorksheet.Cells.Merge(_idx - 1, 0, 1, 2);&#10;&#9;&#9;&#9;oCell.Value = color_array_legend[_lg].title; &#10;&#9;&#9;&#9;oCell.Style.Borders.SetStyle("Thin"); &#10;&#9;&#9;&#9;oCell.Style.Borders.SetColor("#000000"); &#10;&#9;&#9;&#9;oCell.Style.IsTextWrapped = true;&#10;&#9;&#9;&#9;&#10;&#9;&#9;&#9;oCell = oWorksheet.Cells.GetCell("C" + _idx); &#10;&#9;&#9;&#9;oCell.Value = (color_array_legend[_lg].min + " - " + color_array_legend[_lg].max); &#10;&#9;&#9;&#9;oCell.Style.Borders.SetStyle("Thin"); &#10;&#9;&#9;&#9;oCell.Style.Borders.SetColor("#000000"); &#10;&#9;&#9;&#9;oCell.Style.IsTextWrapped = true;&#10;&#9;&#9;&#9;&#10;&#9;&#9;&#9;oCell = oWorksheet.Cells.GetCell("D" + _idx); &#10;&#9;&#9;&#9;oCell.Value = ""; &#10;&#9;&#9;&#9;oCell.Style.Borders.SetStyle("Thin"); &#10;&#9;&#9;&#9;oCell.Style.Borders.SetColor("#000000"); &#10;&#9;&#9;&#9;oCell.Style.IsTextWrapped = true;&#10;&#9;&#9;&#9;oCell.Style.ForegroundColor = color_array_legend[_lg].color;&#10;&#9;&#9;&#9;_idx++;&#10;&#9;&#9;}&#10;&#10;&#9;}&#10;&#10;//1*********************************&#10;&#10;//отчет для отображения в браузере (String)&#10;Excel_html += "";&#10;// заголовок листа Excel&#10;SHEET_CAPTION = "Заголовок листа";&#10;// флаг отображать ли таблицу данных графика №1 в Excel&#10;SHOW_DATA_TABLE = false;&#10;// флаг отображать ли таблицу данных с выделением оценок с отклонением от порогового значения&#10;SHOW_DATA_TABLE_WITH_LAG = false;&#10;// пороговое значение отклонения оценки&#10;curLagValue = 1;&#10;// данные для построения графика. Элемент массива:&#10;ResultArray = Array();&#10;&#10;// заполним данные для графиков&#10;for (i = 1; i &lt;= 1; i++)&#10;{&#10; &#9;obj = Object();&#10; &#9;// id графика&#10; &#9;obj.id = i;&#10;&#9;// заголовок графика&#10;&#9;obj.name = "Итоги оценки по компетенциям руководителей ТОП";&#10;&#9;// график или таблица&#10;&#9;obj.is_chart = true;//( i%3 != 0);&#10;&#9;// категории графика&#10;&#9;obj.categories = str_fio;&#10;&#9;// массив серий графика&#10;&#9;obj.rows = Array();&#10;&#9;//for (j = 1; j &lt;= 4; j++)&#10;&#9;j = 0;&#10;&#9;for (_ag in array_gr1)&#10;&#9;{&#10;&#9;&#9;j++;&#10; &#9;&#9;row = Object();&#10;&#9;&#9;// id серии&#10; &#9;&#9;row.obj_id = j;&#10;&#9;&#9;// название серии&#9;&#9;&#9;&#10;&#9;&#9;row.obj_name = _ag.name_competences; &#10; &#9;&#9;// массив значений в серии&#10;&#9;&#9;row.data = Array(_ag.str_mark);&#10;&#9;&#9;row.color_index = _ag.color_cnt;&#10;&#9;&#9;obj.rows[ArrayCount(obj.rows)] = row;&#10;&#9;}&#10;&#9;ResultArray[ArrayCount(ResultArray)] = obj;&#10;}&#10;&#10;Excel_html_Export_Up = "";&#10;&#10;Excel_html_Export = ""; &#10;&#10;i = 0;&#10;for (_graph in ResultArray)&#10;{&#10;&#9;i++;&#10;&#10;&#9;oExcelDoc1 = tools.get_object_assembly('Excel');&#10;&#9;oExcelDoc1.CreateWorkBook();&#10;&#9;oWorksheet1 = oExcelDoc1.GetWorksheet(0);&#10;&#9;chart1 = oWorksheet1.Charts.AddFloatingChart("Column", 0, 0, 860, 620);&#10;&#9;chart1.ValueAxis.MinValue = 0;&#10;&#9;//chart1.ValueAxis.MaxValue = 100;&#10;&#10;&#9;array_colors = Array("#6A90D5", "#FFD241", "#5F9140", "#3A5FA8", "#D6A122", "#ACD591", "#FFFFFF");&#10;&#9;&#10;&#9;_idxa = 0;&#10;&#9;for (_ag in array_gr1)&#10;&#9;{&#10;&#9;&#9;series1 = chart1.AddSeries("Column", "{" + _ag.str_mark + "}", true); &#10;&#9;&#9;series1.Name = _ag.name_competences;&#10;&#9;&#9;//series1.ForegroundColor = array_colors[_idxa];&#10;&#9;&#9;series1.DataLabels.ShowValue = true;&#10;&#9;&#9;series1.DataLabels.Position = "Center";&#10;&#9;&#9;_idxa++;&#10;&#9;}&#10;&#10;&#9;chart1.Title.Text = "Итоги оценки по компетенциям сотрудников"; &#10;&#9;chart1.Title.IsBold = true;&#10;&#9;chart1.LegendPosition = "Bottom";&#10;&#9;chart1.CategoryData = "{" + StrReplace(str_fio, "|", ",") + "}";&#10;&#9;chart1.CategoryAxis.TickLabels.RotationAngle = 0;&#10;&#10;&#9;chart1.PlotArea.Area.ForegroundColor = "#FFFFFF";&#10;&#9;chart1.PlotArea.Area.BackgroundColor = "#FFFFFF";&#10;&#10;&#9;chart1.ShowCategoryGriglines = true;&#10;&#9;str_image = chart1.GetImageInBase64String('png');&#10;&#10;&#9;Excel_html += "&#10;&#9;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&#10;&#9; &lt;div style='text-align: center'&gt;&lt;img src='data:image/png;base64, " + str_image + " '&gt;&lt;/div&gt;&#10;&#9;";&#10;&#9;_idx++;&#10;&#9;string_page = 32;&#10;&#9;_idx += string_page;&#10;&#10;&#9;diff_page_int = ((_idx - 1) / string_page);&#10;&#9;diff_page_real = (Real(_idx - 1) / Real(string_page));&#10;&#9;diff_page = diff_page_int == diff_page_real ? diff_page_int : (diff_page_int + 1);&#9;&#10;&#9;chart01 = oWorksheet.Charts.AddFloatingChart("Column", 0, diff_page*600, 860, 550);&#10;&#9;chart01.ValueAxis.MinValue = 0;&#10;&#9;//chart01.ValueAxis.MaxValue = 100;&#10;&#9;&#10;&#9;_idxa = 0;&#10;&#9;for (_ag in array_gr1)&#10;&#9;{&#10;&#9;&#9;series01 = chart01.AddSeries("Column", '{"' + StrReplace(_ag.str_mark, ",", '","') + '"}', true); &#10;&#9;&#9;series01.Name = _ag.name_competences;&#10;&#9;&#9;//series01.ForegroundColor = array_colors[_idxa];&#10;&#9;&#9;series01.DataLabels.ShowValue = true;&#10;&#9;&#9;series01.DataLabels.Position = "Center";&#10;&#9;&#9;_idxa++;&#10;&#9;}&#10;&#9;chart01.Title.Text = "Итоги оценки по компетенциям сотрудников"; &#10;&#9;chart01.Title.IsBold = true;&#10;&#9;chart01.LegendPosition = "Bottom";&#10;&#9;chart01.CategoryData = "{" + StrReplace(str_fio, "|", ",") + "}";&#10;&#9;chart01.CategoryAxis.TickLabels.RotationAngle = 0;&#10;&#10;&#9;chart01.PlotArea.Area.ForegroundColor = "#FFFFFF";&#10;&#9;chart01.PlotArea.Area.BackgroundColor = "#FFFFFF";&#10;&#10;&#9;chart01.ShowCategoryGriglines = true;&#9;&#10;&#9;_ind = 0;&#10;&#10;} // for (_graph in ResultArray)&#10;&#10;//3*********************************&#10;//отчет для отображения в браузере (String)&#10;Excel_html += "";&#10;// заголовок листа Excel&#10;SHEET_CAPTION = "Заголовок листа";&#10;// флаг отображать ли таблицу данных графика №3 в Excel&#10;SHOW_DATA_TABLE = false;&#10;// флаг отображать ли таблицу данных с выделением оценок с отклонением от порогового значения&#10;SHOW_DATA_TABLE_WITH_LAG = false;&#10;// пороговое значение отклонения оценки&#10;curLagValue = 1;&#10;// данные для построения графика. Элемент массива:&#10;ResultArray = Array();&#10;&#10;// заполним данные для графиков&#10;for (z = 1; z &lt;= 1; z++)&#10;{&#10; &#9;obj = Object();&#10; &#9;// id графика&#10; &#9;obj.id = z;&#10;&#9;// заголовок графика&#10;&#9;obj.name = "Итоги оценки по компетенциям";&#10;&#9;// график №3 или таблица&#10;&#9;obj.is_chart = true;&#10;&#9;// категории графика&#10;&#9;obj.categories = str_competences;&#10;&#9;// массив серий графика&#10;&#9;obj.rows = Array();&#10;&#9;//for (j = 1; j &lt;= 4; j++)&#10;&#9;j = 0;&#10;&#9;for (_ag in array_gr2)&#10;&#9;{&#10;&#9;&#9;j++;&#10; &#9;&#9;row = Object();&#10;&#9;&#9;// id серии&#10; &#9;&#9;row.obj_id = j;&#10;&#9;&#9;// название серии&#9;&#9;&#9;&#10;&#9;&#9;row.obj_name = _ag.person_fullname; &#10; &#9;&#9;// массив значений в серии&#10;&#9;&#9;row.data = Array(_ag.str_mark);&#10;&#9;&#9;row.color_index = _ag.color_cnt;&#10;&#9;&#9;obj.rows[ArrayCount(obj.rows)] = row;&#10;&#9;}&#10;&#9;ResultArray[ArrayCount(ResultArray)] = obj;&#10;}&#10;&#10;sr_ar_str = "";&#10;counterLine = ArrayCount(pasDoc.competences);&#10;counterArray = ArrayCount(array_gr2);&#10;for (_ln = 0; _ln &lt; counterLine; _ln++)&#10;{&#10;&#9;val_temp = 0;&#10;&#9;for (_ag in array_gr2)&#10;&#9;{&#10;&#9;&#9;arr_temp = String(_ag.str_mark).split(",");&#10;&#9;&#9;val_temp += Real(arr_temp[_ln]);&#10;&#9;}&#10;&#9;sr_ar_str += (sr_ar_str == "" ? "" : ",") + StrReal((val_temp / counterArray), 1);&#10;}&#10;&#10;//i = 0;&#10;&#10;for (_graph in ResultArray)&#10;{&#10;&#9;i++;&#10;&#9;Excel_html += '';&#10;&#10;&#9;oExcelDoc3 = tools.get_object_assembly('Excel');&#10;&#9;oExcelDoc3.CreateWorkBook();&#10;&#9;oWorksheet3 = oExcelDoc3.GetWorksheet(0);&#10;&#9;chart3 = oWorksheet3.Charts.AddFloatingChart("Column", 0, 0, 860, 620);&#10;&#9;chart3.ValueAxis.MinValue = 0;&#10;&#9;//chart3.ValueAxis.MaxValue = 100;&#10;&#10;&#9;array_colors3 = Array("#4472C4", "#70AD47", "#FFD34E", "#7898D6", "#D6A338", "#B0D596", "#FFFFFF");&#10;&#9;&#10;&#9;_idxa = 0;&#10;&#9;for (_ag in array_gr2)&#10;&#9;{&#10;&#9;&#9;series3 = chart3.AddSeries("Column", "{" + _ag.str_mark + "}", true); &#10;&#9;&#9;series3.Name = _ag.person_fullname;&#10;&#9;&#9;//series3.ForegroundColor = array_colors3[_idxa];&#10;&#9;&#9;series3.DataLabels.ShowValue = true;&#10;&#9;&#9;series3.DataLabels.Position = "Center";&#10;&#9;&#9;_idxa++;&#10;&#9;}&#10;&#9;&#10;&#9;// Добавляем линейный график  &#10;&#9;//oSeries = chart3.AddSeries("Line", "{" + sr_ar_str + "}", true);&#10;&#9;//oSeries.DataLabels.ShowValue = true;&#10;&#9;//oSeries.DataLabels.Position = "Below";&#10;&#9;//oSeries.Name = "Средняя оценка по подразделению";&#10;&#9;//oSeries.Area.BackgroundColor = "#DB322A";&#10;&#9;//oSeries.DataLabels.ShowValue = true;&#10;&#9;//oSeries.Border.Color = "#DB322A";&#10;&#9;//oSeries.Border.WeightPx = 5;&#10;&#9;//oSeries.DataLabels.Font.Color = "#000000";&#9;&#10;&#9;//str_srr_arr_full&#10;/*&#10;&#9;// Добавляем линейный график  &#10;&#9;oSeries_500 = chart3.AddSeries("Line", "{" + str_srr_arr_full + "}", true);&#10;&#9;oSeries_500.DataLabels.ShowValue = true;&#10;&#9;oSeries_500.DataLabels.Position = "Below";&#10;&#9;oSeries_500.Name = "Фактическая модель ТОП-500 ГО";&#10;&#9;oSeries_500.Area.BackgroundColor = "#FB7A02";&#10;&#9;oSeries_500.DataLabels.ShowValue = true;&#10;&#9;oSeries_500.Border.Color = "#FB7A02";&#10;&#9;oSeries_500.Border.WeightPx = 5;&#10;&#9;oSeries_500.DataLabels.Font.Color = "#000000";&#9;&#10;*/&#9;&#10;&#10;  chart3.Title.Text = "Итоги оценки по компетенциям"; &#10;  chart3.Title.IsBold = true;&#10;  chart3.LegendPosition = "Bottom";&#10;  chart3.CategoryData = "{" + StrReplace(StrReplace(str_competences, ",", ";"), "|", ",") + "}";&#10;  chart3.CategoryAxis.TickLabels.RotationAngle = 0;&#10;  //chart3.CategoryData.RotationAngle = 90;&#10;  &#10;  chart3.PlotArea.Area.ForegroundColor = "#FFFFFF";&#10;  chart3.PlotArea.Area.BackgroundColor = "#FFFFFF";&#10;  &#10;  chart3.ShowCategoryGriglines = true;&#10;  str_image = chart3.GetImageInBase64String('png'); &#10; &#10;Excel_html += "&#10;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&#10; &lt;div style='text-align: center'&gt;&lt;img src='data:image/png;base64, " + str_image + " '&gt;&lt;/div&gt;&#10;";&#10;&#9;_idx += string_page;&#10;&#9;diff_page_int = ((_idx - 1) / string_page);&#10;&#9;diff_page_real = (Real(_idx - 1) / Real(string_page));&#9;&#10;&#9;diff_page = diff_page_int == diff_page_real ? diff_page_int : diff_page_int + 1;&#9;&#10;&#9;&#10;&#9;chart021 = oWorksheet.Charts.AddFloatingChart("Bar", 0,  diff_page*600, 860, 550);&#9;&#10;&#9;chart021.ValueAxis.MinValue = 0;&#10;&#9;//chart021.ValueAxis.MaxValue = 100;&#10;&#9;_idxa = 0;&#10;&#9;for (_ag in array_gr2)&#10;&#9;{&#10;&#9;&#9;series31 = chart021.AddSeries("Column", '{"' + StrReplace(_ag.str_mark, ",", '","') + '"}', true); &#10;&#9;&#9;series31.Name = _ag.person_fullname;&#10;&#9;&#9;//series31.ForegroundColor = array_colors3[_idxa];&#10;&#9;&#9;series31.DataLabels.ShowValue = true;&#10;&#9;&#9;series31.DataLabels.Position = "Center";&#10;&#9;&#9;_idxa++;&#10;&#9;}&#9;&#10;&#9;// Добавляем линейный график  &#10;&#9;oSeries111 = chart021.AddSeries("Line", '{"' + StrReplace(sr_ar_str, ",", '","') + '"}', true);&#10;&#9;oSeries111.DataLabels.ShowValue = true;&#10;&#9;oSeries111.DataLabels.Position = "Below";&#10;&#9;oSeries111.Name = "Средняя оценка по подразделению";&#10;&#9;oSeries111.Area.BackgroundColor = "#DB322A";&#10;&#9;oSeries111.DataLabels.ShowValue = true;&#10;&#9;oSeries111.Border.Color = "#DB322A";&#10;&#9;//oSeries111.Border.WeightPx = 5;&#10;&#9;oSeries111.DataLabels.Font.Color = "#000000";&#10;/*&#10;&#9;// Добавляем линейный график  &#10;&#9;oSeries_500_Excel = chart021.AddSeries("Line", "{" + str_srr_arr_full + "}", true);&#10;&#9;oSeries_500_Excel.DataLabels.ShowValue = true;&#10;&#9;oSeries_500_Excel.DataLabels.Position = "Below";&#10;&#9;oSeries_500_Excel.Name = "Фактическая модель ТОП-500 ГО";&#10;&#9;oSeries_500_Excel.Area.BackgroundColor = "#FB7A02";&#10;&#9;oSeries_500_Excel.DataLabels.ShowValue = true;&#10;&#9;oSeries_500_Excel.Border.Color = "#FB7A02";&#10;&#9;oSeries_500_Excel.Border.WeightPx = 5;&#10;&#9;oSeries_500_Excel.DataLabels.Font.Color = "#000000";&#9;&#9;&#10;*/&#10;  chart021.Title.Text = "Итоги оценки по компетенциям"; &#10;  chart021.Title.IsBold = true;&#10;  chart021.LegendPosition = "Bottom";&#10;  //chart021.CategoryData = "{" + StrReplace(StrReplace(str_competences, ",", ";"), "|", ",") + "}";&#10;  chart021.CategoryAxis.TickLabels.RotationAngle = 0;&#10;  &#10;  chart021.PlotArea.Area.ForegroundColor = "#FFFFFF";&#10;  chart021.PlotArea.Area.BackgroundColor = "#FFFFFF";&#10;  &#10;  chart021.ShowCategoryGriglines = true;&#9;&#10;&#10;} // for (_graph in ResultArray)&#10;&#10;//3*********************************&#10;&#10;Excel_html_Export += "";&#10;&#10;//Excel_html_Export = Excel_html_Export_Up + Excel_html + Excel_html_Export;&#10;&#10;&#9;//tools_web.set_user_data( "excel_html_" + curUserID , { 'html': Excel_html_Export  }, 86000 ); &#10;&#9;Response.Write(Excel_html); &#10;&#10;&#9;oExcelDoc.SaveAs(temp_folder + "\\" + file_name);&#10;&#10;} // if ( isFilter )&#10;%&gt;</code_text>
			</exec_code>
			<html>&lt;%&#10;// ---------------------------------------------------------------------------------------------------------------------------&#10;// автор:   ER&#10;// создан:  04.12.2013&#10;// изменен:  07.04.2016&#10;// -------------------------------------------------Предупреждение--------------------------------------------------------------&#10;// &lt;нет&gt;&#10;// ------------------------------------------------Параметры шаблона------------------------------------------------------------&#10;// &lt;нет&gt;&#10;// ----------------------------------------------Глобальные переменные----------------------------------------------------------&#10;// &lt;нет&gt;&#10;// ---------------------------------------------------Константы-----------------------------------------------------------------&#10;// &lt;нет&gt;&#10;// -----------------------------------------------------------------------------------------------------------------------------&#10;legend_color = '[' + legend_color + ']';&#10;color_array_legend =tools.read_object(legend_color)&#10;&#10;function func_over(func_asid, f_comp_id, str_status)&#10;{&#10;&#9;f_mmang = 0;&#10;&#9;f_nummang = 0;&#10;&#9;f_rat_mang = 0;&#10;&#9;f_pas_elem = XQuery("for $elem in pas where $elem/assessment_appraise_id = " + func_asid + " and $elem/status = '" + str_status + "' return $elem");&#10;&#9;for (_pa in f_pas_elem)&#10;&#9;{&#10;&#9;&#9;try&#10;&#9;&#9;{&#10;&#9;&#9;&#9;f_pa_doc_elem = OpenDoc(UrlFromDocID(_pa.id)).TopElem;&#10;&#9;&#9;}&#10;&#9;&#9;catch(err)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;continue;&#10;&#9;&#9;}&#10;&#9;&#9;f_elem = ArrayOptFind(f_pa_doc_elem.competences, "This.competence_id == f_comp_id");&#10;&#9;&#9;if (f_elem != undefined)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;mng_m = f_elem.mark_value != null &amp;&amp; f_elem.mark_value != "" ? Real(f_elem.mark_value) : 0;&#10;&#9;&#9;&#9;if (mng_m != 0)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;f_mmang += Real(mng_m);&#10;&#9;&#9;&#9;&#9;f_nummang ++;&#10;&#9;&#9;&#9;}&#10;&#9;&#9;}&#10;&#9;}&#10;&#9;f_rat_mang = f_nummang != 0 ? Real(StrRealFixed(Real(f_mmang)/Real(f_nummang), 2, true)) : 0;&#10;&#9;&#10;&#9;return f_rat_mang;&#10;}&#10;&#10;function func_over_func(func_asid, f_comp_id, str_status, comps_arr)&#10;{&#10;&#9;mfunc = 0;&#10;&#9;numfunc = 0;&#10;&#9;rat_func = 0;&#10;&#9;pas_func = XQuery("for $elem in pas where $elem/assessment_appraise_id = " + func_asid + " and $elem/status = '" + str_status + "' and $elem/overall != null() return $elem");&#10;&#10;&#9;rat_ind_func = 0;&#10;&#9;full_value = 0;&#10;&#9;full_cnt = 0;&#10;&#9;for(_ind_func in comps_arr.indicators)&#10;&#9;{&#10;&#9;&#9;m_ind_func = 0;&#10;&#9;&#9;num_ind_func = 0;&#10;&#9;&#9;for (_pa_s in pas_func)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;try&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;DocPasFunc = OpenDoc(UrlFromDocID(_pa_s.id)).TopElem;&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;catch(err)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;continue;&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;ffunc = ArrayOptFind(DocPasFunc.competences, "This.competence_id == f_comp_id");&#10;&#9;&#9;&#9;if (ffunc != undefined)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;ffunc_ind = ArrayOptFind(ffunc.indicators, "This.indicator_id == _ind_func.indicator_id");&#10;&#9;&#9;&#9;&#9;if (ffunc_ind != undefined &amp;&amp; ffunc_ind.mark_value != null)&#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;m_ind_func += Real(ffunc_ind.mark_value);&#10;&#9;&#9;&#9;&#9;&#9;num_ind_func ++;&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;}&#10;&#9;&#9;}&#10;&#9;&#9;rat_ind_func = num_ind_func != 0 ? Real(StrRealFixed(Real(m_ind_func)/Real(num_ind_func), 2, true)) : 0;&#10;&#9;&#9;full_value += rat_ind_func;&#10;&#9;&#9;full_cnt += rat_ind_func != 0 ? 1 : 0;&#10;&#9;}&#10;&#10;&#9;rat_func = full_cnt != 0 ? Real(StrRealFixed(Real(full_value)/Real(full_cnt), 2, true)) : 0;&#10;&#9;return rat_func;&#10;}&#10;&#10;try&#10;{&#10;&#9;lng_id = curLng.short_id;&#9;&#10;}&#10;catch (err)&#10;{&#10;&#9;lng_id = "ru";&#10;}&#10;&#10;url_temp_folder = 'x-local://wt/web/temp_files';&#10;ObtainDirectory(url_temp_folder);&#10;url_temp_folder = 'x-local://wt/web/temp_files/' + String(curUserID);&#10;ObtainDirectory(url_temp_folder);&#10;temp_folder = UrlToFilePath(url_temp_folder);&#10;&#10;file_name = "rez_prov_" + DateToRawSeconds(Date()) + ".xlsx";&#10;oExcelDoc = null;&#10;&#10;try&#10;{&#10;&#9;oExcelDoc = tools.get_object_assembly('Excel');&#10;&#9;oExcelDoc.CreateWorkBook();&#10;&#10;&#9;oWorksheet = oExcelDoc.GetWorksheet(0);&#10;&#9;oWorksheet.PageSetup.Orientation = "Landscape";&#10;&#9;oWorksheet.PageSetup.PaperSize = "PaperA4";&#10;&#10;&#9;oExcelDoc.Open(temp_folder + "\\" + file_name);&#10;}&#10;catch(err)&#10;{&#10;&#9;oExcelDoc = null;&#10;&#9;Response.Write("&lt;b&gt;&lt;p&gt;При построении данного отчета произошла ошибка с библиотекой для построения графиков! " + err + "&lt;/p&gt;&lt;/b&gt;");&#10;&#9;alert("При построении данного отчета произошла ошибка с библиотекой для построения графиков! " + err);&#10;}&#10;&#10;function color_font_dll(_clr)&#10;{&#10;&#9;_rez = "";&#10;&#9;if (visible_legend)&#10;&#9;{&#10;/*&#10;&#9;&#9;_clr = OptInt(_clr, 0);&#10;&#9;&#9;if(_clr &gt;= 90 &amp;&amp; _clr &lt;= 100)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;_rez = "#FFFFFF";&#10;&#9;&#9;}&#10;*/&#10;&#10;&#9;&#9;cnt_legend_func = ArrayCount(color_array_legend);&#10;&#9;&#9;_clr_fn = OptInt(_clr, 0);&#10;&#9;&#9;if (_clr_fn != 0)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;_clr = Real(_clr);&#10;&#9;&#9;&#9;if(_clr &gt;= color_array_legend[cnt_legend_func-1].min &amp;&amp; _clr &lt;= color_array_legend[cnt_legend_func-1].max)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;_rez = "#FFFFFF";&#10;&#9;&#9;&#9;}&#10;&#9;&#9;}&#10;&#9;}&#10;&#9;return _rez;&#10;}&#10;&#10;function Perevod(_var)&#10;{&#10;&#9;_rez = "";&#10;&#9;_var = StrReal(Real(_var), 1);&#10;&#9;_rez = StrReplace(String(_var), ".", ",");&#10;&#9;return _rez;&#10;}&#10;&#10;function check_text(_str_aver)&#10;{&#10;&#9;str_text = "";&#10;&#9;_str_aver = Math.round(Real(_str_aver));&#10;&#10;&#9;for (_clg in color_array_legend)&#10;&#9;{&#10;&#9;&#9;if ( _str_aver &gt;= _clg.min &amp;&amp; _str_aver &lt;= _clg.max )&#10;&#9;&#9;{&#10;&#9;&#9;&#9;str_text = _clg.title;&#10;&#9;&#9;&#9;break;&#10;&#9;&#9;}&#10;&#9;}&#10;&#9;&#10;&#9;return str_text;&#10;}&#10;&#10;function check_color(_str_data)&#10;{&#10;&#9;str_rezult = "";&#10;&#9;if (visible_legend)&#10;&#9;{&#10;&#9;&#9;//_str_data = Math.round(Real(_str_data));&#10;&#9;&#9;_str_data = Real(_str_data);&#10;&#9;&#9;&#10;&#9;&#9;for (_clg in color_array_legend)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;//if ( _str_data &gt;= _clg.min &amp;&amp; _str_data &lt;= _clg.max )&#10;&#9;&#9;&#9;if ( _str_data &gt;= _clg.min &amp;&amp; _str_data &lt; _clg.max )&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;str_rezult = _clg.color;&#10;&#9;&#9;&#9;&#9;break;&#10;&#9;&#9;&#9;}&#10;&#9;&#9;}&#10;&#9;}&#10;&#9;return str_rezult;&#10;}&#10;&#10;function color_font(_clr)&#10;{&#10;&#9;_rez = "";&#10;&#9;if (visible_legend)&#10;&#9;{&#10;&#9;&#9;cnt_legend_func = ArrayCount(color_array_legend);&#10;&#9;&#9;_clr_fn = OptInt(_clr, 0);&#10;&#9;&#9;if (_clr_fn != 0)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;_clr = Real(_clr);&#10;&#9;&#9;&#9;if(_clr &gt;= color_array_legend[cnt_legend_func-1].min &amp;&amp; _clr &lt;= color_array_legend[cnt_legend_func-1].max)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;_rez = " color: white; ";&#10;&#9;&#9;&#9;}&#10;&#9;&#9;}&#10;&#9;}&#10;&#9;return _rez;&#10;}&#10;&#10;%&gt;&#10;&lt;script language="JAVASCRIPT"&gt;&#10;function show( title, inputIds, inputNames, catalog, disp_object_ids,m_sel )&#10;{&#10;&#9;var pars=new Object();&#10;&#9;pars.title = title;&#10;&#9;var strAttr="status:no;dialogWidth:750px;dialogHeight:580px;help:no";&#10;&#9;&#10;&#9;pars.elemNamesArray = Array();&#10;&#9;&#10;&#9;var i = 0;&#10;&#10;&#9;ids = "";&#10;&#9;arr = document.forms['main'][inputIds].value.split(',');&#10;&#9;for ( i=0; i&lt;arr.length; i++ )&#10;&#9;{&#10;&#9;&#9;if ( arr[i] == '' ) continue;&#10;&#9;&#9;ids += ";" + arr[i];&#10;&#9;}&#10;&#9;pars.selected_object_ids = ids;&#10;&#9;pars.display_object_ids = disp_object_ids;&#10;&#9;arr = document.forms['main'][inputNames].value.split("|");&#10;&#9;for ( i=0; i&lt;arr.length; i++ )&#10;&#9;{&#10;&#9;&#9;pars.elemNamesArray[i] = arr[i];&#10;&#9;}&#10;&#10;&#9;//xShowModalDialog('dlg_select.html?doc_id=&lt;%=curDocID%&gt;&amp;catalog_name='+catalog+'&amp;show_all=1&amp;multi_select='+m_sel+'&amp;rand='+ Math.random(), pars, strAttr);&#10;&#9;xShowSelectDialog(&#10;&#9;{&#10;&#9;&#9;"catalog_name": catalog,&#10;&#9;&#9;"multi_select": m_sel,&#10;&#9;&#9;"can_be_empty": "true",&#10;&#9;&#9;"disp_filter": "false",&#10;&#9;&#9;"check_access": "false",&#10;&#9;&#9;"display_object_ids": disp_object_ids,&#10;&#9;&#9;"selected_object_ids": ids&#10;&#9;}, &#10;&#9;function(oParams)&#10;&#9;{&#10;&#9;&#9;id_mas = oParams.selected_object_ids.split(";");&#10;&#10;&#9;&#9;if (!oParams.handle) return null;&#10;&#10;&#9;&#9;names = "";&#10;&#9;&#9;ids = "";&#10;&#9;&#9;id_ar = oParams.selected_object_ids.split(";");&#10;&#9;&#9;isFirst = true;&#10;&#9;&#9;for (i=0;i&lt;id_ar.length;i++)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;if ( id_ar[i] == "" || id_ar[i] == null ) continue;&#10;&#9;&#9;&#9;ids += ( isFirst ? '' : ',' ) + id_ar[i];&#10;&#9;&#9;&#9;isFirst = false;&#10;&#9;&#9;}&#10;&#9;&#9;for (i=0;i&lt;oParams.elemNamesArray.length;i++)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;if( oParams.elemNamesArray[i]!=null )&#10;&#9;&#9;&#9;names += ( i != 0 ? "|" : "" ) + oParams.elemNamesArray[i];&#10;&#9;&#9;}&#10;&#10;&#9;&#9;if (document.forms['main'][inputIds].value != ids)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;document.forms['main'][inputIds].value = ids;&#10;&#9;&#9;&#9;document.forms['main'][inputNames].value = names;&#10;&#9;&#9;}&#10;&#9;});&#10;}&#10;&#10;function do_submit()&#10;{&#10;&#9;document.forms['main']['is_posted'].value = "1";&#10;&#9;document.forms['main'].submit();&#10;}&#10;function export_archive()&#10;{&#10;&#9;window.open('temp_files/&lt;%=String(curUserID) + "/" + file_name%&gt;');&#10;}&#10;&lt;/script&gt;&#10;&lt;%&#10;if (oExcelDoc != null)&#10;{&#10;%&gt;&#10;&lt;form id="main" name="main" action="&lt;%=Request.Url%&gt;" METHOD="POST"&gt;&#10;&#9;&lt;input type="hidden" name="is_posted" value=""&gt;&#10;&#9;&lt;table&gt;&#10;&#9;&#9;&lt;tr&gt;&#10;&#9;&#9;&#9;&lt;td&gt;&#10;&#9;&#9;&#9;&#9;&lt;input type="button" value=" Процедура оценки " class="inputButton" onClick="show('Процедура оценки', 'ass_ids', 'ass_names', 'assessment_appraise', '', 0)" onMouseOver="this.className='inputButtonOver';" onMouseOut="this.className='inputButton';"&gt;&#10;&#9;&#9;&#9;&lt;/td&gt;&#10;&#9;&#9;&#9;&lt;td&gt;&#10;&#9;&#9;&#9;&#9;&lt;input type="text" readonly name="ass_names" value="&lt;%=( Request.Form.HasProperty( 'ass_names' ) ? Request.Form.ass_names : '' )%&gt;" size="100"&gt;&lt;br&gt;&#10;&#9;&#9;&#9;&#9;&lt;input type="hidden" name="ass_ids" value="&lt;%=( Request.Form.HasProperty( 'ass_ids' ) ? Request.Form.ass_ids : '' )%&gt;"&gt;&#10;&#9;&#9;&#9;&lt;/td&gt;&#10;&#9;&#9;&lt;/tr&gt;&#10;&#10;&#9;&#9;&lt;tr&gt;&#10;&#9;&#9;&#9;&lt;td&gt;&#10;&#9;&#9;&#9;&#9;&lt;input type="button" value="    Подразделение   " class="inputButton" onClick="show('Подразделение', 'sub_ids', 'sub_names', 'subdivision', '', 0)" onMouseOver="this.className='inputButtonOver';" onMouseOut="this.className='inputButton';"&gt;&#10;&#9;&#9;&#9;&lt;/td&gt;&#10;&#9;&#9;&#9;&lt;td&gt;&#10;&#9;&#9;&#9;&#9;&lt;input type="text" readonly name="sub_names" value="&lt;%=( Request.Form.HasProperty( 'sub_names' ) ? Request.Form.sub_names : '' )%&gt;" size="100"&gt;&lt;br&gt;&#10;&#9;&#9;&#9;&#9;&lt;input type="hidden" name="sub_ids" value="&lt;%=( Request.Form.HasProperty( 'sub_ids' ) ? Request.Form.sub_ids : '' )%&gt;"&gt;&#10;&#9;&#9;&#9;&lt;/td&gt;&#10;&#9;&#9;&lt;/tr&gt;&#10;&#10;&#9;&#9;&lt;tr&gt;&#10;&#9;&#9;&#9;&lt;td colspan=2 align=center&gt;&#10;&#9;&#9;&#9;&#9;&lt;input type="button" value="Показать" onClick="do_submit();" class="inputButton" onMouseOver="this.className='inputButtonOver';" onMouseOut="this.className='inputButton';"&gt;&#10;&#10;&#9;&#9;&#9;&#9;&lt;!--&lt;input type="button" value="Экспорт в Excel" onclick="modalWin=window.open('assessment_excel_export.html','','')" class="inputButton" onMouseOver="this.className='inputButtonOver';" onMouseOut="this.className='inputButton';"&gt;--&gt;&#10;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&lt;input type="button" value="Экспорт в Excel" onClick="export_archive()" class="inputButton" onMouseOver="this.className='inputButtonOver';" onMouseOut="this.className='inputButton';"&gt;&#10;&#9;&#9;&#9;&lt;/td&gt;&#10;&#9;&#9;&lt;/tr&gt;&#10;&#9;&lt;/table&gt;&#10;&lt;/form&gt;&#10;&lt;br&gt;&lt;br&gt;&#10;&lt;%&#10;}&#10;isFilter = Request.Form.HasProperty("is_posted") &amp;&amp; (Request.Form.GetProperty("is_posted") != '') &amp;&amp; Request.Form.HasProperty("ass_names") &amp;&amp; (Request.Form.GetProperty("ass_names") != '') &amp;&amp; Request.Form.HasProperty("sub_ids") &amp;&amp; (Request.Form.GetProperty("sub_ids") != '');&#10;if ( isFilter &amp;&amp; oExcelDoc != null)&#10;{&#10;&#9;// выбор подразделения&#10;&#9;try&#10;&#9;{&#10;&#9;&#9;curSubID = Request.Form.GetProperty("sub_ids");&#10;&#9;}&#10;&#9;catch(err)&#10;&#9;{&#10;&#9;&#9;curSubID = '';&#10;&#9;}&#10;&#9;&#10;&#9;try&#10;&#9;{&#10;&#9;&#9;curSubNames = Request.Form.GetProperty("sub_names");&#10;&#9;}&#10;&#9;catch(err)&#10;&#9;{&#10;&#9;&#9;curSubNames = '';&#10;&#9;}&#10;&#10;&#9;// выбор процедуры&#10;&#9;try&#10;&#9;{&#10;&#9;&#9;curAssID = Request.Form.GetProperty("ass_ids");&#10;&#9;}&#10;&#9;catch(err)&#10;&#9;{&#10;&#9;&#9;curAssID = '';&#10;&#9;}&#10;&#10;//******************************************************************************&#10;npp = 1;&#10;&#9;Excel_html = "&#10;&lt;style type=\"text/css\"&gt;&#10; table.MsoNormalTable&#10;&#9;{font-size:10.0pt;&#10;&#9;font-family:\"Times New Roman\";&#10;&#9;}&#10; p.MsoNormal&#10;&#9;{margin-top:0cm;&#10;&#9;margin-right:0cm;&#10;&#9;margin-bottom:10.0pt;&#10;&#9;margin-left:0cm;&#10;&#9;line-height:115%;&#10;&#9;font-size:11.0pt;&#10;&#9;font-family:Calibri;&#10;&#9;}&#10;p.MsoFootnoteText&#10;&#9;{margin-bottom:.0001pt;&#10;&#9;font-size:10.0pt;&#10;&#9;font-family:Calibri;&#10;&#9;margin-left: 0cm;&#10;&#9;margin-right: 0cm;&#10;&#9;margin-top: 0cm;&#10;}&#10;span.MsoFootnoteReference&#10;&#9;{font-family:\"Times New Roman\";&#10;&#9;vertical-align:super;&#10;}&#10;.style1 {&#10;&#9;border-style: solid;&#10;&#9;border-width: 1px;&#10;&#9;text-align: center;&#10;}&#10;.style2 {&#10;&#9;border-width: 0px;&#10;}&#10;.style3 {&#10;&#9;border: 1px solid #000000;&#10;}&#10;.style4 {&#10;&#9;border-color: #000000;&#10;&#9;border-width: 1px;&#10;&#9;background-color: #008000;&#10;}&#10;.style5 {&#10;&#9;border: 1px solid #000000;&#10;&#9;background-color: #00FF00;&#10;}&#10;.style6 {&#10;&#9;background-color: #FFFF00;&#10;}&#10;.style7 {&#10;&#9;background-color: #F8C000;&#10;}&#10;.style8 {&#10;&#9;background-color: #CC0000;&#10;}&#10;.style9 {&#10;&#9;background-color: #C0C0C0;&#10;}&#10;.style10 {&#10;&#9;border-style: solid;&#10;&#9;border-width: 1px;&#10;&#9;text-align: center;&#10;}&#10;&lt;/style&gt;&#10;&#10;&lt;table style=\"width: 100%\" class=\"style2\" cellspacing=\"0\" cellpadding=\"0\"&gt;&#10;&#9;&lt;tr&gt;&#10;&#9;&#9;&lt;td colspan=8&gt;&lt;strong&gt;Отчет по результатам оценки работников (для руководителя)&lt;/strong&gt;&lt;/td&gt;&#10;&#9;&lt;/tr&gt;&#10;&#9;&lt;tr&gt;&#10;&#9;&#9;&lt;td colspan=8&gt;Структурное подразделение:   " + curSubNames + "&lt;/td&gt;&#10;&#9;&lt;/tr&gt;&#10;&#9;&lt;tr&gt;&#10;&#9;&#9;&lt;td colspan=8&gt;Дата формирования отчета:    " + DateNewTime(Date()) + "&lt;/td&gt;&#10;&#9;&lt;/tr&gt;&#9;&#10;&#9;&lt;tr&gt;&#10;&#9;&#9;&lt;td colspan=8&gt;&lt;strong&gt;Итоги оценки по компетенциям работников Вашего подразделения (по категориям)&lt;/strong&gt;&lt;/td&gt;&#10;&#9;&lt;/tr&gt;&#10;&#9;&lt;tr&gt;&#10;&#9;&#9;&lt;td colspan=8 &gt;&amp;nbsp;&lt;/td&gt;&#10;&#9;&lt;/tr&gt;&#9;&#10;&lt;/table&gt;&#10;&lt;table style=\"width: 100%\" class=\"style2\" cellspacing=\"0\" cellpadding=\"0\"&gt;&#10;&#9;&lt;tr&gt;&#10;&#9;&#9;&lt;td class=\"style10\"&gt;&lt;strong&gt;№&lt;/strong&gt;&lt;/td&gt;&#10;&#9;&#9;&lt;td class=\"style10\"&gt;&lt;strong&gt;Ф.И.О.&lt;/strong&gt;&lt;/td&gt;&#10;&#9;&#9;&lt;td class=\"style10\"&gt;&lt;strong&gt;Самооценка&lt;/strong&gt;&lt;/td&gt;&#10;&#9;&#9;&lt;td class=\"style10\"&gt;&lt;strong&gt;Оценка &lt;br /&gt; руководителя&lt;/strong&gt;&lt;/td&gt;&#10;&#9;&#9;&lt;td class=\"style10\"&gt;&lt;strong&gt;Оценка&lt;br /&gt; коллег&lt;/strong&gt;&lt;/td&gt;&#10;&#9;&#9;&lt;td class=\"style10\"&gt;&lt;strong&gt;Оценка&lt;br /&gt; подчиненных&lt;/strong&gt;&lt;/td&gt;&#10;&#9;&#9;&lt;td class=\"style10\"&gt;&lt;strong&gt;Средняя&lt;br /&gt; оценка&lt;/strong&gt;&lt;/td&gt;&#10;&#9;&#9;&lt;!-- &lt;td class=\"style10\"&gt;&lt;strong&gt;Уровень&lt;/strong&gt;&lt;/td&gt; --&gt;&#10;&#9;&lt;/tr&gt;";&#10;&#9;&#10;&#9;&#9;&#9;oCell = oWorksheet.Cells.GetCell("A1"); &#10;&#9;&#9;&#9;oCell.Value = "Отчет по результатам оценки работников (для руководителя)"; &#10;&#9;&#9;&#9;oCell.Style.FontSize = 12; &#10;&#9;&#9;&#9;oCell.Style.IsBold = true;&#10;&#9;&#9;&#9;&#10;&#10;&#9;&#9;&#9;oCell = oWorksheet.Cells.GetCell("A2"); &#10;&#9;&#9;&#9;oCell.Value = "Структурное подразделение:   " + curSubNames; &#10;&#9;&#9;&#9;oCell.Style.FontSize = 12;&#10;&#9;&#9;&#9;&#10;&#9;&#9;&#9;oCell = oWorksheet.Cells.GetCell("A3"); &#10;&#9;&#9;&#9;oCell.Value = "Дата формирования отчета:    " + DateNewTime(Date()); &#10;&#9;&#9;&#9;oCell.Style.FontSize = 12;&#10;&#9;&#9;&#9;&#10;&#9;&#9;&#9;oCell = oWorksheet.Cells.GetCell("A4");&#10;&#9;&#9;&#9;oCell.Value = "Итоги оценки по компетенциям работников Вашего подразделения (по категориям)"; &#10;&#9;&#9;&#9;oCell.Style.FontSize = 12;&#10;&#9;&#9;&#9;oCell.Style.IsBold = true;&#10;&#9;&#9;&#9;&#10;&#9;&#9;&#9;oCell = oWorksheet.Cells.GetCell("A5"); &#10;&#9;&#9;&#9;oCell.Value = "№ "; &#10;&#9;&#9;&#9;oCell.Style.Borders.SetStyle("Thin"); &#10;&#9;&#9;&#9;oCell.Style.Borders.SetColor("#000000");&#10;&#9;&#9;&#9;oCell.Style.HorizontalAlignment = "Center";&#10;&#9;&#9;&#9;oCell.Style.IsBold = true;&#10;&#9;&#9;&#9;oCell.Style.IsTextWrapped = true;&#10;&#9;&#9;&#9;oWorksheet.Cells.SetColumnWidth(0, 5.0);&#10;&#10;&#9;&#9;&#9;oCell = oWorksheet.Cells.GetCell("B5"); &#10;&#9;&#9;&#9;oCell.Value = "Ф.И.О.";&#10;&#9;&#9;&#9;oCell.Style.Borders.SetStyle("Thin"); &#10;&#9;&#9;&#9;oCell.Style.Borders.SetColor("#000000");&#10;&#9;&#9;&#9;oCell.Style.HorizontalAlignment = "Center";&#10;&#9;&#9;&#9;oCell.Style.IsBold = true;&#10;&#9;&#9;&#9;oCell.Style.IsTextWrapped = true;&#10;&#9;&#9;&#9;oWorksheet.Cells.SetColumnWidth(1, 30.0);&#10;&#9;&#9;&#9;&#10;&#9;&#9;&#9;oCell = oWorksheet.Cells.GetCell("C5"); &#10;&#9;&#9;&#9;oCell.Value = "Самооценка"; &#10;&#9;&#9;&#9;oCell.Style.Borders.SetStyle("Thin"); &#10;&#9;&#9;&#9;oCell.Style.Borders.SetColor("#000000");&#10;&#9;&#9;&#9;oCell.Style.HorizontalAlignment = "Center";&#10;&#9;&#9;&#9;oCell.Style.IsBold = true;&#10;&#9;&#9;&#9;oCell.Style.IsTextWrapped = true;&#10;&#9;&#9;&#9;oWorksheet.Cells.SetColumnWidth(2, 12.0);&#10;&#9;&#9;&#9;&#10;&#10;&#9;&#9;&#9;oCell = oWorksheet.Cells.GetCell("D5"); &#10;&#9;&#9;&#9;oCell.Value = "Оценка руководителя"; &#10;&#9;&#9;&#9;oCell.Style.Borders.SetStyle("Thin"); &#10;&#9;&#9;&#9;oCell.Style.Borders.SetColor("#000000");&#10;&#9;&#9;&#9;oCell.Style.HorizontalAlignment = "Center";&#10;&#9;&#9;&#9;oCell.Style.IsBold = true;&#10;&#9;&#9;&#9;oCell.Style.IsTextWrapped = true;&#10;&#9;&#9;&#9;oWorksheet.Cells.SetColumnWidth(3, 12.0);&#10;&#9;&#9;&#9;&#10;&#9;&#9;&#9;oCell = oWorksheet.Cells.GetCell("E5"); &#10;&#9;&#9;&#9;oCell.Value = "Оценка коллег"; &#10;&#9;&#9;&#9;oCell.Style.Borders.SetStyle("Thin"); &#10;&#9;&#9;&#9;oCell.Style.Borders.SetColor("#000000");&#10;&#9;&#9;&#9;oCell.Style.HorizontalAlignment = "Center";&#10;&#9;&#9;&#9;oCell.Style.IsBold = true;&#10;&#9;&#9;&#9;oCell.Style.IsTextWrapped = true;&#10;&#9;&#9;&#9;oWorksheet.Cells.SetColumnWidth(4, 12.0);&#10;&#10;&#9;&#9;&#9;oCell = oWorksheet.Cells.GetCell("F5"); &#10;&#9;&#9;&#9;oCell.Value = "Оценка подчиненных"; &#10;&#9;&#9;&#9;oCell.Style.Borders.SetStyle("Thin"); &#10;&#9;&#9;&#9;oCell.Style.Borders.SetColor("#000000");&#10;&#9;&#9;&#9;oCell.Style.HorizontalAlignment = "Center";&#10;&#9;&#9;&#9;oCell.Style.IsBold = true;&#10;&#9;&#9;&#9;oCell.Style.IsTextWrapped = true;&#10;&#9;&#9;&#9;oWorksheet.Cells.SetColumnWidth(5, 14.0);&#10;&#9;&#9;&#9;&#10;&#9;&#9;&#9;oCell = oWorksheet.Cells.GetCell("G5"); &#10;&#9;&#9;&#9;oCell.Value = "Средняя оценка"; &#10;&#9;&#9;&#9;oCell.Style.Borders.SetStyle("Thin"); &#10;&#9;&#9;&#9;oCell.Style.Borders.SetColor("#000000");&#10;&#9;&#9;&#9;oCell.Style.HorizontalAlignment = "Center";&#10;&#9;&#9;&#9;oCell.Style.IsBold = true;&#10;&#9;&#9;&#9;oCell.Style.IsTextWrapped = true;&#10;&#9;&#9;&#9;oWorksheet.Cells.SetColumnWidth(6, 14.0);&#10;/*&#9;&#9;&#9;&#10;&#9;&#9;&#9;oCell = oWorksheet.Cells.GetCell("H5"); &#10;&#9;&#9;&#9;oCell.Value = "Уровень";&#10;&#9;&#9;&#9;oCell.Style.Borders.SetStyle("Thin"); &#10;&#9;&#9;&#9;oCell.Style.Borders.SetColor("#000000");&#10;&#9;&#9;&#9;oCell.Style.HorizontalAlignment = "Center";&#10;&#9;&#9;&#9;oCell.Style.IsBold = true;&#10;&#9;&#9;&#9;oCell.Style.IsTextWrapped = true;&#10;&#9;&#9;&#9;oWorksheet.Cells.SetColumnWidth(7, 20);&#10;*/&#10;&#10;&#9;pasDoc = "";&#10;&#9;_cur_ass = ArrayOptFirstElem(XQuery("for $elem in pas where $elem/assessment_appraise_id = " + curAssID + " return $elem"));&#10;&#9;try&#10;&#9;{&#10;&#9;&#9;pasDoc = OpenDoc(UrlFromDocID(_cur_ass.id)).TopElem;&#10;&#9;}&#10;&#9;catch(err)&#10;&#9;{}&#10;&#10;&#9;level_arr = Array();&#10;&#9;mark_array = Array();&#10;&#10;&#10;&#9;_pi = tools.get_sub_persons_by_func_manager_id(curUserID, "collaborator,subdivision,org,position");&#10;&#9;collaborators_ids = "";&#10;&#9;if (curUser.access.access_role == "admin")&#10;&#9;{&#10;&#9;&#9;collaborators_ids = "";&#10;&#9;}&#10;&#9;else if (ArrayOptFirstElem(_pi) != undefined)&#10;&#9;{&#10;&#9;&#9;collaborators_ids = ArraySelectDistinct( ArrayExtract( _pi,"id" ) ).join(",");&#10;&#9;}&#10;&#9;else&#10;&#9;{&#10;&#9;&#9;collaborators_ids = curUserID;&#10;&#9;}&#10;&#10;&#9;str_match = "";&#10;&#9;if (collaborators_ids != "")&#10;&#9;{&#10;&#9;&#9;str_match = " and MatchSome($elem/person_id, (" + collaborators_ids + ")) ";&#10;&#9;}&#10;&#10;// тут по ТОП-500&#9;&#10;&#9;str_srr_arr_full = "";&#10;&#9;for(_comp in pasDoc.competences)&#10;&#9;{&#10;&#9;&#9;// самооценка&#10;&#9;&#9;//ms = func_over(curAssID, _comp.competence_id, 'self');&#10;&#9;&#9;// руководитель&#10;&#9;&#9;rat_mang = func_over(curAssID, _comp.competence_id, 'manager');&#10;&#10;&#9;&#9;// коллеги&#10;&#9;&#9;rat_coll = func_over_func(curAssID, _comp.competence_id, 'coll', _comp)&#10;&#9;&#10;&#9;&#9;// подчиненные&#10;&#9;&#9;rat_sub = func_over(curAssID, _comp.competence_id, 'staff');&#10;&#9;&#9;&#10;&#9;&#9;//str_srr = (Real(ms) + Real(rat_mang) + Real(rat_coll) + Real(rat_sub))/4;&#10;&#9;&#9;str_srr = (Real(rat_mang) + Real(rat_coll) + Real(rat_sub))/3;&#10;&#9;&#9;//str_srr_arr_full += (str_srr_arr_full == "" ? "" : ",") + StrReplace(Perevod(Real(str_srr)), ",", ".");&#9;&#10;&#9;&#9;str_srr_arr_full += (str_srr_arr_full == "" ? "" : ",") + Math.round(str_srr);&#10;&#9;}&#9;&#10;&#10;&#9;plan_elem = XQuery("for $elem in assessment_plans where $elem/assessment_appraise_id = " + curAssID + str_match + " return $elem");&#10;&#9;for(_compets in pasDoc.competences)&#10;&#9;{&#10;&#9;&#9;sum_aver = 0;&#10;&#9;&#9;npp = 0;&#10;&#9;&#9;aver_rez = 0;&#10;&#9;&#9;num_aver = 0;&#10;&#9;&#9;for (_plan in plan_elem)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;//если у людей подразд-е, к-ое задано&#10;&#9;&#9;&#9;_coll_elem = ArrayOptFirstElem(XQuery("for $elem in collaborators where MatchSome($elem/position_parent_id, (" + curSubID + ")) and $elem/id = " + _plan.person_id + " return $elem"));&#9;&#9;&#10;&#9;&#9;&#9;&#10;&#9;&#9;&#9;if(_coll_elem == undefined)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;continue;&#10;&#9;&#9;&#9;}&#10;&#10;&#9;&#9;&#9;npp++;&#10;&#9;&#9;&#9;_c_ass =  XQuery("for $elem in pas where $elem/assessment_appraise_id = " + curAssID + " and $elem/person_id = " + _plan.person_id + " return $elem");&#10;&#10;&#9;&#9;&#9;find_self = ArrayOptFind(_c_ass, "This.status == 'self'");&#10;&#9;&#9;&#9;mark_self = 0;&#10;&#9;&#9;&#9;fullname_pas = "";&#10;&#9;&#9;&#9;if (find_self != undefined)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;selfDoc = OpenDoc(UrlFromDocID(find_self.id)).TopElem;&#10;&#9;&#9;&#9;&#9;fullname_pas = find_self.person_fullname;&#10;&#9;&#9;&#9;&#9;find_mark = ArrayOptFind(selfDoc.competences, "This.competence_id == _compets.competence_id");&#10;&#9;&#9;&#9;&#9;if (find_mark != undefined &amp;&amp; find_mark.mark_value != null &amp;&amp; find_mark.mark_value != "")&#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;mark_self = find_mark.mark_value;&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;}&#10;&#10;&#9;&#9;&#9;mng_mark = 0;&#10;&#9;&#9;&#9;mng_arr = ArraySelect(_c_ass, "This.status == 'manager'");&#10;&#9;&#9;&#9;cnt_mng = 0;&#10;&#9;&#9;&#9;for (_mng in mng_arr)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;try&#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;mngDoc = OpenDoc(UrlFromDocID(_mng.id)).TopElem;&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;catch(err)&#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;continue;&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;find_mark = ArrayOptFind(mngDoc.competences, "This.competence_id == _compets.competence_id");&#10;&#9;&#9;&#9;&#9;if (find_mark != undefined)&#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;mng_m = find_mark.mark_value != null &amp;&amp; find_mark.mark_value != "" ? Real(find_mark.mark_value) : 0;&#10;&#9;&#9;&#9;&#9;&#9;if (mng_m != 0)&#10;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;mng_mark += Real(mng_m);&#10;&#9;&#9;&#9;&#9;&#9;&#9;cnt_mng++;&#10;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;if (cnt_mng != 0)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;mark_manager = Real(mng_mark) / Real(cnt_mng);&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;else&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;mark_manager = 0;&#10;&#9;&#9;&#9;}&#10;&#10;&#9;&#9;&#9;coll_mark = 0;&#10;&#9;&#9;&#9;coll_arr = ArraySelect(_c_ass, "This.status == 'coll'");&#10;&#9;&#9;&#9;//cnt_coll = 0;&#10;&#9;&#9;&#9;rat_ind_coll = 0;&#10;&#9;&#9;&#9;full_value = 0;&#10;&#9;&#9;&#9;full_cnt = 0;&#9;&#9;&#9;&#10;&#9;&#9;&#9;for(_ind in _compets.indicators)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;m_ind_coll = 0;&#10;&#9;&#9;&#9;&#9;num_ind_coll = 0;&#10;&#9;&#9;&#9;&#9;for (_pa_s in coll_arr)&#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;try&#10;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;DocPas = OpenDoc(UrlFromDocID(_pa_s.id)).TopElem;&#10;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;catch(err)&#10;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;continue;&#10;&#9;&#9;&#9;&#9;&#9;}&#9;&#10;&#9;&#9;&#9;&#9;&#9;fcoll = ArrayOptFind(DocPas.competences, "This.competence_id == _compets.competence_id");&#10;&#9;&#9;&#9;&#9;&#9;if (fcoll != undefined)&#10;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;fcoll_ind = ArrayOptFind(fcoll.indicators, "This.indicator_id == _ind.indicator_id");&#10;&#9;&#9;&#9;&#9;&#9;&#9;if (fcoll_ind != undefined &amp;&amp; fcoll_ind.mark_value != null)&#10;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;m_ind_coll += Real(fcoll_ind.mark_value);&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;num_ind_coll ++;&#10;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;rat_ind_coll = num_ind_coll != 0 ? Real(StrRealFixed(Real(m_ind_coll)/Real(num_ind_coll), 2, true)) : 0;&#10;&#9;&#9;&#9;&#9;full_value += rat_ind_coll;&#10;&#9;&#9;&#9;&#9;full_cnt += rat_ind_coll != 0 ? 1 : 0;&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;if (ArrayOptFirstElem(_compets.indicators) == undefined)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;for (_pa_s in coll_arr)&#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;try&#10;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;DocPas = OpenDoc(UrlFromDocID(_pa_s.id)).TopElem;&#10;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;catch(err)&#10;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;continue;&#10;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;fcoll = ArrayOptFind(DocPas.competences, "This.competence_id == _compets.competence_id");&#10;&#9;&#9;&#9;&#9;&#9;if (fcoll != undefined)&#10;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;col_m = fcoll.mark_value != null &amp;&amp; fcoll.mark_value != "" ? Real(fcoll.mark_value) : 0;&#10;&#9;&#9;&#9;&#9;&#9;&#9;if (col_m != 0)&#10;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;full_value += Real(col_m);&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;full_cnt ++;&#10;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#10;&#9;&#9;&#9;coll_mark = full_cnt != 0 ? Real(StrRealFixed(Real(full_value)/Real(full_cnt), 2, true)) : 0;&#10;&#9;&#9;&#9;&#10;&#9;&#9;&#9;staff_mark = 0;&#10;&#9;&#9;&#9;staff_arr = ArraySelect(_c_ass, "This.status == 'staff'");&#10;&#9;&#9;&#9;//cnt_staff = ArrayCount(staff_arr);&#10;&#9;&#9;&#9;cnt_staff = 0;&#10;&#9;&#9;&#9;for (_staff in staff_arr)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;try&#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;staffDoc = OpenDoc(UrlFromDocID(_staff.id)).TopElem;&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;catch(err)&#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;continue;&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;find_mark = ArrayOptFind(staffDoc.competences, "This.competence_id == _compets.competence_id");&#10;&#9;&#9;&#9;&#9;if (find_mark != undefined)&#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;staff_m = find_mark.mark_value != null &amp;&amp; find_mark.mark_value != "" ? Real(find_mark.mark_value) : 0;&#10;&#9;&#9;&#9;&#9;&#9;if (staff_m != 0)&#10;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;//staff_mark += Real(staff_m) / Real(cnt_staff);&#10;&#9;&#9;&#9;&#9;&#9;&#9;staff_mark += Real(staff_m);&#10;&#9;&#9;&#9;&#9;&#9;&#9;cnt_staff++;&#10;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;if (cnt_staff != 0)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;staff_mark = Real(staff_mark) / Real(cnt_staff);&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;else&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;staff_mark = 0;&#10;&#9;&#9;&#9;}&#10;&#10;&#9;&#9;&#9;num_ev = 0;&#10;&#10;&#9;&#9;&#9;_color = 'white';&#10;&#9;&#9;&#9;ur = '';&#10;&#9;&#9;&#9;//num_ev = mark_self != 0 ? num_ev + 1 : num_ev;&#10;&#9;&#9;&#9;num_ev = mark_manager != 0 ? num_ev + 1 : num_ev;&#10;&#9;&#9;&#9;num_ev = coll_mark != 0 ? num_ev + 1 : num_ev;&#10;&#9;&#9;&#9;num_ev = staff_mark != 0 ? num_ev + 1 : num_ev;&#10;&#9;&#9;&#9;_average = 0;&#10;&#9;&#9;&#9;if (num_ev != 0)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;_average = Real(Real(mark_manager + coll_mark + staff_mark)/Real(num_ev));&#10;&#9;&#9;&#9;}&#10;&#10;&#9;&#9;&#9;sum_aver += _average;&#10;&#9;&#9;&#9;num_aver = _average != 0 ? num_aver + 1 : num_aver;&#10;&#10;&#9;&#9;&#9;_obj = new Object();&#10;&#9;&#9;&#9;_obj.name = tools_web.get_cur_lng_name(_compets.competence_id.ForeignElem.name, lng_id);&#10;&#9;&#9;&#9;_obj.competence_id = _compets.competence_id;&#9;&#9;&#9;&#10;&#9;&#9;&#9;_obj.person_fullname = _plan.person_fullname;&#10;&#9;&#9;&#9;_obj.person_id = _plan.person_id;&#10;&#9;&#9;&#9;_obj.mark_self = StrRealFixed(mark_self, 1, true);&#10;&#9;&#9;&#9;_obj.mark_manager = StrRealFixed(mark_manager, 1, true);&#10;&#9;&#9;&#9;_obj.coll_mark = StrRealFixed(coll_mark, 1, true);&#10;&#9;&#9;&#9;_obj.staff_mark = StrRealFixed(staff_mark, 1, true);&#10;&#9;&#9;&#9;_obj.average = StrRealFixed(_average, 1, true);&#10;&#9;&#9;&#9;_obj.ur = check_text(_average);&#10;&#9;&#9;&#9;_obj.color = check_color(_average);&#10;&#9;&#9;&#9;level_arr[ArrayCount(level_arr)] = _obj; &#10;&#9;&#9;&#9;aver_rez = num_aver != 0 ? StrRealFixed(Real(sum_aver)/Real(num_aver), 1, true) : 0;&#10;&#9;&#9;}&#10;&#9;&#9;_new = new Object();&#10;&#9;&#9;temp_aver = num_aver != 0 ? Real( StrRealFixed(Real(sum_aver) / Real(num_aver) , 1, true)) : 0;&#10;&#9;&#9;_new.aver_rez = temp_aver;&#10;&#9;&#9;_new.competence_id = _compets.competence_id;&#10;&#9;&#9;_new.color = check_color(temp_aver);&#10;&#9;&#9;_new.ur = check_text(temp_aver);&#10;&#9;&#9;mark_array[ArrayCount(mark_array)] = _new;&#10;&#9;}&#10;&#10;&#9;array_gr2 = Array();&#10;&#9;str_competences = "";&#10;&#9;color_cnt = 14;&#10;&#9;for (_pl in plan_elem)&#10;&#9;{&#10;&#9;&#9;find_colls = ArrayOptFind(level_arr, "This.person_id == _pl.person_id");&#10;&#9;&#9;if (find_colls != undefined)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;temp_array = Array();&#10;&#9;&#9;&#9;temp_array = ArraySelect(level_arr, "This.person_id == _pl.person_id");&#10;&#9;&#9;&#9;if (str_competences == "")&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;str_competences = ArrayMerge(temp_array,"This.name","|");&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;_str_new_mark = ArrayMerge(temp_array,"This.average",",");&#10;&#9;&#9;&#9;&#10;&#9;&#9;&#9;_obj = new Object();&#10;&#9;&#9;&#9;_obj.person_fullname = find_colls.person_fullname;&#10;&#9;&#9;&#9;_obj.str_mark = _str_new_mark;&#10;&#9;&#9;&#9;_obj.color_cnt = color_cnt;&#10;&#9;&#9;&#9;array_gr2[ArrayCount(array_gr2)] = _obj;&#10;&#9;&#9;&#9;//color_cnt++;&#10;&#9;&#9;&#9;color_cnt += 3;&#10;&#9;&#9;}&#10;&#9;}&#10;&#9;&#10;&#9;array_gr1 = Array();&#10;&#9;_str_id = "";&#10;&#9;str_fio = "";&#10;&#9;color_cnt = 14;&#10;&#9;_idx = 6;&#10;&#9;for(_compets in pasDoc.competences)&#10;&#9;{&#10;&#9;&#9;find_comps = ArrayOptFind(level_arr, "This.competence_id == _compets.competence_id");&#10;&#9;&#9;if (find_comps != undefined)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;find_mark_comps = ArrayOptFind(mark_array, "This.competence_id == _compets.competence_id");&#10;&#9;&#9;&#9;text_col = "";&#10;&#9;&#9;&#9;text_ur = "&amp;nbsp;";&#10;&#9;&#9;&#9;text_full_mark = "&amp;nbsp;";&#10;&#9;&#9;&#9;text_color = "";&#10;&#9;&#9;&#9;text_color_font = "";&#10;&#9;&#9;&#9;comp_mark = 0;&#10;&#10;&#9;&#9;&#9;if (find_mark_comps != undefined)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;if (visible_legend)&#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;text_col = "bgcolor='" + find_mark_comps.color + "'";&#10;&#9;&#9;&#9;&#9;&#9;text_color = find_mark_comps.color;&#10;&#9;&#9;&#9;&#9;&#9;text_color_font = "style='" + color_font(comp_mark) + "'";&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;text_ur = find_mark_comps.ur;&#10;&#9;&#9;&#9;&#9;text_full_mark = find_mark_comps.aver_rez;&#10;&#9;&#9;&#9;&#9;comp_mark = Real(find_mark_comps.aver_rez);&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;}&#10;&#10;&#9;&#9;&#9;Excel_html += "&#10;&#9;&#9;&#9;&lt;tr&gt;&#10;&#9;&#9;&#9;&#9;&lt;td colspan='6' class='style1'&gt;&lt;strong&gt;" + find_comps.name + "&lt;/strong&gt;&lt;/td&gt;&#10;&#9;&#9;&#9;&#9;&lt;td class='style10' x:num='" + StrReal(Real(text_full_mark), 1) + "'&gt;" + Perevod(text_full_mark) + "&lt;/td&gt;&#10;&#9;&#9;&#9;&#9;&lt;!-- &lt;td class='style10' " + text_col + " " + text_color_font + "&gt;" + text_ur + "&lt;/td&gt; --&gt;&#10;&#9;&#9;&#9;&lt;/tr&gt;";&#10;&#10;&#9;&#9;&#9;oCell = oWorksheet.Cells.GetCell("A" + _idx); &#10;&#9;&#9;&#9;oWorksheet.Cells.Merge(_idx - 1, 0, 1, 6);&#10;&#9;&#9;&#9;oWorksheet.Cells.SetRowHeight((_idx - 1), 15.0);&#10;&#9;&#9;&#9;oCell.Value = find_comps.name;&#10;&#9;&#9;&#9;oCell.Style.Borders.SetStyle("Thin"); &#10;&#9;&#9;&#9;oCell.Style.Borders.SetColor("#000000"); &#10;&#9;&#9;&#9;oCell.Style.IsTextWrapped = true;&#10;&#9;&#9;&#9;oCell.Style.IsBold = true;&#10;&#9;&#9;&#9;oCell.Style.HorizontalAlignment = "Center";&#10;&#9;&#9;&#9;&#10;&#9;&#9;&#9;oCell = oWorksheet.Cells.GetCell("G" + _idx); &#10;&#9;&#9;&#9;oWorksheet.Cells.SetRowHeight((_idx - 1), 15.0);&#10;&#9;&#9;&#9;oCell.Value = Perevod(text_full_mark);&#10;&#9;&#9;&#9;oCell.Style.Borders.SetStyle("Thin"); &#10;&#9;&#9;&#9;oCell.Style.Borders.SetColor("#000000"); &#10;&#9;&#9;&#9;oCell.Style.IsTextWrapped = true;&#10;&#9;&#9;&#9;oCell.Style.IsBold = true;&#10;&#9;&#9;&#9;oCell.Style.HorizontalAlignment = "Center";&#10;/*&#9;&#9;&#9;&#10;&#9;&#9;&#9;oCell = oWorksheet.Cells.GetCell("H" + _idx); &#10;&#9;&#9;&#9;oWorksheet.Cells.SetRowHeight((_idx - 1), 15);&#10;&#9;&#9;&#9;oCell.Value = text_ur;&#10;&#9;&#9;&#9;oCell.Style.Borders.SetStyle("Thin"); &#10;&#9;&#9;&#9;oCell.Style.Borders.SetColor("#000000"); &#10;&#9;&#9;&#9;oCell.Style.IsTextWrapped = true;&#10;&#9;&#9;&#9;oCell.Style.IsBold = true;&#10;&#9;&#9;&#9;oCell.Style.HorizontalAlignment = "Center";&#10;&#9;&#9;&#9;oCell.Style.ForegroundColor = text_color;&#10;&#9;&#9;&#9;oCell.Style.FontColor = (comp_mark != 0 ? color_font_dll(comp_mark) : "");&#10;*/&#10;&#9;&#9;&#9;_idx++;&#10;&#9;&#9;&#9;&#10;&#9;&#9;&#9;temp_array = Array();&#10;&#9;&#9;&#9;temp_array = ArraySelect(level_arr, "This.competence_id == _compets.competence_id");&#10;&#10;&#9;&#9;&#9;_str_new_mark = ArrayMerge(temp_array,"This.average",",");&#10;&#10;&#9;&#9;&#9;_obj = new Object();&#10;&#9;&#9;&#9;_obj.competence_id = _compets.competence_id;&#10;&#9;&#9;&#9;_obj.name_competences = find_comps.name;&#10;&#9;&#9;&#9;_obj.str_mark = _str_new_mark;&#10;&#9;&#9;&#9;_obj.color_cnt = color_cnt;&#10;&#9;&#9;&#9;array_gr1[ArrayCount(array_gr1)] = _obj;&#9;&#9;&#10;&#9;&#9;&#9;//color_cnt++;&#10;&#9;&#9;&#9;color_cnt += 3;&#10;&#9;&#9;&#9;npp = 0;&#10;&#9;&#9;&#9;str_fio = "";&#10;&#9;&#9;&#9;_str_id = "";&#10;&#10;&#9;&#9;&#9;for (_tmp in temp_array)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;npp++;&#10;&#9;&#9;&#9;&#9;sum_aver += Real(_tmp.average);&#10;&#9;&#9;&#9;&#9;str_fio += (str_fio != "" ? "|" : "") +  _tmp.person_fullname;&#10;&#9;&#9;&#9;&#9;_str_id += (_str_id != "" ? "," : "") +  _tmp.person_id;&#10;&#10;&#9;&#9;&#9;&#9;Excel_html += "&#10;&#9;&#9;&#9;&#9;&lt;tr&gt;&#10;&#9;&#9;&#9;&#9;&#9;&lt;td class='style10' x:num='" + npp + "'&gt;" + npp + "&lt;/td&gt;&#10;&#9;&#9;&#9;&#9;&#9;&lt;td class='style10'&gt;" + _tmp.person_fullname + "&lt;/td&gt;&#10;&#9;&#9;&#9;&#9;&#9;&lt;td class='style10' bgcolor=" + check_color(Real(_tmp.mark_self)) + " x:num='" + StrReal(Real(_tmp.mark_self), 1) + "'&gt;" + Perevod(_tmp.mark_self) + "&lt;/td&gt;&#10;&#9;&#9;&#9;&#9;&#9;&lt;td class='style10' bgcolor=" + check_color(Real(_tmp.mark_manager)) + " x:num='" + StrReal(Real(_tmp.mark_manager), 1) + "'&gt;" + Perevod(_tmp.mark_manager) + "&lt;/td&gt;&#10;&#9;&#9;&#9;&#9;&#9;&lt;td class='style10' bgcolor=" + check_color(Real(_tmp.coll_mark)) + " x:num='" + StrReal(Real(_tmp.coll_mark), 1) + "'&gt;" + Perevod(_tmp.coll_mark) + "&lt;/td&gt;&#10;&#9;&#9;&#9;&#9;&#9;&lt;td class='style10' bgcolor=" + check_color(Real(_tmp.staff_mark)) + " x:num='" + StrReal(Real(_tmp.staff_mark), 1) + "'&gt;" + Perevod(_tmp.staff_mark) + "&lt;/td&gt;&#10;&#9;&#9;&#9;&#9;&#9;&lt;td class='style10' bgcolor=" + check_color(Real(_tmp.average)) + " x:num='" + StrReal(Real(_tmp.average), 1) + "'&gt;" + Perevod(_tmp.average) + "&lt;/td&gt;&#10;&#9;&#9;&#9;&#9;&#9;&lt;!-- &lt;td class='style10' bgcolor=" + check_color(Real(_tmp.average)) + " style='" + color_font(Real(_tmp.average)) + "'&gt;" + _tmp.ur + "&lt;/td&gt; --&gt;&#10;&#9;&#9;&#9;&#9;&lt;/tr&gt;";&#10;&#10;&#9;&#9;&#9;&#9;oCell = oWorksheet.Cells.GetCell("A" + _idx); &#10;&#9;&#9;&#9;&#9;oCell.Value = npp; &#10;&#9;&#9;&#9;&#9;oCell.Style.Borders.SetStyle("Thin"); &#10;&#9;&#9;&#9;&#9;oCell.Style.Borders.SetColor("#000000"); &#10;&#9;&#9;&#9;&#9;oCell.Style.IsTextWrapped = true;&#10;&#9;&#9;&#9;&#9;oCell.Style.HorizontalAlignment = "Center";&#10;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;oCell = oWorksheet.Cells.GetCell("B" + _idx); &#10;&#9;&#9;&#9;&#9;oCell.Value = _tmp.person_fullname; &#10;&#9;&#9;&#9;&#9;oCell.Style.Borders.SetStyle("Thin"); &#10;&#9;&#9;&#9;&#9;oCell.Style.Borders.SetColor("#000000"); &#10;&#9;&#9;&#9;&#9;oCell.Style.IsTextWrapped = true;&#10;&#9;&#9;&#9;&#9;oCell.Style.HorizontalAlignment = "Center";&#10;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;oCell = oWorksheet.Cells.GetCell("C" + _idx); &#10;&#9;&#9;&#9;&#9;oCell.Value = Perevod(_tmp.mark_self); &#10;&#9;&#9;&#9;&#9;oCell.Style.Borders.SetStyle("Thin"); &#10;&#9;&#9;&#9;&#9;oCell.Style.Borders.SetColor("#000000"); &#10;&#9;&#9;&#9;&#9;oCell.Style.IsTextWrapped = true;&#10;&#9;&#9;&#9;&#9;oCell.Style.HorizontalAlignment = "Center";&#10;&#9;&#9;&#9;&#9;oCell.Style.ForegroundColor = check_color(Real(_tmp.mark_self));&#10;&#9;&#9;&#9;&#9;oCell.Style.FontColor = color_font_dll(Real(_tmp.mark_self));&#10;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;oCell = oWorksheet.Cells.GetCell("D" + _idx); &#10;&#9;&#9;&#9;&#9;oCell.Value = Perevod(_tmp.mark_manager); &#10;&#9;&#9;&#9;&#9;oCell.Style.Borders.SetStyle("Thin"); &#10;&#9;&#9;&#9;&#9;oCell.Style.Borders.SetColor("#000000"); &#10;&#9;&#9;&#9;&#9;oCell.Style.IsTextWrapped = true;&#10;&#9;&#9;&#9;&#9;oCell.Style.HorizontalAlignment = "Center";&#10;&#9;&#9;&#9;&#9;oCell.Style.ForegroundColor = check_color(Real(_tmp.mark_manager));&#10;&#9;&#9;&#9;&#9;oCell.Style.FontColor = color_font_dll(Real(_tmp.mark_manager));&#10;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;oCell = oWorksheet.Cells.GetCell("E" + _idx); &#10;&#9;&#9;&#9;&#9;oCell.Value = Perevod(_tmp.coll_mark); &#10;&#9;&#9;&#9;&#9;oCell.Style.Borders.SetStyle("Thin"); &#10;&#9;&#9;&#9;&#9;oCell.Style.Borders.SetColor("#000000"); &#10;&#9;&#9;&#9;&#9;oCell.Style.IsTextWrapped = true;&#10;&#9;&#9;&#9;&#9;oCell.Style.HorizontalAlignment = "Center";&#10;&#9;&#9;&#9;&#9;oCell.Style.ForegroundColor = check_color(Real(_tmp.coll_mark));&#10;&#9;&#9;&#9;&#9;oCell.Style.FontColor = color_font_dll(Real(_tmp.coll_mark));&#10;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;oCell = oWorksheet.Cells.GetCell("F" + _idx); &#10;&#9;&#9;&#9;&#9;oCell.Value = Perevod(_tmp.staff_mark); &#10;&#9;&#9;&#9;&#9;oCell.Style.Borders.SetStyle("Thin"); &#10;&#9;&#9;&#9;&#9;oCell.Style.Borders.SetColor("#000000"); &#10;&#9;&#9;&#9;&#9;oCell.Style.IsTextWrapped = true;&#10;&#9;&#9;&#9;&#9;oCell.Style.HorizontalAlignment = "Center";&#10;&#9;&#9;&#9;&#9;oCell.Style.ForegroundColor = check_color(Real(_tmp.staff_mark));&#10;&#9;&#9;&#9;&#9;oCell.Style.FontColor = color_font_dll(Real(_tmp.staff_mark));&#10;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;oCell = oWorksheet.Cells.GetCell("G" + _idx); &#10;&#9;&#9;&#9;&#9;oCell.Value = Perevod(_tmp.average); &#10;&#9;&#9;&#9;&#9;oCell.Style.Borders.SetStyle("Thin"); &#10;&#9;&#9;&#9;&#9;oCell.Style.Borders.SetColor("#000000"); &#10;&#9;&#9;&#9;&#9;oCell.Style.IsTextWrapped = true;&#10;&#9;&#9;&#9;&#9;oCell.Style.HorizontalAlignment = "Center";&#10;&#9;&#9;&#9;&#9;oCell.Style.ForegroundColor = check_color(Real(_tmp.average));&#10;&#9;&#9;&#9;&#9;oCell.Style.FontColor = color_font_dll(Real(_tmp.average));&#9;&#9;&#9;&#9;&#10;&#10;/*&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;oCell = oWorksheet.Cells.GetCell("H" + _idx); &#10;&#9;&#9;&#9;&#9;oCell.Value = _tmp.ur; &#10;&#9;&#9;&#9;&#9;oCell.Style.Borders.SetStyle("Thin"); &#10;&#9;&#9;&#9;&#9;oCell.Style.Borders.SetColor("#000000"); &#10;&#9;&#9;&#9;&#9;oCell.Style.IsTextWrapped = true;&#10;&#9;&#9;&#9;&#9;oCell.Style.HorizontalAlignment = "Center";&#10;&#9;&#9;&#9;&#9;oCell.Style.ForegroundColor = check_color(Real(_tmp.average));&#10;&#9;&#9;&#9;&#9;oCell.Style.FontColor = color_font_dll(Real(_tmp.average));&#10;*/&#10;&#9;&#9;&#9;&#9;_idx++;&#10;&#9;&#9;&#9;}&#10;&#9;&#9;}&#10;&#9;}&#10;&#10;&#9;arr_aver = Array();&#10;&#9;aver_empl = 0;&#10;&#9;str_aver = "";&#10;&#9;arr_id = _str_id.split(",");&#10;&#9;for(_id in arr_id)&#10;&#9;{&#10;&#9;&#9;num_empl = 0;&#10;&#9;&#9;sum_empl = 0;&#10;&#9;&#9;arr_aver = ArraySelect(level_arr, "String(This.person_id) == _id")&#10;&#9;&#9;for(av_arr in arr_aver)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;sum_empl += Real(av_arr.average);&#10;&#9;&#9;&#9;if(av_arr.average != 0)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;num_empl++;&#10;&#9;&#9;&#9;}&#10;&#9;&#9;}&#10;&#9;&#9;if(num_empl != 0)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;aver_empl = Real( StrRealFixed(Real(sum_empl)/Real(num_empl), 2, true));&#10;&#9;&#9;}&#10;&#9;&#9;str_aver += (str_aver != "" ? "," : "") + aver_empl;&#10;///////////////////////////////////////////////////////////////////////////&#10;&#9;}&#10;&#10;&#9;Excel_html += "&#10;&lt;/table&gt;";&#10;&#9;if (visible_legend)&#10;&#9;{&#10;&#9;&#9;Excel_html += "&#10;&lt;p&gt;Интерпретация результатов производится по следующей шкале:&lt;/p&gt;&#10;&lt;table style=\"width: 30%\" cellspacing=\"0\" cellpadding=\"0\" class=\"style3\"&gt;";&#10;&#10;&#9;&#9;str_temp = "";&#10;&#9;&#9;cnt_legend = ArrayCount(color_array_legend);&#10;&#9;&#9;for (_lg = (cnt_legend - 1); _lg &gt;=0; _lg--)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;str_temp += "&#10;&#9;&#9;&#9;&lt;tr&gt;&#10;&#9;&#9;&#9;&#9;&lt;td colspan=2 width='65%' class=\"style3\"&gt;" + color_array_legend[_lg].title + "&lt;/td&gt;&#10;&#9;&#9;&#9;&#9;&lt;td width='25%' class=\"style3\"&gt; " + color_array_legend[_lg].min + " - " + color_array_legend[_lg].max + " &lt;/td&gt;&#10;&#9;&#9;&#9;&#9;&lt;td width='10%' style='background-color: " + color_array_legend[_lg].color + ";'&gt;&amp;nbsp;&lt;/td&gt;&#10;&#9;&#9;&#9;&lt;/tr&gt;";&#10;&#9;&#9;}&#10;&#9;&#10;&#9;&#9;Excel_html += str_temp + "&#10;&#9;&lt;/table&gt;";&#10;&#10;&#9;&#9;_idx += 2;&#10;&#9;&#9;oCell = oWorksheet.Cells.GetCell("A" + _idx); &#10;&#9;&#9;oCell.Value = "Интерпретация результатов производится по следующей шкале:"; &#10;&#9;&#9;oCell.Style.FontSize = 10;&#10;&#9;&#9;_idx++;&#10;&#9;&#9;for (_lg = (cnt_legend - 1); _lg &gt;=0; _lg--)&#10;&#9;&#9;{&#9;&#9;&#9;&#10;&#9;&#9;&#9;oCell = oWorksheet.Cells.GetCell("A" + _idx);&#10;&#9;&#9;&#9;oWorksheet.Cells.Merge(_idx - 1, 0, 1, 2);&#10;&#9;&#9;&#9;oCell.Value = color_array_legend[_lg].title; &#10;&#9;&#9;&#9;oCell.Style.Borders.SetStyle("Thin"); &#10;&#9;&#9;&#9;oCell.Style.Borders.SetColor("#000000"); &#10;&#9;&#9;&#9;oCell.Style.IsTextWrapped = true;&#10;&#9;&#9;&#9;&#10;&#9;&#9;&#9;oCell = oWorksheet.Cells.GetCell("C" + _idx); &#10;&#9;&#9;&#9;oCell.Value = (color_array_legend[_lg].min + " - " + color_array_legend[_lg].max); &#10;&#9;&#9;&#9;oCell.Style.Borders.SetStyle("Thin"); &#10;&#9;&#9;&#9;oCell.Style.Borders.SetColor("#000000"); &#10;&#9;&#9;&#9;oCell.Style.IsTextWrapped = true;&#10;&#9;&#9;&#9;&#10;&#9;&#9;&#9;oCell = oWorksheet.Cells.GetCell("D" + _idx); &#10;&#9;&#9;&#9;oCell.Value = ""; &#10;&#9;&#9;&#9;oCell.Style.Borders.SetStyle("Thin"); &#10;&#9;&#9;&#9;oCell.Style.Borders.SetColor("#000000"); &#10;&#9;&#9;&#9;oCell.Style.IsTextWrapped = true;&#10;&#9;&#9;&#9;oCell.Style.ForegroundColor = color_array_legend[_lg].color;&#10;&#9;&#9;&#9;_idx++;&#10;&#9;&#9;}&#10;&#10;&#9;}&#10;&#10;//1*********************************&#10;&#10;//отчет для отображения в браузере (String)&#10;Excel_html += "";&#10;// заголовок листа Excel&#10;SHEET_CAPTION = "Заголовок листа";&#10;// флаг отображать ли таблицу данных графика №1 в Excel&#10;SHOW_DATA_TABLE = false;&#10;// флаг отображать ли таблицу данных с выделением оценок с отклонением от порогового значения&#10;SHOW_DATA_TABLE_WITH_LAG = false;&#10;// пороговое значение отклонения оценки&#10;curLagValue = 1;&#10;// данные для построения графика. Элемент массива:&#10;ResultArray = Array();&#10;&#10;// заполним данные для графиков&#10;for (i = 1; i &lt;= 1; i++)&#10;{&#10; &#9;obj = Object();&#10; &#9;// id графика&#10; &#9;obj.id = i;&#10;&#9;// заголовок графика&#10;&#9;obj.name = "Итоги оценки по компетенциям руководителей ТОП";&#10;&#9;// график или таблица&#10;&#9;obj.is_chart = true;//( i%3 != 0);&#10;&#9;// категории графика&#10;&#9;obj.categories = str_fio;&#10;&#9;// массив серий графика&#10;&#9;obj.rows = Array();&#10;&#9;//for (j = 1; j &lt;= 4; j++)&#10;&#9;j = 0;&#10;&#9;for (_ag in array_gr1)&#10;&#9;{&#10;&#9;&#9;j++;&#10; &#9;&#9;row = Object();&#10;&#9;&#9;// id серии&#10; &#9;&#9;row.obj_id = j;&#10;&#9;&#9;// название серии&#9;&#9;&#9;&#10;&#9;&#9;row.obj_name = _ag.name_competences; &#10; &#9;&#9;// массив значений в серии&#10;&#9;&#9;row.data = Array(_ag.str_mark);&#10;&#9;&#9;row.color_index = _ag.color_cnt;&#10;&#9;&#9;obj.rows[ArrayCount(obj.rows)] = row;&#10;&#9;}&#10;&#9;ResultArray[ArrayCount(ResultArray)] = obj;&#10;}&#10;&#10;Excel_html_Export_Up = "";&#10;&#10;Excel_html_Export = ""; &#10;&#10;i = 0;&#10;for (_graph in ResultArray)&#10;{&#10;&#9;i++;&#10;&#10;&#9;oExcelDoc1 = tools.get_object_assembly('Excel');&#10;&#9;oExcelDoc1.CreateWorkBook();&#10;&#9;oWorksheet1 = oExcelDoc1.GetWorksheet(0);&#10;&#9;chart1 = oWorksheet1.Charts.AddFloatingChart("Column", 0, 0, 860, 620);&#10;&#9;chart1.ValueAxis.MinValue = 0;&#10;&#9;//chart1.ValueAxis.MaxValue = 100;&#10;&#10;&#9;array_colors = Array("#6A90D5", "#FFD241", "#5F9140", "#3A5FA8", "#D6A122", "#ACD591", "#FFFFFF");&#10;&#9;&#10;&#9;_idxa = 0;&#10;&#9;for (_ag in array_gr1)&#10;&#9;{&#10;&#9;&#9;series1 = chart1.AddSeries("Column", "{" + _ag.str_mark + "}", true); &#10;&#9;&#9;series1.Name = _ag.name_competences;&#10;&#9;&#9;//series1.ForegroundColor = array_colors[_idxa];&#10;&#9;&#9;series1.DataLabels.ShowValue = true;&#10;&#9;&#9;series1.DataLabels.Position = "Center";&#10;&#9;&#9;_idxa++;&#10;&#9;}&#10;&#10;&#9;chart1.Title.Text = "Итоги оценки по компетенциям сотрудников"; &#10;&#9;chart1.Title.IsBold = true;&#10;&#9;chart1.LegendPosition = "Bottom";&#10;&#9;chart1.CategoryData = "{" + StrReplace(str_fio, "|", ",") + "}";&#10;&#9;chart1.CategoryAxis.TickLabels.RotationAngle = 0;&#10;&#10;&#9;chart1.PlotArea.Area.ForegroundColor = "#FFFFFF";&#10;&#9;chart1.PlotArea.Area.BackgroundColor = "#FFFFFF";&#10;&#10;&#9;chart1.ShowCategoryGriglines = true;&#10;&#9;str_image = chart1.GetImageInBase64String('png');&#10;&#10;&#9;Excel_html += "&#10;&#9;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&#10;&#9; &lt;div style='text-align: center'&gt;&lt;img src='data:image/png;base64, " + str_image + " '&gt;&lt;/div&gt;&#10;&#9;";&#10;&#9;_idx++;&#10;&#9;string_page = 32;&#10;&#9;_idx += string_page;&#10;&#10;&#9;diff_page_int = ((_idx - 1) / string_page);&#10;&#9;diff_page_real = (Real(_idx - 1) / Real(string_page));&#10;&#9;diff_page = diff_page_int == diff_page_real ? diff_page_int : (diff_page_int + 1);&#9;&#10;&#9;chart01 = oWorksheet.Charts.AddFloatingChart("Column", 0, diff_page*600, 860, 550);&#10;&#9;chart01.ValueAxis.MinValue = 0;&#10;&#9;//chart01.ValueAxis.MaxValue = 100;&#10;&#9;&#10;&#9;_idxa = 0;&#10;&#9;for (_ag in array_gr1)&#10;&#9;{&#10;&#9;&#9;series01 = chart01.AddSeries("Column", '{"' + StrReplace(_ag.str_mark, ",", '","') + '"}', true); &#10;&#9;&#9;series01.Name = _ag.name_competences;&#10;&#9;&#9;//series01.ForegroundColor = array_colors[_idxa];&#10;&#9;&#9;series01.DataLabels.ShowValue = true;&#10;&#9;&#9;series01.DataLabels.Position = "Center";&#10;&#9;&#9;_idxa++;&#10;&#9;}&#10;&#9;chart01.Title.Text = "Итоги оценки по компетенциям сотрудников"; &#10;&#9;chart01.Title.IsBold = true;&#10;&#9;chart01.LegendPosition = "Bottom";&#10;&#9;chart01.CategoryData = "{" + StrReplace(str_fio, "|", ",") + "}";&#10;&#9;chart01.CategoryAxis.TickLabels.RotationAngle = 0;&#10;&#10;&#9;chart01.PlotArea.Area.ForegroundColor = "#FFFFFF";&#10;&#9;chart01.PlotArea.Area.BackgroundColor = "#FFFFFF";&#10;&#10;&#9;chart01.ShowCategoryGriglines = true;&#9;&#10;&#9;_ind = 0;&#10;&#10;} // for (_graph in ResultArray)&#10;&#10;//3*********************************&#10;//отчет для отображения в браузере (String)&#10;Excel_html += "";&#10;// заголовок листа Excel&#10;SHEET_CAPTION = "Заголовок листа";&#10;// флаг отображать ли таблицу данных графика №3 в Excel&#10;SHOW_DATA_TABLE = false;&#10;// флаг отображать ли таблицу данных с выделением оценок с отклонением от порогового значения&#10;SHOW_DATA_TABLE_WITH_LAG = false;&#10;// пороговое значение отклонения оценки&#10;curLagValue = 1;&#10;// данные для построения графика. Элемент массива:&#10;ResultArray = Array();&#10;&#10;// заполним данные для графиков&#10;for (z = 1; z &lt;= 1; z++)&#10;{&#10; &#9;obj = Object();&#10; &#9;// id графика&#10; &#9;obj.id = z;&#10;&#9;// заголовок графика&#10;&#9;obj.name = "Итоги оценки по компетенциям";&#10;&#9;// график №3 или таблица&#10;&#9;obj.is_chart = true;&#10;&#9;// категории графика&#10;&#9;obj.categories = str_competences;&#10;&#9;// массив серий графика&#10;&#9;obj.rows = Array();&#10;&#9;//for (j = 1; j &lt;= 4; j++)&#10;&#9;j = 0;&#10;&#9;for (_ag in array_gr2)&#10;&#9;{&#10;&#9;&#9;j++;&#10; &#9;&#9;row = Object();&#10;&#9;&#9;// id серии&#10; &#9;&#9;row.obj_id = j;&#10;&#9;&#9;// название серии&#9;&#9;&#9;&#10;&#9;&#9;row.obj_name = _ag.person_fullname; &#10; &#9;&#9;// массив значений в серии&#10;&#9;&#9;row.data = Array(_ag.str_mark);&#10;&#9;&#9;row.color_index = _ag.color_cnt;&#10;&#9;&#9;obj.rows[ArrayCount(obj.rows)] = row;&#10;&#9;}&#10;&#9;ResultArray[ArrayCount(ResultArray)] = obj;&#10;}&#10;&#10;sr_ar_str = "";&#10;counterLine = ArrayCount(pasDoc.competences);&#10;counterArray = ArrayCount(array_gr2);&#10;for (_ln = 0; _ln &lt; counterLine; _ln++)&#10;{&#10;&#9;val_temp = 0;&#10;&#9;for (_ag in array_gr2)&#10;&#9;{&#10;&#9;&#9;arr_temp = String(_ag.str_mark).split(",");&#10;&#9;&#9;val_temp += Real(arr_temp[_ln]);&#10;&#9;}&#10;&#9;sr_ar_str += (sr_ar_str == "" ? "" : ",") + StrReal((val_temp / counterArray), 1);&#10;}&#10;&#10;//i = 0;&#10;&#10;for (_graph in ResultArray)&#10;{&#10;&#9;i++;&#10;&#9;Excel_html += '';&#10;&#10;&#9;oExcelDoc3 = tools.get_object_assembly('Excel');&#10;&#9;oExcelDoc3.CreateWorkBook();&#10;&#9;oWorksheet3 = oExcelDoc3.GetWorksheet(0);&#10;&#9;chart3 = oWorksheet3.Charts.AddFloatingChart("Column", 0, 0, 860, 620);&#10;&#9;chart3.ValueAxis.MinValue = 0;&#10;&#9;//chart3.ValueAxis.MaxValue = 100;&#10;&#10;&#9;array_colors3 = Array("#4472C4", "#70AD47", "#FFD34E", "#7898D6", "#D6A338", "#B0D596", "#FFFFFF");&#10;&#9;&#10;&#9;_idxa = 0;&#10;&#9;for (_ag in array_gr2)&#10;&#9;{&#10;&#9;&#9;series3 = chart3.AddSeries("Column", "{" + _ag.str_mark + "}", true); &#10;&#9;&#9;series3.Name = _ag.person_fullname;&#10;&#9;&#9;//series3.ForegroundColor = array_colors3[_idxa];&#10;&#9;&#9;series3.DataLabels.ShowValue = true;&#10;&#9;&#9;series3.DataLabels.Position = "Center";&#10;&#9;&#9;_idxa++;&#10;&#9;}&#10;&#9;&#10;&#9;// Добавляем линейный график  &#10;&#9;//oSeries = chart3.AddSeries("Line", "{" + sr_ar_str + "}", true);&#10;&#9;//oSeries.DataLabels.ShowValue = true;&#10;&#9;//oSeries.DataLabels.Position = "Below";&#10;&#9;//oSeries.Name = "Средняя оценка по подразделению";&#10;&#9;//oSeries.Area.BackgroundColor = "#DB322A";&#10;&#9;//oSeries.DataLabels.ShowValue = true;&#10;&#9;//oSeries.Border.Color = "#DB322A";&#10;&#9;//oSeries.Border.WeightPx = 5;&#10;&#9;//oSeries.DataLabels.Font.Color = "#000000";&#9;&#10;&#9;//str_srr_arr_full&#10;/*&#10;&#9;// Добавляем линейный график  &#10;&#9;oSeries_500 = chart3.AddSeries("Line", "{" + str_srr_arr_full + "}", true);&#10;&#9;oSeries_500.DataLabels.ShowValue = true;&#10;&#9;oSeries_500.DataLabels.Position = "Below";&#10;&#9;oSeries_500.Name = "Фактическая модель ТОП-500 ГО";&#10;&#9;oSeries_500.Area.BackgroundColor = "#FB7A02";&#10;&#9;oSeries_500.DataLabels.ShowValue = true;&#10;&#9;oSeries_500.Border.Color = "#FB7A02";&#10;&#9;oSeries_500.Border.WeightPx = 5;&#10;&#9;oSeries_500.DataLabels.Font.Color = "#000000";&#9;&#10;*/&#9;&#10;&#10;  chart3.Title.Text = "Итоги оценки по компетенциям"; &#10;  chart3.Title.IsBold = true;&#10;  chart3.LegendPosition = "Bottom";&#10;  chart3.CategoryData = "{" + StrReplace(StrReplace(str_competences, ",", ";"), "|", ",") + "}";&#10;  chart3.CategoryAxis.TickLabels.RotationAngle = 0;&#10;  //chart3.CategoryData.RotationAngle = 90;&#10;  &#10;  chart3.PlotArea.Area.ForegroundColor = "#FFFFFF";&#10;  chart3.PlotArea.Area.BackgroundColor = "#FFFFFF";&#10;  &#10;  chart3.ShowCategoryGriglines = true;&#10;  str_image = chart3.GetImageInBase64String('png'); &#10; &#10;Excel_html += "&#10;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&#10; &lt;div style='text-align: center'&gt;&lt;img src='data:image/png;base64, " + str_image + " '&gt;&lt;/div&gt;&#10;";&#10;&#9;_idx += string_page;&#10;&#9;diff_page_int = ((_idx - 1) / string_page);&#10;&#9;diff_page_real = (Real(_idx - 1) / Real(string_page));&#9;&#10;&#9;diff_page = diff_page_int == diff_page_real ? diff_page_int : diff_page_int + 1;&#9;&#10;&#9;&#10;&#9;chart021 = oWorksheet.Charts.AddFloatingChart("Bar", 0,  diff_page*600, 860, 550);&#9;&#10;&#9;chart021.ValueAxis.MinValue = 0;&#10;&#9;//chart021.ValueAxis.MaxValue = 100;&#10;&#9;_idxa = 0;&#10;&#9;for (_ag in array_gr2)&#10;&#9;{&#10;&#9;&#9;series31 = chart021.AddSeries("Column", '{"' + StrReplace(_ag.str_mark, ",", '","') + '"}', true); &#10;&#9;&#9;series31.Name = _ag.person_fullname;&#10;&#9;&#9;//series31.ForegroundColor = array_colors3[_idxa];&#10;&#9;&#9;series31.DataLabels.ShowValue = true;&#10;&#9;&#9;series31.DataLabels.Position = "Center";&#10;&#9;&#9;_idxa++;&#10;&#9;}&#9;&#10;&#9;// Добавляем линейный график  &#10;&#9;oSeries111 = chart021.AddSeries("Line", '{"' + StrReplace(sr_ar_str, ",", '","') + '"}', true);&#10;&#9;oSeries111.DataLabels.ShowValue = true;&#10;&#9;oSeries111.DataLabels.Position = "Below";&#10;&#9;oSeries111.Name = "Средняя оценка по подразделению";&#10;&#9;oSeries111.Area.BackgroundColor = "#DB322A";&#10;&#9;oSeries111.DataLabels.ShowValue = true;&#10;&#9;oSeries111.Border.Color = "#DB322A";&#10;&#9;//oSeries111.Border.WeightPx = 5;&#10;&#9;oSeries111.DataLabels.Font.Color = "#000000";&#10;/*&#10;&#9;// Добавляем линейный график  &#10;&#9;oSeries_500_Excel = chart021.AddSeries("Line", "{" + str_srr_arr_full + "}", true);&#10;&#9;oSeries_500_Excel.DataLabels.ShowValue = true;&#10;&#9;oSeries_500_Excel.DataLabels.Position = "Below";&#10;&#9;oSeries_500_Excel.Name = "Фактическая модель ТОП-500 ГО";&#10;&#9;oSeries_500_Excel.Area.BackgroundColor = "#FB7A02";&#10;&#9;oSeries_500_Excel.DataLabels.ShowValue = true;&#10;&#9;oSeries_500_Excel.Border.Color = "#FB7A02";&#10;&#9;oSeries_500_Excel.Border.WeightPx = 5;&#10;&#9;oSeries_500_Excel.DataLabels.Font.Color = "#000000";&#9;&#9;&#10;*/&#10;  chart021.Title.Text = "Итоги оценки по компетенциям"; &#10;  chart021.Title.IsBold = true;&#10;  chart021.LegendPosition = "Bottom";&#10;  //chart021.CategoryData = "{" + StrReplace(StrReplace(str_competences, ",", ";"), "|", ",") + "}";&#10;  chart021.CategoryAxis.TickLabels.RotationAngle = 0;&#10;  &#10;  chart021.PlotArea.Area.ForegroundColor = "#FFFFFF";&#10;  chart021.PlotArea.Area.BackgroundColor = "#FFFFFF";&#10;  &#10;  chart021.ShowCategoryGriglines = true;&#9;&#10;&#10;} // for (_graph in ResultArray)&#10;&#10;//3*********************************&#10;&#10;Excel_html_Export += "";&#10;&#10;//Excel_html_Export = Excel_html_Export_Up + Excel_html + Excel_html_Export;&#10;&#10;&#9;//tools_web.set_user_data( "excel_html_" + curUserID , { 'html': Excel_html_Export  }, 86000 ); &#10;&#9;Response.Write(Excel_html); &#10;&#10;&#9;oExcelDoc.SaveAs(temp_folder + "\\" + file_name);&#10;&#10;} // if ( isFilter )&#10;%&gt;</html>
			<use_session_cache>false</use_session_cache>
			<cwt_type>default</cwt_type>
			<out_type>undefined</out_type>
			<wvars>
				<wvar>
					<name>visible_legend</name>
					<value>1</value>
					<type>bool</type>
					<description>Показывать интерпретацию результатов</description>
					<position>1</position>
				</wvar>
				<wvar>
					<name>legend_color</name>
					<value>{ min: 0, max: 1, color: '#CC0000', title: 'Не проявляется' },{ min: 1, max: 2, color: '#F8C000', title: 'Слабый' },{ min: 2, max: 3, color: '#FFFF00', title: 'Базовый' },{ min: 3, max: 4, color: '#00FF00', title: 'Сильный' },{ min: 4, max: 5, color: '#008000', title: 'Лидерский' }</value>
					<type>string</type>
					<position>2</position>
				</wvar>
			</wvars>
			<access>
				<access_level>0</access_level>
			</access>
			<doc_info>
				<creation>
					<user_login>user1</user_login>
					<user_id>6148914691236517121</user_id>
					<date>2013-12-04T08:56:49Z</date>
				</creation>
				<modification>
					<user_login>admin</user_login>
					<user_id>6148914691236517121</user_id>
					<date>2021-06-28T13:29:59Z</date>
				</modification>
			</doc_info>
			<is_std>false</is_std>
			<changed>false</changed>
			<is_enabled>true</is_enabled>
		</custom_web_template>
		<custom_web_template>
			<id>0x4982C92955A96393</id>
			<code>websoft_report_360_5</code>
			<name>Результаты оценки сотрудников (вариант 2)</name>
			<category>websoft</category>
			<exec_code>
				<code_text>&lt;%&#10;// --------------------------------------------------------------------------------------------------------------------------------&#10;// автор:   Ali Dulatov&#10;// создан:  12.12.2013&#10;// изменен: 25.03.2013 (AF) -&#10;//              1. При выгрузке отчета в excel - в значениях руководителя и эксперта вместо запятой точки.&#10;//              2. В итоговой оценке вместо значения набор цифр.&#10;// -----------------------------------------------------------Описание-------------------------------------------------------------&#10;// Отчет Результаты оценки сотрудников (Универсальный отчет)&#10;// -----------------------------------------------------------Предупреждение-------------------------------------------------------&#10;// &lt;нет&gt;&#10;// -----------------------------------------------------------Параметры агента-----------------------------------------------------&#10;// &lt;нет&gt;&#10;// -----------------------------------------------------------Константы------------------------------------------------------------&#10;// &lt;нет&gt;&#10;// --------------------------------------------------------------------------------------------------------------------------------&#10;&#10;&#10;alert ("uni-estimation-coll-results - started");&#10;swith_col=0;&#10;if (Trim(uni_type_estimation) == "1")&#10;{&#10;    uni_type_estimation = true; // флаг, показывающий, оценка проходит по отличному от стандарта способу (истина=1)&#10;}&#10;else&#10;{&#10;    uni_type_estimation = false;&#10;}&#10;if (Trim(show_names_with_marks) == "1")&#10;{&#10;    show_names_with_marks = true;// флаг, показывающий, что нужно кроме оценок выводить еще и  имена оценивающих (истина=1)&#10;}&#10;else&#10;{&#10;    show_names_with_marks = false;&#10;}&#10;//-----------------------------------------&#10;_export_pic=Array();&#10;kk=0;&#10;try&#10;{&#10;    _selected_proc = Request.Query.GetProperty("proc_id");&#10;}&#10;catch ( e )&#10;{&#10;    _selected_proc = '0';&#10;}&#10;//uni-estimation-coll-results&#10;//custom_web_template&#10;cust_elem = ArrayOptFirstElem(XQuery("for $elem in custom_web_templates where $elem/code = 'uni-estimation-coll-results' return $elem"));&#10;if (cust_elem != undefined)&#10;{&#10;&#9;curObjectID = cust_elem.id;&#10;}&#10;Adr_String = "view_doc.html?mode=doc_type&amp;doc_id=" + curDocID + "&amp;object_id=" + Request.Query.GetOptProperty("custom_web_template_id",curObjectID);&#10;&#10;proc_Array = Array();&#10;id_Array = String(_selected_proc).split(';');&#10;for (_id in id_Array)&#10;{&#10;    if (Trim(_id) != '')&#10;    {&#10;        _Array = XQuery( "for $obj in assessment_appraises where $obj/id=" + _id + " return $obj");&#10;        proc_Array =ArrayUnion(proc_Array,_Array);&#10;    }&#10;}&#10;_ass_first = ArrayOptFirstElem( proc_Array ); &#10;ass_name = '&amp;nbsp;';&#10;if (_ass_first != undefined) &#10;{ &#10;&#9;ass_name = "Процедура оценки: " + _ass_first.name;&#10;}&#10;%&gt;&#10;&#10;&lt;script language="JavaScript"&gt;&#10;    //&lt;!--&#10;&#10;    var selected_object_ids = '';&#10;    function doSelect(sel,selected_object_ids,_workflow_id)&#10;    {&#10;&#10;        var pars=new Object();&#10;        var strAttr="status:no;dialogWidth:780px;dialogHeight:550px;help:no;resizable:1";&#10;        pars.selected_object_ids = selected_object_ids;&#10;&#10;        pars.can_be_empty = false;&#10;        pars.show_all = true;&#10;/*&#10;        if (_workflow_id!='')&#10;        {&#10;            xShowModalDialog( 'dlg_select.html?doc_id=&lt;%=curDocID%&gt;&amp;catalog_name=assessment_appraise&amp;typein=1&amp;multi_select=1&amp;xquery_qual=' + escape('$elem/workflow_id = '+_workflow_id+' and $elem/is_model=false()'), pars, strAttr );&#10;        }&#10;        else&#10;        {&#10;            xShowModalDialog( 'dlg_select.html?doc_id=&lt;%=curDocID%&gt;&amp;catalog_name=assessment_appraise&amp;typein=1&amp;multi_select=1', pars, strAttr );&#10;        }&#10;        if ( ! pars.handle )&#10;            return null;&#10;        sel.value=pars.selected_object_ids;&#10;        selected_object_ids = pars.selected_object_ids;&#10;        window.location.href='&lt;%=Adr_String%&gt;' + '&amp;proc_id=' + document.getElementById('proc_id').value;&#10;*/&#10;&#9;&#9;if (_workflow_id!='')&#10;&#9;&#9;{&#10;&#9;&#9;&#9;//xShowModalDialog( 'dlg_select.html?doc_id=&lt;%=curDocID%&gt;&amp;catalog_name=assessment_appraise&amp;typein=1&amp;multi_select=0&amp;xquery_qual=' + escape('$elem/workflow_id = '+_workflow_id+' and $elem/is_model=false()'), pars, strAttr );&#10;&#9;&#9;&#9;xShowSelectDialog(&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;"catalog_name": "assessment_appraise",&#10;&#9;&#9;&#9;&#9;"multi_select": 1,&#10;&#9;&#9;&#9;&#9;"can_be_empty": "false",&#10;&#9;&#9;&#9;&#9;"disp_filter": "false",&#10;&#9;&#9;&#9;&#9;"check_access": "false",&#10;&#9;&#9;&#9;&#9;"display_object_ids": "",&#10;&#9;&#9;&#9;&#9;"selected_object_ids": selected_object_ids,&#10;&#9;&#9;&#9;&#9;"typein": 1,&#10;&#9;&#9;&#9;&#9;"show_all": "true",&#10;&#9;&#9;&#9;&#9;"xquery_qual": escape('$elem/workflow_id = '+_workflow_id+' and $elem/is_model=false()')&#10;&#9;&#9;&#9;}, &#10;&#9;&#9;&#9;function(oParams)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;if (!oParams.handle) return null;&#10;&#9;&#9;&#9;&#9;sel.value=oParams.selected_object_ids;&#10;&#9;&#9;&#9;&#9;selected_object_ids = oParams.selected_object_ids;&#10;&#9;&#9;&#9;&#9;window.location.href='&lt;%=Adr_String%&gt;' + '&amp;proc_id=' + document.getElementById('proc_id').value;&#10;&#9;&#9;&#9;});&#10;&#9;&#9;}&#10;&#9;&#9;else&#10;&#9;&#9;{&#10;&#9;&#9;&#9;//xShowModalDialog( 'dlg_select.html?doc_id=&lt;%=curDocID%&gt;&amp;catalog_name=assessment_appraise&amp;typein=1&amp;multi_select=0', pars, strAttr );&#10;&#9;&#9;&#9;xShowSelectDialog(&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;"catalog_name": "assessment_appraise",&#10;&#9;&#9;&#9;&#9;"multi_select": 0,&#10;&#9;&#9;&#9;&#9;"can_be_empty": "false",&#10;&#9;&#9;&#9;&#9;"disp_filter": "false",&#10;&#9;&#9;&#9;&#9;"check_access": "false",&#10;&#9;&#9;&#9;&#9;"display_object_ids": "",&#10;&#9;&#9;&#9;&#9;"show_all": "true",&#10;&#9;&#9;&#9;&#9;"selected_object_ids": selected_object_ids&#10;&#9;&#9;&#9;}, &#10;&#9;&#9;&#9;function(oParams)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;if (!oParams.handle) return null;&#10;&#9;&#9;&#9;&#9;sel.value=oParams.selected_object_ids;&#10;&#9;&#9;&#9;&#9;selected_object_ids = oParams.selected_object_ids;&#10;&#9;&#9;&#9;&#9;window.location.href='&lt;%=Adr_String%&gt;' + '&amp;proc_id=' + document.getElementById('proc_id').value;&#10;&#9;&#9;&#9;});&#9;&#9;&#9;&#9;&#10;&#9;&#9;}&#10;    }&#10;    //--&gt;&#10;&lt;/script&gt;&#10;&#10;&lt;TABLE width="100%" cellspacing="0" cellpadding="4" CLASS="tableBorder"&gt;&#10;    &lt;TR&gt;&#10;        &lt;TD WIDTH="200" STYLE="font-weight:normal; font-size:larger"&gt;&#10;            &lt;input type='hidden'  id='proc_id' name='proc_id' value='&lt;%=_selected_proc%&gt;'/&gt;&#10;            &lt;input align="right" type="button" id="proc_btn" value="Выбрать процедуры" onClick="doSelect(document.getElementById('proc_id'),'&lt;%=_selected_proc%&gt;','')" class="inputButton" onMouseOver="this.className='inputButtonOver';" onMouseOut="this.className='inputButton';"&gt;&lt;/TD&gt;&#10;&#9;&#9;&lt;TD&gt;&lt;%=ass_name%&gt;&lt;/TD&gt;&#10;    &lt;/TR&gt;&#10;&lt;/TABLE&gt;&#10;&lt;br/&gt;&#10;&lt;%&#10;_persons_Array=Array();&#10;for (procElem in proc_Array)&#10;{&#10;    procDoc=OpenDoc(UrlFromDocID(procElem.id)).TopElem;&#10;    for (_person in procDoc.auditorys)&#10;    {&#10;        SELF_COUNT = 0;&#10;        BOSS_COUNT = 0;&#10;        FUNC_COUNT = 0;&#10;        EXPERT_COUNT = 0;&#10;        STAFF_COUNT = 0;&#10;        COLL_COUNT = 0;&#10;&#10;        cur_MyObject=new Object;&#10;        cur_MyObject.person_id=_person.person_id;&#10;        _name=_person.person_name;&#10;        FIO=String(Trim(_name)).split(' ');&#10;        try&#10;        {&#10;            _name=PersonShortName(FIO[0],FIO[1],FIO[2]);&#10;        }&#10;        catch(e)&#10;        {&#10;&#10;        }&#10;        if (Trim(_name)=='') _name='&amp;nbsp;';&#10;        cur_MyObject.person_name=_name;&#10;        cur_MyObject.proc_name=procElem.name;&#10;        cur_MyObject.boss_score_original=0;&#10;        cur_MyObject.boss_score=0;&#10;        cur_MyObject.self_score=0;&#10;        cur_MyObject.total=0;&#10;        cur_MyObject.expertsArr=Array();&#10;        cur_MyObject.funcArr=Array();&#10;        cur_MyObject.collArr=Array();&#10;        cur_MyObject.staffArr=Array();&#10;        cur_MyObject.org='&amp;nbsp;';&#10;        cur_MyObject.org_id='';&#10;&#10;        _aspl=XQuery("for $aspl in assessment_plans where $aspl/person_id = " + _person.person_id + " and $aspl/assessment_appraise_id = " + procElem.id + " return $aspl");&#10;&#10;        _aspl_first = ArrayOptFirstElem( _aspl );&#10;        _boss_id=0;&#10;        if ( _aspl_first != undefined )&#10;        {&#10;            _boss_id=_aspl_first.boss_id;&#10;            _asplDoc=OpenDoc(UrlFromDocID(_aspl_first.id)).TopElem;&#10;        }&#10;&#10;        _pas = XQuery("for $pa in pas where $pa/person_id = " + _person.person_id + " and $pa/assessment_appraise_id = " + procElem.id + " return $pa");&#10;        _pasArray=Array();&#10;        _selfPA = undefined;&#10;        _participantPA = undefined;&#10;        _funcPA = undefined;&#10;        _profile_id = 0;&#10;        _folder='';&#10;        for (_pa in _pas)&#10;        {&#10;            curElem=new Object;&#10;            curElem.curPA=0;&#10;            curElem.flag=0;&#10;            switch(_pa.status)&#10;            {&#10;                case "self":&#10;                    curElem.flag=1;&#10;                    SELF_COUNT = 1;&#10;                    break;&#10;                case "manager":&#10;                    if (_pa.expert_person_id == _boss_id)&#10;                    {&#10;                        BOSS_COUNT = 1;&#10;                        curElem.flag=2;&#10;&#10;                    }&#10;                    else&#10;                    {&#10;                        FUNC_COUNT ++;&#10;                        curElem.flag=4;&#10;                    }&#10;                    break;&#10;                case "expert":&#10;                    EXPERT_COUNT++;&#10;                    curElem.flag=3;&#10;                    break;&#10;                case "staff":&#10;                    STAFF_COUNT++;&#10;                    curElem.flag=5;&#10;                    break;&#10;                case "coll":&#10;                    COLL_COUNT++;&#10;                    curElem.flag=6;&#10;                    break;&#10;            }&#10;            curElem.curPA=OpenDoc(UrlFromDocID(_pa.id)).TopElem;&#10;            curElem.profile_id = curElem.curPA.competence_profile_id;&#10;            curElem.prof_codes =curElem.curPA.competence_codes;&#10;            curElem.participantPA = curElem.curPA.competences;&#10;            curElem.folder=_pa.id;&#10;            _pasArray[ArrayCount(_pasArray)]=curElem;&#10;&#10;        }&#10;&#10;        for (i=0;i&lt;EXPERT_COUNT;i++)&#10;        {&#10;            temp_Object=new Object;&#10;            temp_Object.name='&amp;nbsp;';&#10;            temp_Object.mark=0;&#10;            temp_Object.name_mark=0;&#10;            cur_MyObject.expertsArr[ArrayCount(cur_MyObject.expertsArr)]=temp_Object;&#10;        }&#10;&#10;        for (i=0;i&lt;FUNC_COUNT;i++)&#10;        {&#10;            temp_Object=new Object;&#10;            temp_Object.name='&amp;nbsp;';&#10;            temp_Object.mark=0;&#10;            temp_Object.name_mark=0;&#10;            cur_MyObject.funcArr[ArrayCount(cur_MyObject.funcArr)]=temp_Object;&#10;        }&#10;&#10;        for (i=0;i&lt;STAFF_COUNT;i++)&#10;        {&#10;            temp_Object=new Object;&#10;            temp_Object.name='&amp;nbsp;';&#10;            temp_Object.mark=0;&#10;            temp_Object.name_mark=0;&#10;            cur_MyObject.staffArr[ArrayCount(cur_MyObject.staffArr)]=temp_Object;&#10;        }&#10;&#10;        for (i=0;i&lt;COLL_COUNT;i++)&#10;        {&#10;            temp_Object=new Object;&#10;            temp_Object.name='&amp;nbsp;';&#10;            temp_Object.mark=0;&#10;            temp_Object.name_mark=0;&#10;            cur_MyObject.collArr[ArrayCount(cur_MyObject.collArr)]=temp_Object;&#10;        }&#10;&#10;        _SHIFT = 2;&#10;        SELF_WEIGHT = 100;&#9;BOSS_WEIGHT = 100;&#9;FUNC_WEIGHT = 100;&#9;EXPERT_WEIGHT = 100; COLL_WEIGHT = 100;&#9;STAFF_WEIGHT = 100;&#10;        if (uni_type_estimation==true)&#10;        {&#10;            //По умолчанию&#10;            SELF_WEIGHT = 10;&#9;BOSS_WEIGHT = 45;&#9;FUNC_WEIGHT = 45;&#9;EXPERT_WEIGHT = 0;&#10;&#10;            //-----------&#10;            weight_table_CODE="weight_table";&#10;            weight_table_Form = ArrayOptFirstElem( XQuery("for $elem in custom_web_templates where $elem/code = '"+weight_table_CODE+"' return $elem") );&#10;            if (weight_table_Form != undefined)&#10;            {&#10;                weight_table_Form = OpenDoc(UrlFromDocID(weight_table_Form.PrimaryKey)).TopElem;&#10;&#10;                _anti_str = "";&#10;                for (_wvar in weight_table_Form.wvars)&#9;_anti_str = _anti_str + _wvar.name + " = '" + HtmlEncode(_wvar.value) + "'; ";&#10;                EvalCodePage( "&lt;" + "%" + _anti_str + "%" + "&gt;" + weight_table_Form.html.Value)&#10;            }&#10;            else&#10;            {&#10;//                Response.Write("&lt;font color='red' stle='font-weight: boldest'&gt;*Ошибка: проблемы с настраиваемым web-шаблоном " +weight_table_CODE+"*&lt;/font&gt;");&#10;            }&#10;            //-------------&#10;        }&#10;        competenceArray = Array();&#10;        _boss_competenceArray = Array();&#10;        numExp=0;&#10;        numFunc=0;&#10;        numStaff=0;&#10;        numColl=0;&#10;        _comp_count=0;&#10;&#10;        _pasArray=ArraySort(_pasArray,'flag','+');&#10;        for (_elem in _pasArray)&#10;        {&#10;            _expert_found=false;&#10;            _funcArr_found=false;&#10;            _staffArr_found=false;&#10;            _collArr_found=false;&#10;            try&#10;            {&#10;                _curProfile = OpenDoc(UrlFromDocID(_elem.profile_id)).TopElem.competences;&#10;            }&#10;            catch(_shit_)&#10;            {&#10;                _curProfile = undefined;&#10;            }&#10;&#10;            for(_comp in _elem.curPA.competences)&#10;            {&#10;                _curCompetence = ArrayOptFind(competenceArray, 'id == _comp.PrimaryKey');&#10;                if (_curCompetence == undefined)&#10;                {&#10;                    try&#10;                    {&#10;                        _curCompetenceDoc = OpenDoc(UrlFromDocID(_comp.PrimaryKey)).TopElem;&#10;                    }&#10;                    catch(_shit_)&#10;                    {&#10;                        continue;&#10;                    }&#10;&#10;                }&#10;                _weight = 0;&#10;//Response.Write(' id ='+_comp.competence_id +' name='+_comp.competence_id.ForeignElem.name +'&lt;br/&gt;');&#10;                try&#10;                {&#10;                    _weight=Real(_comp.weight)/100.0;&#10;                }&#10;                catch(dd)&#10;                {&#10;                }&#10;                if (_comp.mark == "" || _comp.mark == "N")&#10;                    _score = null;&#10;                else&#10;                {&#10;                    _scale = _curCompetenceDoc.scales.GetOptChildByKey(_comp.mark);&#10;                    if (_scale != undefined)&#10;                    {&#10;&#10;                        if (uni_type_estimation==true)&#10;                        {&#10;                            _score = _SHIFT-_scale.ChildIndex ;&#10;                        }&#10;                        else&#10;                        {&#10;                            try&#10;                            {&#10;                                //Response.Write(StrLen(_comp.mark));&#10;                                if (StrLen(Real(_comp.mark))==StrLen(_comp.mark))&#10;                                {&#10;                                    _score = Real(_comp.mark);&#10;                                }&#10;                                else&#10;                                {&#10;                                    cancel();&#10;                                }&#10;                            }&#10;                            catch(ex)&#10;                            {&#10;                                try&#10;                                {&#10;                                    _score = Real(_scale.percent);&#10;                                }&#10;                                catch(jjh)&#10;                                {&#10;                                    _score = _scale.ChildIndex+1;&#10;                                }&#10;                            }&#10;                        }&#10;                    }&#10;                    else&#10;                    {&#10;                        _score = 0;&#10;                        try&#10;                        {&#10;                            //Response.Write(StrLen(_comp.mark));&#10;                            if (StrLen(Real(_comp.mark))==StrLen(_comp.mark))&#10;                            {&#10;                                _score = Real(_comp.mark);&#10;                            }&#10;&#10;                        }&#10;                        catch(ex)&#10;                        {&#10;                        }&#10;                    }&#10;&#10;                }&#10;&#10;                switch(_elem.flag)&#10;                {&#10;                    case 1:&#10;                        if (_score == null) _score = 0;&#10;                        cur_MyObject.self_score = cur_MyObject.self_score+(Real(_score)*_weight);&#10;                        break;&#10;                    case 2:&#10;                        if (_score == null) _score = 0;&#10;                        cur_MyObject.boss_score = cur_MyObject.boss_score+(Real(_score)*_weight);&#10;                        cur_comp_Object=new Object;&#10;                        cur_comp_Object.comp_id=_comp.PrimaryKey;&#10;                        cur_comp_Object.name=_comp.competence_id.ForeignElem.name;&#10;                        cur_comp_Object.score=Real(_score);&#10;                        _boss_competenceArray[ArrayCount(_boss_competenceArray)]=cur_comp_Object;&#10;                        cur_MyObject.boss_score_original=cur_MyObject.boss_score_original+_score;&#10;                        _comp_count++;&#10;                        break;&#10;                    case 3:&#10;                    {&#10;                        if (uni_type_estimation==true)&#10;                        {&#10;                            if (_score == null)&#10;                            {&#10;                                for (_boss_comp in _boss_competenceArray)&#10;                                {&#10;                                    if (Int(_comp.PrimaryKey)==Int(_boss_comp.comp_id))&#10;                                    {&#10;                                        _score=_boss_comp.score;&#10;                                        break;&#10;                                    }&#10;                                }&#10;&#10;                            }&#10;                        }&#10;                        if (_score == null)&#10;                        {&#10;                            _score = 0;&#10;                        }&#10;                        cur_MyObject.expertsArr[numExp].mark=cur_MyObject.expertsArr[numExp].mark+(Real(_score)*_weight);&#10;                        _persons_temp_name=_elem.curPA.expert_person_id.sd.fullname;&#10;                        FIO=String(Trim(_persons_temp_name)).split(' ');&#10;                        try&#10;                        {&#10;                            _persons_short_name=PersonShortName(FIO[0],FIO[1],FIO[2]);&#10;                        }&#10;                        catch(e)&#10;                        {&#10;                            _persons_short_name=_persons_temp_name;&#10;                        }&#10;                        cur_MyObject.expertsArr[numExp].name=_persons_short_name;&#10;                        _expert_found=true;&#10;                        break;&#10;                    }&#10;                    case 4:&#10;                    {&#10;                        if (uni_type_estimation==true)&#10;                        {&#10;                            if (_score == null)&#10;                            {&#10;                                for (_boss_comp in _boss_competenceArray)&#10;                                {&#10;                                    if (Int(_comp.PrimaryKey)==Int(_boss_comp.comp_id))&#10;                                    {&#10;                                        _score=_boss_comp.score;&#10;                                        break;&#10;                                    }&#10;                                }&#10;&#10;&#10;                            }&#10;                        }&#10;                        if (_score == null) _score = 0;&#10;                        cur_MyObject.funcArr[numFunc].mark=cur_MyObject.funcArr[numFunc].mark+(Real(_score)*_weight);&#10;                        _persons_temp_name=_elem.curPA.expert_person_id.sd.fullname;&#10;                        FIO=String(Trim(_persons_temp_name)).split(' ');&#10;                        try&#10;                        {&#10;                            _persons_short_name=PersonShortName(FIO[0],FIO[1],FIO[2]);&#10;                        }&#10;                        catch(e)&#10;                        {&#10;                            _persons_short_name=_persons_temp_name;&#10;                        }&#10;                        cur_MyObject.funcArr[numFunc].name=_persons_short_name;&#10;                        _funcArr_found=true;&#10;                        break;&#10;                    }&#10;                    case 5:&#10;                    {&#10;                        if (uni_type_estimation==true)&#10;                        {&#10;                            if (_score == null)&#10;                            {&#10;                                for (_boss_comp in _boss_competenceArray)&#10;                                {&#10;                                    if (Int(_comp.PrimaryKey)==Int(_boss_comp.comp_id))&#10;                                    {&#10;                                        _score=_boss_comp.score;&#10;                                        break;&#10;                                    }&#10;                                }&#10;&#10;&#10;                            }&#10;                        }&#10;                        if (_score == null) _score = 0;&#10;                        cur_MyObject.staffArr[numStaff].mark=cur_MyObject.staffArr[numStaff].mark+(Real(_score)*_weight);&#10;                        _persons_temp_name=_elem.curPA.expert_person_id.sd.fullname;&#10;                        FIO=String(Trim(_persons_temp_name)).split(' ');&#10;                        try&#10;                        {&#10;                            _persons_short_name=PersonShortName(FIO[0],FIO[1],FIO[2]);&#10;                        }&#10;                        catch(e)&#10;                        {&#10;                            _persons_short_name=_persons_temp_name;&#10;                        }&#10;                        cur_MyObject.staffArr[numStaff].name=_persons_short_name;&#10;                        _staffArr_found=true;&#10;                        break;&#10;                    }&#10;                    case 6:&#10;                    {&#10;                        if (uni_type_estimation==true)&#10;                        {&#10;                            if (_score == null)&#10;                            {&#10;                                for (_boss_comp in _boss_competenceArray)&#10;                                {&#10;                                    if (Int(_comp.PrimaryKey)==Int(_boss_comp.comp_id))&#10;                                    {&#10;                                        _score=_boss_comp.score;&#10;                                        break;&#10;                                    }&#10;                                }&#10;&#10;&#10;                            }&#10;                        }&#10;                        if (_score == null) _score = 0;&#10;                        cur_MyObject.collArr[numColl].mark=cur_MyObject.collArr[numColl].mark+(Real(_score)*_weight);&#10;                        _persons_temp_name=_elem.curPA.expert_person_id.sd.fullname;&#10;                        FIO=String(Trim(_persons_temp_name)).split(' ');&#10;                        try&#10;                        {&#10;                            _persons_short_name=PersonShortName(FIO[0],FIO[1],FIO[2]);&#10;                        }&#10;                        catch(e)&#10;                        {&#10;                            _persons_short_name=_persons_temp_name;&#10;                        }&#10;                        cur_MyObject.collArr[numColl].name=_persons_short_name;&#10;                        _collArr_found=true;&#10;                        break;&#10;                    }&#10;                }&#10;&#10;            }&#10;            if (_expert_found)&#10;            {&#10;                numExp++;&#10;            }&#10;            if (_funcArr_found)&#10;            {&#10;                numFunc++;&#10;            }&#10;            if (_staffArr_found)&#10;            {&#10;                numStaff++;&#10;            }&#10;            if (_collArr_found)&#10;            {&#10;                numColl++;&#10;            }&#10;        }&#10;&#10;        if (_comp_count&lt;0)&#10;        {&#10;            cur_MyObject.total=0;&#10;        }&#10;        else&#10;        {&#10;&#10;            cur_MyObject.total=(cur_MyObject.boss_score*Real(BOSS_WEIGHT) / 100.0)+(cur_MyObject.self_score*Real(SELF_WEIGHT) / 100.0);&#10;&#10;            for (i=0;i&lt;EXPERT_COUNT;i++)&#10;            {&#10;&#10;                cur_MyObject.total=cur_MyObject.total+(Real(cur_MyObject.expertsArr[i].mark)*Real(EXPERT_WEIGHT) / 100.0);&#10;                cur_MyObject.expertsArr[i].mark =StrReal(cur_MyObject.expertsArr[i].mark, 2);&#10;                if (show_names_with_marks==true)&#10;                {&#10;                    cur_MyObject.expertsArr[i].name_mark =StrReplace(String(cur_MyObject.expertsArr[i].mark),'.',',')+'&lt;br/&gt;'+cur_MyObject.expertsArr[i].name;&#10;                }&#10;                else&#10;                {&#10;                    cur_MyObject.expertsArr[i].name_mark =StrReplace(String(cur_MyObject.expertsArr[i].mark),'.',',');&#10;                }&#10;&#10;            }&#10;&#10;&#10;            for (i=0;i&lt;FUNC_COUNT;i++)&#10;            {&#10;                cur_MyObject.total=cur_MyObject.total+(Real(cur_MyObject.funcArr[i].mark)*Real(FUNC_WEIGHT) / 100.0);&#10;                cur_MyObject.funcArr[i].mark =StrReal(cur_MyObject.funcArr[i].mark, 2);&#10;                if (show_names_with_marks==true)&#10;                {&#10;                    cur_MyObject.funcArr[i].name_mark =StrReplace(String(cur_MyObject.funcArr[i].mark),'.',',')+'&lt;br/&gt;'+cur_MyObject.funcArr[i].name;&#10;                }&#10;                else&#10;                {&#10;                    cur_MyObject.funcArr[i].name_mark =StrReplace(String(cur_MyObject.funcArr[i].mark),'.',',');&#10;                }&#10;            }&#10;&#10;            for (i=0;i&lt;STAFF_COUNT;i++)&#10;            {&#10;                cur_MyObject.total=cur_MyObject.total+(Real(cur_MyObject.staffArr[i].mark)*Real(STAFF_WEIGHT) / 100.0);&#10;                cur_MyObject.staffArr[i].mark =StrReal(cur_MyObject.staffArr[i].mark, 2);&#10;                if (show_names_with_marks==true)&#10;                {&#10;                    cur_MyObject.staffArr[i].name_mark =StrReplace(String(cur_MyObject.staffArr[i].mark),'.',',')+'&lt;br/&gt;'+cur_MyObject.staffArr[i].name;&#10;                }&#10;                else&#10;                {&#10;                    cur_MyObject.staffArr[i].name_mark =StrReplace(String(cur_MyObject.staffArr[i].mark),'.',',');&#10;                }&#10;            }&#10;&#10;            for (i=0;i&lt;COLL_COUNT;i++)&#10;            {&#10;                cur_MyObject.total=cur_MyObject.total+(Real(cur_MyObject.collArr[i].mark)*Real(COLL_WEIGHT) / 100.0);&#10;                cur_MyObject.collArr[i].mark =StrReal(cur_MyObject.collArr[i].mark, 2);&#10;                if (show_names_with_marks==true)&#10;                {&#10;                    cur_MyObject.collArr[i].name_mark =StrReplace(String(cur_MyObject.collArr[i].mark),'.',',')+'&lt;br/&gt;'+cur_MyObject.collArr[i].name;&#10;                }&#10;                else&#10;                {&#10;                    cur_MyObject.collArr[i].name_mark =StrReplace(String(cur_MyObject.collArr[i].mark),'.',',');&#10;                }&#10;            }&#10;&#10;            cur_MyObject.boss_score=StrReal(cur_MyObject.boss_score);&#10;            cur_MyObject.self_score=StrReal(cur_MyObject.self_score);&#10;            cur_MyObject.total=StrReal(cur_MyObject.total, 2);&#10;&#10;&#10;        }&#10;        cur_MyObject.funcCount=FUNC_COUNT;&#10;        cur_MyObject.expCount=EXPERT_COUNT;&#10;        cur_MyObject.staffCount=STAFF_COUNT;&#10;        cur_MyObject.collCount=COLL_COUNT;&#10;        _persons_Array[ArrayCount(_persons_Array)]=cur_MyObject;&#10;    }&#10;}&#10;if (ArrayCount(_persons_Array)&gt;0)&#10;{&#10;    //-----------&#10;    Additional_Report_part2_CODE="uni-estimation-coll-results-part2";&#10;    Additional_Report_part2_Form = ArrayOptFirstElem( XQuery("for $elem in custom_web_templates where $elem/code = '"+Additional_Report_part2_CODE+"' return $elem") );&#10;&#10;    if (Additional_Report_part2_Form != undefined)&#10;    {&#10;        Additional_Report_part2_Form = OpenDoc(UrlFromDocID(Additional_Report_part2_Form.PrimaryKey)).TopElem;&#10;&#10;        _anti_str = "";&#10;        for (_wvar in Additional_Report_part2_Form.wvars)&#9;_anti_str = _anti_str + _wvar.name + " = '" + HtmlEncode(_wvar.value) + "'; ";&#10;        _graph_web_template_found=true;&#10;        Response.Write(EvalCodePage( "&lt;" + "%" + _anti_str + "%" + "&gt;" + Additional_Report_part2_Form.html.Value));&#10;    }&#10;    else&#10;    {&#10;        Response.Write("&lt;font color='red' stle='font-weight: boldest'&gt;*Ошибка: проблемы с настраиваемым web-шаблоном " +Additional_Report_part2_CODE+". Отчет не будет отображаться.*&lt;/font&gt;");&#10;    }&#10;    i=0;&#10;}&#10;%&gt;</code_text>
			</exec_code>
			<html>&lt;%&#10;// --------------------------------------------------------------------------------------------------------------------------------&#10;// автор:   Ali Dulatov&#10;// создан:  12.12.2013&#10;// изменен: 25.03.2013 (AF) -&#10;//              1. При выгрузке отчета в excel - в значениях руководителя и эксперта вместо запятой точки.&#10;//              2. В итоговой оценке вместо значения набор цифр.&#10;// -----------------------------------------------------------Описание-------------------------------------------------------------&#10;// Отчет Результаты оценки сотрудников (Универсальный отчет)&#10;// -----------------------------------------------------------Предупреждение-------------------------------------------------------&#10;// &lt;нет&gt;&#10;// -----------------------------------------------------------Параметры агента-----------------------------------------------------&#10;// &lt;нет&gt;&#10;// -----------------------------------------------------------Константы------------------------------------------------------------&#10;// &lt;нет&gt;&#10;// --------------------------------------------------------------------------------------------------------------------------------&#10;&#10;&#10;alert ("uni-estimation-coll-results - started");&#10;swith_col=0;&#10;if (Trim(uni_type_estimation) == "1")&#10;{&#10;    uni_type_estimation = true; // флаг, показывающий, оценка проходит по отличному от стандарта способу (истина=1)&#10;}&#10;else&#10;{&#10;    uni_type_estimation = false;&#10;}&#10;if (Trim(show_names_with_marks) == "1")&#10;{&#10;    show_names_with_marks = true;// флаг, показывающий, что нужно кроме оценок выводить еще и  имена оценивающих (истина=1)&#10;}&#10;else&#10;{&#10;    show_names_with_marks = false;&#10;}&#10;//-----------------------------------------&#10;_export_pic=Array();&#10;kk=0;&#10;try&#10;{&#10;    _selected_proc = Request.Query.GetProperty("proc_id");&#10;}&#10;catch ( e )&#10;{&#10;    _selected_proc = '0';&#10;}&#10;//uni-estimation-coll-results&#10;//custom_web_template&#10;cust_elem = ArrayOptFirstElem(XQuery("for $elem in custom_web_templates where $elem/code = 'uni-estimation-coll-results' return $elem"));&#10;if (cust_elem != undefined)&#10;{&#10;&#9;curObjectID = cust_elem.id;&#10;}&#10;Adr_String = "view_doc.html?mode=doc_type&amp;doc_id=" + curDocID + "&amp;object_id=" + Request.Query.GetOptProperty("custom_web_template_id",curObjectID);&#10;&#10;proc_Array = Array();&#10;id_Array = String(_selected_proc).split(';');&#10;for (_id in id_Array)&#10;{&#10;    if (Trim(_id) != '')&#10;    {&#10;        _Array = XQuery( "for $obj in assessment_appraises where $obj/id=" + _id + " return $obj");&#10;        proc_Array =ArrayUnion(proc_Array,_Array);&#10;    }&#10;}&#10;_ass_first = ArrayOptFirstElem( proc_Array ); &#10;ass_name = '&amp;nbsp;';&#10;if (_ass_first != undefined) &#10;{ &#10;&#9;ass_name = "Процедура оценки: " + _ass_first.name;&#10;}&#10;%&gt;&#10;&#10;&lt;script language="JavaScript"&gt;&#10;    //&lt;!--&#10;&#10;    var selected_object_ids = '';&#10;    function doSelect(sel,selected_object_ids,_workflow_id)&#10;    {&#10;&#10;        var pars=new Object();&#10;        var strAttr="status:no;dialogWidth:780px;dialogHeight:550px;help:no;resizable:1";&#10;        pars.selected_object_ids = selected_object_ids;&#10;&#10;        pars.can_be_empty = false;&#10;        pars.show_all = true;&#10;/*&#10;        if (_workflow_id!='')&#10;        {&#10;            xShowModalDialog( 'dlg_select.html?doc_id=&lt;%=curDocID%&gt;&amp;catalog_name=assessment_appraise&amp;typein=1&amp;multi_select=1&amp;xquery_qual=' + escape('$elem/workflow_id = '+_workflow_id+' and $elem/is_model=false()'), pars, strAttr );&#10;        }&#10;        else&#10;        {&#10;            xShowModalDialog( 'dlg_select.html?doc_id=&lt;%=curDocID%&gt;&amp;catalog_name=assessment_appraise&amp;typein=1&amp;multi_select=1', pars, strAttr );&#10;        }&#10;        if ( ! pars.handle )&#10;            return null;&#10;        sel.value=pars.selected_object_ids;&#10;        selected_object_ids = pars.selected_object_ids;&#10;        window.location.href='&lt;%=Adr_String%&gt;' + '&amp;proc_id=' + document.getElementById('proc_id').value;&#10;*/&#10;&#9;&#9;if (_workflow_id!='')&#10;&#9;&#9;{&#10;&#9;&#9;&#9;//xShowModalDialog( 'dlg_select.html?doc_id=&lt;%=curDocID%&gt;&amp;catalog_name=assessment_appraise&amp;typein=1&amp;multi_select=0&amp;xquery_qual=' + escape('$elem/workflow_id = '+_workflow_id+' and $elem/is_model=false()'), pars, strAttr );&#10;&#9;&#9;&#9;xShowSelectDialog(&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;"catalog_name": "assessment_appraise",&#10;&#9;&#9;&#9;&#9;"multi_select": 1,&#10;&#9;&#9;&#9;&#9;"can_be_empty": "false",&#10;&#9;&#9;&#9;&#9;"disp_filter": "false",&#10;&#9;&#9;&#9;&#9;"check_access": "false",&#10;&#9;&#9;&#9;&#9;"display_object_ids": "",&#10;&#9;&#9;&#9;&#9;"selected_object_ids": selected_object_ids,&#10;&#9;&#9;&#9;&#9;"typein": 1,&#10;&#9;&#9;&#9;&#9;"show_all": "true",&#10;&#9;&#9;&#9;&#9;"xquery_qual": escape('$elem/workflow_id = '+_workflow_id+' and $elem/is_model=false()')&#10;&#9;&#9;&#9;}, &#10;&#9;&#9;&#9;function(oParams)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;if (!oParams.handle) return null;&#10;&#9;&#9;&#9;&#9;sel.value=oParams.selected_object_ids;&#10;&#9;&#9;&#9;&#9;selected_object_ids = oParams.selected_object_ids;&#10;&#9;&#9;&#9;&#9;window.location.href='&lt;%=Adr_String%&gt;' + '&amp;proc_id=' + document.getElementById('proc_id').value;&#10;&#9;&#9;&#9;});&#10;&#9;&#9;}&#10;&#9;&#9;else&#10;&#9;&#9;{&#10;&#9;&#9;&#9;//xShowModalDialog( 'dlg_select.html?doc_id=&lt;%=curDocID%&gt;&amp;catalog_name=assessment_appraise&amp;typein=1&amp;multi_select=0', pars, strAttr );&#10;&#9;&#9;&#9;xShowSelectDialog(&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;"catalog_name": "assessment_appraise",&#10;&#9;&#9;&#9;&#9;"multi_select": 0,&#10;&#9;&#9;&#9;&#9;"can_be_empty": "false",&#10;&#9;&#9;&#9;&#9;"disp_filter": "false",&#10;&#9;&#9;&#9;&#9;"check_access": "false",&#10;&#9;&#9;&#9;&#9;"display_object_ids": "",&#10;&#9;&#9;&#9;&#9;"show_all": "true",&#10;&#9;&#9;&#9;&#9;"selected_object_ids": selected_object_ids&#10;&#9;&#9;&#9;}, &#10;&#9;&#9;&#9;function(oParams)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;if (!oParams.handle) return null;&#10;&#9;&#9;&#9;&#9;sel.value=oParams.selected_object_ids;&#10;&#9;&#9;&#9;&#9;selected_object_ids = oParams.selected_object_ids;&#10;&#9;&#9;&#9;&#9;window.location.href='&lt;%=Adr_String%&gt;' + '&amp;proc_id=' + document.getElementById('proc_id').value;&#10;&#9;&#9;&#9;});&#9;&#9;&#9;&#9;&#10;&#9;&#9;}&#10;    }&#10;    //--&gt;&#10;&lt;/script&gt;&#10;&#10;&lt;TABLE width="100%" cellspacing="0" cellpadding="4" CLASS="tableBorder"&gt;&#10;    &lt;TR&gt;&#10;        &lt;TD WIDTH="200" STYLE="font-weight:normal; font-size:larger"&gt;&#10;            &lt;input type='hidden'  id='proc_id' name='proc_id' value='&lt;%=_selected_proc%&gt;'/&gt;&#10;            &lt;input align="right" type="button" id="proc_btn" value="Выбрать процедуры" onClick="doSelect(document.getElementById('proc_id'),'&lt;%=_selected_proc%&gt;','')" class="inputButton" onMouseOver="this.className='inputButtonOver';" onMouseOut="this.className='inputButton';"&gt;&lt;/TD&gt;&#10;&#9;&#9;&lt;TD&gt;&lt;%=ass_name%&gt;&lt;/TD&gt;&#10;    &lt;/TR&gt;&#10;&lt;/TABLE&gt;&#10;&lt;br/&gt;&#10;&lt;%&#10;_persons_Array=Array();&#10;for (procElem in proc_Array)&#10;{&#10;    procDoc=OpenDoc(UrlFromDocID(procElem.id)).TopElem;&#10;    for (_person in procDoc.auditorys)&#10;    {&#10;        SELF_COUNT = 0;&#10;        BOSS_COUNT = 0;&#10;        FUNC_COUNT = 0;&#10;        EXPERT_COUNT = 0;&#10;        STAFF_COUNT = 0;&#10;        COLL_COUNT = 0;&#10;&#10;        cur_MyObject=new Object;&#10;        cur_MyObject.person_id=_person.person_id;&#10;        _name=_person.person_name;&#10;        FIO=String(Trim(_name)).split(' ');&#10;        try&#10;        {&#10;            _name=PersonShortName(FIO[0],FIO[1],FIO[2]);&#10;        }&#10;        catch(e)&#10;        {&#10;&#10;        }&#10;        if (Trim(_name)=='') _name='&amp;nbsp;';&#10;        cur_MyObject.person_name=_name;&#10;        cur_MyObject.proc_name=procElem.name;&#10;        cur_MyObject.boss_score_original=0;&#10;        cur_MyObject.boss_score=0;&#10;        cur_MyObject.self_score=0;&#10;        cur_MyObject.total=0;&#10;        cur_MyObject.expertsArr=Array();&#10;        cur_MyObject.funcArr=Array();&#10;        cur_MyObject.collArr=Array();&#10;        cur_MyObject.staffArr=Array();&#10;        cur_MyObject.org='&amp;nbsp;';&#10;        cur_MyObject.org_id='';&#10;&#10;        _aspl=XQuery("for $aspl in assessment_plans where $aspl/person_id = " + _person.person_id + " and $aspl/assessment_appraise_id = " + procElem.id + " return $aspl");&#10;&#10;        _aspl_first = ArrayOptFirstElem( _aspl );&#10;        _boss_id=0;&#10;        if ( _aspl_first != undefined )&#10;        {&#10;            _boss_id=_aspl_first.boss_id;&#10;            _asplDoc=OpenDoc(UrlFromDocID(_aspl_first.id)).TopElem;&#10;        }&#10;&#10;        _pas = XQuery("for $pa in pas where $pa/person_id = " + _person.person_id + " and $pa/assessment_appraise_id = " + procElem.id + " return $pa");&#10;        _pasArray=Array();&#10;        _selfPA = undefined;&#10;        _participantPA = undefined;&#10;        _funcPA = undefined;&#10;        _profile_id = 0;&#10;        _folder='';&#10;        for (_pa in _pas)&#10;        {&#10;            curElem=new Object;&#10;            curElem.curPA=0;&#10;            curElem.flag=0;&#10;            switch(_pa.status)&#10;            {&#10;                case "self":&#10;                    curElem.flag=1;&#10;                    SELF_COUNT = 1;&#10;                    break;&#10;                case "manager":&#10;                    if (_pa.expert_person_id == _boss_id)&#10;                    {&#10;                        BOSS_COUNT = 1;&#10;                        curElem.flag=2;&#10;&#10;                    }&#10;                    else&#10;                    {&#10;                        FUNC_COUNT ++;&#10;                        curElem.flag=4;&#10;                    }&#10;                    break;&#10;                case "expert":&#10;                    EXPERT_COUNT++;&#10;                    curElem.flag=3;&#10;                    break;&#10;                case "staff":&#10;                    STAFF_COUNT++;&#10;                    curElem.flag=5;&#10;                    break;&#10;                case "coll":&#10;                    COLL_COUNT++;&#10;                    curElem.flag=6;&#10;                    break;&#10;            }&#10;            curElem.curPA=OpenDoc(UrlFromDocID(_pa.id)).TopElem;&#10;            curElem.profile_id = curElem.curPA.competence_profile_id;&#10;            curElem.prof_codes =curElem.curPA.competence_codes;&#10;            curElem.participantPA = curElem.curPA.competences;&#10;            curElem.folder=_pa.id;&#10;            _pasArray[ArrayCount(_pasArray)]=curElem;&#10;&#10;        }&#10;&#10;        for (i=0;i&lt;EXPERT_COUNT;i++)&#10;        {&#10;            temp_Object=new Object;&#10;            temp_Object.name='&amp;nbsp;';&#10;            temp_Object.mark=0;&#10;            temp_Object.name_mark=0;&#10;            cur_MyObject.expertsArr[ArrayCount(cur_MyObject.expertsArr)]=temp_Object;&#10;        }&#10;&#10;        for (i=0;i&lt;FUNC_COUNT;i++)&#10;        {&#10;            temp_Object=new Object;&#10;            temp_Object.name='&amp;nbsp;';&#10;            temp_Object.mark=0;&#10;            temp_Object.name_mark=0;&#10;            cur_MyObject.funcArr[ArrayCount(cur_MyObject.funcArr)]=temp_Object;&#10;        }&#10;&#10;        for (i=0;i&lt;STAFF_COUNT;i++)&#10;        {&#10;            temp_Object=new Object;&#10;            temp_Object.name='&amp;nbsp;';&#10;            temp_Object.mark=0;&#10;            temp_Object.name_mark=0;&#10;            cur_MyObject.staffArr[ArrayCount(cur_MyObject.staffArr)]=temp_Object;&#10;        }&#10;&#10;        for (i=0;i&lt;COLL_COUNT;i++)&#10;        {&#10;            temp_Object=new Object;&#10;            temp_Object.name='&amp;nbsp;';&#10;            temp_Object.mark=0;&#10;            temp_Object.name_mark=0;&#10;            cur_MyObject.collArr[ArrayCount(cur_MyObject.collArr)]=temp_Object;&#10;        }&#10;&#10;        _SHIFT = 2;&#10;        SELF_WEIGHT = 100;&#9;BOSS_WEIGHT = 100;&#9;FUNC_WEIGHT = 100;&#9;EXPERT_WEIGHT = 100; COLL_WEIGHT = 100;&#9;STAFF_WEIGHT = 100;&#10;        if (uni_type_estimation==true)&#10;        {&#10;            //По умолчанию&#10;            SELF_WEIGHT = 10;&#9;BOSS_WEIGHT = 45;&#9;FUNC_WEIGHT = 45;&#9;EXPERT_WEIGHT = 0;&#10;&#10;            //-----------&#10;            weight_table_CODE="weight_table";&#10;            weight_table_Form = ArrayOptFirstElem( XQuery("for $elem in custom_web_templates where $elem/code = '"+weight_table_CODE+"' return $elem") );&#10;            if (weight_table_Form != undefined)&#10;            {&#10;                weight_table_Form = OpenDoc(UrlFromDocID(weight_table_Form.PrimaryKey)).TopElem;&#10;&#10;                _anti_str = "";&#10;                for (_wvar in weight_table_Form.wvars)&#9;_anti_str = _anti_str + _wvar.name + " = '" + HtmlEncode(_wvar.value) + "'; ";&#10;                EvalCodePage( "&lt;" + "%" + _anti_str + "%" + "&gt;" + weight_table_Form.html.Value)&#10;            }&#10;            else&#10;            {&#10;//                Response.Write("&lt;font color='red' stle='font-weight: boldest'&gt;*Ошибка: проблемы с настраиваемым web-шаблоном " +weight_table_CODE+"*&lt;/font&gt;");&#10;            }&#10;            //-------------&#10;        }&#10;        competenceArray = Array();&#10;        _boss_competenceArray = Array();&#10;        numExp=0;&#10;        numFunc=0;&#10;        numStaff=0;&#10;        numColl=0;&#10;        _comp_count=0;&#10;&#10;        _pasArray=ArraySort(_pasArray,'flag','+');&#10;        for (_elem in _pasArray)&#10;        {&#10;            _expert_found=false;&#10;            _funcArr_found=false;&#10;            _staffArr_found=false;&#10;            _collArr_found=false;&#10;            try&#10;            {&#10;                _curProfile = OpenDoc(UrlFromDocID(_elem.profile_id)).TopElem.competences;&#10;            }&#10;            catch(_shit_)&#10;            {&#10;                _curProfile = undefined;&#10;            }&#10;&#10;            for(_comp in _elem.curPA.competences)&#10;            {&#10;                _curCompetence = ArrayOptFind(competenceArray, 'id == _comp.PrimaryKey');&#10;                if (_curCompetence == undefined)&#10;                {&#10;                    try&#10;                    {&#10;                        _curCompetenceDoc = OpenDoc(UrlFromDocID(_comp.PrimaryKey)).TopElem;&#10;                    }&#10;                    catch(_shit_)&#10;                    {&#10;                        continue;&#10;                    }&#10;&#10;                }&#10;                _weight = 0;&#10;//Response.Write(' id ='+_comp.competence_id +' name='+_comp.competence_id.ForeignElem.name +'&lt;br/&gt;');&#10;                try&#10;                {&#10;                    _weight=Real(_comp.weight)/100.0;&#10;                }&#10;                catch(dd)&#10;                {&#10;                }&#10;                if (_comp.mark == "" || _comp.mark == "N")&#10;                    _score = null;&#10;                else&#10;                {&#10;                    _scale = _curCompetenceDoc.scales.GetOptChildByKey(_comp.mark);&#10;                    if (_scale != undefined)&#10;                    {&#10;&#10;                        if (uni_type_estimation==true)&#10;                        {&#10;                            _score = _SHIFT-_scale.ChildIndex ;&#10;                        }&#10;                        else&#10;                        {&#10;                            try&#10;                            {&#10;                                //Response.Write(StrLen(_comp.mark));&#10;                                if (StrLen(Real(_comp.mark))==StrLen(_comp.mark))&#10;                                {&#10;                                    _score = Real(_comp.mark);&#10;                                }&#10;                                else&#10;                                {&#10;                                    cancel();&#10;                                }&#10;                            }&#10;                            catch(ex)&#10;                            {&#10;                                try&#10;                                {&#10;                                    _score = Real(_scale.percent);&#10;                                }&#10;                                catch(jjh)&#10;                                {&#10;                                    _score = _scale.ChildIndex+1;&#10;                                }&#10;                            }&#10;                        }&#10;                    }&#10;                    else&#10;                    {&#10;                        _score = 0;&#10;                        try&#10;                        {&#10;                            //Response.Write(StrLen(_comp.mark));&#10;                            if (StrLen(Real(_comp.mark))==StrLen(_comp.mark))&#10;                            {&#10;                                _score = Real(_comp.mark);&#10;                            }&#10;&#10;                        }&#10;                        catch(ex)&#10;                        {&#10;                        }&#10;                    }&#10;&#10;                }&#10;&#10;                switch(_elem.flag)&#10;                {&#10;                    case 1:&#10;                        if (_score == null) _score = 0;&#10;                        cur_MyObject.self_score = cur_MyObject.self_score+(Real(_score)*_weight);&#10;                        break;&#10;                    case 2:&#10;                        if (_score == null) _score = 0;&#10;                        cur_MyObject.boss_score = cur_MyObject.boss_score+(Real(_score)*_weight);&#10;                        cur_comp_Object=new Object;&#10;                        cur_comp_Object.comp_id=_comp.PrimaryKey;&#10;                        cur_comp_Object.name=_comp.competence_id.ForeignElem.name;&#10;                        cur_comp_Object.score=Real(_score);&#10;                        _boss_competenceArray[ArrayCount(_boss_competenceArray)]=cur_comp_Object;&#10;                        cur_MyObject.boss_score_original=cur_MyObject.boss_score_original+_score;&#10;                        _comp_count++;&#10;                        break;&#10;                    case 3:&#10;                    {&#10;                        if (uni_type_estimation==true)&#10;                        {&#10;                            if (_score == null)&#10;                            {&#10;                                for (_boss_comp in _boss_competenceArray)&#10;                                {&#10;                                    if (Int(_comp.PrimaryKey)==Int(_boss_comp.comp_id))&#10;                                    {&#10;                                        _score=_boss_comp.score;&#10;                                        break;&#10;                                    }&#10;                                }&#10;&#10;                            }&#10;                        }&#10;                        if (_score == null)&#10;                        {&#10;                            _score = 0;&#10;                        }&#10;                        cur_MyObject.expertsArr[numExp].mark=cur_MyObject.expertsArr[numExp].mark+(Real(_score)*_weight);&#10;                        _persons_temp_name=_elem.curPA.expert_person_id.sd.fullname;&#10;                        FIO=String(Trim(_persons_temp_name)).split(' ');&#10;                        try&#10;                        {&#10;                            _persons_short_name=PersonShortName(FIO[0],FIO[1],FIO[2]);&#10;                        }&#10;                        catch(e)&#10;                        {&#10;                            _persons_short_name=_persons_temp_name;&#10;                        }&#10;                        cur_MyObject.expertsArr[numExp].name=_persons_short_name;&#10;                        _expert_found=true;&#10;                        break;&#10;                    }&#10;                    case 4:&#10;                    {&#10;                        if (uni_type_estimation==true)&#10;                        {&#10;                            if (_score == null)&#10;                            {&#10;                                for (_boss_comp in _boss_competenceArray)&#10;                                {&#10;                                    if (Int(_comp.PrimaryKey)==Int(_boss_comp.comp_id))&#10;                                    {&#10;                                        _score=_boss_comp.score;&#10;                                        break;&#10;                                    }&#10;                                }&#10;&#10;&#10;                            }&#10;                        }&#10;                        if (_score == null) _score = 0;&#10;                        cur_MyObject.funcArr[numFunc].mark=cur_MyObject.funcArr[numFunc].mark+(Real(_score)*_weight);&#10;                        _persons_temp_name=_elem.curPA.expert_person_id.sd.fullname;&#10;                        FIO=String(Trim(_persons_temp_name)).split(' ');&#10;                        try&#10;                        {&#10;                            _persons_short_name=PersonShortName(FIO[0],FIO[1],FIO[2]);&#10;                        }&#10;                        catch(e)&#10;                        {&#10;                            _persons_short_name=_persons_temp_name;&#10;                        }&#10;                        cur_MyObject.funcArr[numFunc].name=_persons_short_name;&#10;                        _funcArr_found=true;&#10;                        break;&#10;                    }&#10;                    case 5:&#10;                    {&#10;                        if (uni_type_estimation==true)&#10;                        {&#10;                            if (_score == null)&#10;                            {&#10;                                for (_boss_comp in _boss_competenceArray)&#10;                                {&#10;                                    if (Int(_comp.PrimaryKey)==Int(_boss_comp.comp_id))&#10;                                    {&#10;                                        _score=_boss_comp.score;&#10;                                        break;&#10;                                    }&#10;                                }&#10;&#10;&#10;                            }&#10;                        }&#10;                        if (_score == null) _score = 0;&#10;                        cur_MyObject.staffArr[numStaff].mark=cur_MyObject.staffArr[numStaff].mark+(Real(_score)*_weight);&#10;                        _persons_temp_name=_elem.curPA.expert_person_id.sd.fullname;&#10;                        FIO=String(Trim(_persons_temp_name)).split(' ');&#10;                        try&#10;                        {&#10;                            _persons_short_name=PersonShortName(FIO[0],FIO[1],FIO[2]);&#10;                        }&#10;                        catch(e)&#10;                        {&#10;                            _persons_short_name=_persons_temp_name;&#10;                        }&#10;                        cur_MyObject.staffArr[numStaff].name=_persons_short_name;&#10;                        _staffArr_found=true;&#10;                        break;&#10;                    }&#10;                    case 6:&#10;                    {&#10;                        if (uni_type_estimation==true)&#10;                        {&#10;                            if (_score == null)&#10;                            {&#10;                                for (_boss_comp in _boss_competenceArray)&#10;                                {&#10;                                    if (Int(_comp.PrimaryKey)==Int(_boss_comp.comp_id))&#10;                                    {&#10;                                        _score=_boss_comp.score;&#10;                                        break;&#10;                                    }&#10;                                }&#10;&#10;&#10;                            }&#10;                        }&#10;                        if (_score == null) _score = 0;&#10;                        cur_MyObject.collArr[numColl].mark=cur_MyObject.collArr[numColl].mark+(Real(_score)*_weight);&#10;                        _persons_temp_name=_elem.curPA.expert_person_id.sd.fullname;&#10;                        FIO=String(Trim(_persons_temp_name)).split(' ');&#10;                        try&#10;                        {&#10;                            _persons_short_name=PersonShortName(FIO[0],FIO[1],FIO[2]);&#10;                        }&#10;                        catch(e)&#10;                        {&#10;                            _persons_short_name=_persons_temp_name;&#10;                        }&#10;                        cur_MyObject.collArr[numColl].name=_persons_short_name;&#10;                        _collArr_found=true;&#10;                        break;&#10;                    }&#10;                }&#10;&#10;            }&#10;            if (_expert_found)&#10;            {&#10;                numExp++;&#10;            }&#10;            if (_funcArr_found)&#10;            {&#10;                numFunc++;&#10;            }&#10;            if (_staffArr_found)&#10;            {&#10;                numStaff++;&#10;            }&#10;            if (_collArr_found)&#10;            {&#10;                numColl++;&#10;            }&#10;        }&#10;&#10;        if (_comp_count&lt;0)&#10;        {&#10;            cur_MyObject.total=0;&#10;        }&#10;        else&#10;        {&#10;&#10;            cur_MyObject.total=(cur_MyObject.boss_score*Real(BOSS_WEIGHT) / 100.0)+(cur_MyObject.self_score*Real(SELF_WEIGHT) / 100.0);&#10;&#10;            for (i=0;i&lt;EXPERT_COUNT;i++)&#10;            {&#10;&#10;                cur_MyObject.total=cur_MyObject.total+(Real(cur_MyObject.expertsArr[i].mark)*Real(EXPERT_WEIGHT) / 100.0);&#10;                cur_MyObject.expertsArr[i].mark =StrReal(cur_MyObject.expertsArr[i].mark, 2);&#10;                if (show_names_with_marks==true)&#10;                {&#10;                    cur_MyObject.expertsArr[i].name_mark =StrReplace(String(cur_MyObject.expertsArr[i].mark),'.',',')+'&lt;br/&gt;'+cur_MyObject.expertsArr[i].name;&#10;                }&#10;                else&#10;                {&#10;                    cur_MyObject.expertsArr[i].name_mark =StrReplace(String(cur_MyObject.expertsArr[i].mark),'.',',');&#10;                }&#10;&#10;            }&#10;&#10;&#10;            for (i=0;i&lt;FUNC_COUNT;i++)&#10;            {&#10;                cur_MyObject.total=cur_MyObject.total+(Real(cur_MyObject.funcArr[i].mark)*Real(FUNC_WEIGHT) / 100.0);&#10;                cur_MyObject.funcArr[i].mark =StrReal(cur_MyObject.funcArr[i].mark, 2);&#10;                if (show_names_with_marks==true)&#10;                {&#10;                    cur_MyObject.funcArr[i].name_mark =StrReplace(String(cur_MyObject.funcArr[i].mark),'.',',')+'&lt;br/&gt;'+cur_MyObject.funcArr[i].name;&#10;                }&#10;                else&#10;                {&#10;                    cur_MyObject.funcArr[i].name_mark =StrReplace(String(cur_MyObject.funcArr[i].mark),'.',',');&#10;                }&#10;            }&#10;&#10;            for (i=0;i&lt;STAFF_COUNT;i++)&#10;            {&#10;                cur_MyObject.total=cur_MyObject.total+(Real(cur_MyObject.staffArr[i].mark)*Real(STAFF_WEIGHT) / 100.0);&#10;                cur_MyObject.staffArr[i].mark =StrReal(cur_MyObject.staffArr[i].mark, 2);&#10;                if (show_names_with_marks==true)&#10;                {&#10;                    cur_MyObject.staffArr[i].name_mark =StrReplace(String(cur_MyObject.staffArr[i].mark),'.',',')+'&lt;br/&gt;'+cur_MyObject.staffArr[i].name;&#10;                }&#10;                else&#10;                {&#10;                    cur_MyObject.staffArr[i].name_mark =StrReplace(String(cur_MyObject.staffArr[i].mark),'.',',');&#10;                }&#10;            }&#10;&#10;            for (i=0;i&lt;COLL_COUNT;i++)&#10;            {&#10;                cur_MyObject.total=cur_MyObject.total+(Real(cur_MyObject.collArr[i].mark)*Real(COLL_WEIGHT) / 100.0);&#10;                cur_MyObject.collArr[i].mark =StrReal(cur_MyObject.collArr[i].mark, 2);&#10;                if (show_names_with_marks==true)&#10;                {&#10;                    cur_MyObject.collArr[i].name_mark =StrReplace(String(cur_MyObject.collArr[i].mark),'.',',')+'&lt;br/&gt;'+cur_MyObject.collArr[i].name;&#10;                }&#10;                else&#10;                {&#10;                    cur_MyObject.collArr[i].name_mark =StrReplace(String(cur_MyObject.collArr[i].mark),'.',',');&#10;                }&#10;            }&#10;&#10;            cur_MyObject.boss_score=StrReal(cur_MyObject.boss_score);&#10;            cur_MyObject.self_score=StrReal(cur_MyObject.self_score);&#10;            cur_MyObject.total=StrReal(cur_MyObject.total, 2);&#10;&#10;&#10;        }&#10;        cur_MyObject.funcCount=FUNC_COUNT;&#10;        cur_MyObject.expCount=EXPERT_COUNT;&#10;        cur_MyObject.staffCount=STAFF_COUNT;&#10;        cur_MyObject.collCount=COLL_COUNT;&#10;        _persons_Array[ArrayCount(_persons_Array)]=cur_MyObject;&#10;    }&#10;}&#10;if (ArrayCount(_persons_Array)&gt;0)&#10;{&#10;    //-----------&#10;    Additional_Report_part2_CODE="uni-estimation-coll-results-part2";&#10;    Additional_Report_part2_Form = ArrayOptFirstElem( XQuery("for $elem in custom_web_templates where $elem/code = '"+Additional_Report_part2_CODE+"' return $elem") );&#10;&#10;    if (Additional_Report_part2_Form != undefined)&#10;    {&#10;        Additional_Report_part2_Form = OpenDoc(UrlFromDocID(Additional_Report_part2_Form.PrimaryKey)).TopElem;&#10;&#10;        _anti_str = "";&#10;        for (_wvar in Additional_Report_part2_Form.wvars)&#9;_anti_str = _anti_str + _wvar.name + " = '" + HtmlEncode(_wvar.value) + "'; ";&#10;        _graph_web_template_found=true;&#10;        Response.Write(EvalCodePage( "&lt;" + "%" + _anti_str + "%" + "&gt;" + Additional_Report_part2_Form.html.Value));&#10;    }&#10;    else&#10;    {&#10;        Response.Write("&lt;font color='red' stle='font-weight: boldest'&gt;*Ошибка: проблемы с настраиваемым web-шаблоном " +Additional_Report_part2_CODE+". Отчет не будет отображаться.*&lt;/font&gt;");&#10;    }&#10;    i=0;&#10;}&#10;%&gt;</html>
			<use_session_cache>false</use_session_cache>
			<cwt_type>default</cwt_type>
			<out_type>undefined</out_type>
			<wvars>
				<wvar>
					<name>uni_type_estimation</name>
					<value>1</value>
					<type>string</type>
					<description>флаг, показывающий, оценка проходит по отличному от стандарта способу (истина=1)</description>
					<position>0</position>
				</wvar>
				<wvar>
					<name>show_names_with_marks</name>
					<value>1</value>
					<type>string</type>
					<description>флаг, показывающий, что нужно кроме оценок выводить еще и  имена оценивающих (истина=1)</description>
					<position>0</position>
				</wvar>
			</wvars>
			<access>
				<access_level>0</access_level>
			</access>
			<comment>Для каждого сотрудника из выбранных процедур выводятся итоговые оценки, которые выставил  каждый из оценивающих, и общая итоговая оценка по процедуре. По данным таблицы строится график.&#10;uni-estimation-coll-results-graph</comment>
			<doc_info>
				<creation>
					<user_login>user1</user_login>
					<date>2008-12-29T19:56:35Z</date>
				</creation>
				<modification>
					<user_login>admin</user_login>
					<user_id>6148914691236517121</user_id>
					<date>2021-06-28T13:30:26Z</date>
				</modification>
			</doc_info>
			<is_std>false</is_std>
			<changed>false</changed>
			<is_enabled>true</is_enabled>
		</custom_web_template>
		<custom_web_template>
			<id>0x4BFB6FDE33750F6A</id>
			<code>websoft_report_360_6</code>
			<name>Статистика по Оцениваемым сотрудникам</name>
			<category>websoft</category>
			<exec_code>
				<code_text>&lt;%&#9;&#10;// автор: OV&#10;// создан:  26.05.2010&#10;// измененен: &#10;// -----------------------------------------------------------Описание-------------------------------------------------------&#10;// отчет по статистике - в разрезе оцениваемых&#10;// -----------------------------------------------------------Предупреждение-------------------------------------------------&#10;// &lt;нет&gt;&#10;// -----------------------------------------------------------Параметры агента-----------------------------------------------&#10;// &lt;нет&gt;&#10;// -----------------------------------------------------------Константы------------------------------------------------------&#10;// &lt;нет&gt;&#10;//---------------------------------------------------------------------------------------------------------------------------&#10;&#10;RES_STR = "";&#10;RES_STR += '&lt;style&gt;&#10;.tbl1&#10;{&#10;vertical-align:center;&#10;border:1px solid #000;&#10;border-collapse:collapse;&#10;margin: 5;&#10;}&#10;.tbl1_header&#10;{&#10;border:1px solid #000;&#10;vertical-align:center;&#10;font-weight:bold;&#10;text-align:center;&#10;background-color:lightgrey;&#10;&#10;}&#10;.tbl1_number&#10;{&#10;border:1px solid #000;&#10;vertical-align:top;&#10;font-weight:bold;&#10;text-align:center;&#10;}&#10;.header&#10;{&#10;font-size:12pt;&#10;font-weight:bold;&#10;}&#10;.tbl1_td&#10;{&#10;border:1px solid #000;&#10;}&#10;&lt;/style&gt;&#10;';&#10;&#10;// массив типов оценок&#10;STATUS_ARRAY = Array ();&#10;&#10;objStatus = Object();&#10;objStatus.name = "Руководители";&#10;objStatus.id = "manager";&#10;STATUS_ARRAY [ArrayCount(STATUS_ARRAY)] =  objStatus;&#10;&#10;objStatus = Object();&#10;objStatus.name = "Подчиненные";&#10;objStatus.id = "staff";&#10;STATUS_ARRAY [ArrayCount(STATUS_ARRAY)] =  objStatus;&#10;&#10;objStatus = Object();&#10;objStatus.name = "Коллеги";&#10;objStatus.id = "coll";&#10;STATUS_ARRAY [ArrayCount(STATUS_ARRAY)] =  objStatus;&#10;&#10;// массив оценочных процедур&#10;ass_app_array = XQuery("for $elem in assessment_appraises where $elem/is_model=false() return $elem ");&#10;&#10;// ***********************************************************ОСНОВНАЯ ОБЛАСТЬ**********************************************&#10;%&gt;&#9;&#10;&#10;&#10;&lt;center&gt;&#10;&lt;FORM NAME="ass_app_form" action="&lt;%= tools_web.get_query_string( true, "ass_app"); %&gt;" METHOD="post"" enctype="multipart/form-data"&gt;&#10;&lt;P&gt;&#10;&lt;table&gt;&#10;&lt;tr&gt;&lt;td&gt;Выберите оценочную процедуру:&amp;nbsp;&lt;/td&gt;&#10;&lt;td&gt;&lt;SELECT name = "ass_app" id = "ass_app"&gt;&#10;&lt;%&#10;&#9;if ( ( !Request.Form.HasProperty ( 'ass_app' ) ) || ( Request.Form.GetProperty ( 'ass_app' ) == "") )&#10;&#9;{&#10;&#9;&#9;%&gt;&lt;OPTION value = "" selected&gt; - &lt;/OPTION&gt;&lt;%&#10;&#9;}&#10;&#9;for ( ass in ass_app_array )&#10;&#9;{&#10;&#9;&#9;_select_flag = "";&#10;&#9;&#9;if ( Request.Form.HasProperty( 'ass_app' ) &amp;&amp; Int ( Request.Form.GetProperty( 'ass_app' ) ) == Int ( ass.id ) )&#10;&#9;&#9;{&#10;&#9;&#9;&#9;_select_flag = "selected";&#10;&#9;&#9;}&#10;%&gt;&#10;&#9;&#9;&lt;OPTION &lt;%=_select_flag%&gt; value = "&lt;%=ass.id%&gt;"&gt;&lt;%=ass.name%&gt;&lt;/OPTION&gt;&#10;&lt;%&#10;&#9;}&#10;%&gt;&#10;&lt;/SELECT&gt;&lt;/td&gt;&#10;&lt;/tr&gt;&#10;&lt;/table&gt;&#10;&lt;/P&gt;&#10;&lt;P&gt;&#10;&#9;&lt;input value="Сформировать отчет" onclick="this.form.submit();" style = "{width:200px;}" type="button" class="inputButton" onMouseOver="this.className='inputButtonOver';" onMouseOut="this.className='inputButton';"&gt;&amp;nbsp;&#10;&#9;&lt;INPUT type="button" value="Экспорт в Excel" onclick="modalWin=window.open('assessment_excel_export.html','','')" class="inputButton" onMouseOver="this.className='inputButtonOver';" onMouseOut="this.className='inputButton';"/&gt;&#10;&lt;%Request.Form.action = "";%&gt;  &#10;&lt;/P&gt;&#10;&lt;/FORM&gt;&#10;&lt;/center&gt;&#10;&lt;br&gt;&#10;&#10;&lt;%&#10;assID = 0; &#10;subID = 0;&#10;bossID = 0;&#10;PersonArray = new Array ();&#10;Table = new Array ();&#10;&#10;if ( Request.Form.HasProperty( 'ass_app' ) &amp;&amp; Request.Form.GetProperty( 'ass_app' ) != "" ) &#10;{&#10;&#9;try&#10;&#9;{&#10;&#9;&#9;assID = Int ( Request.Form.GetProperty( 'ass_app' ) );&#10;&#9;&#9;assDoc=OpenDoc(UrlFromDocID(assID)).TopElem;&#10;&#9;}&#10;&#9;catch ( err )&#10;&#9;{&#10;&#9;&#9;alert (err);&#10;&#9;}&#9;&#10;&#9;&#10;&#9;// данные для отчета&#10;&#9;RESULT_ARRAY = Array();&#10;&#9;plan_array = XQuery("for $elem in assessment_plans where $elem/assessment_appraise_id="+assID+" return $elem");&#10;&#9;for (_plan in plan_array)&#9;&#9;&#10;&#9;{&#10;&#9;&#9;obj = Object();&#10;&#9;&#9;obj.person_id = _plan.person_id;&#10;&#9;&#9;obj.person_fullname = _plan.person_fullname;&#10;&#9;&#9;obj.person_position_name = _plan.person_position_name;&#10;&#9;&#9;done_pa_count=0;&#9;// счетчик для кол-ва заполненных анкет&#10;&#9;&#9;total_pa_count=0;&#9;//  счетчик для кол-ва всех анкет по оцениваемому&#10;&#9;&#9;stat_arr = Array();&#10;&#9;&#9;for (_status in STATUS_ARRAY)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;person_pa_array = XQuery("for $elem in pas where $elem/assessment_appraise_id="+assID+" and $elem/person_id="+_plan.person_id+" and $elem/status='"+_status.id+"' return $elem");&#10;&#9;&#9;&#9;&#10;&#9;&#9;&#9;statObj = Object();&#10;&#9;&#9;&#9;statObj.status_id = _status.id;&#10;&#9;&#9;&#9;statObj.status_name = _status.name;&#10;&#9;&#9;&#9;pa_arr = Array();&#10;&#9;&#9;&#9;for (_pa in person_pa_array)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;total_pa_count++;&#9;&#10;&#9;&#9;&#9;&#9;try &#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;_paDoc = OpenDoc(UrlFromDocID(_pa.id)).TopElem;&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;catch (err)&#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;alert ('ОШИБКА: карточка анкеты недоступна. '+err);&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;_paObj = Object();&#10;&#9;&#9;&#9;&#9;_paObj.expert_fullname = _pa.expert_person_fullname;&#10;&#9;&#9;&#9;&#9;total_comp_count = ArrayCount(_paDoc.competences);&#10;&#9;&#9;&#9;&#9;done_comp_count = ArrayCount( ArraySelect(_paDoc.competences,"This.mark.HasValue") );&#10;&#9;&#9;&#9;&#9;if (total_comp_count &gt; 0)&#10;&#9;&#9;&#9;&#9;&#9;_paObj.percent = done_comp_count*100.0 / total_comp_count;&#10;&#9;&#9;&#9;&#9;else&#10;&#9;&#9;&#9;&#9;&#9;_paObj.percent = 0;&#10;&#9;&#9;&#9;&#9;if (total_comp_count==done_comp_count)&#10;&#9;&#9;&#9;&#9;&#9;done_pa_count++;&#9;&#10;&#9;&#9;&#9;&#9;pa_arr [ArrayCount(pa_arr)]= _paObj;&#9;&#9;&#9;&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;statObj.pas = pa_arr;&#9;&#10;&#9;&#9;&#9;stat_arr [ArrayCount(stat_arr)] = statObj;&#9;&#9;&#9;&#9;&#10;&#9;&#9;}&#10;&#9;&#9;obj.stats = stat_arr;&#10;&#9;&#9;obj.done_pa_amount = done_pa_count;&#10;&#9;&#9;obj.total_pa_amount = total_pa_count;&#9;&#9;&#10;&#9;&#10;&#9;&#9;RESULT_ARRAY [ArrayCount(RESULT_ARRAY)] = obj;&#9;&#10;&#9;&#10;&#9;}&#10;&#10;&#9;RES_STR += "&lt;center&gt;&lt;P class='header'&gt;Статистика по оцениваемым&lt;/P&gt;&lt;/center&gt;";&#10;&#9;RES_STR += "&lt;P class='header'&gt;Процедура: "+assDoc.name+" &lt;/P&gt;";&#9;&#10;&#9;RES_STR += "&lt;P class='header'&gt;Период с: "+assDoc.start_date +" по " +assDoc.end_date+" &lt;/P&gt;";&#9;&#9;&#10;&#9;&#10;&#9;RES_STR += "&#10;&#9;&lt;TABLE class='tbl1' cellpadding=5&gt;&#10;&#9;&lt;tr&gt;&#10;&#9;&#9;&lt;td class='tbl1_header'&gt; Оцениваемый сотрудник &lt;/td&gt;&#10;&#9;&#9;&lt;td class='tbl1_header'&gt; Статистика по оценивающим &lt;/td&gt;&#10;&#9;&#9;&lt;td class='tbl1_header'&gt; Количество заполненных на 100%  анкет всего &lt;/td&gt;&#10;&#9;&lt;/tr&gt;";&#9;&#10;&#9;&#10;&#9;for (_obj in RESULT_ARRAY)&#10;&#9;{&#10;&#9;&#9;RES_STR += "&lt;tr&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&lt;td class='tbl1'&gt;"+_obj.person_fullname+"&lt;/td&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&lt;td class='tbl1'&gt;";&#10;&#9;&#9;for (_stat in _obj.stats)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;RES_STR += "&lt;p&gt;"+_stat.status_name+":&lt;/p&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&lt;p&gt;";&#10;&#9;&#9;&#9;&#10;&#9;&#9;&#9;for (_pa in _stat.pas)&#10;&#9;&#9;&#9;&#9;RES_STR += _pa.expert_fullname+"&amp;nbsp;("+_pa.percent+"%)&lt;BR/&gt;";&#9;&#10;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;RES_STR += "&lt;/p&gt;"&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#10;&#9;&#9;}&#10;&#9;&#9;RES_STR += "&lt;/td&gt;";&#9;&#9;&#10;&#9;&#9;&#10;&#9;&#9;RES_STR += "&lt;td class='tbl1'&gt;анкет - "+_obj.done_pa_amount+"  из "+ _obj.total_pa_amount+"&lt;/td&gt;&#10;&#9;&#9;&#9;&#9;&#9;&lt;/tr&gt;";&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#10;&#9;}&#10;&#9;&#10;&#9;RES_STR += "&#10;&#9;&lt;/table&gt;";&#10;&#9;Response.Write ( RES_STR );&#10;&#9;tools_web.remove_user_data("excel_html_" + curUserID);&#10;&#9;tools_web.set_user_data( "excel_html_" + curUserID , { 'html': RES_STR }, 86000 ); &#10;&#9;//Session.excel_html = RES_STR;&#9;&#10;}&#10;&#10;&#9;&#9;&#10;&#10;&#10;&#10;%&gt;</code_text>
			</exec_code>
			<html>&lt;%&#9;&#10;// автор: OV&#10;// создан:  26.05.2010&#10;// измененен: &#10;// -----------------------------------------------------------Описание-------------------------------------------------------&#10;// отчет по статистике - в разрезе оцениваемых&#10;// -----------------------------------------------------------Предупреждение-------------------------------------------------&#10;// &lt;нет&gt;&#10;// -----------------------------------------------------------Параметры агента-----------------------------------------------&#10;// &lt;нет&gt;&#10;// -----------------------------------------------------------Константы------------------------------------------------------&#10;// &lt;нет&gt;&#10;//---------------------------------------------------------------------------------------------------------------------------&#10;&#10;RES_STR = "";&#10;RES_STR += '&lt;style&gt;&#10;.tbl1&#10;{&#10;vertical-align:center;&#10;border:1px solid #000;&#10;border-collapse:collapse;&#10;margin: 5;&#10;}&#10;.tbl1_header&#10;{&#10;border:1px solid #000;&#10;vertical-align:center;&#10;font-weight:bold;&#10;text-align:center;&#10;background-color:lightgrey;&#10;&#10;}&#10;.tbl1_number&#10;{&#10;border:1px solid #000;&#10;vertical-align:top;&#10;font-weight:bold;&#10;text-align:center;&#10;}&#10;.header&#10;{&#10;font-size:12pt;&#10;font-weight:bold;&#10;}&#10;.tbl1_td&#10;{&#10;border:1px solid #000;&#10;}&#10;&lt;/style&gt;&#10;';&#10;&#10;// массив типов оценок&#10;STATUS_ARRAY = Array ();&#10;&#10;objStatus = Object();&#10;objStatus.name = "Руководители";&#10;objStatus.id = "manager";&#10;STATUS_ARRAY [ArrayCount(STATUS_ARRAY)] =  objStatus;&#10;&#10;objStatus = Object();&#10;objStatus.name = "Подчиненные";&#10;objStatus.id = "staff";&#10;STATUS_ARRAY [ArrayCount(STATUS_ARRAY)] =  objStatus;&#10;&#10;objStatus = Object();&#10;objStatus.name = "Коллеги";&#10;objStatus.id = "coll";&#10;STATUS_ARRAY [ArrayCount(STATUS_ARRAY)] =  objStatus;&#10;&#10;// массив оценочных процедур&#10;ass_app_array = XQuery("for $elem in assessment_appraises where $elem/is_model=false() return $elem ");&#10;&#10;// ***********************************************************ОСНОВНАЯ ОБЛАСТЬ**********************************************&#10;%&gt;&#9;&#10;&#10;&#10;&lt;center&gt;&#10;&lt;FORM NAME="ass_app_form" action="&lt;%= tools_web.get_query_string( true, "ass_app"); %&gt;" METHOD="post"" enctype="multipart/form-data"&gt;&#10;&lt;P&gt;&#10;&lt;table&gt;&#10;&lt;tr&gt;&lt;td&gt;Выберите оценочную процедуру:&amp;nbsp;&lt;/td&gt;&#10;&lt;td&gt;&lt;SELECT name = "ass_app" id = "ass_app"&gt;&#10;&lt;%&#10;&#9;if ( ( !Request.Form.HasProperty ( 'ass_app' ) ) || ( Request.Form.GetProperty ( 'ass_app' ) == "") )&#10;&#9;{&#10;&#9;&#9;%&gt;&lt;OPTION value = "" selected&gt; - &lt;/OPTION&gt;&lt;%&#10;&#9;}&#10;&#9;for ( ass in ass_app_array )&#10;&#9;{&#10;&#9;&#9;_select_flag = "";&#10;&#9;&#9;if ( Request.Form.HasProperty( 'ass_app' ) &amp;&amp; Int ( Request.Form.GetProperty( 'ass_app' ) ) == Int ( ass.id ) )&#10;&#9;&#9;{&#10;&#9;&#9;&#9;_select_flag = "selected";&#10;&#9;&#9;}&#10;%&gt;&#10;&#9;&#9;&lt;OPTION &lt;%=_select_flag%&gt; value = "&lt;%=ass.id%&gt;"&gt;&lt;%=ass.name%&gt;&lt;/OPTION&gt;&#10;&lt;%&#10;&#9;}&#10;%&gt;&#10;&lt;/SELECT&gt;&lt;/td&gt;&#10;&lt;/tr&gt;&#10;&lt;/table&gt;&#10;&lt;/P&gt;&#10;&lt;P&gt;&#10;&#9;&lt;input value="Сформировать отчет" onclick="this.form.submit();" style = "{width:200px;}" type="button" class="inputButton" onMouseOver="this.className='inputButtonOver';" onMouseOut="this.className='inputButton';"&gt;&amp;nbsp;&#10;&#9;&lt;INPUT type="button" value="Экспорт в Excel" onclick="modalWin=window.open('assessment_excel_export.html','','')" class="inputButton" onMouseOver="this.className='inputButtonOver';" onMouseOut="this.className='inputButton';"/&gt;&#10;&lt;%Request.Form.action = "";%&gt;  &#10;&lt;/P&gt;&#10;&lt;/FORM&gt;&#10;&lt;/center&gt;&#10;&lt;br&gt;&#10;&#10;&lt;%&#10;assID = 0; &#10;subID = 0;&#10;bossID = 0;&#10;PersonArray = new Array ();&#10;Table = new Array ();&#10;&#10;if ( Request.Form.HasProperty( 'ass_app' ) &amp;&amp; Request.Form.GetProperty( 'ass_app' ) != "" ) &#10;{&#10;&#9;try&#10;&#9;{&#10;&#9;&#9;assID = Int ( Request.Form.GetProperty( 'ass_app' ) );&#10;&#9;&#9;assDoc=OpenDoc(UrlFromDocID(assID)).TopElem;&#10;&#9;}&#10;&#9;catch ( err )&#10;&#9;{&#10;&#9;&#9;alert (err);&#10;&#9;}&#9;&#10;&#9;&#10;&#9;// данные для отчета&#10;&#9;RESULT_ARRAY = Array();&#10;&#9;plan_array = XQuery("for $elem in assessment_plans where $elem/assessment_appraise_id="+assID+" return $elem");&#10;&#9;for (_plan in plan_array)&#9;&#9;&#10;&#9;{&#10;&#9;&#9;obj = Object();&#10;&#9;&#9;obj.person_id = _plan.person_id;&#10;&#9;&#9;obj.person_fullname = _plan.person_fullname;&#10;&#9;&#9;obj.person_position_name = _plan.person_position_name;&#10;&#9;&#9;done_pa_count=0;&#9;// счетчик для кол-ва заполненных анкет&#10;&#9;&#9;total_pa_count=0;&#9;//  счетчик для кол-ва всех анкет по оцениваемому&#10;&#9;&#9;stat_arr = Array();&#10;&#9;&#9;for (_status in STATUS_ARRAY)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;person_pa_array = XQuery("for $elem in pas where $elem/assessment_appraise_id="+assID+" and $elem/person_id="+_plan.person_id+" and $elem/status='"+_status.id+"' return $elem");&#10;&#9;&#9;&#9;&#10;&#9;&#9;&#9;statObj = Object();&#10;&#9;&#9;&#9;statObj.status_id = _status.id;&#10;&#9;&#9;&#9;statObj.status_name = _status.name;&#10;&#9;&#9;&#9;pa_arr = Array();&#10;&#9;&#9;&#9;for (_pa in person_pa_array)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;total_pa_count++;&#9;&#10;&#9;&#9;&#9;&#9;try &#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;_paDoc = OpenDoc(UrlFromDocID(_pa.id)).TopElem;&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;catch (err)&#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;alert ('ОШИБКА: карточка анкеты недоступна. '+err);&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;_paObj = Object();&#10;&#9;&#9;&#9;&#9;_paObj.expert_fullname = _pa.expert_person_fullname;&#10;&#9;&#9;&#9;&#9;total_comp_count = ArrayCount(_paDoc.competences);&#10;&#9;&#9;&#9;&#9;done_comp_count = ArrayCount( ArraySelect(_paDoc.competences,"This.mark.HasValue") );&#10;&#9;&#9;&#9;&#9;if (total_comp_count &gt; 0)&#10;&#9;&#9;&#9;&#9;&#9;_paObj.percent = done_comp_count*100.0 / total_comp_count;&#10;&#9;&#9;&#9;&#9;else&#10;&#9;&#9;&#9;&#9;&#9;_paObj.percent = 0;&#10;&#9;&#9;&#9;&#9;if (total_comp_count==done_comp_count)&#10;&#9;&#9;&#9;&#9;&#9;done_pa_count++;&#9;&#10;&#9;&#9;&#9;&#9;pa_arr [ArrayCount(pa_arr)]= _paObj;&#9;&#9;&#9;&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;statObj.pas = pa_arr;&#9;&#10;&#9;&#9;&#9;stat_arr [ArrayCount(stat_arr)] = statObj;&#9;&#9;&#9;&#9;&#10;&#9;&#9;}&#10;&#9;&#9;obj.stats = stat_arr;&#10;&#9;&#9;obj.done_pa_amount = done_pa_count;&#10;&#9;&#9;obj.total_pa_amount = total_pa_count;&#9;&#9;&#10;&#9;&#10;&#9;&#9;RESULT_ARRAY [ArrayCount(RESULT_ARRAY)] = obj;&#9;&#10;&#9;&#10;&#9;}&#10;&#10;&#9;RES_STR += "&lt;center&gt;&lt;P class='header'&gt;Статистика по оцениваемым&lt;/P&gt;&lt;/center&gt;";&#10;&#9;RES_STR += "&lt;P class='header'&gt;Процедура: "+assDoc.name+" &lt;/P&gt;";&#9;&#10;&#9;RES_STR += "&lt;P class='header'&gt;Период с: "+assDoc.start_date +" по " +assDoc.end_date+" &lt;/P&gt;";&#9;&#9;&#10;&#9;&#10;&#9;RES_STR += "&#10;&#9;&lt;TABLE class='tbl1' cellpadding=5&gt;&#10;&#9;&lt;tr&gt;&#10;&#9;&#9;&lt;td class='tbl1_header'&gt; Оцениваемый сотрудник &lt;/td&gt;&#10;&#9;&#9;&lt;td class='tbl1_header'&gt; Статистика по оценивающим &lt;/td&gt;&#10;&#9;&#9;&lt;td class='tbl1_header'&gt; Количество заполненных на 100%  анкет всего &lt;/td&gt;&#10;&#9;&lt;/tr&gt;";&#9;&#10;&#9;&#10;&#9;for (_obj in RESULT_ARRAY)&#10;&#9;{&#10;&#9;&#9;RES_STR += "&lt;tr&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&lt;td class='tbl1'&gt;"+_obj.person_fullname+"&lt;/td&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&lt;td class='tbl1'&gt;";&#10;&#9;&#9;for (_stat in _obj.stats)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;RES_STR += "&lt;p&gt;"+_stat.status_name+":&lt;/p&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&lt;p&gt;";&#10;&#9;&#9;&#9;&#10;&#9;&#9;&#9;for (_pa in _stat.pas)&#10;&#9;&#9;&#9;&#9;RES_STR += _pa.expert_fullname+"&amp;nbsp;("+_pa.percent+"%)&lt;BR/&gt;";&#9;&#10;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;RES_STR += "&lt;/p&gt;"&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#10;&#9;&#9;}&#10;&#9;&#9;RES_STR += "&lt;/td&gt;";&#9;&#9;&#10;&#9;&#9;&#10;&#9;&#9;RES_STR += "&lt;td class='tbl1'&gt;анкет - "+_obj.done_pa_amount+"  из "+ _obj.total_pa_amount+"&lt;/td&gt;&#10;&#9;&#9;&#9;&#9;&#9;&lt;/tr&gt;";&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#10;&#9;}&#10;&#9;&#10;&#9;RES_STR += "&#10;&#9;&lt;/table&gt;";&#10;&#9;Response.Write ( RES_STR );&#10;&#9;tools_web.remove_user_data("excel_html_" + curUserID);&#10;&#9;tools_web.set_user_data( "excel_html_" + curUserID , { 'html': RES_STR }, 86000 ); &#10;&#9;//Session.excel_html = RES_STR;&#9;&#10;}&#10;&#10;&#9;&#9;&#10;&#10;&#10;&#10;%&gt;</html>
			<use_session_cache>false</use_session_cache>
			<cwt_type>default</cwt_type>
			<out_type>undefined</out_type>
			<access>
				<access_level>0</access_level>
			</access>
			<doc_info>
				<creation>
					<user_login>user1</user_login>
					<date>2010-05-26T13:48:37Z</date>
				</creation>
				<modification>
					<user_login>admin</user_login>
					<user_id>6148914691236517121</user_id>
					<date>2021-06-28T13:27:13Z</date>
				</modification>
			</doc_info>
			<is_std>false</is_std>
			<changed>false</changed>
			<is_enabled>true</is_enabled>
		</custom_web_template>
		<custom_web_template>
			<id>0x4BFB6FDE33750F6F</id>
			<code>websoft_report_360_7</code>
			<name>Статистика по Оценивающим сотрудникам</name>
			<category>websoft</category>
			<exec_code>
				<code_text>&lt;%&#9;&#10;// автор: OV&#10;// создан:  27.05.2010&#10;// измененен: &#10;// -----------------------------------------------------------Описание-------------------------------------------------------&#10;// отчет по статистике - в разрезе Оценивающих&#10;// -----------------------------------------------------------Предупреждение-------------------------------------------------&#10;// &lt;нет&gt;&#10;// -----------------------------------------------------------Параметры агента-----------------------------------------------&#10;// &lt;нет&gt;&#10;// -----------------------------------------------------------Константы------------------------------------------------------&#10;// &lt;нет&gt;&#10;//---------------------------------------------------------------------------------------------------------------------------&#10;&#10;RES_STR = "";&#10;RES_STR += '&lt;style&gt;&#10;.tbl1&#10;{&#10;vertical-align:center;&#10;border:1px solid #000;&#10;border-collapse:collapse;&#10;margin: 5;&#10;}&#10;.tbl1_header&#10;{&#10;border:1px solid #000;&#10;vertical-align:center;&#10;font-weight:bold;&#10;text-align:center;&#10;background-color:lightgrey;&#10;&#10;}&#10;.tbl1_number&#10;{&#10;border:1px solid #000;&#10;vertical-align:top;&#10;font-weight:bold;&#10;text-align:center;&#10;}&#10;.header&#10;{&#10;font-size:12pt;&#10;font-weight:bold;&#10;}&#10;.tbl1_td&#10;{&#10;border:1px solid #000;&#10;}&#10;&lt;/style&gt;&#10;';&#10;&#10;&#10;// массив оценочных процедур&#10;ass_app_array = XQuery("for $elem in assessment_appraises where $elem/is_model=false() return $elem ");&#10;&#10;// ***********************************************************ОСНОВНАЯ ОБЛАСТЬ**********************************************&#10;%&gt;&#9;&#10;&#10;&#10;&lt;center&gt;&#10;&lt;FORM NAME="ass_app_form" action="&lt;%= tools_web.get_query_string( true, "ass_app"); %&gt;" METHOD="post"" enctype="multipart/form-data"&gt;&#10;&lt;P&gt;&#10;&lt;table&gt;&#10;&lt;tr&gt;&lt;td&gt;Выберите оценочную процедуру:&amp;nbsp;&lt;/td&gt;&#10;&lt;td&gt;&lt;SELECT name = "ass_app" id = "ass_app"&gt;&#10;&lt;%&#10;&#9;if ( ( !Request.Form.HasProperty ( 'ass_app' ) ) || ( Request.Form.GetProperty ( 'ass_app' ) == "") )&#10;&#9;{&#10;&#9;&#9;%&gt;&lt;OPTION value = "" selected&gt; - &lt;/OPTION&gt;&lt;%&#10;&#9;}&#10;&#9;for ( ass in ass_app_array )&#10;&#9;{&#10;&#9;&#9;_select_flag = "";&#10;&#9;&#9;if ( Request.Form.HasProperty( 'ass_app' ) &amp;&amp; Int ( Request.Form.GetProperty( 'ass_app' ) ) == Int ( ass.id ) )&#10;&#9;&#9;{&#10;&#9;&#9;&#9;_select_flag = "selected";&#10;&#9;&#9;}&#10;%&gt;&#10;&#9;&#9;&lt;OPTION &lt;%=_select_flag%&gt; value = "&lt;%=ass.id%&gt;"&gt;&lt;%=ass.name%&gt;&lt;/OPTION&gt;&#10;&lt;%&#10;&#9;}&#10;%&gt;&#10;&lt;/SELECT&gt;&lt;/td&gt;&#10;&lt;/tr&gt;&#10;&lt;/table&gt;&#10;&lt;/P&gt;&#10;&lt;P&gt;&#10;&#9;&lt;input value="Сформировать отчет" onclick="this.form.submit();" style = "{width:200px;}" type="button" class="inputButton" onMouseOver="this.className='inputButtonOver';" onMouseOut="this.className='inputButton';"&gt;&amp;nbsp;&#10;&#9;&lt;INPUT type="button" value="Экспорт в Excel" onclick="modalWin=window.open('assessment_excel_export.html','','')" class="inputButton" onMouseOver="this.className='inputButtonOver';" onMouseOut="this.className='inputButton';"/&gt;&#10;&lt;%Request.Form.action = "";%&gt;  &#10;&lt;/P&gt;&#10;&lt;/FORM&gt;&#10;&lt;/center&gt;&#10;&lt;br&gt;&#10;&#10;&lt;%&#10;assID = 0; &#10;subID = 0;&#10;bossID = 0;&#10;PersonArray = new Array ();&#10;Table = new Array ();&#10;&#10;if ( Request.Form.HasProperty( 'ass_app' ) &amp;&amp; Request.Form.GetProperty( 'ass_app' ) != "" ) &#10;{&#10;&#9;try&#10;&#9;{&#10;&#9;&#9;assID = Int ( Request.Form.GetProperty( 'ass_app' ) );&#10;&#9;&#9;assDoc=OpenDoc(UrlFromDocID(assID)).TopElem;&#10;&#9;}&#10;&#9;catch ( err )&#10;&#9;{&#10;&#9;&#9;alert (err);&#10;&#9;}&#9;&#10;&#9;&#10;&#9;// данные для отчета&#10;&#9;RESULT_ARRAY = Array();&#10;&#9;pa_array = XQuery("for $elem in pas where $elem/assessment_appraise_id="+assID+" return $elem");&#10;&#9;for (_pa in pa_array)&#9;&#9;&#10;&#9;{&#10;&#9;&#9;_expert = ArrayOptFind(RESULT_ARRAY,"This.expert_id=="+_pa.expert_person_id);&#10;&#9;&#9;if (_expert==undefined)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;obj = Object();&#10;&#9;&#9;&#9;obj.expert_id = _pa.expert_person_id;&#10;&#9;&#9;&#9;obj.expert_fullname = _pa.expert_person_fullname;&#9;&#9;&#10;&#9;&#9;&#9;obj.expert_position_name = _pa.expert_person_position_name;&#9;&#10;&#9;&#9;&#9;obj.done_pa_amount = 0;&#9;// кол-во заполненные анкеты&#10;&#9;&#9;&#9;obj.done_pa_persons = "";&#9;// список оцениваемых (из заполнен анкет)&#10;&#9;&#9;&#9;obj.not_done_pa_amount = 0;&#9;// кол-во не заполненные анкеты&#9;&#10;&#9;&#9;&#9;obj.not_done_pa_persons = "";&#9;// список оцениваемых (из не запол анкет)&#10;&#9;&#9;        RESULT_ARRAY [ArrayCount(RESULT_ARRAY)] = obj;&#9;&#10;&#9;&#9;}&#10;&#9;&#9;else&#10;&#9;&#9;{&#10;&#9;&#9;&#9;obj = _expert;&#10;&#9;&#9;}&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#10;&#9;&#9;try &#10;&#9;&#9;{&#10;&#9;&#9;&#9;_paDoc = OpenDoc(UrlFromDocID(_pa.id)).TopElem;&#10;&#9;&#9;}&#10;&#9;&#9;catch (err)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;alert ('ОШИБКА: карточка анкеты недоступна. '+err);&#10;&#9;&#9;}&#10;&#9;&#9;total_comp_count = ArrayCount(_paDoc.competences);&#10;&#9;&#9;done_comp_count = ArrayCount( ArraySelect(_paDoc.competences,"This.mark.HasValue") );&#10;&#9;&#9;if (total_comp_count==done_comp_count)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;obj.done_pa_amount++;&#10;&#9;&#9;&#9;obj.done_pa_persons += _pa.person_fullname+"&lt;BR/&gt;";&#9;&#9;&#9;&#9;&#10;&#9;&#9;}&#10;&#9;&#9;else&#10;&#9;&#9;{&#10;&#9;&#9;&#9;obj.not_done_pa_amount++;&#10;&#9;&#9;&#9;obj.not_done_pa_persons += _pa.person_fullname+"&lt;BR/&gt;";&#9;&#9;&#9;&#10;&#9;&#9;}&#10;&#9;&#9;&#10;&#10;&#9;&#10;&#9;}&#10;&#10;&#9;RES_STR += "&lt;center&gt;&lt;P class='header'&gt;Статистика по Оценивающим&lt;/P&gt;&lt;/center&gt;";&#10;&#9;RES_STR += "&lt;P class='header'&gt;Процедура: "+assDoc.name+" &lt;/P&gt;";&#9;&#10;&#9;RES_STR += "&lt;P class='header'&gt;Период с: "+assDoc.start_date +" по " +assDoc.end_date+" &lt;/P&gt;";&#9;&#9;&#10;&#9;&#10;&#9;RES_STR += "&#10;&#9;&lt;TABLE class='tbl1' cellpadding=5&gt;&#10;&#9;&lt;tr&gt;&#10;&#9;&#9;&lt;td class='tbl1_header'&gt; Оценивающий сотрудник &lt;/td&gt;&#10;&#9;&#9;&lt;td class='tbl1_header'&gt; Статистика по заполненным анкетам &lt;/td&gt;&#10;&#9;&lt;/tr&gt;";&#9;&#10;&#9;&#10;&#9;for (_obj in RESULT_ARRAY)&#10;&#9;{&#10;&#9;&#9;RES_STR += "&lt;tr&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&lt;td class='tbl1'&gt;"+_obj.expert_fullname+"&lt;BR/&gt;"+_obj.expert_position_name+"&lt;/td&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&lt;td class='tbl1'&gt;";&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#10;&#9;&#9;RES_STR += "&lt;p&gt;&lt;b&gt;Заполнено на 100%("+_obj.done_pa_amount+" из "+(_obj.done_pa_amount+_obj.not_done_pa_amount)+")&lt;/b&gt;&lt;/p&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&lt;p&gt;"+_obj.done_pa_persons+"&lt;/p&gt;";&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#10;&#9;&#9;RES_STR += "&lt;p&gt;&lt;b&gt;Не заполненные анкеты("+_obj.not_done_pa_amount+" из "+(_obj.done_pa_amount+_obj.not_done_pa_amount)+")&lt;/b&gt;&lt;/p&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&lt;p&gt;"+_obj.not_done_pa_persons+"&lt;/p&gt;";&#9;&#9;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#10;&#9;&#9;RES_STR += "&lt;/td&gt;&lt;/tr&gt;";&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#10;&#9;}&#10;&#9;&#10;&#9;RES_STR += "&#10;&#9;&lt;/table&gt;";&#10;&#9;Response.Write ( RES_STR );&#10;&#9;//Session.excel_html = RES_STR;&#9;&#10;&#9;tools_web.remove_user_data("excel_html_" + curUserID);&#10;&#9;tools_web.set_user_data( "excel_html_" + curUserID , { 'html': RES_STR }, 86000 ); &#10;}&#10;&#10;&#9;&#9;&#10;&#10;&#10;&#10;%&gt;</code_text>
			</exec_code>
			<html>&lt;%&#9;&#10;// автор: OV&#10;// создан:  27.05.2010&#10;// измененен: &#10;// -----------------------------------------------------------Описание-------------------------------------------------------&#10;// отчет по статистике - в разрезе Оценивающих&#10;// -----------------------------------------------------------Предупреждение-------------------------------------------------&#10;// &lt;нет&gt;&#10;// -----------------------------------------------------------Параметры агента-----------------------------------------------&#10;// &lt;нет&gt;&#10;// -----------------------------------------------------------Константы------------------------------------------------------&#10;// &lt;нет&gt;&#10;//---------------------------------------------------------------------------------------------------------------------------&#10;&#10;RES_STR = "";&#10;RES_STR += '&lt;style&gt;&#10;.tbl1&#10;{&#10;vertical-align:center;&#10;border:1px solid #000;&#10;border-collapse:collapse;&#10;margin: 5;&#10;}&#10;.tbl1_header&#10;{&#10;border:1px solid #000;&#10;vertical-align:center;&#10;font-weight:bold;&#10;text-align:center;&#10;background-color:lightgrey;&#10;&#10;}&#10;.tbl1_number&#10;{&#10;border:1px solid #000;&#10;vertical-align:top;&#10;font-weight:bold;&#10;text-align:center;&#10;}&#10;.header&#10;{&#10;font-size:12pt;&#10;font-weight:bold;&#10;}&#10;.tbl1_td&#10;{&#10;border:1px solid #000;&#10;}&#10;&lt;/style&gt;&#10;';&#10;&#10;&#10;// массив оценочных процедур&#10;ass_app_array = XQuery("for $elem in assessment_appraises where $elem/is_model=false() return $elem ");&#10;&#10;// ***********************************************************ОСНОВНАЯ ОБЛАСТЬ**********************************************&#10;%&gt;&#9;&#10;&#10;&#10;&lt;center&gt;&#10;&lt;FORM NAME="ass_app_form" action="&lt;%= tools_web.get_query_string( true, "ass_app"); %&gt;" METHOD="post"" enctype="multipart/form-data"&gt;&#10;&lt;P&gt;&#10;&lt;table&gt;&#10;&lt;tr&gt;&lt;td&gt;Выберите оценочную процедуру:&amp;nbsp;&lt;/td&gt;&#10;&lt;td&gt;&lt;SELECT name = "ass_app" id = "ass_app"&gt;&#10;&lt;%&#10;&#9;if ( ( !Request.Form.HasProperty ( 'ass_app' ) ) || ( Request.Form.GetProperty ( 'ass_app' ) == "") )&#10;&#9;{&#10;&#9;&#9;%&gt;&lt;OPTION value = "" selected&gt; - &lt;/OPTION&gt;&lt;%&#10;&#9;}&#10;&#9;for ( ass in ass_app_array )&#10;&#9;{&#10;&#9;&#9;_select_flag = "";&#10;&#9;&#9;if ( Request.Form.HasProperty( 'ass_app' ) &amp;&amp; Int ( Request.Form.GetProperty( 'ass_app' ) ) == Int ( ass.id ) )&#10;&#9;&#9;{&#10;&#9;&#9;&#9;_select_flag = "selected";&#10;&#9;&#9;}&#10;%&gt;&#10;&#9;&#9;&lt;OPTION &lt;%=_select_flag%&gt; value = "&lt;%=ass.id%&gt;"&gt;&lt;%=ass.name%&gt;&lt;/OPTION&gt;&#10;&lt;%&#10;&#9;}&#10;%&gt;&#10;&lt;/SELECT&gt;&lt;/td&gt;&#10;&lt;/tr&gt;&#10;&lt;/table&gt;&#10;&lt;/P&gt;&#10;&lt;P&gt;&#10;&#9;&lt;input value="Сформировать отчет" onclick="this.form.submit();" style = "{width:200px;}" type="button" class="inputButton" onMouseOver="this.className='inputButtonOver';" onMouseOut="this.className='inputButton';"&gt;&amp;nbsp;&#10;&#9;&lt;INPUT type="button" value="Экспорт в Excel" onclick="modalWin=window.open('assessment_excel_export.html','','')" class="inputButton" onMouseOver="this.className='inputButtonOver';" onMouseOut="this.className='inputButton';"/&gt;&#10;&lt;%Request.Form.action = "";%&gt;  &#10;&lt;/P&gt;&#10;&lt;/FORM&gt;&#10;&lt;/center&gt;&#10;&lt;br&gt;&#10;&#10;&lt;%&#10;assID = 0; &#10;subID = 0;&#10;bossID = 0;&#10;PersonArray = new Array ();&#10;Table = new Array ();&#10;&#10;if ( Request.Form.HasProperty( 'ass_app' ) &amp;&amp; Request.Form.GetProperty( 'ass_app' ) != "" ) &#10;{&#10;&#9;try&#10;&#9;{&#10;&#9;&#9;assID = Int ( Request.Form.GetProperty( 'ass_app' ) );&#10;&#9;&#9;assDoc=OpenDoc(UrlFromDocID(assID)).TopElem;&#10;&#9;}&#10;&#9;catch ( err )&#10;&#9;{&#10;&#9;&#9;alert (err);&#10;&#9;}&#9;&#10;&#9;&#10;&#9;// данные для отчета&#10;&#9;RESULT_ARRAY = Array();&#10;&#9;pa_array = XQuery("for $elem in pas where $elem/assessment_appraise_id="+assID+" return $elem");&#10;&#9;for (_pa in pa_array)&#9;&#9;&#10;&#9;{&#10;&#9;&#9;_expert = ArrayOptFind(RESULT_ARRAY,"This.expert_id=="+_pa.expert_person_id);&#10;&#9;&#9;if (_expert==undefined)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;obj = Object();&#10;&#9;&#9;&#9;obj.expert_id = _pa.expert_person_id;&#10;&#9;&#9;&#9;obj.expert_fullname = _pa.expert_person_fullname;&#9;&#9;&#10;&#9;&#9;&#9;obj.expert_position_name = _pa.expert_person_position_name;&#9;&#10;&#9;&#9;&#9;obj.done_pa_amount = 0;&#9;// кол-во заполненные анкеты&#10;&#9;&#9;&#9;obj.done_pa_persons = "";&#9;// список оцениваемых (из заполнен анкет)&#10;&#9;&#9;&#9;obj.not_done_pa_amount = 0;&#9;// кол-во не заполненные анкеты&#9;&#10;&#9;&#9;&#9;obj.not_done_pa_persons = "";&#9;// список оцениваемых (из не запол анкет)&#10;&#9;&#9;        RESULT_ARRAY [ArrayCount(RESULT_ARRAY)] = obj;&#9;&#10;&#9;&#9;}&#10;&#9;&#9;else&#10;&#9;&#9;{&#10;&#9;&#9;&#9;obj = _expert;&#10;&#9;&#9;}&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#10;&#9;&#9;try &#10;&#9;&#9;{&#10;&#9;&#9;&#9;_paDoc = OpenDoc(UrlFromDocID(_pa.id)).TopElem;&#10;&#9;&#9;}&#10;&#9;&#9;catch (err)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;alert ('ОШИБКА: карточка анкеты недоступна. '+err);&#10;&#9;&#9;}&#10;&#9;&#9;total_comp_count = ArrayCount(_paDoc.competences);&#10;&#9;&#9;done_comp_count = ArrayCount( ArraySelect(_paDoc.competences,"This.mark.HasValue") );&#10;&#9;&#9;if (total_comp_count==done_comp_count)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;obj.done_pa_amount++;&#10;&#9;&#9;&#9;obj.done_pa_persons += _pa.person_fullname+"&lt;BR/&gt;";&#9;&#9;&#9;&#9;&#10;&#9;&#9;}&#10;&#9;&#9;else&#10;&#9;&#9;{&#10;&#9;&#9;&#9;obj.not_done_pa_amount++;&#10;&#9;&#9;&#9;obj.not_done_pa_persons += _pa.person_fullname+"&lt;BR/&gt;";&#9;&#9;&#9;&#10;&#9;&#9;}&#10;&#9;&#9;&#10;&#10;&#9;&#10;&#9;}&#10;&#10;&#9;RES_STR += "&lt;center&gt;&lt;P class='header'&gt;Статистика по Оценивающим&lt;/P&gt;&lt;/center&gt;";&#10;&#9;RES_STR += "&lt;P class='header'&gt;Процедура: "+assDoc.name+" &lt;/P&gt;";&#9;&#10;&#9;RES_STR += "&lt;P class='header'&gt;Период с: "+assDoc.start_date +" по " +assDoc.end_date+" &lt;/P&gt;";&#9;&#9;&#10;&#9;&#10;&#9;RES_STR += "&#10;&#9;&lt;TABLE class='tbl1' cellpadding=5&gt;&#10;&#9;&lt;tr&gt;&#10;&#9;&#9;&lt;td class='tbl1_header'&gt; Оценивающий сотрудник &lt;/td&gt;&#10;&#9;&#9;&lt;td class='tbl1_header'&gt; Статистика по заполненным анкетам &lt;/td&gt;&#10;&#9;&lt;/tr&gt;";&#9;&#10;&#9;&#10;&#9;for (_obj in RESULT_ARRAY)&#10;&#9;{&#10;&#9;&#9;RES_STR += "&lt;tr&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&lt;td class='tbl1'&gt;"+_obj.expert_fullname+"&lt;BR/&gt;"+_obj.expert_position_name+"&lt;/td&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&lt;td class='tbl1'&gt;";&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#10;&#9;&#9;RES_STR += "&lt;p&gt;&lt;b&gt;Заполнено на 100%("+_obj.done_pa_amount+" из "+(_obj.done_pa_amount+_obj.not_done_pa_amount)+")&lt;/b&gt;&lt;/p&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&lt;p&gt;"+_obj.done_pa_persons+"&lt;/p&gt;";&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#10;&#9;&#9;RES_STR += "&lt;p&gt;&lt;b&gt;Не заполненные анкеты("+_obj.not_done_pa_amount+" из "+(_obj.done_pa_amount+_obj.not_done_pa_amount)+")&lt;/b&gt;&lt;/p&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&lt;p&gt;"+_obj.not_done_pa_persons+"&lt;/p&gt;";&#9;&#9;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#10;&#9;&#9;RES_STR += "&lt;/td&gt;&lt;/tr&gt;";&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#10;&#9;}&#10;&#9;&#10;&#9;RES_STR += "&#10;&#9;&lt;/table&gt;";&#10;&#9;Response.Write ( RES_STR );&#10;&#9;//Session.excel_html = RES_STR;&#9;&#10;&#9;tools_web.remove_user_data("excel_html_" + curUserID);&#10;&#9;tools_web.set_user_data( "excel_html_" + curUserID , { 'html': RES_STR }, 86000 ); &#10;}&#10;&#10;&#9;&#9;&#10;&#10;&#10;&#10;%&gt;</html>
			<use_session_cache>false</use_session_cache>
			<cwt_type>default</cwt_type>
			<out_type>undefined</out_type>
			<access>
				<access_level>0</access_level>
			</access>
			<doc_info>
				<creation>
					<user_login>user1</user_login>
					<date>2010-05-27T10:16:37Z</date>
				</creation>
				<modification>
					<user_login>admin</user_login>
					<user_id>6148914691236517121</user_id>
					<date>2021-06-28T13:27:13Z</date>
				</modification>
			</doc_info>
			<is_std>false</is_std>
			<changed>false</changed>
			<is_enabled>true</is_enabled>
		</custom_web_template>
		<custom_web_template>
			<id>0x56FBB9347EBD3B28</id>
			<code>websoft_report_360_8</code>
			<name>Общая статистика по  Оцениваемым сотрудникам</name>
			<category>websoft</category>
			<exec_code>
				<code_text>&lt;%&#9;&#10;// автор: OV&#10;// создан:  26.05.2010&#10;// изменен 13.04.2015 (TAS) доработка под версию 3 экспорта&#10;// -----------------------------------------------------------Описание-------------------------------------------------------&#10;// отчет по статистике - в разрезе оцениваемых оцениваемых  (кто заполнил, кто не заполнил) &#10;// -----------------------------------------------------------Предупреждение-------------------------------------------------&#10;// &lt;нет&gt;&#10;// -----------------------------------------------------------Параметры агента-----------------------------------------------&#10;// &lt;нет&gt;&#10;// -----------------------------------------------------------Константы------------------------------------------------------&#10;// &lt;нет&gt;&#10;//---------------------------------------------------------------------------------------------------------------------------&#10;&#10;RES_STR = "";&#10;RES_STR += '&lt;style&gt;&#10;.tbl1&#10;{&#10;vertical-align:center;&#10;border:1px solid #000;&#10;border-collapse:collapse;&#10;margin: 5;&#10;}&#10;.tbl1_header&#10;{&#10;border:1px solid #000;&#10;vertical-align:center;&#10;font-weight:bold;&#10;text-align:center;&#10;background-color:lightgrey;&#10;&#10;}&#10;.tbl1_number&#10;{&#10;border:1px solid #000;&#10;vertical-align:top;&#10;font-weight:bold;&#10;text-align:center;&#10;}&#10;.header&#10;{&#10;font-size:12pt;&#10;font-weight:bold;&#10;}&#10;.tbl1_td&#10;{&#10;border:1px solid #000;&#10;}&#10;&lt;/style&gt;&#10;';&#10;&#10;// Типы оценок&#10;STATUS_ARRAY = {};&#10;&#10;STATUS_ARRAY["manager"] = "Руководитель";&#10;STATUS_ARRAY["staff"] = "Подчиненный";&#10;STATUS_ARRAY["coll"] = "Коллега";&#10;STATUS_ARRAY["self"] = "Самооценка";&#10;&#10;// Оценочные процедуры&#10;ass_app_array = XQuery("for $elem in assessment_appraises where $elem/is_model=false() return $elem ");&#10;&#10;// ***********************************************************ОСНОВНАЯ ОБЛАСТЬ**********************************************&#10;%&gt;&#9;&#10;&#10;&#10;&lt;center&gt;&#10;&lt;FORM NAME="ass_app_form" action="&lt;%= tools_web.get_query_string( true, "ass_app"); %&gt;" METHOD="post"" enctype="multipart/form-data"&gt;&#10;&lt;P&gt;&#10;&lt;table&gt;&#10;&lt;tr&gt;&lt;td&gt;Выберите оценочную процедуру:&amp;nbsp;&lt;/td&gt;&#10;&lt;td&gt;&lt;SELECT name = "ass_app" id = "ass_app"&gt;&#10;&lt;%&#10;&#9;if ( ( !Request.Form.HasProperty ( 'ass_app' ) ) || ( Request.Form.GetProperty ( 'ass_app' ) == "") )&#10;&#9;{&#10;&#9;&#9;%&gt;&lt;OPTION value = "" selected&gt; - &lt;/OPTION&gt;&lt;%&#10;&#9;}&#10;&#9;for ( ass in ass_app_array )&#10;&#9;{&#10;&#9;&#9;_select_flag = "";&#10;&#9;&#9;if ( Request.Form.HasProperty( 'ass_app' ) &amp;&amp; Int ( Request.Form.GetProperty( 'ass_app' ) ) == Int ( ass.id ) )&#10;&#9;&#9;{&#10;&#9;&#9;&#9;_select_flag = "selected";&#10;&#9;&#9;}&#10;%&gt;&#10;&#9;&#9;&lt;OPTION &lt;%=_select_flag%&gt; value = "&lt;%=ass.id%&gt;"&gt;&lt;%=ass.name%&gt;&lt;/OPTION&gt;&#10;&lt;%&#10;&#9;}&#10;%&gt;&#10;&lt;/SELECT&gt;&lt;/td&gt;&#10;&lt;/tr&gt;&#10;&lt;/table&gt;&#10;&lt;/P&gt;&#10;&lt;P&gt;&#10;&#9;&lt;input value="Сформировать отчет" onclick="this.form.submit();" style = "{width:200px;}" type="button" class="inputButton" onMouseOver="this.className='inputButtonOver';" onMouseOut="this.className='inputButton';"&gt;&amp;nbsp;&#10;&#9;&lt;INPUT type="button" value="Экспорт в Excel" onclick="modalWin=window.open('assessment_excel_export.html','','')" class="inputButton" onMouseOver="this.className='inputButtonOver';" onMouseOut="this.className='inputButton';"/&gt;&#10;&lt;%Request.Form.action = "";%&gt;  &#10;&lt;/P&gt;&#10;&lt;/FORM&gt;&#10;&lt;/center&gt;&#10;&lt;br&gt;&#10;&#10;&lt;%&#10;assID = 0; &#10;&#10;if ( Request.Form.HasProperty( 'ass_app' ) &amp;&amp; Request.Form.GetProperty( 'ass_app' ) != "" ) &#10;{&#10;&#9;try&#10;&#9;{&#10;&#9;// оценочная процедура&#10;&#9;&#9;assID = Int ( Request.Form.GetProperty( 'ass_app' ) );&#10;&#9;&#9;assDoc=OpenDoc(UrlFromDocID(assID)).TopElem;&#10;&#9;}&#10;&#9;catch ( err )&#10;&#9;{&#10;&#9;&#9;alert (err);&#10;&#9;}&#9;&#10;&#9;&#10;&#9;// массив данных для отчета&#10;&#9;RESULT_ARRAY = Array();&#10;&#9;// отберем планы по выбранной процедуре&#10;&#9;plan_array = XQuery("for $elem in assessment_plans where $elem/assessment_appraise_id="+assID+" return $elem");&#10;&#9;for (_plan in plan_array)&#9;&#9;&#10;&#9;{&#10;&#9;&#9;obj = Object();&#10;&#9;&#9;obj.person_id = _plan.person_id;&#10;&#9;&#9;obj.person_fullname = _plan.person_fullname;&#10;&#9;&#9;obj.person_position_name = _plan.person_position_name;&#10;&#9;&#9;obj.done_pa_experts = ""; &#9;// список оценивающих - заполнивших анкету&#10;&#9;&#9;obj.not_done_pa_experts = ""; &#9;// список оценивающих - НЕзаполнивших анкету&#9;&#9;&#10;&#9;&#9;// найдем анкеты по оцениваемому сотруднику&#10;&#9;&#9;person_pa_array = XQuery("for $elem in pas where $elem/assessment_appraise_id="+assID+" and $elem/person_id="+_plan.person_id+" return $elem");&#10;&#9;&#9;for (_pa in person_pa_array)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;try &#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;_paDoc = OpenDoc(UrlFromDocID(_pa.id)).TopElem;&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;catch (err)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;alert ('ОШИБКА: карточка анкеты недоступна. '+err);&#10;&#9;&#9;&#9;&#9;continue;&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;total_comp_count = ArrayCount(_paDoc.competences);&#10;&#9;&#9;&#9;done_comp_count = ArrayCount( ArraySelect(_paDoc.competences,"This.mark.HasValue") );&#10;&#9;&#9;&#9;try &#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;if (total_comp_count==done_comp_count)&#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;obj.done_pa_experts += "&lt;P&gt;"+_pa.expert_person_fullname+" ("+STATUS_ARRAY[_pa.status]+")&lt;/P&gt;";&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;else&#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;obj.not_done_pa_experts +=&#9;"&lt;P&gt;"+_pa.expert_person_fullname+" ("+STATUS_ARRAY[_pa.status]+")&lt;/P&gt;";&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;catch (err)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;alert (err);&#10;&#9;&#9;&#9;}&#10;&#9;&#9;}&#10;&#9;&#9;&#10;&#9;&#9;&#10;&#9;&#9;RESULT_ARRAY [ArrayCount(RESULT_ARRAY)] = obj;&#9;&#10;&#9;&#10;&#9;}&#10;&#10;&#9;RES_STR += "&lt;center&gt;&lt;P class='header'&gt;Статистика по оцениваемым&lt;/P&gt;&lt;/center&gt;";&#10;&#9;RES_STR += "&lt;P class='header'&gt;Процедура: "+assDoc.name+" &lt;/P&gt;";&#9;&#10;&#9;RES_STR += "&lt;P class='header'&gt;Период с: "+assDoc.start_date +" по " +assDoc.end_date+" &lt;/P&gt;";&#9;&#9;&#10;&#9;&#10;&#9;RES_STR += "&#10;&#9;&lt;TABLE class='tbl1' cellpadding=5&gt;&#10;&#9;&lt;tr&gt;&#10;&#9;&#9;&lt;td class='tbl1_header'&gt; Оцениваемый сотрудник &lt;/td&gt;&#10;&#9;&#9;&lt;td class='tbl1_header'&gt; Заполнили на 100% &lt;/td&gt;&#10;&#9;&#9;&lt;td class='tbl1_header'&gt; Не заполнили на 100% &lt;/td&gt;&#10;&#9;&lt;/tr&gt;";&#9;&#10;&#9;&#10;&#9;for (_obj in RESULT_ARRAY)&#10;&#9;{&#10;&#9;&#9;RES_STR += "&lt;tr&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&lt;td class='tbl1'&gt;"+_obj.person_fullname+"&lt;/td&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&lt;td class='tbl1'&gt;"+_obj.done_pa_experts+"&lt;/td&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&lt;td class='tbl1'&gt;"+_obj.not_done_pa_experts+"&lt;/td&gt;&#10;&#9;&#9;&#9;&#9;&#9;&lt;/tr&gt;";&#10;&#9;}&#10;&#9;&#10;&#9;RES_STR += "&#10;&#9;&lt;/table&gt;";&#10;&#10;&#9;Response.Write(RES_STR);&#10;&#9;//tools_web.remove_user_data("excel_html_" + curUserID);&#10;&#9;//Для этого клиента кодировку не меняем&#10;&#9;//tools_web.set_user_data("excel_html_" + curUserID, {'html': RES_STR}, 10000);&#10;&#9;tools_web.remove_user_data("excel_html_" + curUserID);&#10;&#9;tools_web.set_user_data( "excel_html_" + curUserID , { 'html': RES_STR }, 86000 ); &#10;}&#10;%&gt;</code_text>
			</exec_code>
			<html>&lt;%&#9;&#10;// автор: OV&#10;// создан:  26.05.2010&#10;// изменен 13.04.2015 (TAS) доработка под версию 3 экспорта&#10;// -----------------------------------------------------------Описание-------------------------------------------------------&#10;// отчет по статистике - в разрезе оцениваемых оцениваемых  (кто заполнил, кто не заполнил) &#10;// -----------------------------------------------------------Предупреждение-------------------------------------------------&#10;// &lt;нет&gt;&#10;// -----------------------------------------------------------Параметры агента-----------------------------------------------&#10;// &lt;нет&gt;&#10;// -----------------------------------------------------------Константы------------------------------------------------------&#10;// &lt;нет&gt;&#10;//---------------------------------------------------------------------------------------------------------------------------&#10;&#10;RES_STR = "";&#10;RES_STR += '&lt;style&gt;&#10;.tbl1&#10;{&#10;vertical-align:center;&#10;border:1px solid #000;&#10;border-collapse:collapse;&#10;margin: 5;&#10;}&#10;.tbl1_header&#10;{&#10;border:1px solid #000;&#10;vertical-align:center;&#10;font-weight:bold;&#10;text-align:center;&#10;background-color:lightgrey;&#10;&#10;}&#10;.tbl1_number&#10;{&#10;border:1px solid #000;&#10;vertical-align:top;&#10;font-weight:bold;&#10;text-align:center;&#10;}&#10;.header&#10;{&#10;font-size:12pt;&#10;font-weight:bold;&#10;}&#10;.tbl1_td&#10;{&#10;border:1px solid #000;&#10;}&#10;&lt;/style&gt;&#10;';&#10;&#10;// Типы оценок&#10;STATUS_ARRAY = {};&#10;&#10;STATUS_ARRAY["manager"] = "Руководитель";&#10;STATUS_ARRAY["staff"] = "Подчиненный";&#10;STATUS_ARRAY["coll"] = "Коллега";&#10;STATUS_ARRAY["self"] = "Самооценка";&#10;&#10;// Оценочные процедуры&#10;ass_app_array = XQuery("for $elem in assessment_appraises where $elem/is_model=false() return $elem ");&#10;&#10;// ***********************************************************ОСНОВНАЯ ОБЛАСТЬ**********************************************&#10;%&gt;&#9;&#10;&#10;&#10;&lt;center&gt;&#10;&lt;FORM NAME="ass_app_form" action="&lt;%= tools_web.get_query_string( true, "ass_app"); %&gt;" METHOD="post"" enctype="multipart/form-data"&gt;&#10;&lt;P&gt;&#10;&lt;table&gt;&#10;&lt;tr&gt;&lt;td&gt;Выберите оценочную процедуру:&amp;nbsp;&lt;/td&gt;&#10;&lt;td&gt;&lt;SELECT name = "ass_app" id = "ass_app"&gt;&#10;&lt;%&#10;&#9;if ( ( !Request.Form.HasProperty ( 'ass_app' ) ) || ( Request.Form.GetProperty ( 'ass_app' ) == "") )&#10;&#9;{&#10;&#9;&#9;%&gt;&lt;OPTION value = "" selected&gt; - &lt;/OPTION&gt;&lt;%&#10;&#9;}&#10;&#9;for ( ass in ass_app_array )&#10;&#9;{&#10;&#9;&#9;_select_flag = "";&#10;&#9;&#9;if ( Request.Form.HasProperty( 'ass_app' ) &amp;&amp; Int ( Request.Form.GetProperty( 'ass_app' ) ) == Int ( ass.id ) )&#10;&#9;&#9;{&#10;&#9;&#9;&#9;_select_flag = "selected";&#10;&#9;&#9;}&#10;%&gt;&#10;&#9;&#9;&lt;OPTION &lt;%=_select_flag%&gt; value = "&lt;%=ass.id%&gt;"&gt;&lt;%=ass.name%&gt;&lt;/OPTION&gt;&#10;&lt;%&#10;&#9;}&#10;%&gt;&#10;&lt;/SELECT&gt;&lt;/td&gt;&#10;&lt;/tr&gt;&#10;&lt;/table&gt;&#10;&lt;/P&gt;&#10;&lt;P&gt;&#10;&#9;&lt;input value="Сформировать отчет" onclick="this.form.submit();" style = "{width:200px;}" type="button" class="inputButton" onMouseOver="this.className='inputButtonOver';" onMouseOut="this.className='inputButton';"&gt;&amp;nbsp;&#10;&#9;&lt;INPUT type="button" value="Экспорт в Excel" onclick="modalWin=window.open('assessment_excel_export.html','','')" class="inputButton" onMouseOver="this.className='inputButtonOver';" onMouseOut="this.className='inputButton';"/&gt;&#10;&lt;%Request.Form.action = "";%&gt;  &#10;&lt;/P&gt;&#10;&lt;/FORM&gt;&#10;&lt;/center&gt;&#10;&lt;br&gt;&#10;&#10;&lt;%&#10;assID = 0; &#10;&#10;if ( Request.Form.HasProperty( 'ass_app' ) &amp;&amp; Request.Form.GetProperty( 'ass_app' ) != "" ) &#10;{&#10;&#9;try&#10;&#9;{&#10;&#9;// оценочная процедура&#10;&#9;&#9;assID = Int ( Request.Form.GetProperty( 'ass_app' ) );&#10;&#9;&#9;assDoc=OpenDoc(UrlFromDocID(assID)).TopElem;&#10;&#9;}&#10;&#9;catch ( err )&#10;&#9;{&#10;&#9;&#9;alert (err);&#10;&#9;}&#9;&#10;&#9;&#10;&#9;// массив данных для отчета&#10;&#9;RESULT_ARRAY = Array();&#10;&#9;// отберем планы по выбранной процедуре&#10;&#9;plan_array = XQuery("for $elem in assessment_plans where $elem/assessment_appraise_id="+assID+" return $elem");&#10;&#9;for (_plan in plan_array)&#9;&#9;&#10;&#9;{&#10;&#9;&#9;obj = Object();&#10;&#9;&#9;obj.person_id = _plan.person_id;&#10;&#9;&#9;obj.person_fullname = _plan.person_fullname;&#10;&#9;&#9;obj.person_position_name = _plan.person_position_name;&#10;&#9;&#9;obj.done_pa_experts = ""; &#9;// список оценивающих - заполнивших анкету&#10;&#9;&#9;obj.not_done_pa_experts = ""; &#9;// список оценивающих - НЕзаполнивших анкету&#9;&#9;&#10;&#9;&#9;// найдем анкеты по оцениваемому сотруднику&#10;&#9;&#9;person_pa_array = XQuery("for $elem in pas where $elem/assessment_appraise_id="+assID+" and $elem/person_id="+_plan.person_id+" return $elem");&#10;&#9;&#9;for (_pa in person_pa_array)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;try &#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;_paDoc = OpenDoc(UrlFromDocID(_pa.id)).TopElem;&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;catch (err)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;alert ('ОШИБКА: карточка анкеты недоступна. '+err);&#10;&#9;&#9;&#9;&#9;continue;&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;total_comp_count = ArrayCount(_paDoc.competences);&#10;&#9;&#9;&#9;done_comp_count = ArrayCount( ArraySelect(_paDoc.competences,"This.mark.HasValue") );&#10;&#9;&#9;&#9;try &#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;if (total_comp_count==done_comp_count)&#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;obj.done_pa_experts += "&lt;P&gt;"+_pa.expert_person_fullname+" ("+STATUS_ARRAY[_pa.status]+")&lt;/P&gt;";&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;else&#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;obj.not_done_pa_experts +=&#9;"&lt;P&gt;"+_pa.expert_person_fullname+" ("+STATUS_ARRAY[_pa.status]+")&lt;/P&gt;";&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;catch (err)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;alert (err);&#10;&#9;&#9;&#9;}&#10;&#9;&#9;}&#10;&#9;&#9;&#10;&#9;&#9;&#10;&#9;&#9;RESULT_ARRAY [ArrayCount(RESULT_ARRAY)] = obj;&#9;&#10;&#9;&#10;&#9;}&#10;&#10;&#9;RES_STR += "&lt;center&gt;&lt;P class='header'&gt;Статистика по оцениваемым&lt;/P&gt;&lt;/center&gt;";&#10;&#9;RES_STR += "&lt;P class='header'&gt;Процедура: "+assDoc.name+" &lt;/P&gt;";&#9;&#10;&#9;RES_STR += "&lt;P class='header'&gt;Период с: "+assDoc.start_date +" по " +assDoc.end_date+" &lt;/P&gt;";&#9;&#9;&#10;&#9;&#10;&#9;RES_STR += "&#10;&#9;&lt;TABLE class='tbl1' cellpadding=5&gt;&#10;&#9;&lt;tr&gt;&#10;&#9;&#9;&lt;td class='tbl1_header'&gt; Оцениваемый сотрудник &lt;/td&gt;&#10;&#9;&#9;&lt;td class='tbl1_header'&gt; Заполнили на 100% &lt;/td&gt;&#10;&#9;&#9;&lt;td class='tbl1_header'&gt; Не заполнили на 100% &lt;/td&gt;&#10;&#9;&lt;/tr&gt;";&#9;&#10;&#9;&#10;&#9;for (_obj in RESULT_ARRAY)&#10;&#9;{&#10;&#9;&#9;RES_STR += "&lt;tr&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&lt;td class='tbl1'&gt;"+_obj.person_fullname+"&lt;/td&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&lt;td class='tbl1'&gt;"+_obj.done_pa_experts+"&lt;/td&gt;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&lt;td class='tbl1'&gt;"+_obj.not_done_pa_experts+"&lt;/td&gt;&#10;&#9;&#9;&#9;&#9;&#9;&lt;/tr&gt;";&#10;&#9;}&#10;&#9;&#10;&#9;RES_STR += "&#10;&#9;&lt;/table&gt;";&#10;&#10;&#9;Response.Write(RES_STR);&#10;&#9;//tools_web.remove_user_data("excel_html_" + curUserID);&#10;&#9;//Для этого клиента кодировку не меняем&#10;&#9;//tools_web.set_user_data("excel_html_" + curUserID, {'html': RES_STR}, 10000);&#10;&#9;tools_web.remove_user_data("excel_html_" + curUserID);&#10;&#9;tools_web.set_user_data( "excel_html_" + curUserID , { 'html': RES_STR }, 86000 ); &#10;}&#10;%&gt;</html>
			<use_session_cache>false</use_session_cache>
			<cwt_type>default</cwt_type>
			<out_type>undefined</out_type>
			<access>
				<access_level>0</access_level>
			</access>
			<doc_info>
				<creation>
					<user_login>user1</user_login>
					<date>2010-05-27T12:45:55Z</date>
				</creation>
				<modification>
					<user_login>admin</user_login>
					<user_id>6148914691236517121</user_id>
					<date>2021-06-28T13:27:13Z</date>
				</modification>
			</doc_info>
			<is_std>false</is_std>
			<changed>false</changed>
			<is_enabled>true</is_enabled>
		</custom_web_template>
		<custom_web_template>
			<id>0x4982C92955A96396</id>
			<code>uni-estimation-coll-results-part2</code>
			<name>Результаты оценки сотрудников (Универсальный отчет) часть2</name>
			<category>websoft</category>
			<exec_code>
				<code_text>&lt;%&#10;alert ("uni-estimation-coll-results-part2- started");&#10;EXCEL_TABLE = "";&#10;        if (ArrayCount(_persons_Array)&gt;0)&#10;{&#10;    _persons_Array=ArraySort(_persons_Array,'person_name','+');&#10;    _col_exp=ArrayMax( _persons_Array, 'expCount' ).expCount;&#10;    _col_func=ArrayMax( _persons_Array, 'funcCount' ).funcCount;&#10;    _col_staff=ArrayMax( _persons_Array, 'staffCount' ).staffCount;&#10;    _col_coll=ArrayMax( _persons_Array, 'collCount' ).collCount;&#10;    _total_exp=_col_exp+_col_func+_col_staff+_col_coll;&#10;    color="#0000CC";&#10;%&gt;&#10;&#10;&lt;BR/&gt;&#10;&lt;center&gt;&lt;input type="button" value="Экспорт в Excel" onclick="open_win()" class="inputButton" onMouseOver="this.className='inputButtonOver';" onMouseOut="this.className='inputButton';"/&gt;&lt;/center&gt;&#10;&lt;BR/&gt;&#10;&#10;&lt;%&#10;&#10;    _RES_VALUE='';&#10;    _RES_VALUE = _RES_VALUE + '&lt;table width="100%" cellpadding="3" cellspacing="1" border="1" CLASS="reportTable"&gt;';&#10;    _RES_VALUE = _RES_VALUE + '&lt;tr&gt;';&#10;    _RES_VALUE = _RES_VALUE +  '&lt;th class="reportTH"&gt;№&lt;/th&gt;';&#10;    _RES_VALUE = _RES_VALUE + '&lt;th class="reportTH"&gt;&lt;u&gt;Ф.И.О.&lt;/u&gt;&lt;/th&gt;';&#10;    _RES_VALUE = _RES_VALUE + &#9;&#9;'&lt;th class="reportTH"&gt;&lt;u&gt;Процедура&lt;/u&gt;&lt;/th&gt;';&#10;    if (swith_col==0)&#10;    {&#10;        _RES_VALUE = _RES_VALUE + &#9;&#9;'&lt;th class="reportTH"&gt;&lt;u&gt;самооценка&lt;/u&gt;&lt;/th&gt;';&#10;        _RES_VALUE = _RES_VALUE + &#9;&#9;'&lt;th class="reportTH"&gt;&lt;u&gt;оценка&lt;br/&gt;руководителем&lt;/u&gt;&lt;/th&gt;';&#10;    }&#10;    else&#10;    {&#10;        _RES_VALUE = _RES_VALUE + &#9;&#9;'&lt;th class="reportTH"&gt;&lt;u&gt;оценка&lt;br/&gt;руководителем&lt;/u&gt;&lt;/th&gt;';&#10;        _RES_VALUE = _RES_VALUE + &#9;&#9;'&lt;th class="reportTH"&gt;&lt;u&gt;самооценка&lt;/u&gt;&lt;/th&gt;';&#10;    }&#10;    //class=xl24&#10;&#10;&#10;    EXCEL_VALUE='&lt;style&gt;&lt;!-- .xl24{mso-style-parent:style0; mso-number-format:"\@";} --&gt;&lt;/style&gt;';&#10;    // -----------------------&#10;    EXCEL_VALUE = EXCEL_VALUE + '&lt;table width="100%" cellpadding="3" cellspacing="1" border="1" CLASS="reportTable"&gt;';&#10;    EXCEL_VALUE = EXCEL_VALUE + '&lt;tr&gt;';&#10;    EXCEL_VALUE = EXCEL_VALUE+  '&lt;th class="xl25"&gt;№&lt;/th&gt;';&#10;    EXCEL_VALUE = EXCEL_VALUE + '&lt;th class="xl25"&gt;&lt;u&gt;Ф.И.О.&lt;/u&gt;&lt;/th&gt;';&#10;    EXCEL_VALUE = EXCEL_VALUE + '&lt;th class="xl25"&gt;&lt;u&gt;Процедура&lt;/u&gt;&lt;/th&gt;';&#10;&#10;    if (swith_col==0)&#10;    {&#10;        EXCEL_VALUE = EXCEL_VALUE + '&lt;th class="xl25"&gt;&lt;u&gt;самооценка&lt;/u&gt;&lt;/th&gt;';&#10;        EXCEL_VALUE = EXCEL_VALUE + '&lt;th class="xl25"&gt;&lt;u&gt;оценка&lt;br/&gt;руководителем&lt;/u&gt;&lt;/th&gt;';&#10;    }&#10;    else&#10;    {&#10;        EXCEL_VALUE = EXCEL_VALUE + '&lt;th class="xl25"&gt;&lt;u&gt;оценка&lt;br/&gt;руководителем&lt;/u&gt;&lt;/th&gt;';&#10;        EXCEL_VALUE = EXCEL_VALUE + '&lt;th class="xl25"&gt;&lt;u&gt;самооценка&lt;/u&gt;&lt;/th&gt;';&#10;    }&#10;&#10;    _graph_data=Array();&#10;    for (j=0;j&lt;2;j++)&#10;    {&#10;        _obj=new Object;&#10;        if (j==0)&#10;        {&#10;            _obj.series=StrReplace("самооценка", ","," ");&#10;        }&#10;        else&#10;        {&#10;            _obj.series=StrReplace("оценка руководителем", ","," ");&#10;        }&#10;        _obj.categoties='';&#10;        _obj.values='';&#10;        _graph_data[ArrayCount(_graph_data)]=_obj;&#10;    }&#10;&#10;&#10;&#10;    if (_total_exp&gt;0)&#10;    {&#10;        for (i=0;i&lt;_col_func;i++)&#10;        {&#10;&#10;            _RES_VALUE = _RES_VALUE + &#9;'&lt;th class="reportTH"&gt;&lt;u&gt;оценка функц.&lt;br/&gt;рук. '+(i+1)+'&lt;/u&gt;&lt;/th&gt;';&#10;            EXCEL_VALUE = EXCEL_VALUE + '&lt;th class="xl25"&gt;&lt;u&gt;оценка функц.&lt;br/&gt;рук. '+(i+1)+'&lt;/u&gt;&lt;/th&gt;';&#10;            _obj=new Object;&#10;            _str="оценка функц. рук. "+(i+1);&#10;            _obj.series=StrReplace(_str, ","," ");&#10;            _obj.categoties='';&#10;            _obj.values='';&#10;            _graph_data[ArrayCount(_graph_data)]=_obj;&#10;&#10;        }&#10;        for (i=0;i&lt;_col_exp;i++)&#10;        {&#10;&#10;            _RES_VALUE = _RES_VALUE + '&lt;th class="reportTH"&gt;&lt;u&gt;оценка экспертом '+(i+1)+'&lt;/u&gt;&lt;/th&gt;';&#10;            EXCEL_VALUE = EXCEL_VALUE + '&lt;th class="xl25"&gt;&lt;u&gt;оценка экспертом '+(i+1)+'&lt;/u&gt;&lt;/th&gt;';&#10;            _obj=new Object;&#10;            _str="оценка экспертом "+(i+1);&#10;            _obj.series=StrReplace(_str, ","," ");&#10;            _obj.categoties='';&#10;            _obj.values='';&#10;            _graph_data[ArrayCount(_graph_data)]=_obj;&#10;        }&#10;        for (i=0;i&lt;_col_staff;i++)&#10;        {&#10;&#10;            _RES_VALUE = _RES_VALUE + '&lt;th class="reportTH"&gt;&lt;u&gt;оценка подчиненного '+(i+1)+'&lt;/u&gt;&lt;/th&gt;';&#10;            EXCEL_VALUE = EXCEL_VALUE + '&lt;th class="xl25"&gt;&lt;u&gt;оценка подчиненного '+(i+1)+'&lt;/u&gt;&lt;/th&gt;';&#10;            _obj=new Object;&#10;            _str="оценка подчиненного "+(i+1);&#10;            _obj.series=StrReplace(_str, ","," ");&#10;            _obj.categoties='';&#10;            _obj.values='';&#10;            _graph_data[ArrayCount(_graph_data)]=_obj;&#10;        }&#10;        for (i=0;i&lt;_col_coll;i++)&#10;        {&#10;&#10;            _RES_VALUE = _RES_VALUE + '&lt;th class="reportTH"&gt;&lt;u&gt;оценка коллеги '+(i+1)+'&lt;/u&gt;&lt;/th&gt;';&#10;            EXCEL_VALUE = EXCEL_VALUE + '&lt;th class="xl25"&gt;&lt;u&gt;оценка коллеги '+(i+1)+'&lt;/u&gt;&lt;/th&gt;';&#10;            _obj=new Object;&#10;            _str="оценка коллеги "+(i+1);&#10;            _obj.series=StrReplace(_str, ","," ");&#10;            _obj.categoties='';&#10;            _obj.values='';&#10;            _graph_data[ArrayCount(_graph_data)]=_obj;&#10;        }&#10;    }&#10;&#10;    _obj=new Object;&#10;    _obj.series=StrReplace("итоговая оценка", ","," ");&#10;    _obj.categoties='';&#10;    _obj.values='';&#10;    _obj.is_chart = true;&#10;    _graph_data[ArrayCount(_graph_data)]=_obj;&#10;&#10;    _RES_VALUE = _RES_VALUE + '&lt;th class="reportTH"&gt;&lt;u&gt;итоговая оценка&lt;/u&gt;&lt;/th&gt;';&#10;    _RES_VALUE = _RES_VALUE + '&lt;/tr&gt;';&#10;&#10;    EXCEL_VALUE = EXCEL_VALUE + '&lt;th class="xl25"&gt;&lt;u&gt;итоговая оценка&lt;/u&gt;&lt;/th&gt;';&#10;    EXCEL_VALUE = EXCEL_VALUE  + '&lt;/tr&gt;';&#10;    i=0;&#10;    j=0;&#10;    count=ArrayCount(_persons_Array);&#10;    for (_person in _persons_Array)&#10;    {&#10;        col_counter=0;&#10;        i++;&#10;        _RES_VALUE = _RES_VALUE + '&lt;tr bgcolor="white" &gt;';&#10;        //  №&#10;        _RES_VALUE = _RES_VALUE + '&lt;td class="reportTD" align="center"&gt;'+i+'&lt;/td&gt;';&#10;        //  ФИО&#10;        _RES_VALUE = _RES_VALUE + '&lt;td class="reportTD"&gt;'+_person.person_name+'&lt;/td&gt;';&#10;        //  Процедура&#10;        _RES_VALUE = _RES_VALUE + '&lt;td class="reportTD"&gt;'+_person.proc_name+'&lt;/td&gt;';&#10;        if (swith_col==0)&#10;        {&#10;            //  самооценка&#10;            _RES_VALUE = _RES_VALUE + '&lt;td class="reportTD" align="center"&gt;'+StrReplace(_person.self_score,'.',',')+'&lt;/td&gt;';&#10;            //  оценка руководителем&#10;            _RES_VALUE = _RES_VALUE + '&lt;td class="reportTD" align="center"&gt;'+StrReplace(_person.boss_score,'.',',')+'&lt;/td&gt;';&#10;        }&#10;        else&#10;        {&#10;            //  самооценка&#10;            _RES_VALUE = _RES_VALUE + '&lt;td class="reportTD" align="center"&gt;'+StrReplace(_person.boss_score,'.',',')+'&lt;/td&gt;';&#10;            //  оценка руководителем&#10;            _RES_VALUE = _RES_VALUE + '&lt;td class="reportTD" align="center"&gt;'+StrReplace(_person.self_score,'.',',')+'&lt;/td&gt;';&#10;        }&#10;&#10;&#10;        EXCEL_VALUE = EXCEL_VALUE + '&lt;tr bgcolor="white" &gt;';&#10;        //  №&#10;        EXCEL_VALUE = EXCEL_VALUE +  '&lt;td class="xl24" align="center"&gt;'+i+'&lt;/td&gt;';&#10;        //  ФИО&#10;        EXCEL_VALUE = EXCEL_VALUE + '&lt;td class="xl24"&gt;'+_person.person_name+'&lt;/td&gt;';&#10;        //  Процедура&#10;        EXCEL_VALUE = EXCEL_VALUE + '&lt;td class="xl24"&gt;'+_person.proc_name+'&lt;/td&gt;';&#10;&#10;        if (swith_col==0)&#10;        {&#10;            //  самооценка&#10;            EXCEL_VALUE = EXCEL_VALUE +  '&lt;td class="xl24" align="center"&gt;'+StrReplace(_person.self_score, ".",",")+'&lt;/td&gt;';&#10;            //  оценка руководителем&#10;            EXCEL_VALUE = EXCEL_VALUE + '&lt;td class="xl24" align="center"&gt;'+StrReplace(_person.boss_score, ".",",")+'&lt;/td&gt;';&#10;        }&#10;        else&#10;        {&#10;            //  самооценка&#10;            EXCEL_VALUE = EXCEL_VALUE + '&lt;td class="xl24" align="center"&gt;'+StrReplace(_person.boss_score, ".",",")+'&lt;/td&gt;';&#10;            //  оценка руководителем&#10;            EXCEL_VALUE = EXCEL_VALUE +  '&lt;td class="xl24" align="center"&gt;'+StrReplace(_person.self_score, ".",",")+'&lt;/td&gt;';&#10;        }&#10;        _graph_data[0].values=_graph_data[0].values+StrReplace(_person.self_score, ",",".");&#10;        _graph_data[0].categoties=_graph_data[0].categoties+i+'. '+StrReplace(_person.person_name, ",","");&#10;        _graph_data[1].values=_graph_data[1].values+StrReplace(_person.boss_score, ",",".");&#10;        _graph_data[1].categoties=_graph_data[1].categoties+i+'. '+StrReplace(_person.person_name, ",","");&#10;        if (j&lt;count)&#10;        {&#10;            //countValues = ArrayCount(_graph_data[0].values);&#10;            if(j==count-1)&#10;                _graph_data[0].values=_graph_data[0].values;&#10;            else&#10;                _graph_data[0].values=_graph_data[0].values+',';&#10;            _graph_data[0].categoties=_graph_data[0].categoties+',';&#10;            if(j==count-1)&#10;                _graph_data[1].values=_graph_data[1].values;&#10;            else&#10;                _graph_data[1].values=_graph_data[1].values+',';&#10;            _graph_data[1].categoties=_graph_data[1].categoties+',';&#10;        }&#10;&#10;&#10;&#10;&#10;        if (_total_exp&gt;0)&#10;        {&#10;            //col_pas=0;&#10;            for (elem in _person.funcArr)&#10;            {&#10;                _RES_VALUE = _RES_VALUE + '&lt;td class="reportTD" align="center"&gt;'+elem.name_mark+'&lt;/td&gt;';&#10;                EXCEL_VALUE = EXCEL_VALUE + '&lt;td class="xl24" align="center"&gt;'+ elem.name_mark +'&lt;/td&gt;';&#10;                _graph_data[col_counter+2].values=_graph_data[col_counter+2].values+StrReplace(elem.mark, ",",".");&#10;                _graph_data[col_counter+2].categoties=_graph_data[col_counter+2].categoties+i+'. '+StrReplace(_person.person_name, ",","");&#10;                if (j&lt;count)&#10;                {&#10;                    if(j==count-1)&#10;                        _graph_data[col_counter+2].values=_graph_data[col_counter+2].values;&#10;                    else&#10;                        _graph_data[col_counter+2].values=_graph_data[col_counter+2].values+',';&#10;                    _graph_data[col_counter+2].categoties=_graph_data[col_counter+2].categoties+',';&#10;                }&#10;                col_counter++;&#10;                //col_pas++;&#10;            }&#10;&#10;            for (col=0;col&lt;_col_func-col_counter;col++)&#10;            {&#10;                _RES_VALUE = _RES_VALUE + '&lt;td class="reportTD" align="center"&gt;&amp;nbsp;&lt;/td&gt;';&#10;                EXCEL_VALUE = EXCEL_VALUE + '&lt;td class="xl24" align="center"&gt;&amp;nbsp;&lt;/td&gt;';&#10;                _graph_data[col+2].values=_graph_data[col+2].values+StrReplace(0, ",",".");&#10;                _graph_data[col+2].categoties=_graph_data[col+2].categoties+i+'. '+StrReplace(_person.person_name, ",","");&#10;                if (j&lt;count)&#10;                {&#10;                    if(j==count-1)&#10;                        _graph_data[col+2].values=_graph_data[col+2].values;&#10;                    else&#10;                        _graph_data[col+2].values=_graph_data[col+2].values+',';&#10;                    _graph_data[col+2].categoties=_graph_data[col+2].categoties+',';&#10;                }&#10;            }&#10;            col_counter=0;&#10;&#10;            for (elem in _person.expertsArr)&#10;            {&#10;                //  оценка экспертом&#10;                _RES_VALUE = _RES_VALUE + '&lt;td class="reportTD" align="center"&gt;'+elem.name_mark+'&lt;/td&gt;';&#10;                EXCEL_VALUE = EXCEL_VALUE + '&lt;td align="center"&gt;'+elem.name_mark+'&lt;/td&gt;';&#10;                _graph_data[col_counter+_col_func+2].values=_graph_data[col_counter+_col_func+2].values+StrReplace(elem.mark, ",",".");&#10;                _graph_data[col_counter+_col_func+2].categoties=_graph_data[col_counter+_col_func+2].categoties+i+'. '+StrReplace(_person.person_name, ",","");&#10;                if (j&lt;count)&#10;                {&#10;                    if(j==count-1)&#10;                        _graph_data[col_counter+_col_func+2].values=_graph_data[col_counter+_col_func+2].values;&#10;                    else&#10;                        _graph_data[col_counter+_col_func+2].values=_graph_data[col_counter+_col_func+2].values+',';&#10;                    _graph_data[col_counter+_col_func+2].categoties=_graph_data[col_counter+_col_func+2].categoties+',';&#10;                }&#10;&#10;                col_counter++;&#10;            }&#10;            for (col=0;col&lt;_col_exp-col_counter;col++)&#10;            {&#10;                //  оценка экспертом&#10;                _RES_VALUE = _RES_VALUE + '&lt;td class="reportTD" align="center"&gt;&amp;nbsp;&lt;/td&gt;';&#10;                EXCEL_VALUE = EXCEL_VALUE + '&lt;td class="xl24" align="center"&gt;&amp;nbsp;&lt;/td&gt;';&#10;                _graph_data[col+_col_func+2].values=_graph_data[col+_col_func+2].values+StrReplace(0, ",",".");&#10;                _graph_data[col+_col_func+2].categoties=_graph_data[col+_col_func+2].categoties+i+'. '+StrReplace(_person.person_name, ",","");&#10;                if (j&lt;count)&#10;                {&#10;                    if(j==count-1)&#10;                        _graph_data[col+_col_func+2].values=_graph_data[col+_col_func+2].values;&#10;                    else&#10;                        _graph_data[col+_col_func+2].values=_graph_data[col+_col_func+2].values+',';&#10;                    _graph_data[col+_col_func+2].categoties=_graph_data[col+_col_func+2].categoties+',';&#10;                }&#10;            }&#10;            col_counter=0;&#10;&#10;            for (elem in _person.staffArr)&#10;            {&#10;                //  оценка подчиненного&#10;                _RES_VALUE = _RES_VALUE + '&lt;td class="reportTD" align="center"&gt;'+elem.name_mark+'&lt;/td&gt;';&#10;                EXCEL_VALUE = EXCEL_VALUE + '&lt;td class="xl24" align="center"&gt;'+ elem.name_mark +'&lt;/td&gt;';&#10;&#10;                _graph_data[col_counter+_col_func+_col_exp+2].values=_graph_data[col_counter+_col_func+_col_exp+2].values+StrReplace(elem.mark, ",",".");&#10;                _graph_data[col_counter+_col_func+_col_exp+2].categoties=_graph_data[col_counter+_col_func+_col_exp+2].categoties+i+'. '+StrReplace(_person.person_name, ",","");&#10;                if (j&lt;count)&#10;                {&#10;                    if(j==count-1)&#10;                        _graph_data[col_counter+_col_func+_col_exp+2].values=_graph_data[col_counter+_col_func+_col_exp+2].values;&#10;                    else&#10;                        _graph_data[col_counter+_col_func+_col_exp+2].values=_graph_data[col_counter+_col_func+_col_exp+2].values+',';&#10;                    _graph_data[col_counter+_col_func+_col_exp+2].categoties=_graph_data[col_counter+_col_func+_col_exp+2].categoties+',';&#10;                }&#10;&#10;                col_counter++;&#10;            }&#10;            for (col=0;col&lt;_col_staff-col_counter;col++)&#10;            {&#10;                //  оценка подчиненного&#10;                _RES_VALUE = _RES_VALUE + '&lt;td class="reportTD" align="center"&gt;&amp;nbsp;&lt;/td&gt;';&#10;                EXCEL_VALUE = EXCEL_VALUE + '&lt;td class="xl24" align="center"&gt;&amp;nbsp;&lt;/td&gt;';&#10;                _graph_data[col+_col_func+_col_exp+2].values=_graph_data[col+_col_func+_col_exp+2].values+StrReplace(0, ",",".");&#10;                _graph_data[col+_col_func+_col_exp+2].categoties=_graph_data[col+_col_func+_col_exp+2].categoties+i+'. '+StrReplace(_person.person_name, ",","");&#10;                if (j&lt;count)&#10;                {&#10;                    if(j==count-1)&#10;                        _graph_data[col+_col_func+_col_exp+2].values=_graph_data[col+_col_func+_col_exp+2].values;&#10;                    else&#10;                        _graph_data[col+_col_func+_col_exp+2].values=_graph_data[col+_col_func+_col_exp+2].values+',';&#10;                    _graph_data[col+_col_func+_col_exp+2].categoties=_graph_data[col+_col_func+_col_exp+2].categoties+',';&#10;                }&#10;            }&#10;            col_counter=0;&#10;&#10;            for (elem in _person.collArr)&#10;            {&#10;                _RES_VALUE = _RES_VALUE + '&lt;td class="reportTD" align="center"&gt;'+elem.name_mark+'&lt;/td&gt;';&#10;                EXCEL_VALUE = EXCEL_VALUE + '&lt;td class="xl24" align="center"&gt;'+ elem.name_mark +'&lt;/td&gt;';&#10;                _graph_data[col_counter+_col_func+_col_exp+_col_staff+2].values=_graph_data[col_counter+_col_func+_col_exp+_col_staff+2].values+StrReplace(elem.mark, ",",".");&#10;                _graph_data[col_counter+_col_func+_col_exp+_col_staff+2].categoties=_graph_data[col_counter+_col_func+_col_exp+_col_staff+2].categoties+i+'. '+StrReplace(_person.person_name, ",","");&#10;                if (j&lt;count)&#10;                {&#10;                    if(j==count-1)&#10;                        _graph_data[col_counter+_col_func+_col_exp+_col_staff+2].values=_graph_data[col_counter+_col_func+_col_exp+_col_staff+2].values;&#10;                    else&#10;                        _graph_data[col_counter+_col_func+_col_exp+_col_staff+2].values=_graph_data[col_counter+_col_func+_col_exp+_col_staff+2].values+',';&#10;                    _graph_data[col_counter+_col_func+_col_exp+_col_staff+2].categoties=_graph_data[col_counter+_col_func+_col_exp+_col_staff+2].categoties+',';&#10;                }&#10;&#10;                col_counter++;&#10;            }&#10;            for (col=0;col&lt;_col_coll-col_counter;col++)&#10;            {&#10;                _RES_VALUE = _RES_VALUE + '&lt;td class="reportTD" align="center"&gt;&amp;nbsp;&lt;/td&gt;';&#10;                EXCEL_VALUE = EXCEL_VALUE + '&lt;td class="xl24" align="center"&gt;&amp;nbsp;&lt;/td&gt;';&#10;                _graph_data[col+_col_func+_col_exp+_col_staff+2].values=_graph_data[col+_col_func+_col_exp+_col_staff+2].values+StrReplace(0, ",",".");&#10;                _graph_data[col+_col_func+_col_exp+_col_staff+2].categoties=_graph_data[col+_col_func+_col_exp+_col_staff+2].categoties+i+'. '+StrReplace(_person.person_name, ",","");&#10;                if (j&lt;count)&#10;                {&#10;                    if(j==count-1)&#10;                        _graph_data[col+_col_func+_col_exp+_col_staff+2].values=_graph_data[col+_col_func+_col_exp+_col_staff+2].values;&#10;                    else&#10;                        _graph_data[col+_col_func+_col_exp+_col_staff+2].values=_graph_data[col+_col_func+_col_exp+_col_staff+2].values+',';&#10;                    _graph_data[col+_col_func+_col_exp+_col_staff+2].categoties=_graph_data[col+_col_func+_col_exp+_col_staff+2].categoties+',';&#10;                }&#10;            }&#10;            col_counter=0;&#10;        }&#10;        // итоговая оценка&#10;        _RES_VALUE = _RES_VALUE + '&lt;td class="reportTD" align="center"&gt;'+StrReplace(_person.total, ".",",")+'&lt;/td&gt;';&#10;        EXCEL_VALUE = EXCEL_VALUE + '&lt;td class="xl24" align="center"&gt;'+StrReplace(_person.total, ".",",")+'&lt;/td&gt;';&#10;        _graph_data[_total_exp+2].values=_graph_data[_total_exp+2].values+StrReplace(_person.total, ",",".");&#10;        _graph_data[_total_exp+2].categoties=_graph_data[_total_exp+2].categoties+i+'. '+StrReplace(_person.person_name, ",","");&#10;        if (j&lt;count)&#10;        {&#10;            if(j==count-1)&#10;                _graph_data[_total_exp+2].values=_graph_data[_total_exp+2].values;&#10;            else&#10;                _graph_data[_total_exp+2].values=_graph_data[_total_exp+2].values+',';&#10;            _graph_data[_total_exp+2].categoties=_graph_data[_total_exp+2].categoties+',';&#10;        }&#10;&#10;        _RES_VALUE = _RES_VALUE + '&lt;/tr&gt;';&#10;        EXCEL_VALUE = EXCEL_VALUE +'&lt;/tr&gt;';&#10;        j++;&#10;    }&#10;&#10;&#10;    _RES_VALUE = _RES_VALUE + '&lt;/table&gt;';&#10;    EXCEL_VALUE = EXCEL_VALUE +'&lt;/table&gt;';&#10;    EXCEL_TABLE = EXCEL_VALUE;&#10;    Response.Write(_RES_VALUE);&#10;&#10;    html_TEXT = "";&#10;    SHEET_CAPTION = "Заголовок листа";&#10;    GRAPH_TEMPLATE = "WEBSOFT_HISTOGRAM_WT3_NO_OWC";&#10;    _form1 = ArrayOptFirstElem( XQuery("for $elem in custom_web_templates where $elem/code = '" + GRAPH_TEMPLATE + "' return $elem"));&#10;    if (_form1 != undefined)&#10;    {&#10;        _form1 = OpenDoc(UrlFromDocID(_form1.PrimaryKey)).TopElem;&#10;        Response.Write( EvalCodePage(_form1.html.Value) );&#10;    }&#10;%&gt;&#10;&lt;script type="text/javascript"&gt;&#10;    function open_win()&#10;    {&#10;        modalWin=window.open('assessment_excel_export.html','','');&#10;    }&#10;&lt;/script&gt;&#10;&lt;%&#10;}&#10;%&gt;</code_text>
			</exec_code>
			<html>&lt;%&#10;alert ("uni-estimation-coll-results-part2- started");&#10;EXCEL_TABLE = "";&#10;        if (ArrayCount(_persons_Array)&gt;0)&#10;{&#10;    _persons_Array=ArraySort(_persons_Array,'person_name','+');&#10;    _col_exp=ArrayMax( _persons_Array, 'expCount' ).expCount;&#10;    _col_func=ArrayMax( _persons_Array, 'funcCount' ).funcCount;&#10;    _col_staff=ArrayMax( _persons_Array, 'staffCount' ).staffCount;&#10;    _col_coll=ArrayMax( _persons_Array, 'collCount' ).collCount;&#10;    _total_exp=_col_exp+_col_func+_col_staff+_col_coll;&#10;    color="#0000CC";&#10;%&gt;&#10;&#10;&lt;BR/&gt;&#10;&lt;center&gt;&lt;input type="button" value="Экспорт в Excel" onclick="open_win()" class="inputButton" onMouseOver="this.className='inputButtonOver';" onMouseOut="this.className='inputButton';"/&gt;&lt;/center&gt;&#10;&lt;BR/&gt;&#10;&#10;&lt;%&#10;&#10;    _RES_VALUE='';&#10;    _RES_VALUE = _RES_VALUE + '&lt;table width="100%" cellpadding="3" cellspacing="1" border="1" CLASS="reportTable"&gt;';&#10;    _RES_VALUE = _RES_VALUE + '&lt;tr&gt;';&#10;    _RES_VALUE = _RES_VALUE +  '&lt;th class="reportTH"&gt;№&lt;/th&gt;';&#10;    _RES_VALUE = _RES_VALUE + '&lt;th class="reportTH"&gt;&lt;u&gt;Ф.И.О.&lt;/u&gt;&lt;/th&gt;';&#10;    _RES_VALUE = _RES_VALUE + &#9;&#9;'&lt;th class="reportTH"&gt;&lt;u&gt;Процедура&lt;/u&gt;&lt;/th&gt;';&#10;    if (swith_col==0)&#10;    {&#10;        _RES_VALUE = _RES_VALUE + &#9;&#9;'&lt;th class="reportTH"&gt;&lt;u&gt;самооценка&lt;/u&gt;&lt;/th&gt;';&#10;        _RES_VALUE = _RES_VALUE + &#9;&#9;'&lt;th class="reportTH"&gt;&lt;u&gt;оценка&lt;br/&gt;руководителем&lt;/u&gt;&lt;/th&gt;';&#10;    }&#10;    else&#10;    {&#10;        _RES_VALUE = _RES_VALUE + &#9;&#9;'&lt;th class="reportTH"&gt;&lt;u&gt;оценка&lt;br/&gt;руководителем&lt;/u&gt;&lt;/th&gt;';&#10;        _RES_VALUE = _RES_VALUE + &#9;&#9;'&lt;th class="reportTH"&gt;&lt;u&gt;самооценка&lt;/u&gt;&lt;/th&gt;';&#10;    }&#10;    //class=xl24&#10;&#10;&#10;    EXCEL_VALUE='&lt;style&gt;&lt;!-- .xl24{mso-style-parent:style0; mso-number-format:"\@";} --&gt;&lt;/style&gt;';&#10;    // -----------------------&#10;    EXCEL_VALUE = EXCEL_VALUE + '&lt;table width="100%" cellpadding="3" cellspacing="1" border="1" CLASS="reportTable"&gt;';&#10;    EXCEL_VALUE = EXCEL_VALUE + '&lt;tr&gt;';&#10;    EXCEL_VALUE = EXCEL_VALUE+  '&lt;th class="xl25"&gt;№&lt;/th&gt;';&#10;    EXCEL_VALUE = EXCEL_VALUE + '&lt;th class="xl25"&gt;&lt;u&gt;Ф.И.О.&lt;/u&gt;&lt;/th&gt;';&#10;    EXCEL_VALUE = EXCEL_VALUE + '&lt;th class="xl25"&gt;&lt;u&gt;Процедура&lt;/u&gt;&lt;/th&gt;';&#10;&#10;    if (swith_col==0)&#10;    {&#10;        EXCEL_VALUE = EXCEL_VALUE + '&lt;th class="xl25"&gt;&lt;u&gt;самооценка&lt;/u&gt;&lt;/th&gt;';&#10;        EXCEL_VALUE = EXCEL_VALUE + '&lt;th class="xl25"&gt;&lt;u&gt;оценка&lt;br/&gt;руководителем&lt;/u&gt;&lt;/th&gt;';&#10;    }&#10;    else&#10;    {&#10;        EXCEL_VALUE = EXCEL_VALUE + '&lt;th class="xl25"&gt;&lt;u&gt;оценка&lt;br/&gt;руководителем&lt;/u&gt;&lt;/th&gt;';&#10;        EXCEL_VALUE = EXCEL_VALUE + '&lt;th class="xl25"&gt;&lt;u&gt;самооценка&lt;/u&gt;&lt;/th&gt;';&#10;    }&#10;&#10;    _graph_data=Array();&#10;    for (j=0;j&lt;2;j++)&#10;    {&#10;        _obj=new Object;&#10;        if (j==0)&#10;        {&#10;            _obj.series=StrReplace("самооценка", ","," ");&#10;        }&#10;        else&#10;        {&#10;            _obj.series=StrReplace("оценка руководителем", ","," ");&#10;        }&#10;        _obj.categoties='';&#10;        _obj.values='';&#10;        _graph_data[ArrayCount(_graph_data)]=_obj;&#10;    }&#10;&#10;&#10;&#10;    if (_total_exp&gt;0)&#10;    {&#10;        for (i=0;i&lt;_col_func;i++)&#10;        {&#10;&#10;            _RES_VALUE = _RES_VALUE + &#9;'&lt;th class="reportTH"&gt;&lt;u&gt;оценка функц.&lt;br/&gt;рук. '+(i+1)+'&lt;/u&gt;&lt;/th&gt;';&#10;            EXCEL_VALUE = EXCEL_VALUE + '&lt;th class="xl25"&gt;&lt;u&gt;оценка функц.&lt;br/&gt;рук. '+(i+1)+'&lt;/u&gt;&lt;/th&gt;';&#10;            _obj=new Object;&#10;            _str="оценка функц. рук. "+(i+1);&#10;            _obj.series=StrReplace(_str, ","," ");&#10;            _obj.categoties='';&#10;            _obj.values='';&#10;            _graph_data[ArrayCount(_graph_data)]=_obj;&#10;&#10;        }&#10;        for (i=0;i&lt;_col_exp;i++)&#10;        {&#10;&#10;            _RES_VALUE = _RES_VALUE + '&lt;th class="reportTH"&gt;&lt;u&gt;оценка экспертом '+(i+1)+'&lt;/u&gt;&lt;/th&gt;';&#10;            EXCEL_VALUE = EXCEL_VALUE + '&lt;th class="xl25"&gt;&lt;u&gt;оценка экспертом '+(i+1)+'&lt;/u&gt;&lt;/th&gt;';&#10;            _obj=new Object;&#10;            _str="оценка экспертом "+(i+1);&#10;            _obj.series=StrReplace(_str, ","," ");&#10;            _obj.categoties='';&#10;            _obj.values='';&#10;            _graph_data[ArrayCount(_graph_data)]=_obj;&#10;        }&#10;        for (i=0;i&lt;_col_staff;i++)&#10;        {&#10;&#10;            _RES_VALUE = _RES_VALUE + '&lt;th class="reportTH"&gt;&lt;u&gt;оценка подчиненного '+(i+1)+'&lt;/u&gt;&lt;/th&gt;';&#10;            EXCEL_VALUE = EXCEL_VALUE + '&lt;th class="xl25"&gt;&lt;u&gt;оценка подчиненного '+(i+1)+'&lt;/u&gt;&lt;/th&gt;';&#10;            _obj=new Object;&#10;            _str="оценка подчиненного "+(i+1);&#10;            _obj.series=StrReplace(_str, ","," ");&#10;            _obj.categoties='';&#10;            _obj.values='';&#10;            _graph_data[ArrayCount(_graph_data)]=_obj;&#10;        }&#10;        for (i=0;i&lt;_col_coll;i++)&#10;        {&#10;&#10;            _RES_VALUE = _RES_VALUE + '&lt;th class="reportTH"&gt;&lt;u&gt;оценка коллеги '+(i+1)+'&lt;/u&gt;&lt;/th&gt;';&#10;            EXCEL_VALUE = EXCEL_VALUE + '&lt;th class="xl25"&gt;&lt;u&gt;оценка коллеги '+(i+1)+'&lt;/u&gt;&lt;/th&gt;';&#10;            _obj=new Object;&#10;            _str="оценка коллеги "+(i+1);&#10;            _obj.series=StrReplace(_str, ","," ");&#10;            _obj.categoties='';&#10;            _obj.values='';&#10;            _graph_data[ArrayCount(_graph_data)]=_obj;&#10;        }&#10;    }&#10;&#10;    _obj=new Object;&#10;    _obj.series=StrReplace("итоговая оценка", ","," ");&#10;    _obj.categoties='';&#10;    _obj.values='';&#10;    _obj.is_chart = true;&#10;    _graph_data[ArrayCount(_graph_data)]=_obj;&#10;&#10;    _RES_VALUE = _RES_VALUE + '&lt;th class="reportTH"&gt;&lt;u&gt;итоговая оценка&lt;/u&gt;&lt;/th&gt;';&#10;    _RES_VALUE = _RES_VALUE + '&lt;/tr&gt;';&#10;&#10;    EXCEL_VALUE = EXCEL_VALUE + '&lt;th class="xl25"&gt;&lt;u&gt;итоговая оценка&lt;/u&gt;&lt;/th&gt;';&#10;    EXCEL_VALUE = EXCEL_VALUE  + '&lt;/tr&gt;';&#10;    i=0;&#10;    j=0;&#10;    count=ArrayCount(_persons_Array);&#10;    for (_person in _persons_Array)&#10;    {&#10;        col_counter=0;&#10;        i++;&#10;        _RES_VALUE = _RES_VALUE + '&lt;tr bgcolor="white" &gt;';&#10;        //  №&#10;        _RES_VALUE = _RES_VALUE + '&lt;td class="reportTD" align="center"&gt;'+i+'&lt;/td&gt;';&#10;        //  ФИО&#10;        _RES_VALUE = _RES_VALUE + '&lt;td class="reportTD"&gt;'+_person.person_name+'&lt;/td&gt;';&#10;        //  Процедура&#10;        _RES_VALUE = _RES_VALUE + '&lt;td class="reportTD"&gt;'+_person.proc_name+'&lt;/td&gt;';&#10;        if (swith_col==0)&#10;        {&#10;            //  самооценка&#10;            _RES_VALUE = _RES_VALUE + '&lt;td class="reportTD" align="center"&gt;'+StrReplace(_person.self_score,'.',',')+'&lt;/td&gt;';&#10;            //  оценка руководителем&#10;            _RES_VALUE = _RES_VALUE + '&lt;td class="reportTD" align="center"&gt;'+StrReplace(_person.boss_score,'.',',')+'&lt;/td&gt;';&#10;        }&#10;        else&#10;        {&#10;            //  самооценка&#10;            _RES_VALUE = _RES_VALUE + '&lt;td class="reportTD" align="center"&gt;'+StrReplace(_person.boss_score,'.',',')+'&lt;/td&gt;';&#10;            //  оценка руководителем&#10;            _RES_VALUE = _RES_VALUE + '&lt;td class="reportTD" align="center"&gt;'+StrReplace(_person.self_score,'.',',')+'&lt;/td&gt;';&#10;        }&#10;&#10;&#10;        EXCEL_VALUE = EXCEL_VALUE + '&lt;tr bgcolor="white" &gt;';&#10;        //  №&#10;        EXCEL_VALUE = EXCEL_VALUE +  '&lt;td class="xl24" align="center"&gt;'+i+'&lt;/td&gt;';&#10;        //  ФИО&#10;        EXCEL_VALUE = EXCEL_VALUE + '&lt;td class="xl24"&gt;'+_person.person_name+'&lt;/td&gt;';&#10;        //  Процедура&#10;        EXCEL_VALUE = EXCEL_VALUE + '&lt;td class="xl24"&gt;'+_person.proc_name+'&lt;/td&gt;';&#10;&#10;        if (swith_col==0)&#10;        {&#10;            //  самооценка&#10;            EXCEL_VALUE = EXCEL_VALUE +  '&lt;td class="xl24" align="center"&gt;'+StrReplace(_person.self_score, ".",",")+'&lt;/td&gt;';&#10;            //  оценка руководителем&#10;            EXCEL_VALUE = EXCEL_VALUE + '&lt;td class="xl24" align="center"&gt;'+StrReplace(_person.boss_score, ".",",")+'&lt;/td&gt;';&#10;        }&#10;        else&#10;        {&#10;            //  самооценка&#10;            EXCEL_VALUE = EXCEL_VALUE + '&lt;td class="xl24" align="center"&gt;'+StrReplace(_person.boss_score, ".",",")+'&lt;/td&gt;';&#10;            //  оценка руководителем&#10;            EXCEL_VALUE = EXCEL_VALUE +  '&lt;td class="xl24" align="center"&gt;'+StrReplace(_person.self_score, ".",",")+'&lt;/td&gt;';&#10;        }&#10;        _graph_data[0].values=_graph_data[0].values+StrReplace(_person.self_score, ",",".");&#10;        _graph_data[0].categoties=_graph_data[0].categoties+i+'. '+StrReplace(_person.person_name, ",","");&#10;        _graph_data[1].values=_graph_data[1].values+StrReplace(_person.boss_score, ",",".");&#10;        _graph_data[1].categoties=_graph_data[1].categoties+i+'. '+StrReplace(_person.person_name, ",","");&#10;        if (j&lt;count)&#10;        {&#10;            //countValues = ArrayCount(_graph_data[0].values);&#10;            if(j==count-1)&#10;                _graph_data[0].values=_graph_data[0].values;&#10;            else&#10;                _graph_data[0].values=_graph_data[0].values+',';&#10;            _graph_data[0].categoties=_graph_data[0].categoties+',';&#10;            if(j==count-1)&#10;                _graph_data[1].values=_graph_data[1].values;&#10;            else&#10;                _graph_data[1].values=_graph_data[1].values+',';&#10;            _graph_data[1].categoties=_graph_data[1].categoties+',';&#10;        }&#10;&#10;&#10;&#10;&#10;        if (_total_exp&gt;0)&#10;        {&#10;            //col_pas=0;&#10;            for (elem in _person.funcArr)&#10;            {&#10;                _RES_VALUE = _RES_VALUE + '&lt;td class="reportTD" align="center"&gt;'+elem.name_mark+'&lt;/td&gt;';&#10;                EXCEL_VALUE = EXCEL_VALUE + '&lt;td class="xl24" align="center"&gt;'+ elem.name_mark +'&lt;/td&gt;';&#10;                _graph_data[col_counter+2].values=_graph_data[col_counter+2].values+StrReplace(elem.mark, ",",".");&#10;                _graph_data[col_counter+2].categoties=_graph_data[col_counter+2].categoties+i+'. '+StrReplace(_person.person_name, ",","");&#10;                if (j&lt;count)&#10;                {&#10;                    if(j==count-1)&#10;                        _graph_data[col_counter+2].values=_graph_data[col_counter+2].values;&#10;                    else&#10;                        _graph_data[col_counter+2].values=_graph_data[col_counter+2].values+',';&#10;                    _graph_data[col_counter+2].categoties=_graph_data[col_counter+2].categoties+',';&#10;                }&#10;                col_counter++;&#10;                //col_pas++;&#10;            }&#10;&#10;            for (col=0;col&lt;_col_func-col_counter;col++)&#10;            {&#10;                _RES_VALUE = _RES_VALUE + '&lt;td class="reportTD" align="center"&gt;&amp;nbsp;&lt;/td&gt;';&#10;                EXCEL_VALUE = EXCEL_VALUE + '&lt;td class="xl24" align="center"&gt;&amp;nbsp;&lt;/td&gt;';&#10;                _graph_data[col+2].values=_graph_data[col+2].values+StrReplace(0, ",",".");&#10;                _graph_data[col+2].categoties=_graph_data[col+2].categoties+i+'. '+StrReplace(_person.person_name, ",","");&#10;                if (j&lt;count)&#10;                {&#10;                    if(j==count-1)&#10;                        _graph_data[col+2].values=_graph_data[col+2].values;&#10;                    else&#10;                        _graph_data[col+2].values=_graph_data[col+2].values+',';&#10;                    _graph_data[col+2].categoties=_graph_data[col+2].categoties+',';&#10;                }&#10;            }&#10;            col_counter=0;&#10;&#10;            for (elem in _person.expertsArr)&#10;            {&#10;                //  оценка экспертом&#10;                _RES_VALUE = _RES_VALUE + '&lt;td class="reportTD" align="center"&gt;'+elem.name_mark+'&lt;/td&gt;';&#10;                EXCEL_VALUE = EXCEL_VALUE + '&lt;td align="center"&gt;'+elem.name_mark+'&lt;/td&gt;';&#10;                _graph_data[col_counter+_col_func+2].values=_graph_data[col_counter+_col_func+2].values+StrReplace(elem.mark, ",",".");&#10;                _graph_data[col_counter+_col_func+2].categoties=_graph_data[col_counter+_col_func+2].categoties+i+'. '+StrReplace(_person.person_name, ",","");&#10;                if (j&lt;count)&#10;                {&#10;                    if(j==count-1)&#10;                        _graph_data[col_counter+_col_func+2].values=_graph_data[col_counter+_col_func+2].values;&#10;                    else&#10;                        _graph_data[col_counter+_col_func+2].values=_graph_data[col_counter+_col_func+2].values+',';&#10;                    _graph_data[col_counter+_col_func+2].categoties=_graph_data[col_counter+_col_func+2].categoties+',';&#10;                }&#10;&#10;                col_counter++;&#10;            }&#10;            for (col=0;col&lt;_col_exp-col_counter;col++)&#10;            {&#10;                //  оценка экспертом&#10;                _RES_VALUE = _RES_VALUE + '&lt;td class="reportTD" align="center"&gt;&amp;nbsp;&lt;/td&gt;';&#10;                EXCEL_VALUE = EXCEL_VALUE + '&lt;td class="xl24" align="center"&gt;&amp;nbsp;&lt;/td&gt;';&#10;                _graph_data[col+_col_func+2].values=_graph_data[col+_col_func+2].values+StrReplace(0, ",",".");&#10;                _graph_data[col+_col_func+2].categoties=_graph_data[col+_col_func+2].categoties+i+'. '+StrReplace(_person.person_name, ",","");&#10;                if (j&lt;count)&#10;                {&#10;                    if(j==count-1)&#10;                        _graph_data[col+_col_func+2].values=_graph_data[col+_col_func+2].values;&#10;                    else&#10;                        _graph_data[col+_col_func+2].values=_graph_data[col+_col_func+2].values+',';&#10;                    _graph_data[col+_col_func+2].categoties=_graph_data[col+_col_func+2].categoties+',';&#10;                }&#10;            }&#10;            col_counter=0;&#10;&#10;            for (elem in _person.staffArr)&#10;            {&#10;                //  оценка подчиненного&#10;                _RES_VALUE = _RES_VALUE + '&lt;td class="reportTD" align="center"&gt;'+elem.name_mark+'&lt;/td&gt;';&#10;                EXCEL_VALUE = EXCEL_VALUE + '&lt;td class="xl24" align="center"&gt;'+ elem.name_mark +'&lt;/td&gt;';&#10;&#10;                _graph_data[col_counter+_col_func+_col_exp+2].values=_graph_data[col_counter+_col_func+_col_exp+2].values+StrReplace(elem.mark, ",",".");&#10;                _graph_data[col_counter+_col_func+_col_exp+2].categoties=_graph_data[col_counter+_col_func+_col_exp+2].categoties+i+'. '+StrReplace(_person.person_name, ",","");&#10;                if (j&lt;count)&#10;                {&#10;                    if(j==count-1)&#10;                        _graph_data[col_counter+_col_func+_col_exp+2].values=_graph_data[col_counter+_col_func+_col_exp+2].values;&#10;                    else&#10;                        _graph_data[col_counter+_col_func+_col_exp+2].values=_graph_data[col_counter+_col_func+_col_exp+2].values+',';&#10;                    _graph_data[col_counter+_col_func+_col_exp+2].categoties=_graph_data[col_counter+_col_func+_col_exp+2].categoties+',';&#10;                }&#10;&#10;                col_counter++;&#10;            }&#10;            for (col=0;col&lt;_col_staff-col_counter;col++)&#10;            {&#10;                //  оценка подчиненного&#10;                _RES_VALUE = _RES_VALUE + '&lt;td class="reportTD" align="center"&gt;&amp;nbsp;&lt;/td&gt;';&#10;                EXCEL_VALUE = EXCEL_VALUE + '&lt;td class="xl24" align="center"&gt;&amp;nbsp;&lt;/td&gt;';&#10;                _graph_data[col+_col_func+_col_exp+2].values=_graph_data[col+_col_func+_col_exp+2].values+StrReplace(0, ",",".");&#10;                _graph_data[col+_col_func+_col_exp+2].categoties=_graph_data[col+_col_func+_col_exp+2].categoties+i+'. '+StrReplace(_person.person_name, ",","");&#10;                if (j&lt;count)&#10;                {&#10;                    if(j==count-1)&#10;                        _graph_data[col+_col_func+_col_exp+2].values=_graph_data[col+_col_func+_col_exp+2].values;&#10;                    else&#10;                        _graph_data[col+_col_func+_col_exp+2].values=_graph_data[col+_col_func+_col_exp+2].values+',';&#10;                    _graph_data[col+_col_func+_col_exp+2].categoties=_graph_data[col+_col_func+_col_exp+2].categoties+',';&#10;                }&#10;            }&#10;            col_counter=0;&#10;&#10;            for (elem in _person.collArr)&#10;            {&#10;                _RES_VALUE = _RES_VALUE + '&lt;td class="reportTD" align="center"&gt;'+elem.name_mark+'&lt;/td&gt;';&#10;                EXCEL_VALUE = EXCEL_VALUE + '&lt;td class="xl24" align="center"&gt;'+ elem.name_mark +'&lt;/td&gt;';&#10;                _graph_data[col_counter+_col_func+_col_exp+_col_staff+2].values=_graph_data[col_counter+_col_func+_col_exp+_col_staff+2].values+StrReplace(elem.mark, ",",".");&#10;                _graph_data[col_counter+_col_func+_col_exp+_col_staff+2].categoties=_graph_data[col_counter+_col_func+_col_exp+_col_staff+2].categoties+i+'. '+StrReplace(_person.person_name, ",","");&#10;                if (j&lt;count)&#10;                {&#10;                    if(j==count-1)&#10;                        _graph_data[col_counter+_col_func+_col_exp+_col_staff+2].values=_graph_data[col_counter+_col_func+_col_exp+_col_staff+2].values;&#10;                    else&#10;                        _graph_data[col_counter+_col_func+_col_exp+_col_staff+2].values=_graph_data[col_counter+_col_func+_col_exp+_col_staff+2].values+',';&#10;                    _graph_data[col_counter+_col_func+_col_exp+_col_staff+2].categoties=_graph_data[col_counter+_col_func+_col_exp+_col_staff+2].categoties+',';&#10;                }&#10;&#10;                col_counter++;&#10;            }&#10;            for (col=0;col&lt;_col_coll-col_counter;col++)&#10;            {&#10;                _RES_VALUE = _RES_VALUE + '&lt;td class="reportTD" align="center"&gt;&amp;nbsp;&lt;/td&gt;';&#10;                EXCEL_VALUE = EXCEL_VALUE + '&lt;td class="xl24" align="center"&gt;&amp;nbsp;&lt;/td&gt;';&#10;                _graph_data[col+_col_func+_col_exp+_col_staff+2].values=_graph_data[col+_col_func+_col_exp+_col_staff+2].values+StrReplace(0, ",",".");&#10;                _graph_data[col+_col_func+_col_exp+_col_staff+2].categoties=_graph_data[col+_col_func+_col_exp+_col_staff+2].categoties+i+'. '+StrReplace(_person.person_name, ",","");&#10;                if (j&lt;count)&#10;                {&#10;                    if(j==count-1)&#10;                        _graph_data[col+_col_func+_col_exp+_col_staff+2].values=_graph_data[col+_col_func+_col_exp+_col_staff+2].values;&#10;                    else&#10;                        _graph_data[col+_col_func+_col_exp+_col_staff+2].values=_graph_data[col+_col_func+_col_exp+_col_staff+2].values+',';&#10;                    _graph_data[col+_col_func+_col_exp+_col_staff+2].categoties=_graph_data[col+_col_func+_col_exp+_col_staff+2].categoties+',';&#10;                }&#10;            }&#10;            col_counter=0;&#10;        }&#10;        // итоговая оценка&#10;        _RES_VALUE = _RES_VALUE + '&lt;td class="reportTD" align="center"&gt;'+StrReplace(_person.total, ".",",")+'&lt;/td&gt;';&#10;        EXCEL_VALUE = EXCEL_VALUE + '&lt;td class="xl24" align="center"&gt;'+StrReplace(_person.total, ".",",")+'&lt;/td&gt;';&#10;        _graph_data[_total_exp+2].values=_graph_data[_total_exp+2].values+StrReplace(_person.total, ",",".");&#10;        _graph_data[_total_exp+2].categoties=_graph_data[_total_exp+2].categoties+i+'. '+StrReplace(_person.person_name, ",","");&#10;        if (j&lt;count)&#10;        {&#10;            if(j==count-1)&#10;                _graph_data[_total_exp+2].values=_graph_data[_total_exp+2].values;&#10;            else&#10;                _graph_data[_total_exp+2].values=_graph_data[_total_exp+2].values+',';&#10;            _graph_data[_total_exp+2].categoties=_graph_data[_total_exp+2].categoties+',';&#10;        }&#10;&#10;        _RES_VALUE = _RES_VALUE + '&lt;/tr&gt;';&#10;        EXCEL_VALUE = EXCEL_VALUE +'&lt;/tr&gt;';&#10;        j++;&#10;    }&#10;&#10;&#10;    _RES_VALUE = _RES_VALUE + '&lt;/table&gt;';&#10;    EXCEL_VALUE = EXCEL_VALUE +'&lt;/table&gt;';&#10;    EXCEL_TABLE = EXCEL_VALUE;&#10;    Response.Write(_RES_VALUE);&#10;&#10;    html_TEXT = "";&#10;    SHEET_CAPTION = "Заголовок листа";&#10;    GRAPH_TEMPLATE = "WEBSOFT_HISTOGRAM_WT3_NO_OWC";&#10;    _form1 = ArrayOptFirstElem( XQuery("for $elem in custom_web_templates where $elem/code = '" + GRAPH_TEMPLATE + "' return $elem"));&#10;    if (_form1 != undefined)&#10;    {&#10;        _form1 = OpenDoc(UrlFromDocID(_form1.PrimaryKey)).TopElem;&#10;        Response.Write( EvalCodePage(_form1.html.Value) );&#10;    }&#10;%&gt;&#10;&lt;script type="text/javascript"&gt;&#10;    function open_win()&#10;    {&#10;        modalWin=window.open('assessment_excel_export.html','','');&#10;    }&#10;&lt;/script&gt;&#10;&lt;%&#10;}&#10;%&gt;</html>
			<use_session_cache>false</use_session_cache>
			<cwt_type>default</cwt_type>
			<out_type>undefined</out_type>
			<access>
				<access_level>0</access_level>
			</access>
			<doc_info>
				<creation>
					<user_login>user1</user_login>
					<date>2009-02-12T18:43:37Z</date>
				</creation>
				<modification>
					<user_login>admin</user_login>
					<user_id>6148914691236517121</user_id>
					<date>2021-06-28T13:27:13Z</date>
				</modification>
			</doc_info>
			<is_std>false</is_std>
			<changed>false</changed>
			<is_enabled>true</is_enabled>
		</custom_web_template>
		<custom_web_template>
			<id>0x5BD07FFA5F3A12F3</id>
			<code>uni-report4-part2</code>
			<name>Отчет № 4 (Универсальный отчет) часть2</name>
			<category>universal</category>
			<exec_code>
				<code_text>&lt;% if (build== 1)&#10;{&#10;&#9;_export_pic=Array();&#10;&#10;&#9;kk=0;&#10;&#9;//_temp_dir = ObtainSessionTempFile();&#10;&#9;//-----------------------&#10;&#9;_temp_name=Random(1000000000, 999999999999);&#10;&#9;path="\\wt\\web\\cache";&#10;&#9;_base = FilePathToUrl( AppDirectoryPath() + path);&#10;&#9;if (IsDirectory( _base )==false)&#10;&#9;{&#10;&#9;&#9;CreateDirectory( _base );&#10;&#9;}&#10;&#9;_temp_dir=_base+"/"+_temp_name;&#10;&#9;if (IsDirectory( _temp_dir )==false)&#10;&#9;{&#10;&#9;&#9;CreateDirectory( _temp_dir );&#10;&#9;}&#10;&#9;//------------------------&#10;&#9;&#10;&#9;_graph_data=Array();&#10;&#9;for (j=0;j&lt;1;j++)&#10;&#9;{&#10;&#9;&#9;_obj=new Object;&#10;&#9;&#9;_obj.series=StrReplace("Реальная оценка по компетенции", ","," ");&#10;&#9;&#9;_obj.categoties='';&#10;&#9;&#9;_obj.values='';&#10;&#9;&#9;_graph_data[ArrayCount(_graph_data)]=_obj;&#10;&#9;}&#10;&#9;count=ArrayCount(_wanted_objects)-1;&#10;&#9;&#10;&#9;&#10;&#9;Response.Write("&lt;Hr/&gt;");&#10;&#9;use_str = '';&#10;&#9;switch ( use )&#10;&#9;{&#10;&#9;&#9; case 1:&#10;&#9;&#9;&#9;   use_str = 'Компания';&#10;&#9;&#9;&#9;   break;&#10;&#9;&#9; case 2:&#10;&#9;&#9;&#9;   use_str = 'Подразделение';&#10;&#9;&#9;&#9;   break;&#10;&#9;&#9; case 3:&#10;&#9;&#9;&#9;   use_str = 'Сотрудник';&#10;&#9;&#9;&#9;   break;&#10;&#9;}&#10;&#9;&#10;&#9;if (swith_col==0)&#10;&#9;{&#10;&#9;&#9;_str1="Реальная оценка";&#10;&#9;}&#10;&#9;else&#10;&#9;{&#10;&#9;&#9;_str1="Оценка";&#10;&#9;}&#10;&#9;&#10;&#9;Response.Write('&lt;table width="100%" cellpadding="3" cellspacing="1" border="1" CLASS="reportTable"&gt;');&#10;&#9;Response.Write('&lt;tr&gt;');&#10;&#9;Response.Write('&lt;th class="reportTH"&gt;'+use_str+'&lt;/th&gt;');&#10;&#9;Response.Write('&lt;th class="reportTH"&gt;Компетенция&lt;/th&gt;');&#10;&#9;Response.Write('&lt;th class="reportTH"&gt;'+_str1+'&lt;/th&gt;');&#10;&#9;Response.Write('&lt;/tr&gt;');&#10;&#9;&#10;&#9;_RES_VALUE=_RES_VALUE+'&lt;table width="100%" cellpadding="3" cellspacing="1" border="1"&gt;';&#10;&#9;_RES_VALUE=_RES_VALUE+'&lt;tr&gt;';&#10;&#9;_RES_VALUE=_RES_VALUE+'&lt;th&gt;'+use_str+'&lt;/th&gt;';&#10;&#9;_RES_VALUE=_RES_VALUE+'&lt;th&gt;Компетенция&lt;/th&gt;';&#10;&#9;_RES_VALUE=_RES_VALUE+'&lt;th&gt;'+_str1+'&lt;/th&gt;';&#10;&#9;_RES_VALUE=_RES_VALUE+'&lt;/tr&gt;';&#10;&#9;&#10;&#9;i=1;&#10;&#9;rowspan_counter=0;&#10;&#9;for (_elem in _wanted_objects)&#10;&#9;{&#10;&#9;&#9;rowspan=ArrayCount(_elem.compArr);&#10;&#9;&#9;Response.Write('&lt;tr&gt;');&#10;&#9;&#9;Response.Write('&lt;td class="reportTD" align="center" rowspan="'+rowspan+'"&gt;'+_elem.name+'&lt;/td&gt;');&#10;&#9;&#10;&#9;&#9;_RES_VALUE=_RES_VALUE+'&lt;tr&gt;';&#10;&#9;&#9;_RES_VALUE=_RES_VALUE+'&lt;td align="center" rowspan="'+rowspan+'"&gt;'+_elem.name+'&lt;/td&gt;';&#9;&#10;&#9;&#10;&#9;&#9;_average=0;&#10;&#9;&#9;for (_el in _elem.compArr)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;Response.Write('&lt;td class="reportTD" align="center"&gt;'+_el.name+'&lt;/td&gt;');&#10;&#9;&#9;&#9;_RES_VALUE=_RES_VALUE+'&lt;td align="center"&gt;'+_el.name+'&lt;/td&gt;';&#10;&#9;&#9;&#9;if (_el.CollCount==0)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;_total=0;&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;else&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;_total=Real(_el.total)/Real(_el.CollCount);&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;Response.Write('&lt;td class="reportTD" align="center"&gt;'+_total+'&lt;/td&gt;');&#10;&#9;&#9;&#9;Response.Write('&lt;/tr&gt;');&#10;&#9;&#9;&#9;&#10;&#9;&#9;&#9;_RES_VALUE=_RES_VALUE+'&lt;td align="center"&gt;'+StrReplace(_total, ".",",")+'&lt;/td&gt;';&#10;&#9;&#9;&#9;_RES_VALUE=_RES_VALUE+'&lt;/tr&gt;';&#10;&#9;&#9;&#9;_average=_average+_total;&#10;&#9;&#9;}&#10;&#9;&#9;Response.Write('&lt;tr&gt;');&#10;&#9;&#9;Response.Write('&lt;td class="reportTD" align="center" colspan="2"&gt;Среднее значение по блоку для "'+_elem.name+'"&lt;/td&gt;');&#10;&#9;&#9;&#10;&#9;&#9;_RES_VALUE=_RES_VALUE+'&lt;tr&gt;';&#10;&#9;&#9;_RES_VALUE=_RES_VALUE+'&lt;td align="center" colspan="2"&gt;Среднее значение по блоку для "'+_elem.name+'"&lt;/td&gt;'&#10;&#9;&#9;if (rowspan==0)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;_average=0;&#10;&#9;&#9;}&#10;&#9;&#9;else&#10;&#9;&#9;{&#10;&#9;&#9;&#9;_average=Real(_average)/Real(rowspan);&#10;&#9;&#9;}&#10;&#9;&#9;Response.Write('&lt;td class="reportTD" align="center"&gt;'+StrReal(_average,2)+'&lt;/td&gt;');&#10;&#9;&#9;Response.Write('&lt;/tr&gt;');&#10;&#9;&#9;&#10;&#9;&#9;_RES_VALUE=_RES_VALUE+'&lt;td align="center"&gt;'+StrReplace(StrReal(_average,2), ".",",")+'&lt;/td&gt;';&#10;&#9;&#9;_RES_VALUE=_RES_VALUE+'&lt;/tr&gt;';&#10;&#9;&#9;&#10;&#9;&#9;_graph_data[0].values=_graph_data[0].values+StrReplace(_average, ",",".");&#10;&#9;&#9;_graph_data[0].categoties=_graph_data[0].categoties+i+'. '+StrReplace(_elem.name, ",","");&#10;&#9;&#9;if ((i-1)&lt;count)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;_graph_data[0].values=_graph_data[0].values+',';&#10;&#9;&#9;&#9;_graph_data[0].categoties=_graph_data[0].categoties+',';&#10;&#9;&#9;}&#10;&#9;&#9;&#10;&#9;&#9;&#10;&#9;&#9;i++;&#10;&#9;}&#10;&#9;Response.Write('&lt;/table&gt;');&#10;&#9;_RES_VALUE=_RES_VALUE+'&lt;/table&gt;';&#10;&#9;EXCEL_TABLE = _RES_VALUE;&#10;&#10;&#9;_x_object_found=false;&#10;&#9;kk=1;&#10;&#9;//-----------&#10;&#9;_graph_web_template_found=false;&#10;&#9;Additional_Report_CODE="WEBSOFT_HISTOGRAM_WT3_NO_OWC";&#10;&#10;&#9;Additional_Report_Form = ArrayOptFirstElem( XQuery("for $elem in custom_web_templates where $elem/code = '"+Additional_Report_CODE+"' return $elem") );&#10;&#10;&#9;if (Additional_Report_Form != undefined)&#10;&#9;{&#10;&#9;&#9;Additional_Report_Form = OpenDoc(UrlFromDocID(Additional_Report_Form.PrimaryKey)).TopElem;&#10;&#9;&#9;&#10;&#9;&#9;_anti_str = "";&#10;&#9;&#9;for (_wvar in Additional_Report_Form.wvars)&#9;_anti_str = _anti_str + _wvar.name + " = '" + HtmlEncode(_wvar.value) + "'; ";&#10;&#9;&#9;_graph_web_template_found=true;&#10;&#9;&#9;Response.Write(EvalCodePage( "&lt;" + "%" + _anti_str + "%" + "&gt;" + Additional_Report_Form.html.Value));&#10;&#9;}&#10;&#9;else&#10;&#9;{&#10;&#9;&#9;Response.Write("&lt;font color='red' stle='font-weight: boldest'&gt;*Ошибка: проблемы с настраиваемым web-шаблоном " +Additional_Report_CODE+". Графики не будут отображаться.*&lt;/font&gt;");&#10;&#9;}&#10;&#9;//-------------&#10;&#9;if (_graph_web_template_found==true &amp;&amp; false)&#10;&#9;{&#10;&#9;&#9;if (_x_object_found==false)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;Response.Write("Не найден объект ActiveX для построения графика.&lt;br/&gt;");&#10;&#9;&#9;}&#10;&#9;&#9;else&#10;&#9;&#9;{&#10;&#9;&#9;&#9;Response.Write('&lt;p align="center"&gt;&lt;img src="'+_export_pic[kk-1]+'"/&gt;&lt;/p&gt;');&#10;&#9;&#9;&#9;_RES_VALUE = _RES_VALUE + '&lt;p align="center"&gt;&lt;img src="'+_export_pic[kk-1]+'"/&gt;&lt;/p&gt;';&#10;&#9;&#9;}&#10;&#9;&#9;kk=kk++;&#10;&#9;}&#10;&#10;}&#10;%&gt;</code_text>
			</exec_code>
			<html>&lt;% if (build== 1)&#10;{&#10;&#9;_export_pic=Array();&#10;&#10;&#9;kk=0;&#10;&#9;//_temp_dir = ObtainSessionTempFile();&#10;&#9;//-----------------------&#10;&#9;_temp_name=Random(1000000000, 999999999999);&#10;&#9;path="\\wt\\web\\cache";&#10;&#9;_base = FilePathToUrl( AppDirectoryPath() + path);&#10;&#9;if (IsDirectory( _base )==false)&#10;&#9;{&#10;&#9;&#9;CreateDirectory( _base );&#10;&#9;}&#10;&#9;_temp_dir=_base+"/"+_temp_name;&#10;&#9;if (IsDirectory( _temp_dir )==false)&#10;&#9;{&#10;&#9;&#9;CreateDirectory( _temp_dir );&#10;&#9;}&#10;&#9;//------------------------&#10;&#9;&#10;&#9;_graph_data=Array();&#10;&#9;for (j=0;j&lt;1;j++)&#10;&#9;{&#10;&#9;&#9;_obj=new Object;&#10;&#9;&#9;_obj.series=StrReplace("Реальная оценка по компетенции", ","," ");&#10;&#9;&#9;_obj.categoties='';&#10;&#9;&#9;_obj.values='';&#10;&#9;&#9;_graph_data[ArrayCount(_graph_data)]=_obj;&#10;&#9;}&#10;&#9;count=ArrayCount(_wanted_objects)-1;&#10;&#9;&#10;&#9;&#10;&#9;Response.Write("&lt;Hr/&gt;");&#10;&#9;use_str = '';&#10;&#9;switch ( use )&#10;&#9;{&#10;&#9;&#9; case 1:&#10;&#9;&#9;&#9;   use_str = 'Компания';&#10;&#9;&#9;&#9;   break;&#10;&#9;&#9; case 2:&#10;&#9;&#9;&#9;   use_str = 'Подразделение';&#10;&#9;&#9;&#9;   break;&#10;&#9;&#9; case 3:&#10;&#9;&#9;&#9;   use_str = 'Сотрудник';&#10;&#9;&#9;&#9;   break;&#10;&#9;}&#10;&#9;&#10;&#9;if (swith_col==0)&#10;&#9;{&#10;&#9;&#9;_str1="Реальная оценка";&#10;&#9;}&#10;&#9;else&#10;&#9;{&#10;&#9;&#9;_str1="Оценка";&#10;&#9;}&#10;&#9;&#10;&#9;Response.Write('&lt;table width="100%" cellpadding="3" cellspacing="1" border="1" CLASS="reportTable"&gt;');&#10;&#9;Response.Write('&lt;tr&gt;');&#10;&#9;Response.Write('&lt;th class="reportTH"&gt;'+use_str+'&lt;/th&gt;');&#10;&#9;Response.Write('&lt;th class="reportTH"&gt;Компетенция&lt;/th&gt;');&#10;&#9;Response.Write('&lt;th class="reportTH"&gt;'+_str1+'&lt;/th&gt;');&#10;&#9;Response.Write('&lt;/tr&gt;');&#10;&#9;&#10;&#9;_RES_VALUE=_RES_VALUE+'&lt;table width="100%" cellpadding="3" cellspacing="1" border="1"&gt;';&#10;&#9;_RES_VALUE=_RES_VALUE+'&lt;tr&gt;';&#10;&#9;_RES_VALUE=_RES_VALUE+'&lt;th&gt;'+use_str+'&lt;/th&gt;';&#10;&#9;_RES_VALUE=_RES_VALUE+'&lt;th&gt;Компетенция&lt;/th&gt;';&#10;&#9;_RES_VALUE=_RES_VALUE+'&lt;th&gt;'+_str1+'&lt;/th&gt;';&#10;&#9;_RES_VALUE=_RES_VALUE+'&lt;/tr&gt;';&#10;&#9;&#10;&#9;i=1;&#10;&#9;rowspan_counter=0;&#10;&#9;for (_elem in _wanted_objects)&#10;&#9;{&#10;&#9;&#9;rowspan=ArrayCount(_elem.compArr);&#10;&#9;&#9;Response.Write('&lt;tr&gt;');&#10;&#9;&#9;Response.Write('&lt;td class="reportTD" align="center" rowspan="'+rowspan+'"&gt;'+_elem.name+'&lt;/td&gt;');&#10;&#9;&#10;&#9;&#9;_RES_VALUE=_RES_VALUE+'&lt;tr&gt;';&#10;&#9;&#9;_RES_VALUE=_RES_VALUE+'&lt;td align="center" rowspan="'+rowspan+'"&gt;'+_elem.name+'&lt;/td&gt;';&#9;&#10;&#9;&#10;&#9;&#9;_average=0;&#10;&#9;&#9;for (_el in _elem.compArr)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;Response.Write('&lt;td class="reportTD" align="center"&gt;'+_el.name+'&lt;/td&gt;');&#10;&#9;&#9;&#9;_RES_VALUE=_RES_VALUE+'&lt;td align="center"&gt;'+_el.name+'&lt;/td&gt;';&#10;&#9;&#9;&#9;if (_el.CollCount==0)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;_total=0;&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;else&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;_total=Real(_el.total)/Real(_el.CollCount);&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;Response.Write('&lt;td class="reportTD" align="center"&gt;'+_total+'&lt;/td&gt;');&#10;&#9;&#9;&#9;Response.Write('&lt;/tr&gt;');&#10;&#9;&#9;&#9;&#10;&#9;&#9;&#9;_RES_VALUE=_RES_VALUE+'&lt;td align="center"&gt;'+StrReplace(_total, ".",",")+'&lt;/td&gt;';&#10;&#9;&#9;&#9;_RES_VALUE=_RES_VALUE+'&lt;/tr&gt;';&#10;&#9;&#9;&#9;_average=_average+_total;&#10;&#9;&#9;}&#10;&#9;&#9;Response.Write('&lt;tr&gt;');&#10;&#9;&#9;Response.Write('&lt;td class="reportTD" align="center" colspan="2"&gt;Среднее значение по блоку для "'+_elem.name+'"&lt;/td&gt;');&#10;&#9;&#9;&#10;&#9;&#9;_RES_VALUE=_RES_VALUE+'&lt;tr&gt;';&#10;&#9;&#9;_RES_VALUE=_RES_VALUE+'&lt;td align="center" colspan="2"&gt;Среднее значение по блоку для "'+_elem.name+'"&lt;/td&gt;'&#10;&#9;&#9;if (rowspan==0)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;_average=0;&#10;&#9;&#9;}&#10;&#9;&#9;else&#10;&#9;&#9;{&#10;&#9;&#9;&#9;_average=Real(_average)/Real(rowspan);&#10;&#9;&#9;}&#10;&#9;&#9;Response.Write('&lt;td class="reportTD" align="center"&gt;'+StrReal(_average,2)+'&lt;/td&gt;');&#10;&#9;&#9;Response.Write('&lt;/tr&gt;');&#10;&#9;&#9;&#10;&#9;&#9;_RES_VALUE=_RES_VALUE+'&lt;td align="center"&gt;'+StrReplace(StrReal(_average,2), ".",",")+'&lt;/td&gt;';&#10;&#9;&#9;_RES_VALUE=_RES_VALUE+'&lt;/tr&gt;';&#10;&#9;&#9;&#10;&#9;&#9;_graph_data[0].values=_graph_data[0].values+StrReplace(_average, ",",".");&#10;&#9;&#9;_graph_data[0].categoties=_graph_data[0].categoties+i+'. '+StrReplace(_elem.name, ",","");&#10;&#9;&#9;if ((i-1)&lt;count)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;_graph_data[0].values=_graph_data[0].values+',';&#10;&#9;&#9;&#9;_graph_data[0].categoties=_graph_data[0].categoties+',';&#10;&#9;&#9;}&#10;&#9;&#9;&#10;&#9;&#9;&#10;&#9;&#9;i++;&#10;&#9;}&#10;&#9;Response.Write('&lt;/table&gt;');&#10;&#9;_RES_VALUE=_RES_VALUE+'&lt;/table&gt;';&#10;&#9;EXCEL_TABLE = _RES_VALUE;&#10;&#10;&#9;_x_object_found=false;&#10;&#9;kk=1;&#10;&#9;//-----------&#10;&#9;_graph_web_template_found=false;&#10;&#9;Additional_Report_CODE="WEBSOFT_HISTOGRAM_WT3_NO_OWC";&#10;&#10;&#9;Additional_Report_Form = ArrayOptFirstElem( XQuery("for $elem in custom_web_templates where $elem/code = '"+Additional_Report_CODE+"' return $elem") );&#10;&#10;&#9;if (Additional_Report_Form != undefined)&#10;&#9;{&#10;&#9;&#9;Additional_Report_Form = OpenDoc(UrlFromDocID(Additional_Report_Form.PrimaryKey)).TopElem;&#10;&#9;&#9;&#10;&#9;&#9;_anti_str = "";&#10;&#9;&#9;for (_wvar in Additional_Report_Form.wvars)&#9;_anti_str = _anti_str + _wvar.name + " = '" + HtmlEncode(_wvar.value) + "'; ";&#10;&#9;&#9;_graph_web_template_found=true;&#10;&#9;&#9;Response.Write(EvalCodePage( "&lt;" + "%" + _anti_str + "%" + "&gt;" + Additional_Report_Form.html.Value));&#10;&#9;}&#10;&#9;else&#10;&#9;{&#10;&#9;&#9;Response.Write("&lt;font color='red' stle='font-weight: boldest'&gt;*Ошибка: проблемы с настраиваемым web-шаблоном " +Additional_Report_CODE+". Графики не будут отображаться.*&lt;/font&gt;");&#10;&#9;}&#10;&#9;//-------------&#10;&#9;if (_graph_web_template_found==true &amp;&amp; false)&#10;&#9;{&#10;&#9;&#9;if (_x_object_found==false)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;Response.Write("Не найден объект ActiveX для построения графика.&lt;br/&gt;");&#10;&#9;&#9;}&#10;&#9;&#9;else&#10;&#9;&#9;{&#10;&#9;&#9;&#9;Response.Write('&lt;p align="center"&gt;&lt;img src="'+_export_pic[kk-1]+'"/&gt;&lt;/p&gt;');&#10;&#9;&#9;&#9;_RES_VALUE = _RES_VALUE + '&lt;p align="center"&gt;&lt;img src="'+_export_pic[kk-1]+'"/&gt;&lt;/p&gt;';&#10;&#9;&#9;}&#10;&#9;&#9;kk=kk++;&#10;&#9;}&#10;&#10;}&#10;%&gt;</html>
			<use_session_cache>false</use_session_cache>
			<cwt_type>default</cwt_type>
			<out_type>undefined</out_type>
			<access>
				<access_level>0</access_level>
			</access>
			<doc_info>
				<creation>
					<user_login>user1</user_login>
					<date>2009-02-14T11:37:18Z</date>
				</creation>
				<modification>
					<user_login>admin</user_login>
					<user_id>6148914691236517121</user_id>
					<date>2021-06-28T13:27:13Z</date>
				</modification>
			</doc_info>
			<is_std>false</is_std>
			<changed>false</changed>
			<is_enabled>true</is_enabled>
		</custom_web_template>
		<custom_web_template>
			<id>0x4982C92955A963A2</id>
			<code>uni-resulting-estimation-list-part2</code>
			<name>Итоговый Оценочный лист  (Универсальный отчет) часть2</name>
			<category>websoft</category>
			<exec_code>
				<code_text>&lt;%&#10;// -----------------------------------------------------------------------------------------------------------------------------&#10;// автор:   &#10;// создан: &#10;// изменен: 15.05.2014 by AD&#10;// --------------------------------------------------------- Описание ----------------------------------------------------------&#10;// Отчет "Итоговый Оценочный лист" (соотношение плановой и полученной оценки) - часть 2&#10;&#10;alert ("uni-resulting-estimation-list-part2 - started");&#10;_export_pic = Array();&#10;kk=0;&#10;_graph_data=Array();&#10;for ( _proc in proc_Array )&#10;{&#10;&#9;&#9;&#9;for (_person in coll_Array)&#9;&#9;&#9;&#10;&#9;&#9;&#9;{&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;Response.Write('Ф.И.О. сотрудника: '+_person.fullname+ '&lt;br/&gt;');&#10;&#9;&#9;&#9;&#9;&#9;Response.Write('Должность: '+_person.position_name+ '&lt;br/&gt;');&#10;&#9;&#9;&#9;&#9;&#9;Response.Write('Компания:  '+_person.org_name+ '&lt;br/&gt;');&#10;&#9;&#9;&#9;&#9;&#9;Response.Write('Служба/отдел:   '+_person.position_parent_name+ '&lt;br/&gt;');&#10;&#9;&#9;&#9;&#9;&#9;// -------------&#10;&#9;&#9;&#9;&#9;&#9;_RES_VALUE=_RES_VALUE+'&lt;table width="10%" cellpadding="3" cellspacing="1" border="0"&gt;'&#10;&#9;&#9;&#9;&#9;&#9;_RES_VALUE=_RES_VALUE+'&lt;tr&gt;&lt;td&gt;Ф.И.О. сотрудника: '+_person.fullname+ '&lt;/td&gt;&lt;/tr&gt;';&#10;&#9;&#9;&#9;&#9;&#9;_RES_VALUE=_RES_VALUE+'&lt;tr&gt;&lt;td&gt;Должность: '+_person.position_name+ '&lt;/td&gt;&lt;/tr&gt;';&#10;&#9;&#9;&#9;&#9;&#9;_RES_VALUE=_RES_VALUE+'&lt;tr&gt;&lt;td&gt;Компания:  '+_person.org_name+ '&lt;/td&gt;&lt;/tr&gt;';&#10;&#9;&#9;&#9;&#9;&#9;_RES_VALUE=_RES_VALUE+'&lt;tr&gt;&lt;td&gt;Служба/отдел:   '+_person.position_parent_name+ '&lt;/td&gt;&lt;/tr&gt;';&#10;&#9;&#9;&#9;&#9;&#9;_RES_VALUE=_RES_VALUE+'&lt;/table&gt;';&#10;&#9;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;SELF_COUNT = 0;&#10;&#9;&#9;&#9;&#9;&#9;BOSS_COUNT = 0;&#10;&#9;&#9;&#9;&#9;&#9;FUNC_COUNT = 0;&#10;&#9;&#9;&#9;&#9;&#9;EXPERT_COUNT = 0;&#10;&#9;&#9;&#9;&#9;&#9;STAFF_COUNT = 0;&#10;&#9;&#9;&#9;&#9;&#9;COLL_COUNT = 0;&#10;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;_aspl = XQuery("for $aspl in assessment_plans where $aspl/person_id = " + _person.id + " and $aspl/assessment_appraise_id = " + _proc.id + " return $aspl");&#10;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;_aspl_first = ArrayOptFirstElem( _aspl ); &#10;&#9;&#9;&#9;&#9;&#9;_boss_id = 0;&#10;&#9;&#9;&#9;&#9;&#9;if ( _aspl_first != undefined ) &#10;&#9;&#9;&#9;&#9;&#9;{ &#10;&#9;&#9;&#9;&#9;&#9;&#9;_boss_id = _aspl_first.boss_id;&#10;&#9;&#9;&#9;&#9;&#9;&#9;_asplDoc = OpenDoc(UrlFromDocID(_aspl_first.id)).TopElem;&#10;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;_pas = XQuery("for $pa in pas where $pa/person_id = " + _person.id + " and $pa/assessment_appraise_id = " + _proc.id + " return $pa");&#10;&#9;&#9;&#9;&#9;&#9;_pasArray = Array();&#10;&#9;&#9;&#9;&#9;&#9;_selfPA = undefined;&#10;&#9;&#9;&#9;&#9;&#9;_participantPA = undefined;&#10;&#9;&#9;&#9;&#9;&#9;_funcPA = undefined;&#10;&#9;&#9;&#9;&#9;&#9;_profile_id = 0;&#10;&#9;&#9;&#9;&#9;&#9;_folder = '';&#10;&#9;&#9;&#9;&#9;&#9;for (_pa in _pas)&#10;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;curElem = new Object;&#10;&#9;&#9;&#9;&#9;&#9;&#9;curElem.curPA = 0;&#10;&#9;&#9;&#9;&#9;&#9;&#9;curElem.flag = 0;&#10;&#9;&#9;&#9;&#9;&#9;&#9;switch(_pa.status)&#10;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;case "self":&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;curElem.flag = 1;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;SELF_COUNT = 1;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;break;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;case "manager":&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if (_pa.expert_person_id == _boss_id)&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;BOSS_COUNT = 1;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;curElem.flag = 2;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;else&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;FUNC_COUNT ++;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;curElem.flag = 4;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;break;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;case "expert":&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;EXPERT_COUNT++;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;curElem.flag = 3;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;break;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;case "staff":&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;STAFF_COUNT++;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;curElem.flag = 5;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;break;&#9;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;case "coll":&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;COLL_COUNT++;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;curElem.flag = 6;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;break;&#9;&#10;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;curElem.curPA=OpenDoc(UrlFromDocID(_pa.id)).TopElem;&#10;&#9;&#9;&#9;&#9;&#9;&#9;curElem.profile_id = curElem.curPA.competence_profile_id;&#10;&#9;&#9;&#9;&#9;&#9;&#9;curElem.prof_codes =curElem.curPA.competence_codes;&#10;&#9;&#9;&#9;&#9;&#9;&#9;curElem.participantPA = curElem.curPA.competences;&#10;&#9;&#9;&#9;&#9;&#9;&#9;curElem.folder=_pa.id;&#10;&#9;&#9;&#9;&#9;&#9;&#9;_pasArray[ArrayCount(_pasArray)]=curElem;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;_SHIFT = 2;&#10;&#9;&#9;&#9;&#9;&#9;SELF_WEIGHT = 100;&#10;&#9;&#9;&#9;&#9;&#9;BOSS_WEIGHT = 100;&#10;&#9;&#9;&#9;&#9;&#9;FUNC_WEIGHT = 100;&#10;&#9;&#9;&#9;&#9;&#9;EXPERT_WEIGHT = 100;&#10;&#9;&#9;&#9;&#9;&#9;COLL_WEIGHT = 100;&#10;&#9;&#9;&#9;&#9;&#9;STAFF_WEIGHT = 100;&#10;&#9;&#9;&#9;&#9;&#9;if (uni_type_estimation == true)&#10;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;//По умолчанию&#10;&#9;&#9;&#9;&#9;&#9;&#9;SELF_WEIGHT = 10;&#10;&#9;&#9;&#9;&#9;&#9;&#9;BOSS_WEIGHT = 45;&#10;&#9;&#9;&#9;&#9;&#9;&#9;FUNC_WEIGHT = 45;&#10;&#9;&#9;&#9;&#9;&#9;&#9;EXPERT_WEIGHT = 0;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;&#9;weight_table_CODE="weight_table";&#10;&#9;&#9;&#9;&#9;&#9;&#9;weight_table_Form = ArrayOptFirstElem( XQuery("for $elem in custom_web_templates where $elem/code = '"+weight_table_CODE+"' return $elem") );&#10;&#9;&#9;&#9;&#9;&#9;&#9;if (weight_table_Form != undefined)&#10;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;weight_table_Form = OpenDoc(UrlFromDocID(weight_table_Form.PrimaryKey)).TopElem;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_anti_str = "";&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;for (_wvar in weight_table_Form.wvars)&#9;_anti_str = _anti_str + _wvar.name + " = '" + HtmlEncode(_wvar.value) + "'; ";&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;EvalCodePage( "&lt;" + "%" + _anti_str + "%" + "&gt;" + weight_table_Form.html.Value)&#10;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;else&#10;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Response.Write("&lt;font color='red' stle='font-weight: boldest'&gt;*Ошибка: проблемы с настраиваемым web-шаблоном " +weight_table_CODE+"*&lt;/font&gt;");&#10;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;competenceArray = Array();&#10;&#9;&#9;&#9;&#9;&#9;_boss_competenceArray = Array();&#10;&#9;&#9;&#9;&#9;&#9;_comp_count = 0;&#10;&#9;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;_pasArray = ArraySort(_pasArray,'flag','+');&#10;&#9;&#9;&#9;&#9;&#9;_pasCount = ArrayCount(_pasArray);&#10;&#9;&#9;&#9;&#9;&#9;for (_elem in _pasArray)&#10;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;try&#10;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_curProfile = OpenDoc(UrlFromDocID(_elem.profile_id)).TopElem.competences;&#10;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;catch(_shit_)&#10;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_curProfile = undefined;&#10;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;try&#10;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_prof_codes = String(_elem.prof_codes).split('\n');&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;for (_a = 0; _a &lt; ArrayCount(_prof_codes); _a++)&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_cur_prof = ArrayOptFirstElem(XQuery("for $elem in competence_profiles where $elem/code = " + XQueryLiteral(_prof_codes[_a]) + " return $elem"));&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if (_cur_prof != undefined)&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_prof_codes[_a] = OpenDoc(UrlFromDocID(_cur_prof.id)).TopElem.competences;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;else&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_prof_codes[_a] = undefined;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;catch(_brk_)&#10;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_prof_codes = Array();&#10;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;compCounter = 0;&#10;&#9;&#9;&#9;&#9;&#9;&#9;for(_comp in _elem.curPA.competences)&#10;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_curCompetence = ArrayOptFind(competenceArray, 'id == _comp.PrimaryKey');&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_weight = 0;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_plan_mark=0;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_plan_mark_name=0;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;try&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_weight=Real(_comp.weight);&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;catch(dd)&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#10;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if (_curCompetence == undefined)&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;try&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_curCompetenceDoc = OpenDoc(UrlFromDocID(_comp.PrimaryKey)).TopElem;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;catch(_shit_)&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;continue;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if (_comp.plan == "" || _comp.plan == "N")&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_plan_mark = null;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;else&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_plan_mark_scale = _curCompetenceDoc.scales.GetOptChildByKey(_comp.plan);&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if (_plan_mark_scale != undefined)&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if (uni_type_estimation==true)&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_plan_mark = Real(_SHIFT-_plan_mark_scale.ChildIndex) ;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_plan_mark_name=_plan_mark_scale.name;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;else&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;try&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;//Response.Write(StrLen(_comp.mark));&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if (StrLen(Real(_comp.plan))==StrLen(_comp.plan))&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_plan_mark = Real(_comp.plan);&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;else&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;cancel();&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;catch(ex)&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;try&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_plan_mark = Real(_plan_mark_scale.percent);&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;catch(jjh)&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_plan_mark = _plan_mark_scale.ChildIndex;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_plan_mark_name=_plan_mark;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;else&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if (StrLen(Real(_comp.plan))==StrLen(_comp.plan))&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_plan_mark = Real(_comp.plan);&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_plan_mark_name=_plan_mark;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;else&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_plan_mark = null;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if &#9;(_plan_mark==null)&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_plan_mark = 0;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_plan_mark_name=_plan_mark;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_curCompetenceObj = new Object;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_curCompetenceObj.id = _comp.PrimaryKey;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_curCompetenceObj.name=_comp.competence_id.ForeignElem.name;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_curCompetenceObj.TopElem = _curCompetenceDoc;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_curCompetenceObj.CompCount =_pasCount;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_curCompetenceObj.native = true;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_curCompetenceObj.weight = _weight;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_curCompetenceObj.plan_mark = _plan_mark;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_curCompetenceObj.plan_mark_name=_plan_mark_name;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_curCompetenceObj.total = 0.0;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;competenceArray[compCounter] = _curCompetenceObj;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_curCompetence=competenceArray[compCounter];&#10;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;compCounter++;&#10;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;else&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_curCompetenceDoc =_curCompetence.TopElem;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if (_comp.mark == "" || _comp.mark == "N")&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_score = null;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;else&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_scale = _curCompetenceDoc.scales.GetOptChildByKey(_comp.mark);&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if (_scale != undefined)&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if (uni_type_estimation==true)&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_score = _SHIFT-_scale.ChildIndex ;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;else&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;try&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;//Response.Write(StrLen(_comp.mark));&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if (StrLen(Real(_comp.mark))==StrLen(_comp.mark))&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_score = Real(_comp.mark);&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;else&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;cancel();&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;catch(ex)&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;try&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_score = Real(_scale.percent);&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;catch(jjh)&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_score = _scale.ChildIndex;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;else&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_score = 0;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;try&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;//Response.Write(StrLen(_comp.mark));&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if (StrLen(Real(_comp.mark))==StrLen(_comp.mark))&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_score = Real(_comp.mark);&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;catch(ex)&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_scale = undefined;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if (_curProfile != undefined)&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_cur_comp = _curProfile.GetOptChildByKey(_curCompetence.id);&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if (_cur_comp != undefined)&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_scale = _curCompetence.TopElem.scales.GetOptChildByKey(_cur_comp.plan);&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if (_scale == undefined)&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;for (_pk in _prof_codes)&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if (_pk != undefined)&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_cur_comp = _pk.GetOptChildByKey(_curCompetence.id);&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if (_cur_comp != undefined)&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_scale = _curCompetence.TopElem.scales.GetOptChildByKey(_cur_comp.plan);&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_curCompetence.native = false;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;break;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;switch(_elem.flag)&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;case 1:&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if (_score == null) _score = 0;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9; _curCompetence.total=_curCompetence.total+(Real(_score)* Real(SELF_WEIGHT) / 100.0);&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;break;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;case 2:&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if (_score == null) _score = 0;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;cur_comp_Object=new Object;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;cur_comp_Object.comp_id=_comp.PrimaryKey;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;cur_comp_Object.name=_comp.competence_id.ForeignElem.name;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;cur_comp_Object.score=_score;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_boss_competenceArray[ArrayCount(_boss_competenceArray)]=cur_comp_Object;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_curCompetence.total = _curCompetence.total + (Real(_score) * Real(BOSS_WEIGHT) / 100.0);&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;break;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;case 3:&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if (uni_type_estimation==true)&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if (_score == null) &#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;for (_boss_comp in _boss_competenceArray)&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;//Response.Write(' id ='+_comp.PrimaryKey +'&lt;br/&gt;');&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if (Int(_comp.PrimaryKey)==Int(_boss_comp.comp_id))&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_score=_boss_comp.score;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;//Response.Write('www score='+_score+'&lt;br/&gt;');&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;break;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;//Response.Write('_boss_comp id ='+_boss_comp.comp_id +' name='+_boss_comp.name +' score='+_boss_comp.score+' _weight='+_weight+'&lt;br/&gt;');&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if (_score == null) _score = 0;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_curCompetence.total = _curCompetence.total + (Real(_score) * Real(EXPERT_WEIGHT) / 100.0);&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;break;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;case 4:&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if (uni_type_estimation==true)&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if (_score == null) &#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;for (_boss_comp in _boss_competenceArray)&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if (Int(_comp.PrimaryKey)==Int(_boss_comp.comp_id))&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_score=_boss_comp.score;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;break;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if (_score == null) _score = 0;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_curCompetence.total = _curCompetence.total + (Real(_score) * Real(FUNC_WEIGHT) / 100.0);&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;break;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#9;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;case 5:&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if (uni_type_estimation==true)&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if (_score == null) &#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;for (_boss_comp in _boss_competenceArray)&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if (Int(_comp.PrimaryKey)==Int(_boss_comp.comp_id))&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_score=_boss_comp.score;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;break;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if (_score == null) _score = 0;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_curCompetence.total = _curCompetence.total + (Real(_score) * Real(STAFF_WEIGHT) / 100.0);&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;break;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;case 6:&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if (uni_type_estimation==true)&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if (_score == null) &#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;for (_boss_comp in _boss_competenceArray)&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if (Int(_comp.PrimaryKey)==Int(_boss_comp.comp_id))&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_score=_boss_comp.score;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;break;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if (_score == null) _score = 0;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_curCompetence.total = _curCompetence.total + (Real(_score) * Real(STAFF_WEIGHT) / 100.0);&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;break;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#10;&#9;&#9; if (uni_type_estimation==false)&#10;&#9;&#9; {&#9;&#10;&#9;&#9; &#9;if (_pasCount!=0)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;for (comp in competenceArray)&#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;comp.total=StrReal(comp.total/_pasCount,2);&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;}&#10;&#9;&#9; }&#10;&#9;&#9;_native=true;&#10;%&gt;&#10;&#10;&#9;&#9;&lt;BR/&gt;&#10;&#9;&#9;&lt;center&gt;&lt;input type="button" value="Экспорт в Excel" onclick="open_win()" class="inputButton" onMouseOver="this.className='inputButtonOver';" onMouseOut="this.className='inputButton';"/&gt;&lt;/center&gt;&#10;&#9;&#9;&lt;BR/&gt;&#10;&#10;&lt;%&#10;&#9;&#9;kk=1;&#10;&#9;&#9;for (jj=0;jj&lt;2;jj++)&#10;&#9;&#9;{&#9;&#9;&#10;&#9;&#9;&#9;competenceArray_selection = ArraySelect(competenceArray, "native == " + _native);&#10;&#9;&#9;&#9;&#10;&#9;&#9;&#9;if (ArrayCount(competenceArray_selection)&gt;0)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;cols_Count=3&#10;&#9;&#9;&#9;&#9;total_array=Array(cols_Count);&#10;&#9;&#9;&#9;&#9;for(nn=0;nn&lt;cols_Count;nn++)&#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;total_array[nn]=0;&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;_graph_data=Array();&#10;&#9;&#9;&#9;&#9;for (j=0;j&lt;2;j++)&#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;_obj=new Object;&#10;&#9;&#9;&#9;&#9;&#9;if (j==0)&#10;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;_obj.series=StrReplace("Итоговая оценка по компетенции", ","," ");&#10;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;else&#10;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;_obj.series=StrReplace("Плановая оценка по компетенции", ","," ");&#10;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;_obj.order=0;&#10;&#9;&#9;&#9;&#9;&#9;_obj.categoties='';&#10;&#9;&#9;&#9;&#9;&#9;_obj.values='';&#10;&#9;&#9;&#9;&#9;&#9;_graph_data[ArrayCount(_graph_data)]=_obj;&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;Response.Write('&lt;table width="100%" cellpadding="3" cellspacing="1" border="1" CLASS="reportTable"&gt;');&#10;&#9;&#9;&#9;&#9;Response.Write('&lt;tr&gt;');&#10;&#9;&#9;&#9;&#9;Response.Write('&lt;th class="reportTH"&gt;№&lt;/th&gt;');&#10;&#9;&#9;&#9;&#9;Response.Write('&lt;th class="reportTH"&gt;Компетенции&lt;/th&gt;');&#10;&#9;&#9;&#9;&#9;Response.Write('&lt;th class="reportTH"&gt;Вес Компетенции &lt;br/&gt;в итоговой оценке&lt;/th&gt;');&#10;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;if (swith_col==0)&#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;Response.Write('&lt;th class="reportTH"&gt;Оценка по Компетенции&lt;/th&gt;');&#10;&#9;&#9;&#9;&#9;&#9;Response.Write('&lt;th class="reportTH"&gt;Плановая оценка&lt;br /&gt;из идеального профиля&lt;/th&gt;');&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;else&#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;Response.Write('&lt;th class="reportTH"&gt;Плановая оценка&lt;br /&gt;из идеального профиля&lt;/th&gt;');&#10;&#9;&#9;&#9;&#9;&#9;Response.Write('&lt;th class="reportTH"&gt;Оценка по Компетенции&lt;/th&gt;');&#10;&#9;&#9;&#9;&#9;}&#10;&#10;&#9;&#9;&#9;&#9;Response.Write('&lt;/tr&gt;');&#10;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;_RES_VALUE=_RES_VALUE+'&lt;table width="100%" cellpadding="3" cellspacing="1" border="1"&gt;';&#10;&#9;&#9;&#9;&#9;_RES_VALUE=_RES_VALUE+'&lt;tr&gt;';&#10;&#9;&#9;&#9;&#9;_RES_VALUE=_RES_VALUE+'&lt;th&gt;№&lt;/th&gt;';&#10;&#9;&#9;&#9;&#9;_RES_VALUE=_RES_VALUE+'&lt;th&gt;Компетенции&lt;/th&gt;';&#10;&#9;&#9;&#9;&#9;_RES_VALUE=_RES_VALUE+'&lt;th&gt;Вес Компетенции &lt;br/&gt;в итоговой оценке&lt;/th&gt;';&#10;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;if (swith_col==0)&#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;_RES_VALUE=_RES_VALUE+'&lt;th&gt;Оценка по Компетенции&lt;/th&gt;';&#10;&#9;&#9;&#9;&#9;&#9;_RES_VALUE=_RES_VALUE+'&lt;th&gt;Плановая оценка&lt;br /&gt;из идеального профиля&lt;/th&gt;';&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;else&#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;_RES_VALUE=_RES_VALUE+'&lt;th&gt;Плановая оценка&lt;br /&gt;из идеального профиля&lt;/th&gt;';&#10;&#9;&#9;&#9;&#9;&#9;_RES_VALUE=_RES_VALUE+'&lt;th&gt;Оценка по Компетенции&lt;/th&gt;';&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#10;&#10;&#9;&#9;&#9;&#9;_RES_VALUE=_RES_VALUE+'&lt;/tr&gt;';&#10;&#9;&#9;&#9;&#9;&#10;&#10;&#9;&#9;&#9;&#9;//Response.Write('&lt;/tr&gt;');&#10;&#9;&#9;&#9;&#9;//_RES_VALUE=_RES_VALUE+'&lt;/tr&gt;';&#10;&#9;&#9;&#9;&#9;i=1;&#10;&#9;&#9;&#9;&#9;count=ArrayCount(competenceArray_selection)-1;&#10;&#9;&#9;&#9;&#9;for (comp in competenceArray_selection)&#10;&#9;&#9;&#9;&#9;{&#9;&#10;&#9;&#9;&#9;&#9;&#9;Response.Write('&lt;tr&gt;');&#10;&#9;&#9;&#9;&#9;&#9;Response.Write('&lt;td class="reportTD" align="center"&gt;'+i+'&lt;/td&gt;');&#10;&#9;&#9;&#9;&#9;&#9;Response.Write('&lt;td class="reportTD" align="center"&gt;'+comp.name+'&lt;/td&gt;');&#10;&#9;&#9;&#9;&#9;&#9;Response.Write('&lt;td class="reportTD" align="center"&gt;'+StrReal(comp.weight,2)+'%&lt;/td&gt;');&#10;&#9;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;if (swith_col==0)&#10;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;Response.Write('&lt;td class="reportTD" align="center"&gt;'+StrReplace(comp.total, ".",",")+'&lt;/td&gt;');&#10;&#9;&#9;&#9;&#9;&#9;&#9;Response.Write('&lt;td class="reportTD" align="center"&gt;'+comp.plan_mark_name+'&lt;/td&gt;');&#10;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;else&#10;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;Response.Write('&lt;td class="reportTD" align="center"&gt;'+comp.plan_mark_name+'&lt;/td&gt;');&#10;&#9;&#9;&#9;&#9;&#9;&#9;Response.Write('&lt;td class="reportTD" align="center"&gt;'+StrReplace(comp.total, ".",",")+'&lt;/td&gt;');&#10;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#10;&#10;&#9;&#9;&#9;&#9;&#9;Response.Write('&lt;/tr&gt;');&#10;&#10;&#9;&#9;&#9;&#9;&#9;_RES_VALUE=_RES_VALUE+'&lt;tr&gt;';&#10;&#9;&#9;&#9;&#9;&#9;_RES_VALUE=_RES_VALUE+'&lt;td align="center"&gt;'+i+'&lt;/td&gt;';&#10;&#9;&#9;&#9;&#9;&#9;_RES_VALUE=_RES_VALUE+'&lt;td align="center"&gt;'+comp.name+'&lt;/td&gt;';&#10;&#9;&#9;&#9;&#9;&#9;_RES_VALUE=_RES_VALUE+'&lt;td align="center"&gt;'+StrReplace(StrReal(comp.weight,2), ".",",")+'%&lt;/td&gt;';&#10;&#9;&#9;&#9;&#9;&#9;if (swith_col==0)&#10;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;_RES_VALUE=_RES_VALUE+'&lt;td align="center"&gt;'+StrReplace(comp.total, ".",",")+'&lt;/td&gt;';&#10;&#9;&#9;&#9;&#9;&#9;&#9;_RES_VALUE=_RES_VALUE+'&lt;td align="center"&gt;'+comp.plan_mark_name+'&lt;/td&gt;';&#10;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;else&#10;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;_RES_VALUE=_RES_VALUE+'&lt;td align="center"&gt;'+comp.plan_mark_name+'&lt;/td&gt;';&#10;&#9;&#9;&#9;&#9;&#9;&#9;_RES_VALUE=_RES_VALUE+'&lt;td align="center"&gt;'+StrReplace(comp.total, ".",",")+'&lt;/td&gt;';&#10;&#9;&#9;&#9;&#9;&#9;}&#10;&#10;&#9;&#9;&#9;&#9;&#9;_RES_VALUE=_RES_VALUE+'&lt;/tr&gt;';&#10;&#9;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;total_array[0]=total_array[0]+Real(comp.weight);&#10;&#9;&#9;&#9;&#9;&#9;if (swith_col==0)&#10;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;total_array[1]=total_array[1]+(Real(comp.weight/100.0)*Real(comp.total));&#10;&#9;&#9;&#9;&#9;&#9;&#9;total_array[2]=total_array[2]+(Real(comp.weight/100.0)*Real(comp.plan_mark));&#10;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;else&#10;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;total_array[2]=total_array[2]+(Real(comp.weight/100.0)*Real(comp.total));&#10;&#9;&#9;&#9;&#9;&#9;&#9;total_array[1]=total_array[1]+(Real(comp.weight/100.0)*Real(comp.plan_mark));&#10;&#9;&#9;&#9;&#9;&#9;}&#10;&#10;&#9;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;_graph_data[0].values=_graph_data[0].values+StrReplace(comp.total, ",",".");&#10;&#9;&#9;&#9;&#9;&#9;_graph_data[0].categoties=_graph_data[0].categoties+i+'. '+StrReplace(comp.name, ",","");&#10;&#9;&#9;&#9;&#9;&#9;_graph_data[1].values=_graph_data[1].values+StrReplace(comp.plan_mark, ",",".");&#10;&#9;&#9;&#9;&#9;&#9;_graph_data[1].categoties=_graph_data[1].categoties+i+'. '+StrReplace(comp.name, ",","");&#10;&#9;&#9;&#9;&#9;&#9;if ((i-1)&lt;count)&#10;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;_graph_data[0].values=_graph_data[0].values+',';&#10;&#9;&#9;&#9;&#9;&#9;&#9;_graph_data[0].categoties=_graph_data[0].categoties+',';&#10;&#9;&#9;&#9;&#9;&#9;&#9;_graph_data[1].values=_graph_data[1].values+',';&#10;&#9;&#9;&#9;&#9;&#9;&#9;_graph_data[1].categoties=_graph_data[1].categoties+',';&#10;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;i++;&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;total_array[0]=StrReal(total_array[0],2)+'%';&#10;&#9;&#9;&#9;&#9;if (i!=0)&#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;Response.Write('&lt;tr&gt;');&#10;&#9;&#9;&#9;&#9;&#9;Response.Write('&lt;td class="reportTD" align="right" colspan="2"&gt;&lt;strong&gt;Итоговая оценка&lt;/strong&gt;&lt;/td&gt;');&#10;&#9;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;_RES_VALUE = _RES_VALUE +'&lt;tr bgcolor="white"&gt;';&#10;&#9;&#9;&#9;&#9;&#9;_RES_VALUE = _RES_VALUE +'&lt;td align="right" colspan="2"&gt;&lt;strong&gt;Итоговая оценка&lt;/strong&gt;&lt;/td&gt;';&#10;&#9;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;for(nn=0;nn&lt;cols_Count;nn++)&#10;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;Response.Write('&lt;td class="reportTD" align="center"&gt;&lt;strong&gt;'+StrReplace(total_array[nn], ".",",")+'&lt;/strong&gt;&lt;/td&gt;');&#10;&#9;&#9;&#9;&#9;&#9;&#9;_RES_VALUE=_RES_VALUE+'&lt;th align="center"&gt;&lt;strong&gt;'+StrReplace(total_array[nn], ".",",")+'&lt;strong&gt;&lt;/td&gt;';&#10;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;Response.Write("&lt;/tr&gt;");&#10;&#9;&#9;&#9;&#9;&#9;_RES_VALUE = _RES_VALUE +'&lt;/tr&gt;';&#10;&#9;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;Response.Write('&lt;/table&gt;');&#10;&#9;&#9;&#9;&#9;_RES_VALUE=_RES_VALUE+'&lt;/table&gt;';&#10;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;_graph_data=ArraySort(_graph_data,"order","+");&#10;&#9;&#9;&#9;&#9;for (zz=0;zz&lt;2;zz++)&#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;_x_object_found=false;&#10;&#9;&#9;&#9;&#9;&#9;//-----------&#10;&#9;&#9;&#9;&#9;&#9;_graph_web_template_found=false;&#10;&#9;&#9;&#9;&#9;&#9;Additional_Report_CODE="uni-estimation-coll-results-graph";&#10;&#9;&#9;&#9;&#9;&#9;if (zz==1)&#10;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;Additional_Report_CODE="uni-estimation-radar-graph";&#10;&#9;&#9;&#9;&#9;&#9;&#9;for (j=0;j&lt;2;j++)&#10;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if (j==1)&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_graph_data[j].series=StrReplace("Реальный профиль", ","," ");&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_graph_data[j].order=1;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;else&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_graph_data[j].series=StrReplace("Идеальный профиль", ","," ");&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_graph_data[j].order=0;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;_native=false;&#10;&#9;&#9;}&#10;&#10;&#9;}&#10;&#9;EXCEL_TABLE=_RES_VALUE;&#10;&#9;&#10;&#9;//отчет для отображения в браузере (String)&#10;&#9;html_TEXT = "";&#10;&#9;//отчет для Excel (String)&#10;&#9;// загловок листа Excel&#10;&#9;SHEET_CAPTION = "Итоговый оценочный лист";&#10;&#9;try&#10;&#9;{&#10;&#9;&#9;GRAPH_TEMPLATE_RADAR = "WEBSOFT_RADAR_AND_HISTOGRAM_NO_OWC";&#10;&#9;&#9;_form2 = ArrayOptFirstElem( XQuery("for $elem in custom_web_templates where $elem/code = '" + GRAPH_TEMPLATE_RADAR + "' return $elem"));&#10;&#9;&#9;&#9;if (_form2 != undefined)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;_form2 = OpenDoc(UrlFromDocID(_form2.PrimaryKey)).TopElem;&#10;&#9;&#9;&#9;&#9;Response.Write( EvalCodePage(_form2.html.Value) );&#10;&#9;&#9;&#9;}&#10;else&#10;{&#10;&#9;Response.Write("&lt;font color='red' style='font-weight: boldest'&gt;*Ошибка: проблемы с настраиваемым web-шаблоном " +GRAPH_TEMPLATE_RADAR+". Графики не будут отображаться.*&lt;/font&gt;");&#10;}&#10;&#9;}&#10;&#9;catch(e){alert("ERROR1 - "+e);}&#10;}&#10;%&gt;</code_text>
			</exec_code>
			<html>&lt;%&#10;// -----------------------------------------------------------------------------------------------------------------------------&#10;// автор:   &#10;// создан: &#10;// изменен: 15.05.2014 by AD&#10;// --------------------------------------------------------- Описание ----------------------------------------------------------&#10;// Отчет "Итоговый Оценочный лист" (соотношение плановой и полученной оценки) - часть 2&#10;&#10;alert ("uni-resulting-estimation-list-part2 - started");&#10;_export_pic = Array();&#10;kk=0;&#10;_graph_data=Array();&#10;for ( _proc in proc_Array )&#10;{&#10;&#9;&#9;&#9;for (_person in coll_Array)&#9;&#9;&#9;&#10;&#9;&#9;&#9;{&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;Response.Write('Ф.И.О. сотрудника: '+_person.fullname+ '&lt;br/&gt;');&#10;&#9;&#9;&#9;&#9;&#9;Response.Write('Должность: '+_person.position_name+ '&lt;br/&gt;');&#10;&#9;&#9;&#9;&#9;&#9;Response.Write('Компания:  '+_person.org_name+ '&lt;br/&gt;');&#10;&#9;&#9;&#9;&#9;&#9;Response.Write('Служба/отдел:   '+_person.position_parent_name+ '&lt;br/&gt;');&#10;&#9;&#9;&#9;&#9;&#9;// -------------&#10;&#9;&#9;&#9;&#9;&#9;_RES_VALUE=_RES_VALUE+'&lt;table width="10%" cellpadding="3" cellspacing="1" border="0"&gt;'&#10;&#9;&#9;&#9;&#9;&#9;_RES_VALUE=_RES_VALUE+'&lt;tr&gt;&lt;td&gt;Ф.И.О. сотрудника: '+_person.fullname+ '&lt;/td&gt;&lt;/tr&gt;';&#10;&#9;&#9;&#9;&#9;&#9;_RES_VALUE=_RES_VALUE+'&lt;tr&gt;&lt;td&gt;Должность: '+_person.position_name+ '&lt;/td&gt;&lt;/tr&gt;';&#10;&#9;&#9;&#9;&#9;&#9;_RES_VALUE=_RES_VALUE+'&lt;tr&gt;&lt;td&gt;Компания:  '+_person.org_name+ '&lt;/td&gt;&lt;/tr&gt;';&#10;&#9;&#9;&#9;&#9;&#9;_RES_VALUE=_RES_VALUE+'&lt;tr&gt;&lt;td&gt;Служба/отдел:   '+_person.position_parent_name+ '&lt;/td&gt;&lt;/tr&gt;';&#10;&#9;&#9;&#9;&#9;&#9;_RES_VALUE=_RES_VALUE+'&lt;/table&gt;';&#10;&#9;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;SELF_COUNT = 0;&#10;&#9;&#9;&#9;&#9;&#9;BOSS_COUNT = 0;&#10;&#9;&#9;&#9;&#9;&#9;FUNC_COUNT = 0;&#10;&#9;&#9;&#9;&#9;&#9;EXPERT_COUNT = 0;&#10;&#9;&#9;&#9;&#9;&#9;STAFF_COUNT = 0;&#10;&#9;&#9;&#9;&#9;&#9;COLL_COUNT = 0;&#10;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;_aspl = XQuery("for $aspl in assessment_plans where $aspl/person_id = " + _person.id + " and $aspl/assessment_appraise_id = " + _proc.id + " return $aspl");&#10;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;_aspl_first = ArrayOptFirstElem( _aspl ); &#10;&#9;&#9;&#9;&#9;&#9;_boss_id = 0;&#10;&#9;&#9;&#9;&#9;&#9;if ( _aspl_first != undefined ) &#10;&#9;&#9;&#9;&#9;&#9;{ &#10;&#9;&#9;&#9;&#9;&#9;&#9;_boss_id = _aspl_first.boss_id;&#10;&#9;&#9;&#9;&#9;&#9;&#9;_asplDoc = OpenDoc(UrlFromDocID(_aspl_first.id)).TopElem;&#10;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;_pas = XQuery("for $pa in pas where $pa/person_id = " + _person.id + " and $pa/assessment_appraise_id = " + _proc.id + " return $pa");&#10;&#9;&#9;&#9;&#9;&#9;_pasArray = Array();&#10;&#9;&#9;&#9;&#9;&#9;_selfPA = undefined;&#10;&#9;&#9;&#9;&#9;&#9;_participantPA = undefined;&#10;&#9;&#9;&#9;&#9;&#9;_funcPA = undefined;&#10;&#9;&#9;&#9;&#9;&#9;_profile_id = 0;&#10;&#9;&#9;&#9;&#9;&#9;_folder = '';&#10;&#9;&#9;&#9;&#9;&#9;for (_pa in _pas)&#10;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;curElem = new Object;&#10;&#9;&#9;&#9;&#9;&#9;&#9;curElem.curPA = 0;&#10;&#9;&#9;&#9;&#9;&#9;&#9;curElem.flag = 0;&#10;&#9;&#9;&#9;&#9;&#9;&#9;switch(_pa.status)&#10;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;case "self":&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;curElem.flag = 1;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;SELF_COUNT = 1;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;break;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;case "manager":&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if (_pa.expert_person_id == _boss_id)&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;BOSS_COUNT = 1;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;curElem.flag = 2;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;else&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;FUNC_COUNT ++;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;curElem.flag = 4;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;break;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;case "expert":&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;EXPERT_COUNT++;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;curElem.flag = 3;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;break;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;case "staff":&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;STAFF_COUNT++;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;curElem.flag = 5;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;break;&#9;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;case "coll":&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;COLL_COUNT++;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;curElem.flag = 6;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;break;&#9;&#10;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;curElem.curPA=OpenDoc(UrlFromDocID(_pa.id)).TopElem;&#10;&#9;&#9;&#9;&#9;&#9;&#9;curElem.profile_id = curElem.curPA.competence_profile_id;&#10;&#9;&#9;&#9;&#9;&#9;&#9;curElem.prof_codes =curElem.curPA.competence_codes;&#10;&#9;&#9;&#9;&#9;&#9;&#9;curElem.participantPA = curElem.curPA.competences;&#10;&#9;&#9;&#9;&#9;&#9;&#9;curElem.folder=_pa.id;&#10;&#9;&#9;&#9;&#9;&#9;&#9;_pasArray[ArrayCount(_pasArray)]=curElem;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;_SHIFT = 2;&#10;&#9;&#9;&#9;&#9;&#9;SELF_WEIGHT = 100;&#10;&#9;&#9;&#9;&#9;&#9;BOSS_WEIGHT = 100;&#10;&#9;&#9;&#9;&#9;&#9;FUNC_WEIGHT = 100;&#10;&#9;&#9;&#9;&#9;&#9;EXPERT_WEIGHT = 100;&#10;&#9;&#9;&#9;&#9;&#9;COLL_WEIGHT = 100;&#10;&#9;&#9;&#9;&#9;&#9;STAFF_WEIGHT = 100;&#10;&#9;&#9;&#9;&#9;&#9;if (uni_type_estimation == true)&#10;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;//По умолчанию&#10;&#9;&#9;&#9;&#9;&#9;&#9;SELF_WEIGHT = 10;&#10;&#9;&#9;&#9;&#9;&#9;&#9;BOSS_WEIGHT = 45;&#10;&#9;&#9;&#9;&#9;&#9;&#9;FUNC_WEIGHT = 45;&#10;&#9;&#9;&#9;&#9;&#9;&#9;EXPERT_WEIGHT = 0;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;&#9;weight_table_CODE="weight_table";&#10;&#9;&#9;&#9;&#9;&#9;&#9;weight_table_Form = ArrayOptFirstElem( XQuery("for $elem in custom_web_templates where $elem/code = '"+weight_table_CODE+"' return $elem") );&#10;&#9;&#9;&#9;&#9;&#9;&#9;if (weight_table_Form != undefined)&#10;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;weight_table_Form = OpenDoc(UrlFromDocID(weight_table_Form.PrimaryKey)).TopElem;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_anti_str = "";&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;for (_wvar in weight_table_Form.wvars)&#9;_anti_str = _anti_str + _wvar.name + " = '" + HtmlEncode(_wvar.value) + "'; ";&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;EvalCodePage( "&lt;" + "%" + _anti_str + "%" + "&gt;" + weight_table_Form.html.Value)&#10;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;else&#10;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Response.Write("&lt;font color='red' stle='font-weight: boldest'&gt;*Ошибка: проблемы с настраиваемым web-шаблоном " +weight_table_CODE+"*&lt;/font&gt;");&#10;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;competenceArray = Array();&#10;&#9;&#9;&#9;&#9;&#9;_boss_competenceArray = Array();&#10;&#9;&#9;&#9;&#9;&#9;_comp_count = 0;&#10;&#9;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;_pasArray = ArraySort(_pasArray,'flag','+');&#10;&#9;&#9;&#9;&#9;&#9;_pasCount = ArrayCount(_pasArray);&#10;&#9;&#9;&#9;&#9;&#9;for (_elem in _pasArray)&#10;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;try&#10;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_curProfile = OpenDoc(UrlFromDocID(_elem.profile_id)).TopElem.competences;&#10;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;catch(_shit_)&#10;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_curProfile = undefined;&#10;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;try&#10;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_prof_codes = String(_elem.prof_codes).split('\n');&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;for (_a = 0; _a &lt; ArrayCount(_prof_codes); _a++)&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_cur_prof = ArrayOptFirstElem(XQuery("for $elem in competence_profiles where $elem/code = " + XQueryLiteral(_prof_codes[_a]) + " return $elem"));&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if (_cur_prof != undefined)&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_prof_codes[_a] = OpenDoc(UrlFromDocID(_cur_prof.id)).TopElem.competences;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;else&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_prof_codes[_a] = undefined;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;catch(_brk_)&#10;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_prof_codes = Array();&#10;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;compCounter = 0;&#10;&#9;&#9;&#9;&#9;&#9;&#9;for(_comp in _elem.curPA.competences)&#10;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_curCompetence = ArrayOptFind(competenceArray, 'id == _comp.PrimaryKey');&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_weight = 0;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_plan_mark=0;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_plan_mark_name=0;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;try&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_weight=Real(_comp.weight);&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;catch(dd)&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#10;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if (_curCompetence == undefined)&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;try&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_curCompetenceDoc = OpenDoc(UrlFromDocID(_comp.PrimaryKey)).TopElem;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;catch(_shit_)&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;continue;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if (_comp.plan == "" || _comp.plan == "N")&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_plan_mark = null;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;else&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_plan_mark_scale = _curCompetenceDoc.scales.GetOptChildByKey(_comp.plan);&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if (_plan_mark_scale != undefined)&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if (uni_type_estimation==true)&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_plan_mark = Real(_SHIFT-_plan_mark_scale.ChildIndex) ;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_plan_mark_name=_plan_mark_scale.name;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;else&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;try&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;//Response.Write(StrLen(_comp.mark));&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if (StrLen(Real(_comp.plan))==StrLen(_comp.plan))&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_plan_mark = Real(_comp.plan);&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;else&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;cancel();&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;catch(ex)&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;try&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_plan_mark = Real(_plan_mark_scale.percent);&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;catch(jjh)&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_plan_mark = _plan_mark_scale.ChildIndex;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_plan_mark_name=_plan_mark;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;else&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if (StrLen(Real(_comp.plan))==StrLen(_comp.plan))&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_plan_mark = Real(_comp.plan);&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_plan_mark_name=_plan_mark;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;else&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_plan_mark = null;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if &#9;(_plan_mark==null)&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_plan_mark = 0;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_plan_mark_name=_plan_mark;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_curCompetenceObj = new Object;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_curCompetenceObj.id = _comp.PrimaryKey;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_curCompetenceObj.name=_comp.competence_id.ForeignElem.name;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_curCompetenceObj.TopElem = _curCompetenceDoc;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_curCompetenceObj.CompCount =_pasCount;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_curCompetenceObj.native = true;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_curCompetenceObj.weight = _weight;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_curCompetenceObj.plan_mark = _plan_mark;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_curCompetenceObj.plan_mark_name=_plan_mark_name;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_curCompetenceObj.total = 0.0;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;competenceArray[compCounter] = _curCompetenceObj;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_curCompetence=competenceArray[compCounter];&#10;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;compCounter++;&#10;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;else&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_curCompetenceDoc =_curCompetence.TopElem;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if (_comp.mark == "" || _comp.mark == "N")&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_score = null;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;else&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_scale = _curCompetenceDoc.scales.GetOptChildByKey(_comp.mark);&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if (_scale != undefined)&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if (uni_type_estimation==true)&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_score = _SHIFT-_scale.ChildIndex ;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;else&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;try&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;//Response.Write(StrLen(_comp.mark));&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if (StrLen(Real(_comp.mark))==StrLen(_comp.mark))&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_score = Real(_comp.mark);&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;else&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;cancel();&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;catch(ex)&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;try&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_score = Real(_scale.percent);&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;catch(jjh)&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_score = _scale.ChildIndex;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;else&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_score = 0;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;try&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;//Response.Write(StrLen(_comp.mark));&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if (StrLen(Real(_comp.mark))==StrLen(_comp.mark))&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_score = Real(_comp.mark);&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;catch(ex)&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_scale = undefined;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if (_curProfile != undefined)&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_cur_comp = _curProfile.GetOptChildByKey(_curCompetence.id);&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if (_cur_comp != undefined)&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_scale = _curCompetence.TopElem.scales.GetOptChildByKey(_cur_comp.plan);&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if (_scale == undefined)&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;for (_pk in _prof_codes)&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if (_pk != undefined)&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_cur_comp = _pk.GetOptChildByKey(_curCompetence.id);&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if (_cur_comp != undefined)&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_scale = _curCompetence.TopElem.scales.GetOptChildByKey(_cur_comp.plan);&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_curCompetence.native = false;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;break;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;switch(_elem.flag)&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;case 1:&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if (_score == null) _score = 0;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9; _curCompetence.total=_curCompetence.total+(Real(_score)* Real(SELF_WEIGHT) / 100.0);&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;break;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;case 2:&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if (_score == null) _score = 0;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;cur_comp_Object=new Object;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;cur_comp_Object.comp_id=_comp.PrimaryKey;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;cur_comp_Object.name=_comp.competence_id.ForeignElem.name;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;cur_comp_Object.score=_score;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_boss_competenceArray[ArrayCount(_boss_competenceArray)]=cur_comp_Object;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_curCompetence.total = _curCompetence.total + (Real(_score) * Real(BOSS_WEIGHT) / 100.0);&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;break;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;case 3:&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if (uni_type_estimation==true)&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if (_score == null) &#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;for (_boss_comp in _boss_competenceArray)&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;//Response.Write(' id ='+_comp.PrimaryKey +'&lt;br/&gt;');&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if (Int(_comp.PrimaryKey)==Int(_boss_comp.comp_id))&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_score=_boss_comp.score;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;//Response.Write('www score='+_score+'&lt;br/&gt;');&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;break;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;//Response.Write('_boss_comp id ='+_boss_comp.comp_id +' name='+_boss_comp.name +' score='+_boss_comp.score+' _weight='+_weight+'&lt;br/&gt;');&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if (_score == null) _score = 0;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_curCompetence.total = _curCompetence.total + (Real(_score) * Real(EXPERT_WEIGHT) / 100.0);&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;break;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;case 4:&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if (uni_type_estimation==true)&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if (_score == null) &#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;for (_boss_comp in _boss_competenceArray)&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if (Int(_comp.PrimaryKey)==Int(_boss_comp.comp_id))&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_score=_boss_comp.score;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;break;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if (_score == null) _score = 0;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_curCompetence.total = _curCompetence.total + (Real(_score) * Real(FUNC_WEIGHT) / 100.0);&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;break;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#9;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;case 5:&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if (uni_type_estimation==true)&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if (_score == null) &#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;for (_boss_comp in _boss_competenceArray)&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if (Int(_comp.PrimaryKey)==Int(_boss_comp.comp_id))&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_score=_boss_comp.score;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;break;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if (_score == null) _score = 0;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_curCompetence.total = _curCompetence.total + (Real(_score) * Real(STAFF_WEIGHT) / 100.0);&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;break;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;case 6:&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if (uni_type_estimation==true)&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if (_score == null) &#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;for (_boss_comp in _boss_competenceArray)&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if (Int(_comp.PrimaryKey)==Int(_boss_comp.comp_id))&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_score=_boss_comp.score;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;break;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if (_score == null) _score = 0;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_curCompetence.total = _curCompetence.total + (Real(_score) * Real(STAFF_WEIGHT) / 100.0);&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;break;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#10;&#9;&#9; if (uni_type_estimation==false)&#10;&#9;&#9; {&#9;&#10;&#9;&#9; &#9;if (_pasCount!=0)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;for (comp in competenceArray)&#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;comp.total=StrReal(comp.total/_pasCount,2);&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;}&#10;&#9;&#9; }&#10;&#9;&#9;_native=true;&#10;%&gt;&#10;&#10;&#9;&#9;&lt;BR/&gt;&#10;&#9;&#9;&lt;center&gt;&lt;input type="button" value="Экспорт в Excel" onclick="open_win()" class="inputButton" onMouseOver="this.className='inputButtonOver';" onMouseOut="this.className='inputButton';"/&gt;&lt;/center&gt;&#10;&#9;&#9;&lt;BR/&gt;&#10;&#10;&lt;%&#10;&#9;&#9;kk=1;&#10;&#9;&#9;for (jj=0;jj&lt;2;jj++)&#10;&#9;&#9;{&#9;&#9;&#10;&#9;&#9;&#9;competenceArray_selection = ArraySelect(competenceArray, "native == " + _native);&#10;&#9;&#9;&#9;&#10;&#9;&#9;&#9;if (ArrayCount(competenceArray_selection)&gt;0)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;cols_Count=3&#10;&#9;&#9;&#9;&#9;total_array=Array(cols_Count);&#10;&#9;&#9;&#9;&#9;for(nn=0;nn&lt;cols_Count;nn++)&#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;total_array[nn]=0;&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;_graph_data=Array();&#10;&#9;&#9;&#9;&#9;for (j=0;j&lt;2;j++)&#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;_obj=new Object;&#10;&#9;&#9;&#9;&#9;&#9;if (j==0)&#10;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;_obj.series=StrReplace("Итоговая оценка по компетенции", ","," ");&#10;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;else&#10;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;_obj.series=StrReplace("Плановая оценка по компетенции", ","," ");&#10;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;_obj.order=0;&#10;&#9;&#9;&#9;&#9;&#9;_obj.categoties='';&#10;&#9;&#9;&#9;&#9;&#9;_obj.values='';&#10;&#9;&#9;&#9;&#9;&#9;_graph_data[ArrayCount(_graph_data)]=_obj;&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;Response.Write('&lt;table width="100%" cellpadding="3" cellspacing="1" border="1" CLASS="reportTable"&gt;');&#10;&#9;&#9;&#9;&#9;Response.Write('&lt;tr&gt;');&#10;&#9;&#9;&#9;&#9;Response.Write('&lt;th class="reportTH"&gt;№&lt;/th&gt;');&#10;&#9;&#9;&#9;&#9;Response.Write('&lt;th class="reportTH"&gt;Компетенции&lt;/th&gt;');&#10;&#9;&#9;&#9;&#9;Response.Write('&lt;th class="reportTH"&gt;Вес Компетенции &lt;br/&gt;в итоговой оценке&lt;/th&gt;');&#10;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;if (swith_col==0)&#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;Response.Write('&lt;th class="reportTH"&gt;Оценка по Компетенции&lt;/th&gt;');&#10;&#9;&#9;&#9;&#9;&#9;Response.Write('&lt;th class="reportTH"&gt;Плановая оценка&lt;br /&gt;из идеального профиля&lt;/th&gt;');&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;else&#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;Response.Write('&lt;th class="reportTH"&gt;Плановая оценка&lt;br /&gt;из идеального профиля&lt;/th&gt;');&#10;&#9;&#9;&#9;&#9;&#9;Response.Write('&lt;th class="reportTH"&gt;Оценка по Компетенции&lt;/th&gt;');&#10;&#9;&#9;&#9;&#9;}&#10;&#10;&#9;&#9;&#9;&#9;Response.Write('&lt;/tr&gt;');&#10;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;_RES_VALUE=_RES_VALUE+'&lt;table width="100%" cellpadding="3" cellspacing="1" border="1"&gt;';&#10;&#9;&#9;&#9;&#9;_RES_VALUE=_RES_VALUE+'&lt;tr&gt;';&#10;&#9;&#9;&#9;&#9;_RES_VALUE=_RES_VALUE+'&lt;th&gt;№&lt;/th&gt;';&#10;&#9;&#9;&#9;&#9;_RES_VALUE=_RES_VALUE+'&lt;th&gt;Компетенции&lt;/th&gt;';&#10;&#9;&#9;&#9;&#9;_RES_VALUE=_RES_VALUE+'&lt;th&gt;Вес Компетенции &lt;br/&gt;в итоговой оценке&lt;/th&gt;';&#10;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;if (swith_col==0)&#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;_RES_VALUE=_RES_VALUE+'&lt;th&gt;Оценка по Компетенции&lt;/th&gt;';&#10;&#9;&#9;&#9;&#9;&#9;_RES_VALUE=_RES_VALUE+'&lt;th&gt;Плановая оценка&lt;br /&gt;из идеального профиля&lt;/th&gt;';&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;else&#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;_RES_VALUE=_RES_VALUE+'&lt;th&gt;Плановая оценка&lt;br /&gt;из идеального профиля&lt;/th&gt;';&#10;&#9;&#9;&#9;&#9;&#9;_RES_VALUE=_RES_VALUE+'&lt;th&gt;Оценка по Компетенции&lt;/th&gt;';&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#10;&#10;&#9;&#9;&#9;&#9;_RES_VALUE=_RES_VALUE+'&lt;/tr&gt;';&#10;&#9;&#9;&#9;&#9;&#10;&#10;&#9;&#9;&#9;&#9;//Response.Write('&lt;/tr&gt;');&#10;&#9;&#9;&#9;&#9;//_RES_VALUE=_RES_VALUE+'&lt;/tr&gt;';&#10;&#9;&#9;&#9;&#9;i=1;&#10;&#9;&#9;&#9;&#9;count=ArrayCount(competenceArray_selection)-1;&#10;&#9;&#9;&#9;&#9;for (comp in competenceArray_selection)&#10;&#9;&#9;&#9;&#9;{&#9;&#10;&#9;&#9;&#9;&#9;&#9;Response.Write('&lt;tr&gt;');&#10;&#9;&#9;&#9;&#9;&#9;Response.Write('&lt;td class="reportTD" align="center"&gt;'+i+'&lt;/td&gt;');&#10;&#9;&#9;&#9;&#9;&#9;Response.Write('&lt;td class="reportTD" align="center"&gt;'+comp.name+'&lt;/td&gt;');&#10;&#9;&#9;&#9;&#9;&#9;Response.Write('&lt;td class="reportTD" align="center"&gt;'+StrReal(comp.weight,2)+'%&lt;/td&gt;');&#10;&#9;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;if (swith_col==0)&#10;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;Response.Write('&lt;td class="reportTD" align="center"&gt;'+StrReplace(comp.total, ".",",")+'&lt;/td&gt;');&#10;&#9;&#9;&#9;&#9;&#9;&#9;Response.Write('&lt;td class="reportTD" align="center"&gt;'+comp.plan_mark_name+'&lt;/td&gt;');&#10;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;else&#10;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;Response.Write('&lt;td class="reportTD" align="center"&gt;'+comp.plan_mark_name+'&lt;/td&gt;');&#10;&#9;&#9;&#9;&#9;&#9;&#9;Response.Write('&lt;td class="reportTD" align="center"&gt;'+StrReplace(comp.total, ".",",")+'&lt;/td&gt;');&#10;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#10;&#10;&#9;&#9;&#9;&#9;&#9;Response.Write('&lt;/tr&gt;');&#10;&#10;&#9;&#9;&#9;&#9;&#9;_RES_VALUE=_RES_VALUE+'&lt;tr&gt;';&#10;&#9;&#9;&#9;&#9;&#9;_RES_VALUE=_RES_VALUE+'&lt;td align="center"&gt;'+i+'&lt;/td&gt;';&#10;&#9;&#9;&#9;&#9;&#9;_RES_VALUE=_RES_VALUE+'&lt;td align="center"&gt;'+comp.name+'&lt;/td&gt;';&#10;&#9;&#9;&#9;&#9;&#9;_RES_VALUE=_RES_VALUE+'&lt;td align="center"&gt;'+StrReplace(StrReal(comp.weight,2), ".",",")+'%&lt;/td&gt;';&#10;&#9;&#9;&#9;&#9;&#9;if (swith_col==0)&#10;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;_RES_VALUE=_RES_VALUE+'&lt;td align="center"&gt;'+StrReplace(comp.total, ".",",")+'&lt;/td&gt;';&#10;&#9;&#9;&#9;&#9;&#9;&#9;_RES_VALUE=_RES_VALUE+'&lt;td align="center"&gt;'+comp.plan_mark_name+'&lt;/td&gt;';&#10;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;else&#10;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;_RES_VALUE=_RES_VALUE+'&lt;td align="center"&gt;'+comp.plan_mark_name+'&lt;/td&gt;';&#10;&#9;&#9;&#9;&#9;&#9;&#9;_RES_VALUE=_RES_VALUE+'&lt;td align="center"&gt;'+StrReplace(comp.total, ".",",")+'&lt;/td&gt;';&#10;&#9;&#9;&#9;&#9;&#9;}&#10;&#10;&#9;&#9;&#9;&#9;&#9;_RES_VALUE=_RES_VALUE+'&lt;/tr&gt;';&#10;&#9;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;total_array[0]=total_array[0]+Real(comp.weight);&#10;&#9;&#9;&#9;&#9;&#9;if (swith_col==0)&#10;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;total_array[1]=total_array[1]+(Real(comp.weight/100.0)*Real(comp.total));&#10;&#9;&#9;&#9;&#9;&#9;&#9;total_array[2]=total_array[2]+(Real(comp.weight/100.0)*Real(comp.plan_mark));&#10;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;else&#10;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;total_array[2]=total_array[2]+(Real(comp.weight/100.0)*Real(comp.total));&#10;&#9;&#9;&#9;&#9;&#9;&#9;total_array[1]=total_array[1]+(Real(comp.weight/100.0)*Real(comp.plan_mark));&#10;&#9;&#9;&#9;&#9;&#9;}&#10;&#10;&#9;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;_graph_data[0].values=_graph_data[0].values+StrReplace(comp.total, ",",".");&#10;&#9;&#9;&#9;&#9;&#9;_graph_data[0].categoties=_graph_data[0].categoties+i+'. '+StrReplace(comp.name, ",","");&#10;&#9;&#9;&#9;&#9;&#9;_graph_data[1].values=_graph_data[1].values+StrReplace(comp.plan_mark, ",",".");&#10;&#9;&#9;&#9;&#9;&#9;_graph_data[1].categoties=_graph_data[1].categoties+i+'. '+StrReplace(comp.name, ",","");&#10;&#9;&#9;&#9;&#9;&#9;if ((i-1)&lt;count)&#10;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;_graph_data[0].values=_graph_data[0].values+',';&#10;&#9;&#9;&#9;&#9;&#9;&#9;_graph_data[0].categoties=_graph_data[0].categoties+',';&#10;&#9;&#9;&#9;&#9;&#9;&#9;_graph_data[1].values=_graph_data[1].values+',';&#10;&#9;&#9;&#9;&#9;&#9;&#9;_graph_data[1].categoties=_graph_data[1].categoties+',';&#10;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;i++;&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;total_array[0]=StrReal(total_array[0],2)+'%';&#10;&#9;&#9;&#9;&#9;if (i!=0)&#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;Response.Write('&lt;tr&gt;');&#10;&#9;&#9;&#9;&#9;&#9;Response.Write('&lt;td class="reportTD" align="right" colspan="2"&gt;&lt;strong&gt;Итоговая оценка&lt;/strong&gt;&lt;/td&gt;');&#10;&#9;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;_RES_VALUE = _RES_VALUE +'&lt;tr bgcolor="white"&gt;';&#10;&#9;&#9;&#9;&#9;&#9;_RES_VALUE = _RES_VALUE +'&lt;td align="right" colspan="2"&gt;&lt;strong&gt;Итоговая оценка&lt;/strong&gt;&lt;/td&gt;';&#10;&#9;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;for(nn=0;nn&lt;cols_Count;nn++)&#10;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;Response.Write('&lt;td class="reportTD" align="center"&gt;&lt;strong&gt;'+StrReplace(total_array[nn], ".",",")+'&lt;/strong&gt;&lt;/td&gt;');&#10;&#9;&#9;&#9;&#9;&#9;&#9;_RES_VALUE=_RES_VALUE+'&lt;th align="center"&gt;&lt;strong&gt;'+StrReplace(total_array[nn], ".",",")+'&lt;strong&gt;&lt;/td&gt;';&#10;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;Response.Write("&lt;/tr&gt;");&#10;&#9;&#9;&#9;&#9;&#9;_RES_VALUE = _RES_VALUE +'&lt;/tr&gt;';&#10;&#9;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;Response.Write('&lt;/table&gt;');&#10;&#9;&#9;&#9;&#9;_RES_VALUE=_RES_VALUE+'&lt;/table&gt;';&#10;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;_graph_data=ArraySort(_graph_data,"order","+");&#10;&#9;&#9;&#9;&#9;for (zz=0;zz&lt;2;zz++)&#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;_x_object_found=false;&#10;&#9;&#9;&#9;&#9;&#9;//-----------&#10;&#9;&#9;&#9;&#9;&#9;_graph_web_template_found=false;&#10;&#9;&#9;&#9;&#9;&#9;Additional_Report_CODE="uni-estimation-coll-results-graph";&#10;&#9;&#9;&#9;&#9;&#9;if (zz==1)&#10;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;Additional_Report_CODE="uni-estimation-radar-graph";&#10;&#9;&#9;&#9;&#9;&#9;&#9;for (j=0;j&lt;2;j++)&#10;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if (j==1)&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_graph_data[j].series=StrReplace("Реальный профиль", ","," ");&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_graph_data[j].order=1;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;else&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_graph_data[j].series=StrReplace("Идеальный профиль", ","," ");&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_graph_data[j].order=0;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;_native=false;&#10;&#9;&#9;}&#10;&#10;&#9;}&#10;&#9;EXCEL_TABLE=_RES_VALUE;&#10;&#9;&#10;&#9;//отчет для отображения в браузере (String)&#10;&#9;html_TEXT = "";&#10;&#9;//отчет для Excel (String)&#10;&#9;// загловок листа Excel&#10;&#9;SHEET_CAPTION = "Итоговый оценочный лист";&#10;&#9;try&#10;&#9;{&#10;&#9;&#9;GRAPH_TEMPLATE_RADAR = "WEBSOFT_RADAR_AND_HISTOGRAM_NO_OWC";&#10;&#9;&#9;_form2 = ArrayOptFirstElem( XQuery("for $elem in custom_web_templates where $elem/code = '" + GRAPH_TEMPLATE_RADAR + "' return $elem"));&#10;&#9;&#9;&#9;if (_form2 != undefined)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;_form2 = OpenDoc(UrlFromDocID(_form2.PrimaryKey)).TopElem;&#10;&#9;&#9;&#9;&#9;Response.Write( EvalCodePage(_form2.html.Value) );&#10;&#9;&#9;&#9;}&#10;else&#10;{&#10;&#9;Response.Write("&lt;font color='red' style='font-weight: boldest'&gt;*Ошибка: проблемы с настраиваемым web-шаблоном " +GRAPH_TEMPLATE_RADAR+". Графики не будут отображаться.*&lt;/font&gt;");&#10;}&#10;&#9;}&#10;&#9;catch(e){alert("ERROR1 - "+e);}&#10;}&#10;%&gt;</html>
			<use_session_cache>false</use_session_cache>
			<cwt_type>default</cwt_type>
			<out_type>undefined</out_type>
			<access>
				<access_level>0</access_level>
			</access>
			<doc_info>
				<creation>
					<user_login>user1</user_login>
					<date>2009-02-14T12:42:02Z</date>
				</creation>
				<modification>
					<user_login>admin</user_login>
					<user_id>6148914691236517121</user_id>
					<date>2021-06-28T13:27:13Z</date>
				</modification>
			</doc_info>
			<is_std>false</is_std>
			<changed>false</changed>
			<is_enabled>true</is_enabled>
		</custom_web_template>
		<custom_web_template>
			<id>0x4BFE5FD8431C2988</id>
			<code>rolf_competence_appraisal_graph_part</code>
			<name>Отчет по результатам обратной связи 360 градусов - Графическая часть отчета по компетенциям</name>
			<category>websoft</category>
			<exec_code>
				<code_text>&lt;%&#10;// -----------------------------------------------------------------------------------------------------------------------------&#10;// автор:&#9;RM&#10;// создан:&#9;30.05.2010&#10;// -------------------------------------------------Предупреждение--------------------------------------------------------------&#10;// используется шаблонами документов&#10;// &#9;&#9; rolf_competence_appraisal_common_report - Аналитические данные по оценке компетенций&#10;// ------------------------------------------------Параметры шаблона------------------------------------------------------------&#10;&#10;// ----------------------------------------------Глобальные переменные----------------------------------------------------------&#10;// &lt;нет&gt;&#10;// ---------------------------------------------------Константы-----------------------------------------------------------------&#10;// &lt;нет&gt;&#10;// -----------------------------------------------------------------------------------------------------------------------------&#10;&#10;// ************************ ПОСТРОЕНИЕ ГРАФИКОВ ************************&#10;try&#10;{&#10;&#9;graph_radar = Array();&#10;&#9;graph_histogram = Array();&#10;&#9;&#10;&#9;_obj = new Object;&#10;&#9;_obj.series = "Самооценка";&#10;&#9;_obj.categoties = graph_competence_str;&#10;&#9;_obj.values = graph_mark_str[0];&#10;&#9;graph_radar[ArrayCount(graph_radar)] = _obj;&#10;&#10;&#9;_obj = new Object;&#10;&#9;_obj.series = "Руководитель";&#10;&#9;_obj.categoties = graph_competence_str;&#10;&#9;_obj.values = graph_mark_str[1];&#10;&#9;graph_radar[ArrayCount(graph_radar)] = _obj;&#10;&#10;&#9;_obj = new Object;&#10;&#9;_obj.series = "Подчиненные";&#10;&#9;_obj.categoties = graph_competence_str;&#10;&#9;_obj.values = graph_mark_str[2];&#10;&#9;graph_radar[ArrayCount(graph_radar)] = _obj;&#10;&#10;&#9;&#10;&#9;&#10;&#10;&#10;&#9;// ************************ HTML ************************&#10;&#10;&#9;html_TEXT += '&#10;&lt;table width="100%" &gt;&#10;&lt;tr&gt;&#10;  &lt;td colspan = "2"&gt;&#10;    &lt;p align="left"&gt;&lt;b&gt;Профиль оценок по компетенциям&lt;/b&gt;&lt;/p&gt;&#10;  &lt;/td&gt;&#10;&lt;/tr&gt;&#10;&lt;tr&gt;&#10;  &lt;td width="50%"&gt;';&#10;&#10;&#9;// график "роза" для HTML&#10;&#10;&#9;html_TEXT += '&#10;&lt;center&gt;&#10;&lt;span id=\"ch1span' + plan_id + '\"&gt;';&#9;&#10;&#9;&#9;_ind=0;&#10;&#9;&#9;&#9;oExcelDoc1 = new ActiveXObject("Websoft.Office.Excel.Document");&#10;&#9;&#9;&#9;oExcelDoc1.CreateWorkBook();&#10;&#9;&#9;&#9;oWorksheet1 = oExcelDoc1.GetWorksheet(0);&#10;&#9;&#9;&#9;chart4 = oWorksheet1.AddChart("Radar", 0, 0, 880, 760);&#10;&#9;&#9;&#9;str_cat = "";&#10;&#9;&#9;for (_graph_elem in graph_radar)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;if (_graph_elem.values=="")&#10;&#9;&#9;&#9;&#9;continue;&#10;&#9;&#9;&#9;series42 = chart4.AddSeries("Radar", "{"+ _graph_elem.values + "}", true);&#10;&#9;&#9;&#9;//series42.DataLabels.ShowValue = true;&#10;&#9;&#9;&#9;series42.Name = _graph_elem.series;&#10;&#9;&#9;&#9;//series42.Width = 3; &#10;&#9;&#9;&#9;//series42.Area.ForegroundColor = "#808080";&#10;&#9;&#9;&#9;//str_cat += (str_cat != "" ? "," : "" ) + _graph_elem.categoties;&#10;&#9;&#9;&#9;str_cat = _graph_elem.categoties;&#10;&#9;&#9;}&#10;&#10;&#9;&#9;&#9;chart4.BackgroundColor = "#FFFFFF";&#10;&#9;&#9;&#9;chart4.CategoryData = "{" + str_cat + "}";&#10;&#9;&#9;&#9;chart4.ShowLegend = true;&#10;&#9;&#9;&#9;chart4.LegendPosition = 'Bottom';&#10;&#9;&#9;&#9;str_image4 = chart4.GetImageInBase64String('png');&#10;&#10;html_TEXT += '&#10;&#9;&lt;img width=880 height=760 src=\"data:image/png;base64, ' + str_image4 + '\" &gt;&#10;&lt;/span&gt;&#10;&lt;/center&gt;&#10;  &lt;/td&gt;&#10;&lt;/tr&gt;&#10;&lt;/table&gt;';&#10;&#9;// ************************ Excel ************************&#10;&#10;&#9;Session.excel_html += '&#10;&lt;p align="left"&gt;&lt;b&gt;Профиль оценок по компетенциям&lt;/b&gt;&lt;/p&gt;';&#10;&#10;&#9;// график "роза" для Excel&#10;&#10;&#9;Session.excel_html += "&#10;&lt;!--[if gte vml 1]&gt;&lt;v:shapetype id='_x0000_t201'&#10;   coordsize='21600,21600' o:spt='201' path='m,l,21600r21600,l21600,xe'&gt;&#10;   &lt;v:stroke joinstyle='miter'/&gt;&#10;   &lt;v:path shadowok='f' o:extrusionok='f' strokeok='f' fillok='f'&#10;    o:connecttype='rect'/&gt;&#10;   &lt;o:lock v:ext='edit' shapetype='t'/&gt;&#10;  &lt;/v:shapetype&gt;&lt;v:shape id='_x0000_s1025' type='#_x0000_t201' style='position:absolute;&#10;   margin-left:36pt;margin-top:9.75pt;width:456.75pt;height:300pt;z-index:1'&#10;   fillcolor='window [78]' strokecolor='windowText [77]' o:insetmode='auto'&gt;&#10;   &lt;v:fill color2='windowText [77]'/&gt;&#10;   &lt;o:lock v:ext='edit' rotation='t' text='t'/&gt;&#10;   &lt;x:ClientData ObjectType='Chart'&gt;&#10;    &lt;x:WebChart&gt;&#10;     &lt;x:Scaling&gt;&#10;      &lt;x:ScaleID&gt;0&lt;/x:ScaleID&gt;&#10;      &lt;x:Orientation&gt;MinMax&lt;/x:Orientation&gt;&#10;     &lt;/x:Scaling&gt;&#10;     &lt;x:Scaling&gt;&#10;      &lt;x:ScaleID&gt;1&lt;/x:ScaleID&gt;&#10;      &lt;x:Orientation&gt;MinMax&lt;/x:Orientation&gt;&#10;     &lt;/x:Scaling&gt;&#10;     &lt;x:Chart&gt;&#10;      &lt;x:Name&gt;Диагр. 1&lt;/x:Name&gt;&#10;      &lt;x:Options&gt;&#10;       &lt;x:SizeWithWindow/&gt;&#10;      &lt;/x:Options&gt;&#10;      &lt;x:PageSetup&gt;&#10;       &lt;x:ChartSize&gt;FullPage&lt;/x:ChartSize&gt;&#10;       &lt;x:PageMargins Bottom='0.984251969' Left='0.78740157499999996'&#10;        Right='0.78740157499999996' Top='0.984251969'/&gt;&#10;      &lt;/x:PageSetup&gt;&#10;      &lt;x:Font&gt;&#10;       &lt;x:FontName&gt;Arial Cyr&lt;/x:FontName&gt;&#10;       &lt;x:Size&gt;10&lt;/x:Size&gt;&#10;       &lt;x:AutoScale/&gt;&#10;      &lt;/x:Font&gt;&#10;      &lt;x:Left&gt;0&lt;/x:Left&gt;&#10;      &lt;x:Top&gt;0&lt;/x:Top&gt;&#10;      &lt;x:Width&gt;9149.9853515625&lt;/x:Width&gt;&#10;      &lt;x:Height&gt;6014.99267578125&lt;/x:Height&gt;&#10;      &lt;x:ChartGrowth&gt;&#10;       &lt;x:HorzGrowth&gt;1&lt;/x:HorzGrowth&gt;&#10;       &lt;x:VertGrowth&gt;1&lt;/x:VertGrowth&gt;&#10;      &lt;/x:ChartGrowth&gt;&#10;      &lt;x:PlotArea&gt;&#10;       &lt;x:Border&gt;&#10;        &lt;x:ColorIndex&gt;None&lt;/x:ColorIndex&gt;&#10;       &lt;/x:Border&gt;&#10;       &lt;x:Interior&gt;&#10;        &lt;x:ColorIndex&gt;None&lt;/x:ColorIndex&gt;&#10;       &lt;/x:Interior&gt;&#10;       &lt;x:Font&gt;&#10;        &lt;x:FontName&gt;Arial Cyr&lt;/x:FontName&gt;&#10;        &lt;x:Size&gt;10&lt;/x:Size&gt;&#10;        &lt;x:AutoScale/&gt;&#10;       &lt;/x:Font&gt;&#10;       &lt;x:Graph&gt;&#10;        &lt;x:Type&gt;Radar&lt;/x:Type&gt;&#10;        &lt;x:SubType&gt;Standard&lt;/x:SubType&gt;&#10;        &lt;x:SubType&gt;Marker&lt;/x:SubType&gt;&#10;        &lt;x:ScaleID&gt;0&lt;/x:ScaleID&gt;&#10;        &lt;x:ScaleID&gt;1&lt;/x:ScaleID&gt;";&#10;&#10;&#9;_ind=0;&#10;&#9;for (_graph_elem in graph_radar)&#10;&#9;{&#10;&#9;&#9;Session.excel_html += '&#10;&#9;&#9; &lt;x:Series&gt;&#10;&#9;&#9;  &lt;x:Index&gt;'+_ind+'&lt;/x:Index&gt;&#10;&#9;&#9;  &lt;x:Caption&gt;&#10;&#9;&#9;   &lt;x:DataSource&gt;-1&lt;/x:DataSource&gt;&#10;&#9;&#9;   &lt;x:Data&gt;&amp;quot;'+_graph_elem.series+'&amp;quot;&lt;/x:Data&gt;&#10;&#9;&#9;  &lt;/x:Caption&gt;&#10;&#9;&#9;  &lt;x:Name&gt;'+_graph_elem.series+'&lt;/x:Name&gt;&#10;          &lt;x:Line&gt;&#10;           &lt;x:Weight&gt;Medium&lt;/x:Weight&gt;&#10;          &lt;/x:Line&gt;&#10;&#9;&#9;  &lt;x:Marker&gt;&#10;&#9;&#9;   &lt;x:Size&gt;5&lt;/x:Size&gt;&#10;&#9;&#9;  &lt;/x:Marker&gt;&#10;&#9;&#9;  &lt;x:Category&gt;&#10;&#9;&#9;   &lt;x:DataSource&gt;-1&lt;/x:DataSource&gt;&#10;&#9;&#9;   &lt;x:Data&gt;{&amp;quot;'+StrReplace(_graph_elem.categoties, ",", "&amp;quot;,&amp;quot;")+'&amp;quot;}&lt;/x:Data&gt;&#10;&#9;&#9;  &lt;/x:Category&gt;&#10;&#9;&#9;  &lt;x:Value&gt;&#10;&#9;&#9;   &lt;x:DataSource&gt;-1&lt;/x:DataSource&gt;&#10;&#9;&#9;   &lt;x:Data&gt;{'+_graph_elem.values+'}&lt;/x:Data&gt;&#10;&#9;&#9;  &lt;/x:Value&gt;&#10;&#9;&#9; &lt;/x:Series&gt;';&#10;&#9;&#9;_ind++;&#10;&#9;}&#10;&#10;&#9;Session.excel_html += "&lt;x:PlotVisible/&gt;&#10;       &lt;/x:Graph&gt;&#10;       &lt;x:Axis&gt;&#10;        &lt;x:Placement&gt;Bottom&lt;/x:Placement&gt;&#10;        &lt;x:AxisID&gt;0&lt;/x:AxisID&gt;&#10;        &lt;x:ScaleID&gt;0&lt;/x:ScaleID&gt;&#10;        &lt;x:CrossingAxis&gt;1&lt;/x:CrossingAxis&gt;&#10;        &lt;x:Font&gt;&#10;         &lt;x:FontName&gt;Arial Cyr&lt;/x:FontName&gt;&#10;         &lt;x:Size&gt;10&lt;/x:Size&gt;&#10;         &lt;x:AutoScale/&gt;&#10;        &lt;/x:Font&gt;&#10;        &lt;x:Number&gt;&#10;         &lt;x:SourceLinked/&gt;&#10;         &lt;x:BuiltInFormat&gt;0&lt;/x:BuiltInFormat&gt;&#10;        &lt;/x:Number&gt;&#10;        &lt;x:Type&gt;Automatic&lt;/x:Type&gt;&#10;       &lt;/x:Axis&gt;&#10;       &lt;x:Axis&gt;&#10;        &lt;x:Placement&gt;Left&lt;/x:Placement&gt;&#10;        &lt;x:AxisID&gt;1&lt;/x:AxisID&gt;&#10;        &lt;x:ScaleID&gt;1&lt;/x:ScaleID&gt;&#10;        &lt;x:MajorGridlines/&gt;&#10;        &lt;x:CrossingAxis&gt;0&lt;/x:CrossingAxis&gt;&#10;        &lt;x:CrossesAt&gt;Minimum&lt;/x:CrossesAt&gt;&#10;        &lt;x:CrossBetween&gt;Between&lt;/x:CrossBetween&gt;&#10;        &lt;x:Font&gt;&#10;         &lt;x:FontName&gt;Arial Cyr&lt;/x:FontName&gt;&#10;         &lt;x:Size&gt;10&lt;/x:Size&gt;&#10;         &lt;x:AutoScale/&gt;&#10;        &lt;/x:Font&gt;&#10;        &lt;x:Number&gt;&#10;         &lt;x:SourceLinked/&gt;&#10;         &lt;x:BuiltInFormat&gt;0&lt;/x:BuiltInFormat&gt;&#10;        &lt;/x:Number&gt;&#10;        &lt;x:MajorTick&gt;Cross&lt;/x:MajorTick&gt;&#10;        &lt;x:Type&gt;Value&lt;/x:Type&gt;&#10;       &lt;/x:Axis&gt;&#10;      &lt;/x:PlotArea&gt;&#10;      &lt;x:Legend&gt;&#10;       &lt;x:Placement&gt;Bottom&lt;/x:Placement&gt;&#10;       &lt;x:Font&gt;&#10;        &lt;x:FontName&gt;Arial Cyr&lt;/x:FontName&gt;&#10;        &lt;x:Size&gt;10&lt;/x:Size&gt;&#10;        &lt;x:AutoScale/&gt;&#10;       &lt;/x:Font&gt;&#10;      &lt;/x:Legend&gt;&#10;     &lt;/x:Chart&gt;&#10;    &lt;/x:WebChart&gt;&#10;   &lt;/x:ClientData&gt;&#10;  &lt;/v:shape&gt;&lt;![endif]--&gt;";&#10;&#10;&#9;&#10;&#10;&#9;Session.excel_html += '&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;';&#10;}&#10;catch(_zz)&#10;{&#10;&#9;alert(_zz);&#10;}&#10;&#10;%&gt;</code_text>
			</exec_code>
			<html>&lt;%&#10;// -----------------------------------------------------------------------------------------------------------------------------&#10;// автор:&#9;RM&#10;// создан:&#9;30.05.2010&#10;// -------------------------------------------------Предупреждение--------------------------------------------------------------&#10;// используется шаблонами документов&#10;// &#9;&#9; rolf_competence_appraisal_common_report - Аналитические данные по оценке компетенций&#10;// ------------------------------------------------Параметры шаблона------------------------------------------------------------&#10;&#10;// ----------------------------------------------Глобальные переменные----------------------------------------------------------&#10;// &lt;нет&gt;&#10;// ---------------------------------------------------Константы-----------------------------------------------------------------&#10;// &lt;нет&gt;&#10;// -----------------------------------------------------------------------------------------------------------------------------&#10;&#10;// ************************ ПОСТРОЕНИЕ ГРАФИКОВ ************************&#10;try&#10;{&#10;&#9;graph_radar = Array();&#10;&#9;graph_histogram = Array();&#10;&#9;&#10;&#9;_obj = new Object;&#10;&#9;_obj.series = "Самооценка";&#10;&#9;_obj.categoties = graph_competence_str;&#10;&#9;_obj.values = graph_mark_str[0];&#10;&#9;graph_radar[ArrayCount(graph_radar)] = _obj;&#10;&#10;&#9;_obj = new Object;&#10;&#9;_obj.series = "Руководитель";&#10;&#9;_obj.categoties = graph_competence_str;&#10;&#9;_obj.values = graph_mark_str[1];&#10;&#9;graph_radar[ArrayCount(graph_radar)] = _obj;&#10;&#10;&#9;_obj = new Object;&#10;&#9;_obj.series = "Подчиненные";&#10;&#9;_obj.categoties = graph_competence_str;&#10;&#9;_obj.values = graph_mark_str[2];&#10;&#9;graph_radar[ArrayCount(graph_radar)] = _obj;&#10;&#10;&#9;&#10;&#9;&#10;&#10;&#10;&#9;// ************************ HTML ************************&#10;&#10;&#9;html_TEXT += '&#10;&lt;table width="100%" &gt;&#10;&lt;tr&gt;&#10;  &lt;td colspan = "2"&gt;&#10;    &lt;p align="left"&gt;&lt;b&gt;Профиль оценок по компетенциям&lt;/b&gt;&lt;/p&gt;&#10;  &lt;/td&gt;&#10;&lt;/tr&gt;&#10;&lt;tr&gt;&#10;  &lt;td width="50%"&gt;';&#10;&#10;&#9;// график "роза" для HTML&#10;&#10;&#9;html_TEXT += '&#10;&lt;center&gt;&#10;&lt;span id=\"ch1span' + plan_id + '\"&gt;';&#9;&#10;&#9;&#9;_ind=0;&#10;&#9;&#9;&#9;oExcelDoc1 = new ActiveXObject("Websoft.Office.Excel.Document");&#10;&#9;&#9;&#9;oExcelDoc1.CreateWorkBook();&#10;&#9;&#9;&#9;oWorksheet1 = oExcelDoc1.GetWorksheet(0);&#10;&#9;&#9;&#9;chart4 = oWorksheet1.AddChart("Radar", 0, 0, 880, 760);&#10;&#9;&#9;&#9;str_cat = "";&#10;&#9;&#9;for (_graph_elem in graph_radar)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;if (_graph_elem.values=="")&#10;&#9;&#9;&#9;&#9;continue;&#10;&#9;&#9;&#9;series42 = chart4.AddSeries("Radar", "{"+ _graph_elem.values + "}", true);&#10;&#9;&#9;&#9;//series42.DataLabels.ShowValue = true;&#10;&#9;&#9;&#9;series42.Name = _graph_elem.series;&#10;&#9;&#9;&#9;//series42.Width = 3; &#10;&#9;&#9;&#9;//series42.Area.ForegroundColor = "#808080";&#10;&#9;&#9;&#9;//str_cat += (str_cat != "" ? "," : "" ) + _graph_elem.categoties;&#10;&#9;&#9;&#9;str_cat = _graph_elem.categoties;&#10;&#9;&#9;}&#10;&#10;&#9;&#9;&#9;chart4.BackgroundColor = "#FFFFFF";&#10;&#9;&#9;&#9;chart4.CategoryData = "{" + str_cat + "}";&#10;&#9;&#9;&#9;chart4.ShowLegend = true;&#10;&#9;&#9;&#9;chart4.LegendPosition = 'Bottom';&#10;&#9;&#9;&#9;str_image4 = chart4.GetImageInBase64String('png');&#10;&#10;html_TEXT += '&#10;&#9;&lt;img width=880 height=760 src=\"data:image/png;base64, ' + str_image4 + '\" &gt;&#10;&lt;/span&gt;&#10;&lt;/center&gt;&#10;  &lt;/td&gt;&#10;&lt;/tr&gt;&#10;&lt;/table&gt;';&#10;&#9;// ************************ Excel ************************&#10;&#10;&#9;Session.excel_html += '&#10;&lt;p align="left"&gt;&lt;b&gt;Профиль оценок по компетенциям&lt;/b&gt;&lt;/p&gt;';&#10;&#10;&#9;// график "роза" для Excel&#10;&#10;&#9;Session.excel_html += "&#10;&lt;!--[if gte vml 1]&gt;&lt;v:shapetype id='_x0000_t201'&#10;   coordsize='21600,21600' o:spt='201' path='m,l,21600r21600,l21600,xe'&gt;&#10;   &lt;v:stroke joinstyle='miter'/&gt;&#10;   &lt;v:path shadowok='f' o:extrusionok='f' strokeok='f' fillok='f'&#10;    o:connecttype='rect'/&gt;&#10;   &lt;o:lock v:ext='edit' shapetype='t'/&gt;&#10;  &lt;/v:shapetype&gt;&lt;v:shape id='_x0000_s1025' type='#_x0000_t201' style='position:absolute;&#10;   margin-left:36pt;margin-top:9.75pt;width:456.75pt;height:300pt;z-index:1'&#10;   fillcolor='window [78]' strokecolor='windowText [77]' o:insetmode='auto'&gt;&#10;   &lt;v:fill color2='windowText [77]'/&gt;&#10;   &lt;o:lock v:ext='edit' rotation='t' text='t'/&gt;&#10;   &lt;x:ClientData ObjectType='Chart'&gt;&#10;    &lt;x:WebChart&gt;&#10;     &lt;x:Scaling&gt;&#10;      &lt;x:ScaleID&gt;0&lt;/x:ScaleID&gt;&#10;      &lt;x:Orientation&gt;MinMax&lt;/x:Orientation&gt;&#10;     &lt;/x:Scaling&gt;&#10;     &lt;x:Scaling&gt;&#10;      &lt;x:ScaleID&gt;1&lt;/x:ScaleID&gt;&#10;      &lt;x:Orientation&gt;MinMax&lt;/x:Orientation&gt;&#10;     &lt;/x:Scaling&gt;&#10;     &lt;x:Chart&gt;&#10;      &lt;x:Name&gt;Диагр. 1&lt;/x:Name&gt;&#10;      &lt;x:Options&gt;&#10;       &lt;x:SizeWithWindow/&gt;&#10;      &lt;/x:Options&gt;&#10;      &lt;x:PageSetup&gt;&#10;       &lt;x:ChartSize&gt;FullPage&lt;/x:ChartSize&gt;&#10;       &lt;x:PageMargins Bottom='0.984251969' Left='0.78740157499999996'&#10;        Right='0.78740157499999996' Top='0.984251969'/&gt;&#10;      &lt;/x:PageSetup&gt;&#10;      &lt;x:Font&gt;&#10;       &lt;x:FontName&gt;Arial Cyr&lt;/x:FontName&gt;&#10;       &lt;x:Size&gt;10&lt;/x:Size&gt;&#10;       &lt;x:AutoScale/&gt;&#10;      &lt;/x:Font&gt;&#10;      &lt;x:Left&gt;0&lt;/x:Left&gt;&#10;      &lt;x:Top&gt;0&lt;/x:Top&gt;&#10;      &lt;x:Width&gt;9149.9853515625&lt;/x:Width&gt;&#10;      &lt;x:Height&gt;6014.99267578125&lt;/x:Height&gt;&#10;      &lt;x:ChartGrowth&gt;&#10;       &lt;x:HorzGrowth&gt;1&lt;/x:HorzGrowth&gt;&#10;       &lt;x:VertGrowth&gt;1&lt;/x:VertGrowth&gt;&#10;      &lt;/x:ChartGrowth&gt;&#10;      &lt;x:PlotArea&gt;&#10;       &lt;x:Border&gt;&#10;        &lt;x:ColorIndex&gt;None&lt;/x:ColorIndex&gt;&#10;       &lt;/x:Border&gt;&#10;       &lt;x:Interior&gt;&#10;        &lt;x:ColorIndex&gt;None&lt;/x:ColorIndex&gt;&#10;       &lt;/x:Interior&gt;&#10;       &lt;x:Font&gt;&#10;        &lt;x:FontName&gt;Arial Cyr&lt;/x:FontName&gt;&#10;        &lt;x:Size&gt;10&lt;/x:Size&gt;&#10;        &lt;x:AutoScale/&gt;&#10;       &lt;/x:Font&gt;&#10;       &lt;x:Graph&gt;&#10;        &lt;x:Type&gt;Radar&lt;/x:Type&gt;&#10;        &lt;x:SubType&gt;Standard&lt;/x:SubType&gt;&#10;        &lt;x:SubType&gt;Marker&lt;/x:SubType&gt;&#10;        &lt;x:ScaleID&gt;0&lt;/x:ScaleID&gt;&#10;        &lt;x:ScaleID&gt;1&lt;/x:ScaleID&gt;";&#10;&#10;&#9;_ind=0;&#10;&#9;for (_graph_elem in graph_radar)&#10;&#9;{&#10;&#9;&#9;Session.excel_html += '&#10;&#9;&#9; &lt;x:Series&gt;&#10;&#9;&#9;  &lt;x:Index&gt;'+_ind+'&lt;/x:Index&gt;&#10;&#9;&#9;  &lt;x:Caption&gt;&#10;&#9;&#9;   &lt;x:DataSource&gt;-1&lt;/x:DataSource&gt;&#10;&#9;&#9;   &lt;x:Data&gt;&amp;quot;'+_graph_elem.series+'&amp;quot;&lt;/x:Data&gt;&#10;&#9;&#9;  &lt;/x:Caption&gt;&#10;&#9;&#9;  &lt;x:Name&gt;'+_graph_elem.series+'&lt;/x:Name&gt;&#10;          &lt;x:Line&gt;&#10;           &lt;x:Weight&gt;Medium&lt;/x:Weight&gt;&#10;          &lt;/x:Line&gt;&#10;&#9;&#9;  &lt;x:Marker&gt;&#10;&#9;&#9;   &lt;x:Size&gt;5&lt;/x:Size&gt;&#10;&#9;&#9;  &lt;/x:Marker&gt;&#10;&#9;&#9;  &lt;x:Category&gt;&#10;&#9;&#9;   &lt;x:DataSource&gt;-1&lt;/x:DataSource&gt;&#10;&#9;&#9;   &lt;x:Data&gt;{&amp;quot;'+StrReplace(_graph_elem.categoties, ",", "&amp;quot;,&amp;quot;")+'&amp;quot;}&lt;/x:Data&gt;&#10;&#9;&#9;  &lt;/x:Category&gt;&#10;&#9;&#9;  &lt;x:Value&gt;&#10;&#9;&#9;   &lt;x:DataSource&gt;-1&lt;/x:DataSource&gt;&#10;&#9;&#9;   &lt;x:Data&gt;{'+_graph_elem.values+'}&lt;/x:Data&gt;&#10;&#9;&#9;  &lt;/x:Value&gt;&#10;&#9;&#9; &lt;/x:Series&gt;';&#10;&#9;&#9;_ind++;&#10;&#9;}&#10;&#10;&#9;Session.excel_html += "&lt;x:PlotVisible/&gt;&#10;       &lt;/x:Graph&gt;&#10;       &lt;x:Axis&gt;&#10;        &lt;x:Placement&gt;Bottom&lt;/x:Placement&gt;&#10;        &lt;x:AxisID&gt;0&lt;/x:AxisID&gt;&#10;        &lt;x:ScaleID&gt;0&lt;/x:ScaleID&gt;&#10;        &lt;x:CrossingAxis&gt;1&lt;/x:CrossingAxis&gt;&#10;        &lt;x:Font&gt;&#10;         &lt;x:FontName&gt;Arial Cyr&lt;/x:FontName&gt;&#10;         &lt;x:Size&gt;10&lt;/x:Size&gt;&#10;         &lt;x:AutoScale/&gt;&#10;        &lt;/x:Font&gt;&#10;        &lt;x:Number&gt;&#10;         &lt;x:SourceLinked/&gt;&#10;         &lt;x:BuiltInFormat&gt;0&lt;/x:BuiltInFormat&gt;&#10;        &lt;/x:Number&gt;&#10;        &lt;x:Type&gt;Automatic&lt;/x:Type&gt;&#10;       &lt;/x:Axis&gt;&#10;       &lt;x:Axis&gt;&#10;        &lt;x:Placement&gt;Left&lt;/x:Placement&gt;&#10;        &lt;x:AxisID&gt;1&lt;/x:AxisID&gt;&#10;        &lt;x:ScaleID&gt;1&lt;/x:ScaleID&gt;&#10;        &lt;x:MajorGridlines/&gt;&#10;        &lt;x:CrossingAxis&gt;0&lt;/x:CrossingAxis&gt;&#10;        &lt;x:CrossesAt&gt;Minimum&lt;/x:CrossesAt&gt;&#10;        &lt;x:CrossBetween&gt;Between&lt;/x:CrossBetween&gt;&#10;        &lt;x:Font&gt;&#10;         &lt;x:FontName&gt;Arial Cyr&lt;/x:FontName&gt;&#10;         &lt;x:Size&gt;10&lt;/x:Size&gt;&#10;         &lt;x:AutoScale/&gt;&#10;        &lt;/x:Font&gt;&#10;        &lt;x:Number&gt;&#10;         &lt;x:SourceLinked/&gt;&#10;         &lt;x:BuiltInFormat&gt;0&lt;/x:BuiltInFormat&gt;&#10;        &lt;/x:Number&gt;&#10;        &lt;x:MajorTick&gt;Cross&lt;/x:MajorTick&gt;&#10;        &lt;x:Type&gt;Value&lt;/x:Type&gt;&#10;       &lt;/x:Axis&gt;&#10;      &lt;/x:PlotArea&gt;&#10;      &lt;x:Legend&gt;&#10;       &lt;x:Placement&gt;Bottom&lt;/x:Placement&gt;&#10;       &lt;x:Font&gt;&#10;        &lt;x:FontName&gt;Arial Cyr&lt;/x:FontName&gt;&#10;        &lt;x:Size&gt;10&lt;/x:Size&gt;&#10;        &lt;x:AutoScale/&gt;&#10;       &lt;/x:Font&gt;&#10;      &lt;/x:Legend&gt;&#10;     &lt;/x:Chart&gt;&#10;    &lt;/x:WebChart&gt;&#10;   &lt;/x:ClientData&gt;&#10;  &lt;/v:shape&gt;&lt;![endif]--&gt;";&#10;&#10;&#9;&#10;&#10;&#9;Session.excel_html += '&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;';&#10;}&#10;catch(_zz)&#10;{&#10;&#9;alert(_zz);&#10;}&#10;&#10;%&gt;</html>
			<use_session_cache>false</use_session_cache>
			<cwt_type>default</cwt_type>
			<out_type>undefined</out_type>
			<access>
				<access_level>0</access_level>
			</access>
			<doc_info>
				<creation>
					<user_login>user1</user_login>
					<date>2010-05-30T21:02:22Z</date>
				</creation>
				<modification>
					<user_login>admin</user_login>
					<user_id>6148914691236517121</user_id>
					<date>2021-06-28T13:27:14Z</date>
				</modification>
			</doc_info>
			<is_std>false</is_std>
			<changed>false</changed>
			<is_enabled>true</is_enabled>
		</custom_web_template>
		<custom_web_template>
			<id>0x4C0F465117781794</id>
			<code>rolf_css_report</code>
			<name>Отчет по результатам обратной связи 360 градусов - Шаблон для отчетов по оценке</name>
			<category>websoft</category>
			<exec_code>
				<code_text>&lt;%&#10;// -----------------------------------------------------------------------------------------------------------------------------&#10;// автор:&#9;RH&#10;// создан:&#9;30.05.2010&#10;// изменен:&#9;&#10;// -------------------------------------------------Предупреждение--------------------------------------------------------------&#10;// используется шаблонами документов&#10;// &#9;&#9; rolf_competence_appraisal_common_report - Аналитические данные по оценке компетенций&#10;// ------------------------------------------------Параметры шаблона------------------------------------------------------------&#10;// &lt;нет&gt;&#10;// ----------------------------------------------Глобальные переменные----------------------------------------------------------&#10;// &lt;нет&gt;&#10;// ---------------------------------------------------Константы-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------&#10;&#10;_str+="&#10;&lt;style&gt;&#10;&lt;!--table&#10;&#9;{mso-displayed-decimal-separator:\"\,\";&#10;&#9;mso-displayed-thousand-separator:\" \";}&#10;@page&#10;&#9;{margin:1.0in .75in 1.0in .75in;&#10;&#9;mso-header-margin:.5in;&#10;&#9;mso-footer-margin:.5in;}&#10;tr&#10;&#9;{mso-height-source:auto;}&#10;col&#10;&#9;{mso-width-source:auto;}&#10;br&#10;&#9;{mso-data-placement:same-cell;}&#10;.style0&#10;&#9;{mso-number-format:General;&#10;&#9;text-align:general;&#10;&#9;vertical-align:bottom;&#10;&#9;white-space:nowrap;&#10;&#9;mso-rotate:0;&#10;&#9;mso-background-source:auto;&#10;&#9;mso-pattern:auto;&#10;&#9;color:windowtext;&#10;&#9;font-size:10.0pt;&#10;&#9;font-weight:400;&#10;&#9;font-style:normal;&#10;&#9;text-decoration:none;&#10;&#9;font-family:Arial;&#10;&#9;mso-generic-font-family:auto;&#10;&#9;mso-font-charset:204;&#10;&#9;border:none;&#10;&#9;mso-protection:locked visible;&#10;&#9;mso-style-name:Normal;&#10;&#9;mso-style-id:0;}&#10;td&#10;&#9;{mso-style-parent:style0;&#10;&#9;padding-top:1px;&#10;&#9;padding-right:1px;&#10;&#9;padding-left:1px;&#10;&#9;mso-ignore:padding;&#10;&#9;color:windowtext;&#10;&#9;font-size:10.0pt;&#10;&#9;font-weight:400;&#10;&#9;font-style:normal;&#10;&#9;text-decoration:none;&#10;&#9;font-family:Arial;&#10;&#9;mso-generic-font-family:auto;&#10;&#9;mso-font-charset:204;&#10;&#9;mso-number-format:General;&#10;&#9;text-align:general;&#10;&#9;border:none;&#10;&#9;mso-background-source:auto;&#10;&#9;mso-pattern:auto;&#10;&#9;mso-protection:locked visible;&#10;&#9;mso-rotate:0;}&#10;.xl30&#10;&#9;{mso-style-parent:style0;&#10;&#9;font-size:11.0pt;&#10;&#9;font-family:Calibri, sans-serif;&#10;&#9;mso-font-charset:204;&#10;&#9;text-align:center;&#10;&#9;vertical-align:center;&#10;&#9;border-top:none;&#10;&#9;border-right:.5pt solid black;&#10;&#9;border-bottom:.5pt solid black;&#10;&#9;border-left:.5pt solid black;&#10;&#9;white-space:normal;}&#10;.xl31&#10;&#9;{mso-style-parent:style0;&#10;&#9;font-size:11.0pt;&#10;&#9;font-weight:700;&#10;&#9;font-family:Calibri, sans-serif;&#10;&#9;mso-font-charset:204;&#10;&#9;text-align:center;&#10;&#9;vertical-align:top;&#10;&#9;border:.5pt solid black;&#10;&#9;white-space:normal;}&#10;.xl34&#10;&#9;{mso-style-parent:style0;&#10;&#9;font-size:11.0pt;&#10;&#9;font-family:Calibri, sans-serif;&#10;&#9;mso-font-charset:204;&#10;&#9;vertical-align:center;&#10;&#9;text-align:center;&#10;&#9;border-top:none;&#10;&#9;border-right:.5pt solid black;&#10;&#9;border-bottom:.5pt solid black;&#10;&#9;border-left:none;&#10;&#9;white-space:normal;}&#10;.xl32_comp&#10;&#9;{mso-style-parent:style0;&#10;&#9;font-size:11.0pt;&#10;&#9;font-family:Calibri, sans-serif;&#10;&#9;mso-font-charset:204;&#10;&#9;vertical-align:center;&#10;&#9;text-align:center;&#10;&#9;border-top:none;&#10;&#9;border-right:.5pt solid black;&#10;&#9;border-bottom:.5pt solid black;&#10;&#9;border-left:none;&#10;&#9;white-space:normal;&#10;&#9;background:#90EE90;}&#10;.xl33_comp&#10;&#9;{mso-style-parent:style0;&#10;&#9;font-size:11.0pt;&#10;&#9;font-family:Calibri, sans-serif;&#10;&#9;mso-font-charset:204;&#10;&#9;vertical-align:center;&#10;&#9;text-align:center;&#10;&#9;border-top:none;&#10;&#9;border-right:.5pt solid black;&#10;&#9;border-bottom:.5pt solid black;&#10;&#9;border-left:none;&#10;&#9;white-space:normal;&#10;&#9;background:#DB7093;}&#10;.xl35_comp&#10;&#9;{mso-style-parent:style0;&#10;&#9;font-size:11.0pt;&#10;&#9;font-family:Calibri, sans-serif;&#10;&#9;mso-font-charset:204;&#10;&#9;vertical-align:center;&#10;&#9;text-align:center;&#10;&#9;border-top:none;&#10;&#9;border-right:none;&#10;&#9;border-bottom:none;&#10;&#9;border-left:none;&#10;&#9;white-space:normal;&#10;&#9;background:#DB7093;}&#10;.xl36_comp&#10;&#9;{mso-style-parent:style0;&#10;&#9;font-size:11.0pt;&#10;&#9;font-family:Calibri, sans-serif;&#10;&#9;mso-font-charset:204;&#10;&#9;vertical-align:center;&#10;&#9;text-align:center;&#10;&#9;border-top:none;&#10;&#9;border-right:none;&#10;&#9;border-bottom:none;&#10;&#9;border-left:none;&#10;&#9;white-space:normal;&#10;&#9;background:#90EE90;}&#10;.xl37&#10;&#9;{mso-style-parent:style0;&#10;&#9;font-size:11.0pt;&#10;&#9;font-family:Calibri, sans-serif;&#10;&#9;mso-font-charset:204;&#10;&#9;vertical-align:center;&#10;&#9;text-align:left;&#10;&#9;border-top:none;&#10;&#9;border-right:none;&#10;&#9;border-bottom:none;&#10;&#9;border-left:none;&#10;&#9;white-space:normal;}&#10;.xl35_indi&#10;&#9;{mso-style-parent:style0;&#10;&#9;font-size:11.0pt;&#10;&#9;font-family:Calibri, sans-serif;&#10;&#9;mso-font-charset:204;&#10;&#9;vertical-align:center;&#10;&#9;text-align:center;&#10;&#9;border-top:none;&#10;&#9;border-right:none;&#10;&#9;border-bottom:none;&#10;&#9;border-left:none;&#10;&#9;white-space:normal;&#10;&#9;background:green;}&#10;.xl36_indi&#10;&#9;{mso-style-parent:style0;&#10;&#9;font-size:11.0pt;&#10;&#9;font-family:Calibri, sans-serif;&#10;&#9;mso-font-charset:204;&#10;&#9;vertical-align:center;&#10;&#9;text-align:center;&#10;&#9;border-top:none;&#10;&#9;border-right:none;&#10;&#9;border-bottom:none;&#10;&#9;border-left:none;&#10;&#9;white-space:normal;&#10;&#9;background:#0000ff;}&#10;.xl32_finall&#10;&#9;{mso-style-parent:style0;&#10;&#9;font-size:11.0pt;&#10;&#9;font-family:Calibri, sans-serif;&#10;&#9;mso-font-charset:204;&#10;&#9;vertical-align:center;&#10;&#9;text-align:center;&#10;&#9;border-top:none;&#10;&#9;border-right:.5pt solid black;&#10;&#9;border-bottom:.5pt solid black;&#10;&#9;border-left:none;&#10;&#9;white-space:normal;&#10;&#9;background:lightgreen;}&#10;.xl34_finall&#10;&#9;{mso-style-parent:style0;&#10;&#9;font-size:11.0pt;&#10;&#9;font-family:Calibri, sans-serif;&#10;&#9;mso-font-charset:204;&#10;&#9;vertical-align:center;&#10;&#9;text-align:center;&#10;&#9;border-top:none;&#10;&#9;border-right:.5pt solid black;&#10;&#9;border-bottom:.5pt solid black;&#10;&#9;border-left:none;&#10;&#9;white-space:normal;&#10;&#9;background:khaki;}&#10;.xl33_finall&#10;&#9;{mso-style-parent:style0;&#10;&#9;font-size:11.0pt;&#10;&#9;font-family:Calibri, sans-serif;&#10;&#9;mso-font-charset:204;&#10;&#9;text-align:right;&#10;&#9;vertical-align:center;&#10;&#9;border-top:none;&#10;&#9;border-right:.5pt solid black;&#10;&#9;border-bottom:.5pt solid black;&#10;&#9;border-left:.5pt solid black;&#10;&#9;white-space:normal;}&#10;.xl35_finall&#10;&#9;{mso-style-parent:style0;&#10;&#9;font-size:11.0pt;&#10;&#9;font-family:Calibri, sans-serif;&#10;&#9;mso-font-charset:204;&#10;&#9;vertical-align:center;&#10;&#9;text-align:center;&#10;&#9;border-top:none;&#10;&#9;border-right:none;&#10;&#9;border-bottom:none;&#10;&#9;border-left:none;&#10;&#9;white-space:normal;&#10;&#9;background:lightgreen;}&#10;.xl36_finall&#10;&#9;{mso-style-parent:style0;&#10;&#9;font-size:11.0pt;&#10;&#9;font-family:Calibri, sans-serif;&#10;&#9;mso-font-charset:204;&#10;&#9;vertical-align:center;&#10;&#9;text-align:center;&#10;&#9;border-top:none;&#10;&#9;border-right:none;&#10;&#9;border-bottom:none;&#10;&#9;border-left:none;&#10;&#9;white-space:normal;&#10;&#9;background:khaki}&#10;&#10;&#10;--&gt;&#10;&lt;/style&gt;&#10;";&#10;%&gt;</code_text>
			</exec_code>
			<html>&lt;%&#10;// -----------------------------------------------------------------------------------------------------------------------------&#10;// автор:&#9;RH&#10;// создан:&#9;30.05.2010&#10;// изменен:&#9;&#10;// -------------------------------------------------Предупреждение--------------------------------------------------------------&#10;// используется шаблонами документов&#10;// &#9;&#9; rolf_competence_appraisal_common_report - Аналитические данные по оценке компетенций&#10;// ------------------------------------------------Параметры шаблона------------------------------------------------------------&#10;// &lt;нет&gt;&#10;// ----------------------------------------------Глобальные переменные----------------------------------------------------------&#10;// &lt;нет&gt;&#10;// ---------------------------------------------------Константы-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------&#10;&#10;_str+="&#10;&lt;style&gt;&#10;&lt;!--table&#10;&#9;{mso-displayed-decimal-separator:\"\,\";&#10;&#9;mso-displayed-thousand-separator:\" \";}&#10;@page&#10;&#9;{margin:1.0in .75in 1.0in .75in;&#10;&#9;mso-header-margin:.5in;&#10;&#9;mso-footer-margin:.5in;}&#10;tr&#10;&#9;{mso-height-source:auto;}&#10;col&#10;&#9;{mso-width-source:auto;}&#10;br&#10;&#9;{mso-data-placement:same-cell;}&#10;.style0&#10;&#9;{mso-number-format:General;&#10;&#9;text-align:general;&#10;&#9;vertical-align:bottom;&#10;&#9;white-space:nowrap;&#10;&#9;mso-rotate:0;&#10;&#9;mso-background-source:auto;&#10;&#9;mso-pattern:auto;&#10;&#9;color:windowtext;&#10;&#9;font-size:10.0pt;&#10;&#9;font-weight:400;&#10;&#9;font-style:normal;&#10;&#9;text-decoration:none;&#10;&#9;font-family:Arial;&#10;&#9;mso-generic-font-family:auto;&#10;&#9;mso-font-charset:204;&#10;&#9;border:none;&#10;&#9;mso-protection:locked visible;&#10;&#9;mso-style-name:Normal;&#10;&#9;mso-style-id:0;}&#10;td&#10;&#9;{mso-style-parent:style0;&#10;&#9;padding-top:1px;&#10;&#9;padding-right:1px;&#10;&#9;padding-left:1px;&#10;&#9;mso-ignore:padding;&#10;&#9;color:windowtext;&#10;&#9;font-size:10.0pt;&#10;&#9;font-weight:400;&#10;&#9;font-style:normal;&#10;&#9;text-decoration:none;&#10;&#9;font-family:Arial;&#10;&#9;mso-generic-font-family:auto;&#10;&#9;mso-font-charset:204;&#10;&#9;mso-number-format:General;&#10;&#9;text-align:general;&#10;&#9;border:none;&#10;&#9;mso-background-source:auto;&#10;&#9;mso-pattern:auto;&#10;&#9;mso-protection:locked visible;&#10;&#9;mso-rotate:0;}&#10;.xl30&#10;&#9;{mso-style-parent:style0;&#10;&#9;font-size:11.0pt;&#10;&#9;font-family:Calibri, sans-serif;&#10;&#9;mso-font-charset:204;&#10;&#9;text-align:center;&#10;&#9;vertical-align:center;&#10;&#9;border-top:none;&#10;&#9;border-right:.5pt solid black;&#10;&#9;border-bottom:.5pt solid black;&#10;&#9;border-left:.5pt solid black;&#10;&#9;white-space:normal;}&#10;.xl31&#10;&#9;{mso-style-parent:style0;&#10;&#9;font-size:11.0pt;&#10;&#9;font-weight:700;&#10;&#9;font-family:Calibri, sans-serif;&#10;&#9;mso-font-charset:204;&#10;&#9;text-align:center;&#10;&#9;vertical-align:top;&#10;&#9;border:.5pt solid black;&#10;&#9;white-space:normal;}&#10;.xl34&#10;&#9;{mso-style-parent:style0;&#10;&#9;font-size:11.0pt;&#10;&#9;font-family:Calibri, sans-serif;&#10;&#9;mso-font-charset:204;&#10;&#9;vertical-align:center;&#10;&#9;text-align:center;&#10;&#9;border-top:none;&#10;&#9;border-right:.5pt solid black;&#10;&#9;border-bottom:.5pt solid black;&#10;&#9;border-left:none;&#10;&#9;white-space:normal;}&#10;.xl32_comp&#10;&#9;{mso-style-parent:style0;&#10;&#9;font-size:11.0pt;&#10;&#9;font-family:Calibri, sans-serif;&#10;&#9;mso-font-charset:204;&#10;&#9;vertical-align:center;&#10;&#9;text-align:center;&#10;&#9;border-top:none;&#10;&#9;border-right:.5pt solid black;&#10;&#9;border-bottom:.5pt solid black;&#10;&#9;border-left:none;&#10;&#9;white-space:normal;&#10;&#9;background:#90EE90;}&#10;.xl33_comp&#10;&#9;{mso-style-parent:style0;&#10;&#9;font-size:11.0pt;&#10;&#9;font-family:Calibri, sans-serif;&#10;&#9;mso-font-charset:204;&#10;&#9;vertical-align:center;&#10;&#9;text-align:center;&#10;&#9;border-top:none;&#10;&#9;border-right:.5pt solid black;&#10;&#9;border-bottom:.5pt solid black;&#10;&#9;border-left:none;&#10;&#9;white-space:normal;&#10;&#9;background:#DB7093;}&#10;.xl35_comp&#10;&#9;{mso-style-parent:style0;&#10;&#9;font-size:11.0pt;&#10;&#9;font-family:Calibri, sans-serif;&#10;&#9;mso-font-charset:204;&#10;&#9;vertical-align:center;&#10;&#9;text-align:center;&#10;&#9;border-top:none;&#10;&#9;border-right:none;&#10;&#9;border-bottom:none;&#10;&#9;border-left:none;&#10;&#9;white-space:normal;&#10;&#9;background:#DB7093;}&#10;.xl36_comp&#10;&#9;{mso-style-parent:style0;&#10;&#9;font-size:11.0pt;&#10;&#9;font-family:Calibri, sans-serif;&#10;&#9;mso-font-charset:204;&#10;&#9;vertical-align:center;&#10;&#9;text-align:center;&#10;&#9;border-top:none;&#10;&#9;border-right:none;&#10;&#9;border-bottom:none;&#10;&#9;border-left:none;&#10;&#9;white-space:normal;&#10;&#9;background:#90EE90;}&#10;.xl37&#10;&#9;{mso-style-parent:style0;&#10;&#9;font-size:11.0pt;&#10;&#9;font-family:Calibri, sans-serif;&#10;&#9;mso-font-charset:204;&#10;&#9;vertical-align:center;&#10;&#9;text-align:left;&#10;&#9;border-top:none;&#10;&#9;border-right:none;&#10;&#9;border-bottom:none;&#10;&#9;border-left:none;&#10;&#9;white-space:normal;}&#10;.xl35_indi&#10;&#9;{mso-style-parent:style0;&#10;&#9;font-size:11.0pt;&#10;&#9;font-family:Calibri, sans-serif;&#10;&#9;mso-font-charset:204;&#10;&#9;vertical-align:center;&#10;&#9;text-align:center;&#10;&#9;border-top:none;&#10;&#9;border-right:none;&#10;&#9;border-bottom:none;&#10;&#9;border-left:none;&#10;&#9;white-space:normal;&#10;&#9;background:green;}&#10;.xl36_indi&#10;&#9;{mso-style-parent:style0;&#10;&#9;font-size:11.0pt;&#10;&#9;font-family:Calibri, sans-serif;&#10;&#9;mso-font-charset:204;&#10;&#9;vertical-align:center;&#10;&#9;text-align:center;&#10;&#9;border-top:none;&#10;&#9;border-right:none;&#10;&#9;border-bottom:none;&#10;&#9;border-left:none;&#10;&#9;white-space:normal;&#10;&#9;background:#0000ff;}&#10;.xl32_finall&#10;&#9;{mso-style-parent:style0;&#10;&#9;font-size:11.0pt;&#10;&#9;font-family:Calibri, sans-serif;&#10;&#9;mso-font-charset:204;&#10;&#9;vertical-align:center;&#10;&#9;text-align:center;&#10;&#9;border-top:none;&#10;&#9;border-right:.5pt solid black;&#10;&#9;border-bottom:.5pt solid black;&#10;&#9;border-left:none;&#10;&#9;white-space:normal;&#10;&#9;background:lightgreen;}&#10;.xl34_finall&#10;&#9;{mso-style-parent:style0;&#10;&#9;font-size:11.0pt;&#10;&#9;font-family:Calibri, sans-serif;&#10;&#9;mso-font-charset:204;&#10;&#9;vertical-align:center;&#10;&#9;text-align:center;&#10;&#9;border-top:none;&#10;&#9;border-right:.5pt solid black;&#10;&#9;border-bottom:.5pt solid black;&#10;&#9;border-left:none;&#10;&#9;white-space:normal;&#10;&#9;background:khaki;}&#10;.xl33_finall&#10;&#9;{mso-style-parent:style0;&#10;&#9;font-size:11.0pt;&#10;&#9;font-family:Calibri, sans-serif;&#10;&#9;mso-font-charset:204;&#10;&#9;text-align:right;&#10;&#9;vertical-align:center;&#10;&#9;border-top:none;&#10;&#9;border-right:.5pt solid black;&#10;&#9;border-bottom:.5pt solid black;&#10;&#9;border-left:.5pt solid black;&#10;&#9;white-space:normal;}&#10;.xl35_finall&#10;&#9;{mso-style-parent:style0;&#10;&#9;font-size:11.0pt;&#10;&#9;font-family:Calibri, sans-serif;&#10;&#9;mso-font-charset:204;&#10;&#9;vertical-align:center;&#10;&#9;text-align:center;&#10;&#9;border-top:none;&#10;&#9;border-right:none;&#10;&#9;border-bottom:none;&#10;&#9;border-left:none;&#10;&#9;white-space:normal;&#10;&#9;background:lightgreen;}&#10;.xl36_finall&#10;&#9;{mso-style-parent:style0;&#10;&#9;font-size:11.0pt;&#10;&#9;font-family:Calibri, sans-serif;&#10;&#9;mso-font-charset:204;&#10;&#9;vertical-align:center;&#10;&#9;text-align:center;&#10;&#9;border-top:none;&#10;&#9;border-right:none;&#10;&#9;border-bottom:none;&#10;&#9;border-left:none;&#10;&#9;white-space:normal;&#10;&#9;background:khaki}&#10;&#10;&#10;--&gt;&#10;&lt;/style&gt;&#10;";&#10;%&gt;</html>
			<use_session_cache>false</use_session_cache>
			<cwt_type>default</cwt_type>
			<out_type>undefined</out_type>
			<access>
				<access_level>0</access_level>
			</access>
			<doc_info>
				<creation>
					<user_login>user1</user_login>
					<date>2010-06-10T09:58:16Z</date>
				</creation>
				<modification>
					<user_login>admin</user_login>
					<user_id>6148914691236517121</user_id>
					<date>2021-06-28T13:27:14Z</date>
				</modification>
			</doc_info>
			<is_std>false</is_std>
			<changed>false</changed>
			<is_enabled>true</is_enabled>
		</custom_web_template>
		<custom_web_template>
			<id>0x4BFE5FD8431C29CF</id>
			<code>rolf_finall_common_report</code>
			<name>Отчет по результатам обратной связи 360 градусов - Отчет по результатам оценки (общая статистика)</name>
			<category>websoft</category>
			<exec_code>
				<code_text>&lt;%&#10;// -----------------------------------------------------------------------------------------------------------------------------&#10;// автор:&#9;RH&#10;// создан:&#9;30.05.2010&#10;// изменен:&#9;&#10;// -------------------------------------------------Предупреждение--------------------------------------------------------------&#10;// используется шаблонами документов&#10;// &#9;&#9; rolf_competence_appraisal_common_report - Аналитические данные по оценке компетенций&#10;// ------------------------------------------------Параметры шаблона------------------------------------------------------------&#10;// &lt;нет&gt;&#10;// ----------------------------------------------Глобальные переменные----------------------------------------------------------&#10;// &lt;нет&gt;&#10;// ---------------------------------------------------Константы-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------&#10;// ******************ОСНОВНАЯ ОБЛАСТЬ*************************&#9;&#9;&#10;&#9;// выбранные процедуры оценки&#10;&#9;AssessmentAppraises = Trim( Request.Form.assessment_app_ids ).split(",");&#10;&#9;for (_ass_id in AssessmentAppraises)&#10;&#9;{&#10;&#9;&#9;RowNum = 0;&#10;&#10;&#9;&#9;_ass_name = OpenDoc(UrlFromDocID(Int(_ass_id))).TopElem.name;&#10;&#10;&#9;&#9;Plans = XQuery("for $obj in assessment_plans where $obj/assessment_appraise_id = " + _ass_id + &#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;" and $obj/person_id = " + Request.Form.coll_ids + " order by $obj/person_fullname return $obj");&#10;&#9;&#9;_plan = ArrayOptFirstElem(Plans);&#10;&#9;&#9;if (_plan == undefined)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;html_TEXT += "&lt;center&gt;&lt;font&gt;&lt;color='red'&gt;Отсутствует план оценки сотрудника для процедуры " + _ass_name + "&lt;/color&gt;&lt;/font&gt;&lt;center&gt;";&#10;&#9;&#9;&#9;continue;&#10;&#9;&#9;}&#10;&#9;&#9;// план оценки сотрудника&#10;&#9;&#9;try&#10;&#9;&#9;{&#10;&#9;&#9;&#9;plan_id = _plan.id;&#10;&#9;&#9;&#9;planDoc = OpenDoc(UrlFromDocID(plan_id)).TopElem;&#10;&#9;&#9;}&#10;&#9;&#9;catch(err)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;alert("ОШИБКА: невозможно получить карточку плана оценки сотрудника. " + err);&#10;&#9;&#9;&#9;continue;&#10;&#9;&#9;}&#10;&#10;&#9;&#9;// карточка оцениваемого сотрудника&#10;&#9;&#9;collDoc = OpenDoc(UrlFromDocID(planDoc.person_id)).TopElem;&#10;&#9;&#9;&#10;&#9;&#9;// процедура оценки&#10;&#9;&#9;AssessmentAppraise = OpenDoc(UrlFromDocID(planDoc.assessment_appraise_id)).TopElem;&#10;&#9;&#9;&#10;&#9;&#9;RowNum = 0;&#10;&#9;&#9;try&#10;&#9;&#9;{&#10;&#9;&#9;&#9;&#10;&#9;&#9;&#9;_pa = ArrayOptFirstElem(XQuery("for $obj in pas where $obj/assessment_appraise_id = " + planDoc.assessment_appraise_id + &#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;" and $obj/person_id = " + planDoc.person_id + " and $obj/assessment_appraise_type = 'competence_appraisal' return $obj"));&#10;&#9;&#9;&#9;if (_pa == undefined)&#10;&#9;&#9;&#9;&#9;throw 'No pa exists';&#10;&#9;&#9;&#9;_profile_id = OpenDoc(UrlFromDocID(_pa.id)).TopElem.competence_profile_id;&#10;&#9;&#9;&#9;Profile = OpenDoc(UrlFromDocID(Int(_profile_id))).TopElem;&#10;&#9;&#9;}&#10;&#9;&#9;catch(err)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;alert("ОШИБКА: Невозможно получить профиль компетенций. " + err);&#10;&#9;&#9;&#9;Profile = null;&#10;&#9;&#9;}&#10;&#9;&#9;&#10;//Отчет по результатам оценки&#10;&#10;&#9;&#9;_strComp="";&#10;&#9;&#9;_strIndi=Array();&#10;&#9;&#9;_coll="";&#10;&#9;&#9;_staff="";&#10;&#9;&#9;_expert="";&#10;&#9;&#9;PasManager = XQuery("for $obj in pas where $obj/assessment_appraise_id = " + planDoc.assessment_appraise_id + " and $obj/person_id = " + planDoc.person_id + " and $obj/assessment_appraise_type = 'competence_appraisal' and $obj/status = 'manager' return $obj");&#10;&#9;&#9;PasStaff = XQuery("for $obj in pas where $obj/assessment_appraise_id = " + planDoc.assessment_appraise_id + " and $obj/person_id = " + planDoc.person_id + " and $obj/assessment_appraise_type = 'competence_appraisal' and $obj/status = 'staff' return $obj");&#10;&#9;&#9;PasColl = XQuery("for $obj in pas where $obj/assessment_appraise_id = " + planDoc.assessment_appraise_id + " and $obj/person_id = " + planDoc.person_id + " and $obj/assessment_appraise_type = 'competence_appraisal' and $obj/status = 'coll' return $obj");&#10;&#9;&#9;PasExpert = XQuery("for $obj in pas where $obj/assessment_appraise_id = " + planDoc.assessment_appraise_id + " and $obj/person_id = " + planDoc.person_id + " and $obj/assessment_appraise_type = 'competence_appraisal' and $obj/status = 'expert' return $obj");&#10;&#9;&#9;_str = "&#10;&lt;br&gt;&#10;&lt;p align='left'&gt;&lt;b&gt;Отчет по результатам оценки(общая статистика)&lt;/b&gt;&lt;/p&gt;&#10;&lt;table x:str border=0 cellpadding=0 cellspacing=0 style='border-collapse:collapse'&gt;&#10;&#9;&lt;tr style='mso-height-source:userset;mso-yfti-irow:" + RowNum + "'&gt;" + "&#10;&#9;&lt;td class=xl35_finall width='100' &gt;&amp;nbsp&lt;/td&gt;&#10;&#9;&lt;td class=xl37 &gt;Выгружаемое значение&lt;/td&gt;&#10;&#9;&lt;td class=xl37 &gt;&amp;nbsp&lt;/td&gt;&#10;&#9;&lt;td class=xl36_finall  width='100'&gt;&amp;nbsp&lt;/td&gt;&#10;&#9;&lt;td class=xl37 &gt;Рассчитываемое значение&lt;/td&gt;&#10;&#9;&lt;/tr&gt;&#10;&lt;/table&gt;&#10;&lt;div&gt;&lt;/div&gt;&#10;&lt;div style='overflow: auto;'&gt;&#10;&lt;table x:str border=0 cellpadding=0 cellspacing=0 style='border-collapse:collapse'&gt;&#10;&#9;&lt;tr style='mso-height-source:userset;mso-yfti-irow:" + RowNum + "'&gt;" + "&#10;&#9;&lt;td class=xl37 &gt;&amp;nbsp&lt;/td&gt;&#10;&#9;&lt;/tr&gt;&#10;&#9;&lt;tr height=81 style='height:60.75pt;mso-yfti-firstrow:yes'&gt;&#10;&#9;&lt;td class=xl31&gt;Компетенция/индикатор&lt;/td&gt;&#10;&#9;&lt;td class=xl31&gt;Самооценка&lt;/td&gt;&#10;&#9;&lt;td class=xl31&gt;Руководитель("+ArrayOptFirstElem(PasManager).expert_person_fullname+")&lt;/td&gt;";&#10;&#9;&#9;i=1;&#10;&#9;&#9;for(_pas in PasStaff)&#10;&#9;&#9;{&#10;&#9;&#9;_staff+="&#10;&#9;&lt;td class=xl31&gt;Подчиненный"+i+"("+_pas.expert_person_fullname+")&lt;/td&gt;";&#10;&#9;&#9;i++;&#10;&#9;&#9;}&#10;&#9;&#9;_str+=_staff;&#10;&#9;&#9;_str+="&#10;&#9;&lt;td class=xl31&gt;Среднее по подчиненным&lt;/td&gt;";&#10;&#9;&#9;i=1;&#10;&#9;&#9;for(_pas in PasColl)&#10;&#9;&#9;{&#10;&#9;&#9;_coll+="&#10;&#9;&lt;td class=xl31&gt;Коллега"+i+"("+_pas.expert_person_fullname+")&lt;/td&gt;";&#10;&#9;&#9;i++;&#10;&#9;&#9;}&#10;&#9;&#9;_str+=_coll;&#10;&#9;&#9;_str+="&#10;&#9;&lt;td class=xl31&gt;Среднее по коллегам&lt;/td&gt;";&#10;&#9;&#9;i=1;&#10;&#9;&#9;for(_pas in PasExpert)&#10;&#9;&#9;{&#10;&#9;&#9;_expert+="&#10;&#9;&lt;td class=xl31&gt;Экперт"+i+"("+_pas.expert_person_fullname+")&lt;/td&gt;";&#10;&#9;&#9;i++;&#10;&#9;&#9;}&#10;&#9;&#9;_str+=_expert;&#10;&#9;&#9;_str+="&#10;&#9;&lt;td class=xl31&gt;Среднее по экспертам&lt;/td&gt;&#10;&#9;&lt;td class=xl31&gt;Стандарт по профилю&lt;/td&gt;&#10;&#9;&lt;/tr&gt;&#10;&#9;&lt;tr&gt;&#10;";&#10;&#9;&#9;// цикл по компетенциям&#10;&#9;&#9;for (_comp in Profile.competences)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;// компетенция&#10;&#9;&#9;&#9;CompetenceName = OpenDoc(UrlFromDocID(_comp.competence_id)).TopElem.name;&#10;&#9;&#9;&#9;_strComp="&#10; &lt;tr style='mso-height-source:userset;'&gt;&#10;  &lt;td class=xl30 style='font-weight: 600' &gt;" + CompetenceName + "&lt;/td&gt;";&#10;&#9;&#9;&#9;// индикаторы&#10;&#9;&#9;&#9;_strSelf=null;&#10;&#9;&#9;&#9;_strManager=null;&#10;&#9;&#9;&#9;_strColl=null;&#10;&#9;&#9;&#9;_strCollAll=null;&#10;&#9;&#9;&#9;_strStaff=null;&#10;&#9;&#9;&#9;_strStaffAll=null;&#10;&#9;&#9;&#9;_strExpert=null;&#10;&#9;&#9;&#9;_strExpertAll=null;&#10;&#9;&#9;&#9;_rowIndi=0;&#10;&#9;&#9;// цикл по индикаторам&#10;&#9;&#9;for (_indi in _comp.indicators)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;IndiName = OpenDoc(UrlFromDocID(_indi.indicator_id)).TopElem.name;&#10;&#9;&#9;&#9;_strIndi[_rowIndi]="&#10; &lt;tr style='mso-height-source:userset;'&gt;&#10;  &lt;td class=xl33_finall &gt; - " + IndiName + "&lt;/td&gt;";&#10;&#10;&#9;&#9;// самооценка&#10;&#9;&#9;&#9;SelfMarkComp = null;&#10;&#9;&#9;&#9;SelfMarkIndi = null;&#10;&#9;&#9;&#9;Pas = XQuery("for $obj in pas where $obj/assessment_appraise_id = " + planDoc.assessment_appraise_id + " and $obj/person_id = " + planDoc.person_id + " and $obj/assessment_appraise_type = 'competence_appraisal' and $obj/status = 'self' return $obj");&#10;&#9;&#9;&#9;_pa = ArrayOptFirstElem(Pas);&#10;&#9;&#9;&#9;if (_pa != undefined)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;Comp =OpenDoc(UrlFromDocID(_pa.id)).TopElem.competences.GetOptChildByKey(_comp.competence_id);&#10;&#9;&#9;&#9;&#9;_getMark=GetMarkFromCompetence(Comp, "mark");&#10;&#9;&#9;&#9;&#9;Indi = Comp.indicators.GetOptChildByKey(_indi.indicator_id);&#10;&#9;&#9;&#9;&#9;if (Comp!= undefined) {&#10;&#9;&#9;&#9;&#9;&#9;SelfMarkComp = (_getMark!=null) ? _getMark : GetMark(Comp, "indicators", OVERALL_MARK_FORMULA, "mark");&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;if (Indi!= undefined) {&#10;&#9;&#9;&#9;&#9;&#9;SelfMarkIndi = GetMarkFromCompetence(Indi, "mark");&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;if (SelfMarkComp!=null)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;SelfMarkComp = Real(StrRealFixed(SelfMarkComp, 2));&#10;&#9;&#9;&#9;}&#9;&#10;&#9;&#9;&#9;else&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;SelfMarkComp="";&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;if (SelfMarkIndi!= null)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;SelfMarkIndi = Real(StrRealFixed(SelfMarkIndi, 2));&#10;&#9;&#9;&#9;}&#9;&#10;&#9;&#9;&#9;else&#10;&#9;&#9;&#9;&#9;SelfMarkIndi = "";&#10;&#10;&#9;&#9;&#9;if(_strSelf==null)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;_strSelf="&#10;&#9;&lt;td class=xl34_finall &gt;" + SelfMarkComp + "&lt;/td&gt;";&#10;&#9;&#9;&#9;_strComp+=_strSelf&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#10;&#9;&#9;&#9;_strIndi[_rowIndi]+="&#10;&#9;&lt;td class=xl32_finall &gt;" + SelfMarkIndi + "&lt;/td&gt;";&#10;&#10;&#9;&#9;// средняя оценка руководителя&#10;&#9;&#9;&#9;ManagerMarkIndi = Real(0.0);&#10;&#9;&#9;&#9;ManagerMarkComp= Real(0.0);&#10;&#9;&#9;&#9;ManagerMarkCountIndi=0;&#10;&#9;&#9;&#9;ManagerMarkCountComp=0;&#10;&#9;&#9;&#9;for (_pa in PasManager)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;if (_pa != undefined)&#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;Comp =OpenDoc(UrlFromDocID(_pa.id)).TopElem.competences.GetOptChildByKey(_comp.competence_id);&#10;&#9;&#9;&#9;&#9;&#9;_getMark=GetMarkFromCompetence(Comp, "mark");&#10;&#9;&#9;&#9;&#9;&#9;Indi = Comp.indicators.GetOptChildByKey(_indi.indicator_id);&#10;&#9;&#9;&#9;&#9;&#9;if (Comp != undefined) {&#10;&#9;&#9;&#9;&#9;&#9;&#9;_mmark = (_getMark!=null) ? _getMark : GetMark(Comp, "indicators", OVERALL_MARK_FORMULA, "mark");&#10;&#9;&#9;&#9;&#9;&#9;&#9;if (_mmark != null)&#10;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;ManagerMarkComp += _mmark;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;ManagerMarkCountComp++;&#10;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;if (Indi != undefined) {&#10;&#9;&#9;&#9;&#9;&#9;&#9;_mmark = GetMarkFromCompetence(Indi, "mark");&#10;&#9;&#9;&#9;&#9;&#9;&#9;if (_mmark != null)&#10;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;ManagerMarkIndi += _mmark;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;ManagerMarkCountIndi++;&#10;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;if (ManagerMarkCountComp &gt; 0)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;ManagerMarkComp = ManagerMarkComp / ManagerMarkCountComp;&#10;&#9;&#9;&#9;&#9;ManagerMarkComp = Real(StrRealFixed(ManagerMarkComp, 2));&#10;&#9;&#9;&#9;} else if(ManagerMarkCountComp == 0){&#10;&#9;&#9;&#9;&#9;ManagerMarkComp = 0;&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;else&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;ManagerMarkComp="";&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#10;&#9;&#9;&#9;if (ManagerMarkCountIndi &gt; 0)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;ManagerMarkIndi = ManagerMarkIndi / ManagerMarkCountIndi;&#10;&#9;&#9;&#9;&#9;ManagerMarkIndi = Real(StrRealFixed(ManagerMarkIndi, 2));&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;else if (ManagerMarkCountIndi == 0)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;ManagerMarkIndi = 0;&#10;&#9;&#9;&#9;} else {&#10;&#9;&#9;&#9;&#9;ManagerMarkIndi = "";&#10;&#9;&#9;&#9;}&#10;&#10;&#9;&#9;&#9;if(_strManager==null)&#10;&#9;&#9;&#9;{&#10;&#10;&#9;&#9;&#9;_strManager="&#10;&#9;&lt;td class=xl34_finall &gt;" + ManagerMarkComp + "&lt;/td&gt;";&#10;&#9;&#9;&#9;_strComp+=_strManager;&#10;&#9;&#9;&#9;}&#10;&#9;&#9;_strIndi[_rowIndi]+="&#10;&#9;&lt;td class=xl32_finall &gt;" + ManagerMarkIndi + "&lt;/td&gt;";&#10;&#10;&#9;&#9;&#9;// средняя оценка подчиненных&#10;&#9;&#9;&#9;StaffMarkIndi = Real(0.0);&#10;&#9;&#9;&#9;StaffMarkComp = Real(0.0);&#10;&#9;&#9;&#9;StaffMarkCountIndi = 0;&#10;&#9;&#9;&#9;StaffMarkCountComp = 0;&#10;&#9;&#9;&#9;for (_pa in PasStaff)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;if (_pa != undefined) {&#10;&#9;&#9;&#9;&#9;&#9;Comp = OpenDoc(UrlFromDocID(_pa.id)).TopElem.competences.GetOptChildByKey(_comp.competence_id);&#10;&#9;&#9;&#9;&#9;&#9;_getMark=GetMarkFromCompetence(Comp, "mark");&#10;&#9;&#9;&#9;&#9;&#9;Indi = Comp.indicators.GetOptChildByKey(_indi.indicator_id);&#10;&#9;&#9;&#9;&#9;&#9;if (Comp != undefined) {&#10;&#9;&#9;&#9;&#9;&#9;&#9;_smark = (_getMark!=null) ? _getMark : GetMark(Comp, "indicators", OVERALL_MARK_FORMULA, "mark");&#10;&#9;&#9;&#9;&#9;&#9;&#9;if (_smark != null)&#10;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;StaffMarkComp += _smark;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;StaffMarkCountComp++;&#10;&#9;&#9;&#9;&#9;&#9;&#9;} else {&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_smark = 0;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;StaffMarkComp += _smark;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;StaffMarkCountComp++;&#10;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#10;&#9;&#9;&#9;&#9;&#9;&#9;_strStaff+="&#10;&#9;&lt;td class=xl34_finall &gt;" + _smark + "&lt;/td&gt;";&#10;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;if (Indi != undefined) {&#10;&#9;&#9;&#9;&#9;&#9;&#9;_smark = GetMarkFromCompetence(Indi, "mark");&#10;&#10;&#9;&#9;&#9;&#9;&#9;&#9;if(_smark == null)&#10;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_smark = 0;&#10;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;_strIndi[_rowIndi]+="&#10;&#9;&lt;td class=xl32_finall DEVELOPER&gt;" + _smark + "&lt;/td&gt;";&#10;&#9;&#9;&#9;&#9;&#9;&#9;if (_smark != null)&#10;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;StaffMarkIndi += _smark;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;StaffMarkCountIndi++;&#10;&#9;&#9;&#9;&#9;&#9;&#9;} else {&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_smark = 0;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;StaffMarkIndi += _smark;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;StaffMarkCountIndi++;&#10;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#10;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;if (StaffMarkCountComp &gt; 0) &#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;StaffMarkComp = StaffMarkComp / StaffMarkCountComp;&#10;&#9;&#9;&#9;&#9;StaffMarkComp = Real(StrRealFixed(StaffMarkComp, 2));&#10;&#9;&#9;&#9;} else if (StaffMarkCountComp == 0)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;StaffMarkComp = 0;&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;else&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;StaffMarkComp = "";&#10;&#9;&#9;&#9;}&#10;&#10;&#9;&#9;&#9;if (_strStaffAll==null)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;_strStaffAll=(_strStaff!= null) ? _strStaff : '';&#10;&#9;&#9;&#9;&#9;StaffMarkComp=(StaffMarkComp!= 0) ? StaffMarkComp : 0;&#10;&#9;&#9;&#9;&#9;_strComp+=_strStaffAll+"&#10;&#9;&lt;td class=xl34_finall &gt;" + StaffMarkComp+ "&lt;/td&gt;";&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;if (StaffMarkCountIndi &gt; 0) &#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;StaffMarkIndi = StaffMarkIndi / StaffMarkCountIndi;&#10;&#9;&#9;&#9;&#9;StaffMarkIndi = Real(StrRealFixed(StaffMarkIndi, 2));&#10;&#9;&#9;&#9;} else if (StaffMarkCountIndi == 0)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;StaffMarkIndi = 0;&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;else&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;StaffMarkIndi = "";&#10;&#9;&#9;&#9;}&#10;&#10;&#9;&#9;&#9;&#9;_strIndi[_rowIndi]+="&#10;&#9;&lt;td class=xl34_finall RESULT&gt;" + StaffMarkIndi + " &lt;/td&gt;";&#10;&#10;&#9;&#9;// средняя оценка коллег&#10;&#9;&#9;&#9;CollMarkIndi = Real(0.0);&#10;&#9;&#9;&#9;CollMarkComp = Real(0.0);&#10;&#9;&#9;&#9;CollMarkCountIndi=0;&#10;&#9;&#9;&#9;CollMarkCountComp=0;&#10;&#9;&#9;&#9;for (_pa in PasColl)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;if (_pa != undefined) {&#10;&#9;&#9;&#9;&#9;&#9;Comp = OpenDoc(UrlFromDocID(_pa.id)).TopElem.competences.GetOptChildByKey(_comp.competence_id);&#10;&#9;&#9;&#9;&#9;&#9;_getMark=GetMarkFromCompetence(Comp, "mark");&#10;&#9;&#9;&#9;&#9;&#9;Indi = Comp.indicators.GetOptChildByKey(_indi.indicator_id);&#10;&#9;&#9;&#9;&#9;&#9;if (Comp != undefined) {&#10;&#9;&#9;&#9;&#9;&#9;&#9;_cmark = (_getMark) ? _getMark : GetMark(Comp, "indicators", OVERALL_MARK_FORMULA, "mark");&#10;&#9;&#9;&#9;&#9;&#9;&#9;if (_cmark != null)&#10;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;CollMarkComp += _cmark;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;CollMarkCountComp++;&#10;&#9;&#9;&#9;&#9;&#9;&#9;} else {&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_cmark = 0;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;CollMarkComp += _cmark;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;CollMarkCountComp++;&#10;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;_strColl+="&#10;&#9;&lt;td class=xl34_finall &gt;" + _cmark + "&lt;/td&gt;";&#10;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;if (Indi != undefined) {&#10;&#9;&#9;&#9;&#9;&#9;&#9;_cmark = GetMarkFromCompetence(Indi, "mark");&#10;&#10;&#9;&#9;&#9;&#9;&#9;&#9;if (_cmark == null)&#10;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_cmark = 0;&#10;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#10;&#9;&#9;&#9;&#9;&#9;&#9;_strIndi[_rowIndi]+="&#10;&#9;&lt;td class=xl32_finall &gt;" + _cmark + "&lt;/td&gt;";&#10;&#9;&#9;&#9;&#9;&#9;&#9;if (_cmark != null)&#10;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;CollMarkIndi += _cmark;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;CollMarkCountIndi++;&#10;&#9;&#9;&#9;&#9;&#9;&#9;} else {&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_cmark = 0;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;CollMarkIndi += _cmark;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;CollMarkCountIndi++;&#10;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;if (CollMarkCountComp &gt; 0)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;CollMarkComp = CollMarkComp / CollMarkCountComp;&#10;&#9;&#9;&#9;&#9;CollMarkComp = Real(StrRealFixed(CollMarkComp, 2));&#10;&#9;&#9;&#9;} else if (CollMarkCountComp == 0)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;CollMarkComp = 0;&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;else&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;CollMarkComp = "";&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;if (_strCollAll==null)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;_strCollAll=(_strColl!= null) ? _strColl : '';&#10;&#9;&#9;&#9;&#9;CollMarkComp=(CollMarkComp!= 0) ? CollMarkComp : 0;&#10;&#9;&#9;&#9;&#9;_strComp+=_strCollAll+"&#10;&#9;&lt;td class=xl34_finall &gt;" + CollMarkComp+ "&lt;/td&gt;";&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;if (CollMarkCountIndi &gt; 0)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;CollMarkIndi = CollMarkIndi / CollMarkCountIndi;&#10;&#9;&#9;&#9;&#9;CollMarkIndi = Real(StrRealFixed(CollMarkIndi, 2));&#10;&#9;&#9;&#9;} else if (CollMarkCountIndi == 0)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;CollMarkIndi = 0;&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;else&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;CollMarkIndi = "";&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;_strIndi[_rowIndi]+="&#10;&#9;&lt;td class=xl34_finall &gt;" + CollMarkIndi + "&lt;/td&gt;";&#10;&#10;&#9;&#9;&#9;// средняя оценка экспертов&#10;&#9;&#9;&#9;ExpertMarkIndi = Real(0.0);&#10;&#9;&#9;&#9;ExpertMarkComp=Real(0.0);&#10;&#9;&#9;&#9;ExpertMarkCountIndi=0;&#10;&#9;&#9;&#9;ExpertMarkCountComp=0;&#10;&#9;&#9;&#9;for (_pa in PasExpert)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;if (_pa != undefined) {&#10;&#9;&#9;&#9;&#9;&#9;Comp = OpenDoc(UrlFromDocID(_pa.id)).TopElem.competences.GetOptChildByKey(_comp.competence_id);&#10;&#9;&#9;&#9;&#9;&#9;_getMark=GetMarkFromCompetence(Comp, "mark");&#10;&#9;&#9;&#9;&#9;&#9;Indi = Comp.indicators.GetOptChildByKey(_indi.indicator_id);&#10;&#9;&#9;&#9;&#9;&#9;if (Comp != undefined) {&#10;&#9;&#9;&#9;&#9;&#9;&#9;_emark = (_getMark!=null) ? _getMark : GetMark(Comp, "indicators", OVERALL_MARK_FORMULA, "mark");&#9;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;&#9;if (_emark != null)&#10;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;ExpertMarkComp += _emark;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;ExpertMarkCountComp++;&#10;&#9;&#9;&#9;&#9;&#9;&#9;} else {&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_emark = 0;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;ExpertMarkComp += _emark;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;ExpertMarkCountComp++;&#10;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#10;&#9;&#9;&#9;&#9;&#9;&#9;_strExpert+="&#10;&#9;&lt;td class=xl34_finall &gt;" + _emark + "&lt;/td&gt;";&#10;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;if (Indi != undefined) {&#10;&#9;&#9;&#9;&#9;&#9;&#9;_emark = GetMarkFromCompetence(Indi, "mark");&#10;&#10;&#9;&#9;&#9;&#9;&#9;&#9;if(_emark == null)&#10;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_emark = 0;&#10;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;_strIndi[_rowIndi]+="&#10;&#9;&lt;td class=xl32_finall &gt;" + _emark + "&lt;/td&gt;";&#10;&#9;&#9;&#9;&#9;&#9;&#9;if (_emark != null)&#10;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;ExpertMarkIndi += _emark;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;ExpertMarkCountIndi++;&#10;&#9;&#9;&#9;&#9;&#9;&#9;} else {&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_emark = 0;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;ExpertMarkIndi += _emark;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;ExpertMarkCountIndi++;&#10;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#10;&#9;&#9;&#9;if (ExpertMarkCountComp &gt; 0)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;ExpertMarkComp = ExpertMarkComp / ExpertMarkCountComp;&#10;&#9;&#9;&#9;&#9;ExpertMarkComp = Real(StrRealFixed(ExpertMarkComp, 2));&#10;&#9;&#9;&#9;} else if (ExpertMarkCountComp == 0)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;ExpertMarkCom = 0;&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;else&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;ExpertMarkCom = "";&#10;&#9;&#9;&#9;}&#10;&#10;&#9;&#9;&#9;if (_strExpertAll==null)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;_strExpertAll=(_strExpert!= null) ? _strExpert : '';&#10;&#9;&#9;&#9;&#9;ExpertMarkComp=(ExpertMarkComp!= 0) ? ExpertMarkComp : 0;&#10;&#9;&#9;&#9;&#9;_strComp+=_strExpertAll+"&#10;&#9;&lt;td class=xl34_finall &gt;" + ExpertMarkComp+ "&lt;/td&gt;&#10;";&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;if (ExpertMarkCountIndi &gt; 0)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;ExpertMarkIndi = ExpertMarkIndi / ExpertMarkCountIndi;&#10;&#9;&#9;&#9;&#9;ExpertMarkIndi = Real(StrRealFixed(ExpertMarkIndi, 2));&#10;&#9;&#9;&#9;} else if (ExpertMarkCountIndi == 0)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;ExpertMarkIndi = 0;&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;else&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;ExpertMarkIndi = "";&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;_strIndi[_rowIndi]+="&#10;&#9;&lt;td class=xl34_finall &gt;" + ExpertMarkIndi + "&lt;/td&gt;&#10;";&#10;&#9;&#9;&#9;// плановая оценка индикатора&#10;&#9;&#9;&#9;PlanMarkIndi = GetMarkFromCompetence(_indi, "plan");&#9;&#9;&#9;&#10;&#9;&#9;&#9;PlanMarkIndi = (PlanMarkIndi!= null) ? PlanMarkIndi : 0;&#9;&#10;&#9;&#9;&#9;_strIndi[_rowIndi]+="&#10;&#9;&lt;td class=xl32_finall &gt;" + PlanMarkIndi + "&lt;/td&gt;&#10;&#9;&lt;/tr&gt;";&#10;&#9;&#9;_rowIndi++;&#10;&#9;&#9;}//for_indi&#10;&#9;&#9;// плановая оценка компетенции&#10;&#9;&#9;PlanMarkComp = GetMarkFromCompetence(_comp, "plan");&#9;&#9;&#9;&#10;&#9;&#9;PlanMarkComp = (PlanMarkComp!= null) ? PlanMarkComp : 0;&#10;&#9;&#9;_strComp +="&#10;&#9;&lt;td class=xl32_finall &gt;" + PlanMarkComp + "&lt;/td&gt;&#10;&#9;&lt;/tr&gt;";&#9;&#10;&#9;&#9;_str+=_strComp;&#10;&#9;&#9;for(i=0;i&lt;ArrayCount(_comp.indicators);i++)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;_str+=_strIndi[i];&#9;&#10;&#9;&#9;}&#10;&#10;&#9;&#9;}//for_comp&#10;&#9;&#9;_str+="&#10;&lt;/table&gt;&lt;/div&gt;";&#10;&#10;&#9;&#9;html_TEXT += _str;&#10;&#9;&#9;Session.excel_html += _str;&#10;&#9;} // for (_ass in AssessmentAppraises)&#10;&#10;%&gt;</code_text>
			</exec_code>
			<html>&lt;%&#10;// -----------------------------------------------------------------------------------------------------------------------------&#10;// автор:&#9;RH&#10;// создан:&#9;30.05.2010&#10;// изменен:&#9;&#10;// -------------------------------------------------Предупреждение--------------------------------------------------------------&#10;// используется шаблонами документов&#10;// &#9;&#9; rolf_competence_appraisal_common_report - Аналитические данные по оценке компетенций&#10;// ------------------------------------------------Параметры шаблона------------------------------------------------------------&#10;// &lt;нет&gt;&#10;// ----------------------------------------------Глобальные переменные----------------------------------------------------------&#10;// &lt;нет&gt;&#10;// ---------------------------------------------------Константы-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------&#10;// ******************ОСНОВНАЯ ОБЛАСТЬ*************************&#9;&#9;&#10;&#9;// выбранные процедуры оценки&#10;&#9;AssessmentAppraises = Trim( Request.Form.assessment_app_ids ).split(",");&#10;&#9;for (_ass_id in AssessmentAppraises)&#10;&#9;{&#10;&#9;&#9;RowNum = 0;&#10;&#10;&#9;&#9;_ass_name = OpenDoc(UrlFromDocID(Int(_ass_id))).TopElem.name;&#10;&#10;&#9;&#9;Plans = XQuery("for $obj in assessment_plans where $obj/assessment_appraise_id = " + _ass_id + &#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;" and $obj/person_id = " + Request.Form.coll_ids + " order by $obj/person_fullname return $obj");&#10;&#9;&#9;_plan = ArrayOptFirstElem(Plans);&#10;&#9;&#9;if (_plan == undefined)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;html_TEXT += "&lt;center&gt;&lt;font&gt;&lt;color='red'&gt;Отсутствует план оценки сотрудника для процедуры " + _ass_name + "&lt;/color&gt;&lt;/font&gt;&lt;center&gt;";&#10;&#9;&#9;&#9;continue;&#10;&#9;&#9;}&#10;&#9;&#9;// план оценки сотрудника&#10;&#9;&#9;try&#10;&#9;&#9;{&#10;&#9;&#9;&#9;plan_id = _plan.id;&#10;&#9;&#9;&#9;planDoc = OpenDoc(UrlFromDocID(plan_id)).TopElem;&#10;&#9;&#9;}&#10;&#9;&#9;catch(err)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;alert("ОШИБКА: невозможно получить карточку плана оценки сотрудника. " + err);&#10;&#9;&#9;&#9;continue;&#10;&#9;&#9;}&#10;&#10;&#9;&#9;// карточка оцениваемого сотрудника&#10;&#9;&#9;collDoc = OpenDoc(UrlFromDocID(planDoc.person_id)).TopElem;&#10;&#9;&#9;&#10;&#9;&#9;// процедура оценки&#10;&#9;&#9;AssessmentAppraise = OpenDoc(UrlFromDocID(planDoc.assessment_appraise_id)).TopElem;&#10;&#9;&#9;&#10;&#9;&#9;RowNum = 0;&#10;&#9;&#9;try&#10;&#9;&#9;{&#10;&#9;&#9;&#9;&#10;&#9;&#9;&#9;_pa = ArrayOptFirstElem(XQuery("for $obj in pas where $obj/assessment_appraise_id = " + planDoc.assessment_appraise_id + &#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;" and $obj/person_id = " + planDoc.person_id + " and $obj/assessment_appraise_type = 'competence_appraisal' return $obj"));&#10;&#9;&#9;&#9;if (_pa == undefined)&#10;&#9;&#9;&#9;&#9;throw 'No pa exists';&#10;&#9;&#9;&#9;_profile_id = OpenDoc(UrlFromDocID(_pa.id)).TopElem.competence_profile_id;&#10;&#9;&#9;&#9;Profile = OpenDoc(UrlFromDocID(Int(_profile_id))).TopElem;&#10;&#9;&#9;}&#10;&#9;&#9;catch(err)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;alert("ОШИБКА: Невозможно получить профиль компетенций. " + err);&#10;&#9;&#9;&#9;Profile = null;&#10;&#9;&#9;}&#10;&#9;&#9;&#10;//Отчет по результатам оценки&#10;&#10;&#9;&#9;_strComp="";&#10;&#9;&#9;_strIndi=Array();&#10;&#9;&#9;_coll="";&#10;&#9;&#9;_staff="";&#10;&#9;&#9;_expert="";&#10;&#9;&#9;PasManager = XQuery("for $obj in pas where $obj/assessment_appraise_id = " + planDoc.assessment_appraise_id + " and $obj/person_id = " + planDoc.person_id + " and $obj/assessment_appraise_type = 'competence_appraisal' and $obj/status = 'manager' return $obj");&#10;&#9;&#9;PasStaff = XQuery("for $obj in pas where $obj/assessment_appraise_id = " + planDoc.assessment_appraise_id + " and $obj/person_id = " + planDoc.person_id + " and $obj/assessment_appraise_type = 'competence_appraisal' and $obj/status = 'staff' return $obj");&#10;&#9;&#9;PasColl = XQuery("for $obj in pas where $obj/assessment_appraise_id = " + planDoc.assessment_appraise_id + " and $obj/person_id = " + planDoc.person_id + " and $obj/assessment_appraise_type = 'competence_appraisal' and $obj/status = 'coll' return $obj");&#10;&#9;&#9;PasExpert = XQuery("for $obj in pas where $obj/assessment_appraise_id = " + planDoc.assessment_appraise_id + " and $obj/person_id = " + planDoc.person_id + " and $obj/assessment_appraise_type = 'competence_appraisal' and $obj/status = 'expert' return $obj");&#10;&#9;&#9;_str = "&#10;&lt;br&gt;&#10;&lt;p align='left'&gt;&lt;b&gt;Отчет по результатам оценки(общая статистика)&lt;/b&gt;&lt;/p&gt;&#10;&lt;table x:str border=0 cellpadding=0 cellspacing=0 style='border-collapse:collapse'&gt;&#10;&#9;&lt;tr style='mso-height-source:userset;mso-yfti-irow:" + RowNum + "'&gt;" + "&#10;&#9;&lt;td class=xl35_finall width='100' &gt;&amp;nbsp&lt;/td&gt;&#10;&#9;&lt;td class=xl37 &gt;Выгружаемое значение&lt;/td&gt;&#10;&#9;&lt;td class=xl37 &gt;&amp;nbsp&lt;/td&gt;&#10;&#9;&lt;td class=xl36_finall  width='100'&gt;&amp;nbsp&lt;/td&gt;&#10;&#9;&lt;td class=xl37 &gt;Рассчитываемое значение&lt;/td&gt;&#10;&#9;&lt;/tr&gt;&#10;&lt;/table&gt;&#10;&lt;div&gt;&lt;/div&gt;&#10;&lt;div style='overflow: auto;'&gt;&#10;&lt;table x:str border=0 cellpadding=0 cellspacing=0 style='border-collapse:collapse'&gt;&#10;&#9;&lt;tr style='mso-height-source:userset;mso-yfti-irow:" + RowNum + "'&gt;" + "&#10;&#9;&lt;td class=xl37 &gt;&amp;nbsp&lt;/td&gt;&#10;&#9;&lt;/tr&gt;&#10;&#9;&lt;tr height=81 style='height:60.75pt;mso-yfti-firstrow:yes'&gt;&#10;&#9;&lt;td class=xl31&gt;Компетенция/индикатор&lt;/td&gt;&#10;&#9;&lt;td class=xl31&gt;Самооценка&lt;/td&gt;&#10;&#9;&lt;td class=xl31&gt;Руководитель("+ArrayOptFirstElem(PasManager).expert_person_fullname+")&lt;/td&gt;";&#10;&#9;&#9;i=1;&#10;&#9;&#9;for(_pas in PasStaff)&#10;&#9;&#9;{&#10;&#9;&#9;_staff+="&#10;&#9;&lt;td class=xl31&gt;Подчиненный"+i+"("+_pas.expert_person_fullname+")&lt;/td&gt;";&#10;&#9;&#9;i++;&#10;&#9;&#9;}&#10;&#9;&#9;_str+=_staff;&#10;&#9;&#9;_str+="&#10;&#9;&lt;td class=xl31&gt;Среднее по подчиненным&lt;/td&gt;";&#10;&#9;&#9;i=1;&#10;&#9;&#9;for(_pas in PasColl)&#10;&#9;&#9;{&#10;&#9;&#9;_coll+="&#10;&#9;&lt;td class=xl31&gt;Коллега"+i+"("+_pas.expert_person_fullname+")&lt;/td&gt;";&#10;&#9;&#9;i++;&#10;&#9;&#9;}&#10;&#9;&#9;_str+=_coll;&#10;&#9;&#9;_str+="&#10;&#9;&lt;td class=xl31&gt;Среднее по коллегам&lt;/td&gt;";&#10;&#9;&#9;i=1;&#10;&#9;&#9;for(_pas in PasExpert)&#10;&#9;&#9;{&#10;&#9;&#9;_expert+="&#10;&#9;&lt;td class=xl31&gt;Экперт"+i+"("+_pas.expert_person_fullname+")&lt;/td&gt;";&#10;&#9;&#9;i++;&#10;&#9;&#9;}&#10;&#9;&#9;_str+=_expert;&#10;&#9;&#9;_str+="&#10;&#9;&lt;td class=xl31&gt;Среднее по экспертам&lt;/td&gt;&#10;&#9;&lt;td class=xl31&gt;Стандарт по профилю&lt;/td&gt;&#10;&#9;&lt;/tr&gt;&#10;&#9;&lt;tr&gt;&#10;";&#10;&#9;&#9;// цикл по компетенциям&#10;&#9;&#9;for (_comp in Profile.competences)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;// компетенция&#10;&#9;&#9;&#9;CompetenceName = OpenDoc(UrlFromDocID(_comp.competence_id)).TopElem.name;&#10;&#9;&#9;&#9;_strComp="&#10; &lt;tr style='mso-height-source:userset;'&gt;&#10;  &lt;td class=xl30 style='font-weight: 600' &gt;" + CompetenceName + "&lt;/td&gt;";&#10;&#9;&#9;&#9;// индикаторы&#10;&#9;&#9;&#9;_strSelf=null;&#10;&#9;&#9;&#9;_strManager=null;&#10;&#9;&#9;&#9;_strColl=null;&#10;&#9;&#9;&#9;_strCollAll=null;&#10;&#9;&#9;&#9;_strStaff=null;&#10;&#9;&#9;&#9;_strStaffAll=null;&#10;&#9;&#9;&#9;_strExpert=null;&#10;&#9;&#9;&#9;_strExpertAll=null;&#10;&#9;&#9;&#9;_rowIndi=0;&#10;&#9;&#9;// цикл по индикаторам&#10;&#9;&#9;for (_indi in _comp.indicators)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;IndiName = OpenDoc(UrlFromDocID(_indi.indicator_id)).TopElem.name;&#10;&#9;&#9;&#9;_strIndi[_rowIndi]="&#10; &lt;tr style='mso-height-source:userset;'&gt;&#10;  &lt;td class=xl33_finall &gt; - " + IndiName + "&lt;/td&gt;";&#10;&#10;&#9;&#9;// самооценка&#10;&#9;&#9;&#9;SelfMarkComp = null;&#10;&#9;&#9;&#9;SelfMarkIndi = null;&#10;&#9;&#9;&#9;Pas = XQuery("for $obj in pas where $obj/assessment_appraise_id = " + planDoc.assessment_appraise_id + " and $obj/person_id = " + planDoc.person_id + " and $obj/assessment_appraise_type = 'competence_appraisal' and $obj/status = 'self' return $obj");&#10;&#9;&#9;&#9;_pa = ArrayOptFirstElem(Pas);&#10;&#9;&#9;&#9;if (_pa != undefined)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;Comp =OpenDoc(UrlFromDocID(_pa.id)).TopElem.competences.GetOptChildByKey(_comp.competence_id);&#10;&#9;&#9;&#9;&#9;_getMark=GetMarkFromCompetence(Comp, "mark");&#10;&#9;&#9;&#9;&#9;Indi = Comp.indicators.GetOptChildByKey(_indi.indicator_id);&#10;&#9;&#9;&#9;&#9;if (Comp!= undefined) {&#10;&#9;&#9;&#9;&#9;&#9;SelfMarkComp = (_getMark!=null) ? _getMark : GetMark(Comp, "indicators", OVERALL_MARK_FORMULA, "mark");&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;if (Indi!= undefined) {&#10;&#9;&#9;&#9;&#9;&#9;SelfMarkIndi = GetMarkFromCompetence(Indi, "mark");&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;if (SelfMarkComp!=null)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;SelfMarkComp = Real(StrRealFixed(SelfMarkComp, 2));&#10;&#9;&#9;&#9;}&#9;&#10;&#9;&#9;&#9;else&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;SelfMarkComp="";&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;if (SelfMarkIndi!= null)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;SelfMarkIndi = Real(StrRealFixed(SelfMarkIndi, 2));&#10;&#9;&#9;&#9;}&#9;&#10;&#9;&#9;&#9;else&#10;&#9;&#9;&#9;&#9;SelfMarkIndi = "";&#10;&#10;&#9;&#9;&#9;if(_strSelf==null)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;_strSelf="&#10;&#9;&lt;td class=xl34_finall &gt;" + SelfMarkComp + "&lt;/td&gt;";&#10;&#9;&#9;&#9;_strComp+=_strSelf&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#10;&#9;&#9;&#9;_strIndi[_rowIndi]+="&#10;&#9;&lt;td class=xl32_finall &gt;" + SelfMarkIndi + "&lt;/td&gt;";&#10;&#10;&#9;&#9;// средняя оценка руководителя&#10;&#9;&#9;&#9;ManagerMarkIndi = Real(0.0);&#10;&#9;&#9;&#9;ManagerMarkComp= Real(0.0);&#10;&#9;&#9;&#9;ManagerMarkCountIndi=0;&#10;&#9;&#9;&#9;ManagerMarkCountComp=0;&#10;&#9;&#9;&#9;for (_pa in PasManager)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;if (_pa != undefined)&#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;Comp =OpenDoc(UrlFromDocID(_pa.id)).TopElem.competences.GetOptChildByKey(_comp.competence_id);&#10;&#9;&#9;&#9;&#9;&#9;_getMark=GetMarkFromCompetence(Comp, "mark");&#10;&#9;&#9;&#9;&#9;&#9;Indi = Comp.indicators.GetOptChildByKey(_indi.indicator_id);&#10;&#9;&#9;&#9;&#9;&#9;if (Comp != undefined) {&#10;&#9;&#9;&#9;&#9;&#9;&#9;_mmark = (_getMark!=null) ? _getMark : GetMark(Comp, "indicators", OVERALL_MARK_FORMULA, "mark");&#10;&#9;&#9;&#9;&#9;&#9;&#9;if (_mmark != null)&#10;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;ManagerMarkComp += _mmark;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;ManagerMarkCountComp++;&#10;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;if (Indi != undefined) {&#10;&#9;&#9;&#9;&#9;&#9;&#9;_mmark = GetMarkFromCompetence(Indi, "mark");&#10;&#9;&#9;&#9;&#9;&#9;&#9;if (_mmark != null)&#10;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;ManagerMarkIndi += _mmark;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;ManagerMarkCountIndi++;&#10;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;if (ManagerMarkCountComp &gt; 0)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;ManagerMarkComp = ManagerMarkComp / ManagerMarkCountComp;&#10;&#9;&#9;&#9;&#9;ManagerMarkComp = Real(StrRealFixed(ManagerMarkComp, 2));&#10;&#9;&#9;&#9;} else if(ManagerMarkCountComp == 0){&#10;&#9;&#9;&#9;&#9;ManagerMarkComp = 0;&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;else&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;ManagerMarkComp="";&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#10;&#9;&#9;&#9;if (ManagerMarkCountIndi &gt; 0)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;ManagerMarkIndi = ManagerMarkIndi / ManagerMarkCountIndi;&#10;&#9;&#9;&#9;&#9;ManagerMarkIndi = Real(StrRealFixed(ManagerMarkIndi, 2));&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;else if (ManagerMarkCountIndi == 0)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;ManagerMarkIndi = 0;&#10;&#9;&#9;&#9;} else {&#10;&#9;&#9;&#9;&#9;ManagerMarkIndi = "";&#10;&#9;&#9;&#9;}&#10;&#10;&#9;&#9;&#9;if(_strManager==null)&#10;&#9;&#9;&#9;{&#10;&#10;&#9;&#9;&#9;_strManager="&#10;&#9;&lt;td class=xl34_finall &gt;" + ManagerMarkComp + "&lt;/td&gt;";&#10;&#9;&#9;&#9;_strComp+=_strManager;&#10;&#9;&#9;&#9;}&#10;&#9;&#9;_strIndi[_rowIndi]+="&#10;&#9;&lt;td class=xl32_finall &gt;" + ManagerMarkIndi + "&lt;/td&gt;";&#10;&#10;&#9;&#9;&#9;// средняя оценка подчиненных&#10;&#9;&#9;&#9;StaffMarkIndi = Real(0.0);&#10;&#9;&#9;&#9;StaffMarkComp = Real(0.0);&#10;&#9;&#9;&#9;StaffMarkCountIndi = 0;&#10;&#9;&#9;&#9;StaffMarkCountComp = 0;&#10;&#9;&#9;&#9;for (_pa in PasStaff)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;if (_pa != undefined) {&#10;&#9;&#9;&#9;&#9;&#9;Comp = OpenDoc(UrlFromDocID(_pa.id)).TopElem.competences.GetOptChildByKey(_comp.competence_id);&#10;&#9;&#9;&#9;&#9;&#9;_getMark=GetMarkFromCompetence(Comp, "mark");&#10;&#9;&#9;&#9;&#9;&#9;Indi = Comp.indicators.GetOptChildByKey(_indi.indicator_id);&#10;&#9;&#9;&#9;&#9;&#9;if (Comp != undefined) {&#10;&#9;&#9;&#9;&#9;&#9;&#9;_smark = (_getMark!=null) ? _getMark : GetMark(Comp, "indicators", OVERALL_MARK_FORMULA, "mark");&#10;&#9;&#9;&#9;&#9;&#9;&#9;if (_smark != null)&#10;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;StaffMarkComp += _smark;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;StaffMarkCountComp++;&#10;&#9;&#9;&#9;&#9;&#9;&#9;} else {&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_smark = 0;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;StaffMarkComp += _smark;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;StaffMarkCountComp++;&#10;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#10;&#9;&#9;&#9;&#9;&#9;&#9;_strStaff+="&#10;&#9;&lt;td class=xl34_finall &gt;" + _smark + "&lt;/td&gt;";&#10;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;if (Indi != undefined) {&#10;&#9;&#9;&#9;&#9;&#9;&#9;_smark = GetMarkFromCompetence(Indi, "mark");&#10;&#10;&#9;&#9;&#9;&#9;&#9;&#9;if(_smark == null)&#10;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_smark = 0;&#10;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;_strIndi[_rowIndi]+="&#10;&#9;&lt;td class=xl32_finall DEVELOPER&gt;" + _smark + "&lt;/td&gt;";&#10;&#9;&#9;&#9;&#9;&#9;&#9;if (_smark != null)&#10;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;StaffMarkIndi += _smark;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;StaffMarkCountIndi++;&#10;&#9;&#9;&#9;&#9;&#9;&#9;} else {&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_smark = 0;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;StaffMarkIndi += _smark;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;StaffMarkCountIndi++;&#10;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#10;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;if (StaffMarkCountComp &gt; 0) &#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;StaffMarkComp = StaffMarkComp / StaffMarkCountComp;&#10;&#9;&#9;&#9;&#9;StaffMarkComp = Real(StrRealFixed(StaffMarkComp, 2));&#10;&#9;&#9;&#9;} else if (StaffMarkCountComp == 0)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;StaffMarkComp = 0;&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;else&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;StaffMarkComp = "";&#10;&#9;&#9;&#9;}&#10;&#10;&#9;&#9;&#9;if (_strStaffAll==null)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;_strStaffAll=(_strStaff!= null) ? _strStaff : '';&#10;&#9;&#9;&#9;&#9;StaffMarkComp=(StaffMarkComp!= 0) ? StaffMarkComp : 0;&#10;&#9;&#9;&#9;&#9;_strComp+=_strStaffAll+"&#10;&#9;&lt;td class=xl34_finall &gt;" + StaffMarkComp+ "&lt;/td&gt;";&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;if (StaffMarkCountIndi &gt; 0) &#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;StaffMarkIndi = StaffMarkIndi / StaffMarkCountIndi;&#10;&#9;&#9;&#9;&#9;StaffMarkIndi = Real(StrRealFixed(StaffMarkIndi, 2));&#10;&#9;&#9;&#9;} else if (StaffMarkCountIndi == 0)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;StaffMarkIndi = 0;&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;else&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;StaffMarkIndi = "";&#10;&#9;&#9;&#9;}&#10;&#10;&#9;&#9;&#9;&#9;_strIndi[_rowIndi]+="&#10;&#9;&lt;td class=xl34_finall RESULT&gt;" + StaffMarkIndi + " &lt;/td&gt;";&#10;&#10;&#9;&#9;// средняя оценка коллег&#10;&#9;&#9;&#9;CollMarkIndi = Real(0.0);&#10;&#9;&#9;&#9;CollMarkComp = Real(0.0);&#10;&#9;&#9;&#9;CollMarkCountIndi=0;&#10;&#9;&#9;&#9;CollMarkCountComp=0;&#10;&#9;&#9;&#9;for (_pa in PasColl)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;if (_pa != undefined) {&#10;&#9;&#9;&#9;&#9;&#9;Comp = OpenDoc(UrlFromDocID(_pa.id)).TopElem.competences.GetOptChildByKey(_comp.competence_id);&#10;&#9;&#9;&#9;&#9;&#9;_getMark=GetMarkFromCompetence(Comp, "mark");&#10;&#9;&#9;&#9;&#9;&#9;Indi = Comp.indicators.GetOptChildByKey(_indi.indicator_id);&#10;&#9;&#9;&#9;&#9;&#9;if (Comp != undefined) {&#10;&#9;&#9;&#9;&#9;&#9;&#9;_cmark = (_getMark) ? _getMark : GetMark(Comp, "indicators", OVERALL_MARK_FORMULA, "mark");&#10;&#9;&#9;&#9;&#9;&#9;&#9;if (_cmark != null)&#10;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;CollMarkComp += _cmark;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;CollMarkCountComp++;&#10;&#9;&#9;&#9;&#9;&#9;&#9;} else {&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_cmark = 0;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;CollMarkComp += _cmark;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;CollMarkCountComp++;&#10;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;_strColl+="&#10;&#9;&lt;td class=xl34_finall &gt;" + _cmark + "&lt;/td&gt;";&#10;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;if (Indi != undefined) {&#10;&#9;&#9;&#9;&#9;&#9;&#9;_cmark = GetMarkFromCompetence(Indi, "mark");&#10;&#10;&#9;&#9;&#9;&#9;&#9;&#9;if (_cmark == null)&#10;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_cmark = 0;&#10;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#10;&#9;&#9;&#9;&#9;&#9;&#9;_strIndi[_rowIndi]+="&#10;&#9;&lt;td class=xl32_finall &gt;" + _cmark + "&lt;/td&gt;";&#10;&#9;&#9;&#9;&#9;&#9;&#9;if (_cmark != null)&#10;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;CollMarkIndi += _cmark;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;CollMarkCountIndi++;&#10;&#9;&#9;&#9;&#9;&#9;&#9;} else {&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_cmark = 0;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;CollMarkIndi += _cmark;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;CollMarkCountIndi++;&#10;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;if (CollMarkCountComp &gt; 0)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;CollMarkComp = CollMarkComp / CollMarkCountComp;&#10;&#9;&#9;&#9;&#9;CollMarkComp = Real(StrRealFixed(CollMarkComp, 2));&#10;&#9;&#9;&#9;} else if (CollMarkCountComp == 0)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;CollMarkComp = 0;&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;else&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;CollMarkComp = "";&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;if (_strCollAll==null)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;_strCollAll=(_strColl!= null) ? _strColl : '';&#10;&#9;&#9;&#9;&#9;CollMarkComp=(CollMarkComp!= 0) ? CollMarkComp : 0;&#10;&#9;&#9;&#9;&#9;_strComp+=_strCollAll+"&#10;&#9;&lt;td class=xl34_finall &gt;" + CollMarkComp+ "&lt;/td&gt;";&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;if (CollMarkCountIndi &gt; 0)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;CollMarkIndi = CollMarkIndi / CollMarkCountIndi;&#10;&#9;&#9;&#9;&#9;CollMarkIndi = Real(StrRealFixed(CollMarkIndi, 2));&#10;&#9;&#9;&#9;} else if (CollMarkCountIndi == 0)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;CollMarkIndi = 0;&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;else&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;CollMarkIndi = "";&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;_strIndi[_rowIndi]+="&#10;&#9;&lt;td class=xl34_finall &gt;" + CollMarkIndi + "&lt;/td&gt;";&#10;&#10;&#9;&#9;&#9;// средняя оценка экспертов&#10;&#9;&#9;&#9;ExpertMarkIndi = Real(0.0);&#10;&#9;&#9;&#9;ExpertMarkComp=Real(0.0);&#10;&#9;&#9;&#9;ExpertMarkCountIndi=0;&#10;&#9;&#9;&#9;ExpertMarkCountComp=0;&#10;&#9;&#9;&#9;for (_pa in PasExpert)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;if (_pa != undefined) {&#10;&#9;&#9;&#9;&#9;&#9;Comp = OpenDoc(UrlFromDocID(_pa.id)).TopElem.competences.GetOptChildByKey(_comp.competence_id);&#10;&#9;&#9;&#9;&#9;&#9;_getMark=GetMarkFromCompetence(Comp, "mark");&#10;&#9;&#9;&#9;&#9;&#9;Indi = Comp.indicators.GetOptChildByKey(_indi.indicator_id);&#10;&#9;&#9;&#9;&#9;&#9;if (Comp != undefined) {&#10;&#9;&#9;&#9;&#9;&#9;&#9;_emark = (_getMark!=null) ? _getMark : GetMark(Comp, "indicators", OVERALL_MARK_FORMULA, "mark");&#9;&#9;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;&#9;if (_emark != null)&#10;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;ExpertMarkComp += _emark;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;ExpertMarkCountComp++;&#10;&#9;&#9;&#9;&#9;&#9;&#9;} else {&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_emark = 0;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;ExpertMarkComp += _emark;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;ExpertMarkCountComp++;&#10;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#10;&#9;&#9;&#9;&#9;&#9;&#9;_strExpert+="&#10;&#9;&lt;td class=xl34_finall &gt;" + _emark + "&lt;/td&gt;";&#10;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;if (Indi != undefined) {&#10;&#9;&#9;&#9;&#9;&#9;&#9;_emark = GetMarkFromCompetence(Indi, "mark");&#10;&#10;&#9;&#9;&#9;&#9;&#9;&#9;if(_emark == null)&#10;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_emark = 0;&#10;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;_strIndi[_rowIndi]+="&#10;&#9;&lt;td class=xl32_finall &gt;" + _emark + "&lt;/td&gt;";&#10;&#9;&#9;&#9;&#9;&#9;&#9;if (_emark != null)&#10;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;ExpertMarkIndi += _emark;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;ExpertMarkCountIndi++;&#10;&#9;&#9;&#9;&#9;&#9;&#9;} else {&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_emark = 0;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;ExpertMarkIndi += _emark;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;ExpertMarkCountIndi++;&#10;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#10;&#9;&#9;&#9;if (ExpertMarkCountComp &gt; 0)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;ExpertMarkComp = ExpertMarkComp / ExpertMarkCountComp;&#10;&#9;&#9;&#9;&#9;ExpertMarkComp = Real(StrRealFixed(ExpertMarkComp, 2));&#10;&#9;&#9;&#9;} else if (ExpertMarkCountComp == 0)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;ExpertMarkCom = 0;&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;else&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;ExpertMarkCom = "";&#10;&#9;&#9;&#9;}&#10;&#10;&#9;&#9;&#9;if (_strExpertAll==null)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;_strExpertAll=(_strExpert!= null) ? _strExpert : '';&#10;&#9;&#9;&#9;&#9;ExpertMarkComp=(ExpertMarkComp!= 0) ? ExpertMarkComp : 0;&#10;&#9;&#9;&#9;&#9;_strComp+=_strExpertAll+"&#10;&#9;&lt;td class=xl34_finall &gt;" + ExpertMarkComp+ "&lt;/td&gt;&#10;";&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;if (ExpertMarkCountIndi &gt; 0)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;ExpertMarkIndi = ExpertMarkIndi / ExpertMarkCountIndi;&#10;&#9;&#9;&#9;&#9;ExpertMarkIndi = Real(StrRealFixed(ExpertMarkIndi, 2));&#10;&#9;&#9;&#9;} else if (ExpertMarkCountIndi == 0)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;ExpertMarkIndi = 0;&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;else&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;ExpertMarkIndi = "";&#10;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;_strIndi[_rowIndi]+="&#10;&#9;&lt;td class=xl34_finall &gt;" + ExpertMarkIndi + "&lt;/td&gt;&#10;";&#10;&#9;&#9;&#9;// плановая оценка индикатора&#10;&#9;&#9;&#9;PlanMarkIndi = GetMarkFromCompetence(_indi, "plan");&#9;&#9;&#9;&#10;&#9;&#9;&#9;PlanMarkIndi = (PlanMarkIndi!= null) ? PlanMarkIndi : 0;&#9;&#10;&#9;&#9;&#9;_strIndi[_rowIndi]+="&#10;&#9;&lt;td class=xl32_finall &gt;" + PlanMarkIndi + "&lt;/td&gt;&#10;&#9;&lt;/tr&gt;";&#10;&#9;&#9;_rowIndi++;&#10;&#9;&#9;}//for_indi&#10;&#9;&#9;// плановая оценка компетенции&#10;&#9;&#9;PlanMarkComp = GetMarkFromCompetence(_comp, "plan");&#9;&#9;&#9;&#10;&#9;&#9;PlanMarkComp = (PlanMarkComp!= null) ? PlanMarkComp : 0;&#10;&#9;&#9;_strComp +="&#10;&#9;&lt;td class=xl32_finall &gt;" + PlanMarkComp + "&lt;/td&gt;&#10;&#9;&lt;/tr&gt;";&#9;&#10;&#9;&#9;_str+=_strComp;&#10;&#9;&#9;for(i=0;i&lt;ArrayCount(_comp.indicators);i++)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;_str+=_strIndi[i];&#9;&#10;&#9;&#9;}&#10;&#10;&#9;&#9;}//for_comp&#10;&#9;&#9;_str+="&#10;&lt;/table&gt;&lt;/div&gt;";&#10;&#10;&#9;&#9;html_TEXT += _str;&#10;&#9;&#9;Session.excel_html += _str;&#10;&#9;} // for (_ass in AssessmentAppraises)&#10;&#10;%&gt;</html>
			<use_session_cache>false</use_session_cache>
			<cwt_type>default</cwt_type>
			<out_type>undefined</out_type>
			<access>
				<access_level>0</access_level>
			</access>
			<doc_info>
				<creation>
					<user_login>user1</user_login>
					<date>2010-06-02T23:03:49Z</date>
				</creation>
				<modification>
					<user_login>admin</user_login>
					<user_id>6148914691236517121</user_id>
					<date>2021-06-28T13:27:14Z</date>
				</modification>
			</doc_info>
			<is_std>false</is_std>
			<changed>false</changed>
			<is_enabled>true</is_enabled>
		</custom_web_template>
		<custom_web_template>
			<id>0x4BFE5FD8431C298A</id>
			<code>rolf_indicator_common_report</code>
			<name>Отчет по результатам обратной связи 360 градусов - Аналитика по индикаторам</name>
			<category>websoft</category>
			<exec_code>
				<code_text>&lt;%&#10;// -----------------------------------------------------------------------------------------------------------------------------&#10;// автор:&#9;RH&#10;// создан:&#9;30.05.2010&#10;// изменен:&#9;&#10;// -------------------------------------------------Предупреждение--------------------------------------------------------------&#10;// используется шаблонами документов&#10;// &#9;&#9; rolf_competence_appraisal_common_report - Аналитические данные по оценке компетенций&#10;// ------------------------------------------------Параметры шаблона------------------------------------------------------------&#10;// &lt;нет&gt;&#10;// ----------------------------------------------Глобальные переменные----------------------------------------------------------&#10;// &lt;нет&gt;&#10;// ---------------------------------------------------Константы-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------&#10;&#10;// ******************ОСНОВНАЯ ОБЛАСТЬ*************************&#9;&#10;&#9;// выбранные процедуры оценки&#10;&#9;AssessmentAppraises = Trim( Request.Form.assessment_app_ids ).split(",");&#10;&#9;for (_ass_id in AssessmentAppraises)&#10;&#9;{&#10;&#9;&#9;RowNum = 0;&#10;&#10;&#9;&#9;_ass_name = OpenDoc(UrlFromDocID(Int(_ass_id))).TopElem.name;&#10;&#10;&#10;&#9;&#9;Plans = XQuery("for $obj in assessment_plans where $obj/assessment_appraise_id = " + _ass_id + &#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;" and $obj/person_id = " + Request.Form.coll_ids + " order by $obj/person_fullname return $obj");&#10;&#9;&#9;_plan = ArrayOptFirstElem(Plans);&#10;&#9;&#9;if (_plan == undefined)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;html_TEXT += "&lt;center&gt;&lt;font&gt;&lt;color='red'&gt;Отсутствует план оценки сотрудника для процедуры " + _ass_name + "&lt;/color&gt;&lt;/font&gt;&lt;center&gt;";&#10;&#9;&#9;&#9;continue;&#10;&#9;&#9;}&#10;&#9;&#9;// план оценки сотрудника&#10;&#9;&#9;try&#10;&#9;&#9;{&#10;&#9;&#9;&#9;plan_id = _plan.id;&#10;&#9;&#9;&#9;planDoc = OpenDoc(UrlFromDocID(plan_id)).TopElem;&#10;&#9;&#9;}&#10;&#9;&#9;catch(err)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;alert("ОШИБКА: невозможно получить карточку плана оценки сотрудника. " + err);&#10;&#9;&#9;&#9;continue;&#10;&#9;&#9;}&#10;&#10;&#9;&#9;// карточка оцениваемого сотрудника&#10;&#9;&#9;collDoc = OpenDoc(UrlFromDocID(planDoc.person_id)).TopElem;&#10;&#9;&#9;&#10;&#9;&#9;// процедура оценки&#10;&#9;&#9;AssessmentAppraise = OpenDoc(UrlFromDocID(planDoc.assessment_appraise_id)).TopElem;&#10;&#9;&#9;&#10;&#9;&#9;RowNum = 0;&#10;&#9;&#9;try&#10;&#9;&#9;{&#10;&#9;&#9;&#9;&#10;&#9;&#9;&#9;_pa = ArrayOptFirstElem(XQuery("for $obj in pas where $obj/assessment_appraise_id = " + planDoc.assessment_appraise_id + &#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;" and $obj/person_id = " + planDoc.person_id + " and $obj/assessment_appraise_type = 'competence_appraisal' return $obj"));&#10;&#9;&#9;&#9;if (_pa == undefined)&#10;&#9;&#9;&#9;&#9;throw 'No pa exists';&#10;&#9;&#9;&#9;_profile_id = OpenDoc(UrlFromDocID(_pa.id)).TopElem.competence_profile_id;&#10;&#9;&#9;&#9;Profile = OpenDoc(UrlFromDocID(Int(_profile_id))).TopElem;&#10;&#9;&#9;}&#10;&#9;&#9;catch(err)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;alert("ОШИБКА: Невозможно получить профиль компетенций. " + err);&#10;&#9;&#9;&#9;Profile = null;&#10;&#9;&#9;}&#10;&#9;&#9;&#10;//Аналитика по индикаторам&#10;&#9;&#9;_str="";&#10;&#9;&#9;_str_up="";&#10;&#9;&#9;_str_middle="";&#10;&#9;&#9;_str_up = "&#10;&lt;br&gt;&#10;&lt;p align='left'&gt;&lt;b&gt;Аналитические данные оценок по индикаторам&lt;/b&gt;&lt;/p&gt;&#10;&lt;table x:str border=0 cellpadding=0 cellspacing=0 style='border-collapse:collapse'&gt;&#10;&#9;&lt;tr style='mso-height-source:userset;mso-yfti-irow:" + RowNum + "'&gt;" + "&#10;&#9;&lt;td class=xl35_indi width='100'&gt;&amp;nbsp&lt;/td&gt;&#10;&#9;&lt;td class=xl37 &gt;Самооценка&lt;/td&gt;&#10;&#9;&lt;td class=xl37 &gt;&amp;nbsp&lt;/td&gt;&#10;&#9;&lt;td class=xl36_indi width='100'&gt;&amp;nbsp&lt;/td&gt;&#10;&#9;&lt;td class=xl37 &gt;Руководитель&lt;/td&gt;&#10;&#9;&lt;/tr&gt;&#10;&lt;/table&gt;&#10;&lt;br&gt;&#10;&lt;table x:str border=0 cellpadding=0 cellspacing=0 style='border-collapse:collapse'&gt;&#10;&#9;&lt;tr style='mso-height-source:userset;mso-yfti-irow:" + RowNum + "'&gt;" + "&#10;&#9;&lt;td class=xl37 &gt;&amp;nbsp&lt;/td&gt;&#10;&#9;&lt;/tr&gt;&#10;&#9;&lt;tr height=81 style='height:60.75pt;mso-yfti-firstrow:yes'&gt;&#10;&#9;&lt;td class=xl31 rowspan='3'&gt;Компетенция&lt;/td&gt;&#10;&#9;&lt;td class=xl31 rowspan='3'&gt;Индикатор&lt;/td&gt;&#10;&#9;&lt;td class=xl31 colspan='"+ArrayCount(OpenDoc(UrlFromDocID(ArrayFirstElem(Profile.competences).competence_id)).TopElem.scales)+"'&gt;Шкала оценок&lt;/td&gt;&#10;&#9;&lt;/tr&gt;&#10;&#9;&lt;tr&gt;";&#10;//alert("sc = " + ArrayFirstElem(Profile.competences).competence_id);&#10;&#9;&#9;for(_scale in OpenDoc(UrlFromDocID(ArrayFirstElem(Profile.competences).competence_id)).TopElem.scales) &#10;&#9;&#9;{&#10;&#9;&#9;&#9;_str_up+="&#10;&#9;&#9;&lt;td  class=xl31&gt;"+_scale.name+"&lt;/td&gt;";&#10;&#9;&#9;}&#10;&#9;&#9;_str_up+="&lt;/tr&gt;";&#10;&#9;&#9;for(_scale in OpenDoc(UrlFromDocID(ArrayFirstElem(Profile.competences).competence_id)).TopElem.scales) &#10;&#9;&#9;{&#10;&#9;&#9;&#9;_str_up+="&#10;&#9;&#9;&lt;td  class=xl31&gt;"+_scale.desc+"&lt;/td&gt;";&#10;&#9;&#9;}//for_scale&#10;&#10;&#10;&#9;&#9;// цикл по компетенциям&#10;&#9;&#9;for (_comp in Profile.competences)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;// компетенция&#10;&#9;&#9;&#9;CompetenceName = OpenDoc(UrlFromDocID(_comp.competence_id)).TopElem.name;&#10;&#9;&#9;&#9;// индикаторы&#10;&#9;&#9;&#9;for (_indi in _comp.indicators)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;IndiName = OpenDoc(UrlFromDocID(_indi.indicator_id)).TopElem.name;&#10;&#9;&#9;&#9;&#9;_str_middle+="&#10;&#9;&lt;tr style='mso-height-source:userset;'&gt;&#10;&#9;&lt;td class=xl30&gt;"+CompetenceName+"&lt;/td&gt;&#10;&#9;&lt;td class=xl30&gt;"+IndiName+"&lt;/td&gt;";&#10;&#10;&#10;&#9;&#9;&#9;&#9;// самооценка&#10;&#9;&#9;&#9;&#9;SelfMark = null;&#10;&#9;&#9;&#9;&#9;Pas = XQuery("for $obj in pas where $obj/assessment_appraise_id = " + planDoc.assessment_appraise_id + " and $obj/person_id = " + planDoc.person_id + " and $obj/assessment_appraise_type = 'competence_appraisal' and $obj/status = 'self' return $obj");&#10;&#9;&#9;&#9;&#9;_pa = ArrayOptFirstElem(Pas);&#10;&#9;&#9;&#9;&#9;if (_pa != undefined)&#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;Indi = OpenDoc(UrlFromDocID(_pa.id)).TopElem.competences.GetOptChildByKey(_comp.competence_id).indicators.GetOptChildByKey(_indi.indicator_id);&#10;&#9;&#9;&#9;&#9;&#9;if (Indi!= undefined) {&#10;&#9;&#9;&#9;&#9;&#9;&#9;SelfMark = GetScaleFromCompetence(Indi, "mark");&#10;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;if (SelfMark!= null)&#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;SelfMark = Real(StrRealFixed(SelfMark, 2));&#10;&#9;&#9;&#9;&#9;}&#9;&#10;&#9;&#9;&#9;&#9;else&#10;&#9;&#9;&#9;&#9;&#9;SelfMark = "";&#10;&#10;&#9;&#9;&#9;// средняя оценка руководителя&#10;&#9;&#9;&#9;&#9;ManagerMark = Real(0.0);&#10;&#9;&#9;&#9;&#9;ManagerMarkCount = 0;&#10;&#9;&#9;&#9;&#9;Pas = XQuery("for $obj in pas where $obj/assessment_appraise_id = " + planDoc.assessment_appraise_id + " and $obj/person_id = " + planDoc.person_id + " and $obj/assessment_appraise_type = 'competence_appraisal' and $obj/status = 'manager' return $obj");&#10;&#9;&#9;&#9;&#9;for (_pa in Pas)&#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;if (_pa != undefined)&#10;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;Indi = OpenDoc(UrlFromDocID(_pa.id)).TopElem.competences.GetOptChildByKey(_comp.competence_id).indicators.GetOptChildByKey(_indi.indicator_id);&#10;&#9;&#9;&#9;&#9;&#9;&#9;if (Indi != undefined) {&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_mmark = GetScaleFromCompetence(Indi, "mark");&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if (_mmark != null)&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;ManagerMark += _mmark;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;ManagerMarkCount++;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;if (ManagerMarkCount &gt; 0)&#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;ManagerMark = ManagerMark / ManagerMarkCount;&#10;&#9;&#9;&#9;&#9;&#9;ManagerMark = Real(StrRealFixed(ManagerMark, 2));&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;else&#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;ManagerMark = "";&#10;&#9;&#9;&#9;&#9;}&#10;&#10;&#10;&#9;&#9;&#9;&#9;for(_scale in OpenDoc(UrlFromDocID(ArrayFirstElem(Profile.competences).competence_id)).TopElem.scales) &#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;_SelfManager=(SelfMark==ManagerMark &amp;&amp; SelfMark==Real(_scale.name)) ? '&lt;font color=/"green/"&gt;Самооценка&lt;/font&gt;+&lt;font color=/"#0000ff/"&gt;Руководитель&lt;/font&gt;' : ((SelfMark==Real(_scale.name)) ? '&lt;font color=/"green/"&gt;Самоооценка&lt;/font&gt;' :((ManagerMark==Real(_scale.name)) ? '&lt;font color=/"#0000ff/"&gt;Руководитель&lt;/font&gt;' : '') );&#10;&#9;&#9;&#9;&#9;&#9;_str_middle+="&#10;&#9;&#9;&lt;td class=xl34&gt;"+_SelfManager+"&lt;/td&gt;";&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;_str_middle+="&#10;&#9;&lt;/tr&gt;&#10;&#9;&lt;tr style='mso-height-source:userset;'&gt;&#10;&#9;&lt;td class=xl30&gt;&lt;/td&gt;&#10;&#9;&lt;td class=xl30&gt;&lt;/td&gt;";&#10;&#9;&#9;&#9;&#9;for(_scale in OpenDoc(UrlFromDocID(ArrayFirstElem(Profile.competences).competence_id)).TopElem.scales) &#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;Count = 0;&#10;&#9;&#9;&#9;&#9;&#9;CollMarkCount=0;&#10;&#9;&#9;&#9;&#9;&#9;StaffMarkCount=0;&#10;&#9;&#9;&#9;&#9;&#9;ExpertMarkCount=0;&#10;&#9;&#9;&#9;&#9;&#9;_sc_name=_scale.name; &#10;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;// средняя оценка коллег&#10;&#10;&#9;&#9;&#9;&#9;&#9;Pas = XQuery("for $obj in pas where $obj/assessment_appraise_id = " + planDoc.assessment_appraise_id + " and $obj/person_id = " + planDoc.person_id + " and $obj/assessment_appraise_type = 'competence_appraisal' and $obj/status = 'coll' return $obj");&#10;&#9;&#9;&#9;&#9;&#9;for (_pa in Pas)&#10;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;if (_pa != undefined) {&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Indi = OpenDoc(UrlFromDocID(_pa.id)).TopElem.competences.GetOptChildByKey(_comp.competence_id).indicators.GetOptChildByKey(_indi.indicator_id);&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if (Indi != undefined) {&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_cmark = GetScaleFromCompetence(Indi, "mark");&#10;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if(_cmark!=null)&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if (Real(StrRealFixed(_cmark, 2))==Real(_sc_name))&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{Count++;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;CollMarkCount++;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;// средняя оценка подчиненных&#10;&#9;&#9;&#9;&#9;&#9;Pas = XQuery("for $obj in pas where $obj/assessment_appraise_id = " + planDoc.assessment_appraise_id + " and $obj/person_id = " + planDoc.person_id + " and $obj/assessment_appraise_type = 'competence_appraisal' and $obj/status = 'staff' return $obj");&#10;&#9;&#9;&#9;&#9;&#9;for (_pa in Pas)&#10;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;if (_pa != undefined) {&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Indi = OpenDoc(UrlFromDocID(_pa.id)).TopElem.competences.GetOptChildByKey(_comp.competence_id).indicators.GetOptChildByKey(_indi.indicator_id);;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if (Indi != undefined) {&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_smark = GetScaleFromCompetence(Indi, "mark");&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if (_smark != null)&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if (Real(StrRealFixed(_smark, 2))==Real(_sc_name))&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{Count++;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;StaffMarkCount++;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#9;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#10;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;}&#10;&#10;&#9;&#9;&#9;&#9;&#9;// средняя оценка экспертов&#10;&#9;&#9;&#9;&#9;&#9;Pas = XQuery("for $obj in pas where $obj/assessment_appraise_id = " + planDoc.assessment_appraise_id + " and $obj/person_id = " + planDoc.person_id + " and $obj/assessment_appraise_type = 'competence_appraisal' and $obj/status = 'expert' return $obj");&#10;&#9;&#9;&#9;&#9;&#9;for (_pa in Pas)&#10;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;if (_pa != undefined) {&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Indi = OpenDoc(UrlFromDocID(_pa.id)).TopElem.competences.GetOptChildByKey(_comp.competence_id).indicators.GetOptChildByKey(_indi.indicator_id);;;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if (Indi != undefined) {&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_emark = GetScaleFromCompetence(Indi, "mark");&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if (_emark != null)&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if (Real(StrRealFixed(_emark, 2))==Real(_sc_name))&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{Count++;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;ExpertMarkCount++;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;}&#10;&#10;&#9;&#9;&#9;&#9;&#9;_CollStaffExpert= (CollMarkCount+StaffMarkCount+ExpertMarkCount!=0)?(100*Count)/(CollMarkCount+StaffMarkCount+ExpertMarkCount) : 0;&#10;&#10;&#9;&#9;&#9;&#9;&#9;_str_middle+="&#10;&#9;&lt;td class=xl34&gt;"+_CollStaffExpert+"% &lt;/td&gt;";&#10;&#9;&#9;&#9;&#9;}//for_scale&#10;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;_str_middle+="&#10;&lt;/tr&gt;";&#10;&#10;&#10;&#9;&#9;&#9;}//for_indi&#9;&#10;&#9;&#9;&#9;&#10;&#9;&#9;}//for_comp&#9;&#10;&#10;&#9;&#9;_str_up+="&#10;&lt;/tr&gt;";&#10;&#9; &#9;_str = _str_up+_str_middle+"&#10;&lt;/table&gt;";&#10;&#9; &#9;html_TEXT += _str;&#10;&#9;&#9;Session.excel_html += _str;&#10;&#9;} // for (_ass in AssessmentAppraises)&#10;&#10;%&gt;</code_text>
			</exec_code>
			<html>&lt;%&#10;// -----------------------------------------------------------------------------------------------------------------------------&#10;// автор:&#9;RH&#10;// создан:&#9;30.05.2010&#10;// изменен:&#9;&#10;// -------------------------------------------------Предупреждение--------------------------------------------------------------&#10;// используется шаблонами документов&#10;// &#9;&#9; rolf_competence_appraisal_common_report - Аналитические данные по оценке компетенций&#10;// ------------------------------------------------Параметры шаблона------------------------------------------------------------&#10;// &lt;нет&gt;&#10;// ----------------------------------------------Глобальные переменные----------------------------------------------------------&#10;// &lt;нет&gt;&#10;// ---------------------------------------------------Константы-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------&#10;&#10;// ******************ОСНОВНАЯ ОБЛАСТЬ*************************&#9;&#10;&#9;// выбранные процедуры оценки&#10;&#9;AssessmentAppraises = Trim( Request.Form.assessment_app_ids ).split(",");&#10;&#9;for (_ass_id in AssessmentAppraises)&#10;&#9;{&#10;&#9;&#9;RowNum = 0;&#10;&#10;&#9;&#9;_ass_name = OpenDoc(UrlFromDocID(Int(_ass_id))).TopElem.name;&#10;&#10;&#10;&#9;&#9;Plans = XQuery("for $obj in assessment_plans where $obj/assessment_appraise_id = " + _ass_id + &#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;" and $obj/person_id = " + Request.Form.coll_ids + " order by $obj/person_fullname return $obj");&#10;&#9;&#9;_plan = ArrayOptFirstElem(Plans);&#10;&#9;&#9;if (_plan == undefined)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;html_TEXT += "&lt;center&gt;&lt;font&gt;&lt;color='red'&gt;Отсутствует план оценки сотрудника для процедуры " + _ass_name + "&lt;/color&gt;&lt;/font&gt;&lt;center&gt;";&#10;&#9;&#9;&#9;continue;&#10;&#9;&#9;}&#10;&#9;&#9;// план оценки сотрудника&#10;&#9;&#9;try&#10;&#9;&#9;{&#10;&#9;&#9;&#9;plan_id = _plan.id;&#10;&#9;&#9;&#9;planDoc = OpenDoc(UrlFromDocID(plan_id)).TopElem;&#10;&#9;&#9;}&#10;&#9;&#9;catch(err)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;alert("ОШИБКА: невозможно получить карточку плана оценки сотрудника. " + err);&#10;&#9;&#9;&#9;continue;&#10;&#9;&#9;}&#10;&#10;&#9;&#9;// карточка оцениваемого сотрудника&#10;&#9;&#9;collDoc = OpenDoc(UrlFromDocID(planDoc.person_id)).TopElem;&#10;&#9;&#9;&#10;&#9;&#9;// процедура оценки&#10;&#9;&#9;AssessmentAppraise = OpenDoc(UrlFromDocID(planDoc.assessment_appraise_id)).TopElem;&#10;&#9;&#9;&#10;&#9;&#9;RowNum = 0;&#10;&#9;&#9;try&#10;&#9;&#9;{&#10;&#9;&#9;&#9;&#10;&#9;&#9;&#9;_pa = ArrayOptFirstElem(XQuery("for $obj in pas where $obj/assessment_appraise_id = " + planDoc.assessment_appraise_id + &#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;" and $obj/person_id = " + planDoc.person_id + " and $obj/assessment_appraise_type = 'competence_appraisal' return $obj"));&#10;&#9;&#9;&#9;if (_pa == undefined)&#10;&#9;&#9;&#9;&#9;throw 'No pa exists';&#10;&#9;&#9;&#9;_profile_id = OpenDoc(UrlFromDocID(_pa.id)).TopElem.competence_profile_id;&#10;&#9;&#9;&#9;Profile = OpenDoc(UrlFromDocID(Int(_profile_id))).TopElem;&#10;&#9;&#9;}&#10;&#9;&#9;catch(err)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;alert("ОШИБКА: Невозможно получить профиль компетенций. " + err);&#10;&#9;&#9;&#9;Profile = null;&#10;&#9;&#9;}&#10;&#9;&#9;&#10;//Аналитика по индикаторам&#10;&#9;&#9;_str="";&#10;&#9;&#9;_str_up="";&#10;&#9;&#9;_str_middle="";&#10;&#9;&#9;_str_up = "&#10;&lt;br&gt;&#10;&lt;p align='left'&gt;&lt;b&gt;Аналитические данные оценок по индикаторам&lt;/b&gt;&lt;/p&gt;&#10;&lt;table x:str border=0 cellpadding=0 cellspacing=0 style='border-collapse:collapse'&gt;&#10;&#9;&lt;tr style='mso-height-source:userset;mso-yfti-irow:" + RowNum + "'&gt;" + "&#10;&#9;&lt;td class=xl35_indi width='100'&gt;&amp;nbsp&lt;/td&gt;&#10;&#9;&lt;td class=xl37 &gt;Самооценка&lt;/td&gt;&#10;&#9;&lt;td class=xl37 &gt;&amp;nbsp&lt;/td&gt;&#10;&#9;&lt;td class=xl36_indi width='100'&gt;&amp;nbsp&lt;/td&gt;&#10;&#9;&lt;td class=xl37 &gt;Руководитель&lt;/td&gt;&#10;&#9;&lt;/tr&gt;&#10;&lt;/table&gt;&#10;&lt;br&gt;&#10;&lt;table x:str border=0 cellpadding=0 cellspacing=0 style='border-collapse:collapse'&gt;&#10;&#9;&lt;tr style='mso-height-source:userset;mso-yfti-irow:" + RowNum + "'&gt;" + "&#10;&#9;&lt;td class=xl37 &gt;&amp;nbsp&lt;/td&gt;&#10;&#9;&lt;/tr&gt;&#10;&#9;&lt;tr height=81 style='height:60.75pt;mso-yfti-firstrow:yes'&gt;&#10;&#9;&lt;td class=xl31 rowspan='3'&gt;Компетенция&lt;/td&gt;&#10;&#9;&lt;td class=xl31 rowspan='3'&gt;Индикатор&lt;/td&gt;&#10;&#9;&lt;td class=xl31 colspan='"+ArrayCount(OpenDoc(UrlFromDocID(ArrayFirstElem(Profile.competences).competence_id)).TopElem.scales)+"'&gt;Шкала оценок&lt;/td&gt;&#10;&#9;&lt;/tr&gt;&#10;&#9;&lt;tr&gt;";&#10;//alert("sc = " + ArrayFirstElem(Profile.competences).competence_id);&#10;&#9;&#9;for(_scale in OpenDoc(UrlFromDocID(ArrayFirstElem(Profile.competences).competence_id)).TopElem.scales) &#10;&#9;&#9;{&#10;&#9;&#9;&#9;_str_up+="&#10;&#9;&#9;&lt;td  class=xl31&gt;"+_scale.name+"&lt;/td&gt;";&#10;&#9;&#9;}&#10;&#9;&#9;_str_up+="&lt;/tr&gt;";&#10;&#9;&#9;for(_scale in OpenDoc(UrlFromDocID(ArrayFirstElem(Profile.competences).competence_id)).TopElem.scales) &#10;&#9;&#9;{&#10;&#9;&#9;&#9;_str_up+="&#10;&#9;&#9;&lt;td  class=xl31&gt;"+_scale.desc+"&lt;/td&gt;";&#10;&#9;&#9;}//for_scale&#10;&#10;&#10;&#9;&#9;// цикл по компетенциям&#10;&#9;&#9;for (_comp in Profile.competences)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;// компетенция&#10;&#9;&#9;&#9;CompetenceName = OpenDoc(UrlFromDocID(_comp.competence_id)).TopElem.name;&#10;&#9;&#9;&#9;// индикаторы&#10;&#9;&#9;&#9;for (_indi in _comp.indicators)&#10;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;IndiName = OpenDoc(UrlFromDocID(_indi.indicator_id)).TopElem.name;&#10;&#9;&#9;&#9;&#9;_str_middle+="&#10;&#9;&lt;tr style='mso-height-source:userset;'&gt;&#10;&#9;&lt;td class=xl30&gt;"+CompetenceName+"&lt;/td&gt;&#10;&#9;&lt;td class=xl30&gt;"+IndiName+"&lt;/td&gt;";&#10;&#10;&#10;&#9;&#9;&#9;&#9;// самооценка&#10;&#9;&#9;&#9;&#9;SelfMark = null;&#10;&#9;&#9;&#9;&#9;Pas = XQuery("for $obj in pas where $obj/assessment_appraise_id = " + planDoc.assessment_appraise_id + " and $obj/person_id = " + planDoc.person_id + " and $obj/assessment_appraise_type = 'competence_appraisal' and $obj/status = 'self' return $obj");&#10;&#9;&#9;&#9;&#9;_pa = ArrayOptFirstElem(Pas);&#10;&#9;&#9;&#9;&#9;if (_pa != undefined)&#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;Indi = OpenDoc(UrlFromDocID(_pa.id)).TopElem.competences.GetOptChildByKey(_comp.competence_id).indicators.GetOptChildByKey(_indi.indicator_id);&#10;&#9;&#9;&#9;&#9;&#9;if (Indi!= undefined) {&#10;&#9;&#9;&#9;&#9;&#9;&#9;SelfMark = GetScaleFromCompetence(Indi, "mark");&#10;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;if (SelfMark!= null)&#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;SelfMark = Real(StrRealFixed(SelfMark, 2));&#10;&#9;&#9;&#9;&#9;}&#9;&#10;&#9;&#9;&#9;&#9;else&#10;&#9;&#9;&#9;&#9;&#9;SelfMark = "";&#10;&#10;&#9;&#9;&#9;// средняя оценка руководителя&#10;&#9;&#9;&#9;&#9;ManagerMark = Real(0.0);&#10;&#9;&#9;&#9;&#9;ManagerMarkCount = 0;&#10;&#9;&#9;&#9;&#9;Pas = XQuery("for $obj in pas where $obj/assessment_appraise_id = " + planDoc.assessment_appraise_id + " and $obj/person_id = " + planDoc.person_id + " and $obj/assessment_appraise_type = 'competence_appraisal' and $obj/status = 'manager' return $obj");&#10;&#9;&#9;&#9;&#9;for (_pa in Pas)&#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;if (_pa != undefined)&#10;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;Indi = OpenDoc(UrlFromDocID(_pa.id)).TopElem.competences.GetOptChildByKey(_comp.competence_id).indicators.GetOptChildByKey(_indi.indicator_id);&#10;&#9;&#9;&#9;&#9;&#9;&#9;if (Indi != undefined) {&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_mmark = GetScaleFromCompetence(Indi, "mark");&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if (_mmark != null)&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;ManagerMark += _mmark;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;ManagerMarkCount++;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;if (ManagerMarkCount &gt; 0)&#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;ManagerMark = ManagerMark / ManagerMarkCount;&#10;&#9;&#9;&#9;&#9;&#9;ManagerMark = Real(StrRealFixed(ManagerMark, 2));&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;else&#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;ManagerMark = "";&#10;&#9;&#9;&#9;&#9;}&#10;&#10;&#10;&#9;&#9;&#9;&#9;for(_scale in OpenDoc(UrlFromDocID(ArrayFirstElem(Profile.competences).competence_id)).TopElem.scales) &#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;_SelfManager=(SelfMark==ManagerMark &amp;&amp; SelfMark==Real(_scale.name)) ? '&lt;font color=/"green/"&gt;Самооценка&lt;/font&gt;+&lt;font color=/"#0000ff/"&gt;Руководитель&lt;/font&gt;' : ((SelfMark==Real(_scale.name)) ? '&lt;font color=/"green/"&gt;Самоооценка&lt;/font&gt;' :((ManagerMark==Real(_scale.name)) ? '&lt;font color=/"#0000ff/"&gt;Руководитель&lt;/font&gt;' : '') );&#10;&#9;&#9;&#9;&#9;&#9;_str_middle+="&#10;&#9;&#9;&lt;td class=xl34&gt;"+_SelfManager+"&lt;/td&gt;";&#10;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;_str_middle+="&#10;&#9;&lt;/tr&gt;&#10;&#9;&lt;tr style='mso-height-source:userset;'&gt;&#10;&#9;&lt;td class=xl30&gt;&lt;/td&gt;&#10;&#9;&lt;td class=xl30&gt;&lt;/td&gt;";&#10;&#9;&#9;&#9;&#9;for(_scale in OpenDoc(UrlFromDocID(ArrayFirstElem(Profile.competences).competence_id)).TopElem.scales) &#10;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;Count = 0;&#10;&#9;&#9;&#9;&#9;&#9;CollMarkCount=0;&#10;&#9;&#9;&#9;&#9;&#9;StaffMarkCount=0;&#10;&#9;&#9;&#9;&#9;&#9;ExpertMarkCount=0;&#10;&#9;&#9;&#9;&#9;&#9;_sc_name=_scale.name; &#10;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;&#9;// средняя оценка коллег&#10;&#10;&#9;&#9;&#9;&#9;&#9;Pas = XQuery("for $obj in pas where $obj/assessment_appraise_id = " + planDoc.assessment_appraise_id + " and $obj/person_id = " + planDoc.person_id + " and $obj/assessment_appraise_type = 'competence_appraisal' and $obj/status = 'coll' return $obj");&#10;&#9;&#9;&#9;&#9;&#9;for (_pa in Pas)&#10;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;if (_pa != undefined) {&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Indi = OpenDoc(UrlFromDocID(_pa.id)).TopElem.competences.GetOptChildByKey(_comp.competence_id).indicators.GetOptChildByKey(_indi.indicator_id);&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if (Indi != undefined) {&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_cmark = GetScaleFromCompetence(Indi, "mark");&#10;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if(_cmark!=null)&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if (Real(StrRealFixed(_cmark, 2))==Real(_sc_name))&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{Count++;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;CollMarkCount++;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;// средняя оценка подчиненных&#10;&#9;&#9;&#9;&#9;&#9;Pas = XQuery("for $obj in pas where $obj/assessment_appraise_id = " + planDoc.assessment_appraise_id + " and $obj/person_id = " + planDoc.person_id + " and $obj/assessment_appraise_type = 'competence_appraisal' and $obj/status = 'staff' return $obj");&#10;&#9;&#9;&#9;&#9;&#9;for (_pa in Pas)&#10;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;if (_pa != undefined) {&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Indi = OpenDoc(UrlFromDocID(_pa.id)).TopElem.competences.GetOptChildByKey(_comp.competence_id).indicators.GetOptChildByKey(_indi.indicator_id);;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if (Indi != undefined) {&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_smark = GetScaleFromCompetence(Indi, "mark");&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if (_smark != null)&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if (Real(StrRealFixed(_smark, 2))==Real(_sc_name))&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{Count++;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;StaffMarkCount++;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#9;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#10;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;}&#10;&#10;&#9;&#9;&#9;&#9;&#9;// средняя оценка экспертов&#10;&#9;&#9;&#9;&#9;&#9;Pas = XQuery("for $obj in pas where $obj/assessment_appraise_id = " + planDoc.assessment_appraise_id + " and $obj/person_id = " + planDoc.person_id + " and $obj/assessment_appraise_type = 'competence_appraisal' and $obj/status = 'expert' return $obj");&#10;&#9;&#9;&#9;&#9;&#9;for (_pa in Pas)&#10;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;if (_pa != undefined) {&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;Indi = OpenDoc(UrlFromDocID(_pa.id)).TopElem.competences.GetOptChildByKey(_comp.competence_id).indicators.GetOptChildByKey(_indi.indicator_id);;;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if (Indi != undefined) {&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;_emark = GetScaleFromCompetence(Indi, "mark");&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if (_emark != null)&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;if (Real(StrRealFixed(_emark, 2))==Real(_sc_name))&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;{Count++;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;ExpertMarkCount++;&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;&#9;}&#10;&#9;&#9;&#9;&#9;&#9;}&#10;&#10;&#9;&#9;&#9;&#9;&#9;_CollStaffExpert= (CollMarkCount+StaffMarkCount+ExpertMarkCount!=0)?(100*Count)/(CollMarkCount+StaffMarkCount+ExpertMarkCount) : 0;&#10;&#10;&#9;&#9;&#9;&#9;&#9;_str_middle+="&#10;&#9;&lt;td class=xl34&gt;"+_CollStaffExpert+"% &lt;/td&gt;";&#10;&#9;&#9;&#9;&#9;}//for_scale&#10;&#9;&#9;&#9;&#10;&#9;&#9;&#9;&#9;_str_middle+="&#10;&lt;/tr&gt;";&#10;&#10;&#10;&#9;&#9;&#9;}//for_indi&#9;&#10;&#9;&#9;&#9;&#10;&#9;&#9;}//for_comp&#9;&#10;&#10;&#9;&#9;_str_up+="&#10;&lt;/tr&gt;";&#10;&#9; &#9;_str = _str_up+_str_middle+"&#10;&lt;/table&gt;";&#10;&#9; &#9;html_TEXT += _str;&#10;&#9;&#9;Session.excel_html += _str;&#10;&#9;} // for (_ass in AssessmentAppraises)&#10;&#10;%&gt;</html>
			<use_session_cache>false</use_session_cache>
			<cwt_type>default</cwt_type>
			<out_type>undefined</out_type>
			<access>
				<access_level>0</access_level>
			</access>
			<doc_info>
				<creation>
					<user_login>user1</user_login>
					<date>2010-06-01T14:23:15Z</date>
				</creation>
				<modification>
					<user_login>admin</user_login>
					<user_id>6148914691236517121</user_id>
					<date>2021-06-28T13:27:14Z</date>
				</modification>
			</doc_info>
			<is_std>false</is_std>
			<changed>false</changed>
			<is_enabled>true</is_enabled>
		</custom_web_template>
		<custom_web_template>
			<id>0x570135CD209C618D</id>
			<code>WEBSOFT_HISTOGRAM_WT3_NO_OWC</code>
			<name>Websoft Шаблон построения графика гистограммы - WT3</name>
			<category>websoft</category>
			<exec_code>
				<code_text>&lt;%&#10;// -----------------------------------------------------------------------------------------------------------------------------&#10;// автор:&#9;VB&#10;// создан:&#9;22.07.2013&#10;// изменен:&#9;&#10;// ---------------------------------------------------Описание------------------------------------------------------------------&#10;// Библиотека утилит и компонент Вебсофт для проектов кастомизации - построени графика-гистораммы. &#10;// Шаблон предназначен для использование через функцию tools_web.insert_custom_code(ID, TOP_ELEM, bEval, bNaked)&#10;// Переменные:&#10;//&#9;&lt;нет&gt;&#10;// Функции:&#10;//&#9;&lt;нет&gt;&#10;// -----------------------------------------------------------Параметры шаблона-------------------------------------------------&#10;// &lt;нет&gt;&#10;// -----------------------------------------------------------Глобальные переменные---------------------------------------------&#10;// html_TEXT - отчет для отображения в браузере (String)&#10;// html_EXCEL - отчет для Excel (String)&#10;// SHEET_CAPTION - загловок листа Excel&#10;// -----------------------------------------------------------Константы---------------------------------------------------------&#10;// нет&#10;//------------------------------------------------------------------------------------------------------------------------------&#10;%&gt;&#10;&lt;%&#10;// включить/отключить режим отладки&#10;try{ DEBUG }catch(e){ DEBUG = false; }&#10;&#10;try&#10;{&#10;&#9;SHEET_CAPTION&#10;}&#10;catch(e)&#10;{&#10;&#9;SHEET_CAPTION = "";&#10;}&#10;&#10;html_TEXT = "&#10;&lt;!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\"&gt;&#10;&lt;HTML&gt;&#10;&lt;HEAD&gt;&#10;&lt;META content=\"text/html; charset=windows-1251\" http-equiv=Content-Type&gt;&#10;&lt;style&gt;&#10;.xl29&#10;&#9;{mso-style-parent:style0;&#10;&#9;text-align:center;&#10;&#9;vertical-align:top;&#10;&#9;border-top:.5pt solid windowtext;&#10;&#9;border-right:.5pt solid windowtext;&#10;&#9;border-bottom:.5pt solid windowtext;&#10;&#9;border-left:none;&#10;&#9;white-space:normal;}&#10;.xl30&#10;&#9;{mso-style-parent:style0;&#10;&#9;text-align:center;&#10;&#9;vertical-align:top;&#10;&#9;border-top:none;&#10;&#9;border-right:.5pt solid windowtext;&#10;&#9;border-bottom:.5pt solid windowtext;&#10;&#9;border-left:none;&#10;&#9;white-space:normal;}&#10;.xl31&#10;&#9;{mso-style-parent:style0;&#10;&#9;text-align:center;&#10;&#9;vertical-align:top;&#10;&#9;border-top:none;&#10;&#9;border-right:.5pt solid windowtext;&#10;&#9;border-bottom:.5pt solid windowtext;&#10;&#9;border-left:none;&#10;&#9;background:yellow;&#10;&#9;mso-pattern:auto none;&#10;&#9;white-space:normal;}&#10;--&gt;&#10;&lt;/style&gt;&#10;&lt;/HEAD&gt;";&#10;&#10;//&lt;meta http-equiv=Content-Type content=\"text/html; charset=windows-1251\"&gt;&#10;&#10;html_EXCEL = "&#10;&lt;html xmlns:v=\"urn:schemas-microsoft-com:vml\"&#10;xmlns:o=\"urn:schemas-microsoft-com:office:office\"&#10;xmlns:x=\"urn:schemas-microsoft-com:office:excel\"&#10;xmlns=\"http://www.w3.org/TR/REC-html40\"&gt;&#10;&lt;head&gt;&#10;&lt;meta http-equiv=Content-Type content=\"text/html; charset=utf-8\"&gt;&#10;&lt;meta name=ProgId content=Excel.Sheet&gt;&#10;&lt;meta name=Generator content=\"Microsoft Excel 11\"&gt;&#10;&lt;!--[if !mso]&gt;&#10;&lt;style&gt;&#10;v\:* {behavior:url(#default#VML);}&#10;o\:* {behavior:url(#default#VML);}&#10;x\:* {behavior:url(#default#VML);}&#10;.shape {behavior:url(#default#VML);}&#10;&lt;/style&gt;&#10;&lt;![endif]--&gt;&lt;!--[if gte mso 9]&gt;&lt;xml&gt;&#10; &lt;o:DocumentProperties&gt;&#10;  &lt;o:Author&gt;ТНК ВР&lt;/o:Author&gt;&#10;  &lt;o:LastAuthor&gt;ТНК ВР&lt;/o:LastAuthor&gt;&#10;  &lt;o:Created&gt;1996-10-14T23:33:28Z&lt;/o:Created&gt;&#10;  &lt;o:LastSaved&gt;2010-03-30T15:42:25Z&lt;/o:LastSaved&gt;&#10;  &lt;o:Version&gt;11.9999&lt;/o:Version&gt;&#10; &lt;/o:DocumentProperties&gt;&#10; &lt;o:OfficeDocumentSettings&gt;&#10;  &lt;o:RelyOnVML/&gt;&#10;  &lt;o:AllowPNG/&gt;&#10;  &lt;o:DoNotOrganizeInFolder/&gt;&#10; &lt;/o:OfficeDocumentSettings&gt;&#10;&lt;/xml&gt;&lt;![endif]--&gt;&#10;&lt;style&gt;&#10;&lt;!--table&#10;&#9;{mso-displayed-decimal-separator:\"\,\";&#10;&#9;mso-displayed-thousand-separator:\" \";}&#10;@page&#10;&#9;{margin:1.0in .75in 1.0in .75in;&#10;&#9;mso-header-margin:.5in;&#10;&#9;mso-footer-margin:.5in;&#10;&#9;mso-page-orientation:landscape;}&#10;tr&#10;&#9;{mso-height-source:auto;}&#10;col&#10;&#9;{mso-width-source:auto;}&#10;br&#10;&#9;{mso-data-placement:same-cell;}&#10;.style0&#10;&#9;{mso-number-format:General;&#10;&#9;text-align:general;&#10;&#9;vertical-align:bottom;&#10;&#9;white-space:nowrap;&#10;&#9;mso-rotate:0;&#10;&#9;mso-background-source:auto;&#10;&#9;mso-pattern:auto;&#10;&#9;color:windowtext;&#10;&#9;font-size:10.0pt;&#10;&#9;font-weight:400;&#10;&#9;font-style:normal;&#10;&#9;text-decoration:none;&#10;&#9;font-family:Arial;&#10;&#9;mso-generic-font-family:auto;&#10;&#9;mso-font-charset:0;&#10;&#9;border:none;&#10;&#9;mso-protection:locked visible;&#10;&#9;mso-style-name:Normal;&#10;&#9;mso-style-id:0;}&#10;td&#10;&#9;{mso-style-parent:style0;&#10;&#9;padding:0px;&#10;&#9;mso-ignore:padding;&#10;&#9;color:windowtext;&#10;&#9;font-size:10.0pt;&#10;&#9;font-weight:400;&#10;&#9;font-style:normal;&#10;&#9;text-decoration:none;&#10;&#9;font-family:Arial;&#10;&#9;mso-generic-font-family:auto;&#10;&#9;mso-font-charset:0;&#10;&#9;mso-number-format:General;&#10;&#9;text-align:general;&#10;&#9;border:none;&#10;&#9;mso-background-source:auto;&#10;&#9;mso-pattern:auto;&#10;&#9;mso-protection:locked visible;&#10;&#9;mso-rotate:0;}&#10;&#10;.xl29&#10;&#9;{mso-style-parent:style0;&#10;&#9;text-align:center;&#10;&#9;vertical-align:top;&#10;&#9;border-top:.5pt solid windowtext;&#10;&#9;border-right:.5pt solid windowtext;&#10;&#9;border-bottom:.5pt solid windowtext;&#10;&#9;border-left:none;&#10;&#9;white-space:normal;}&#10;.xl25&#10;&#9;{mso-style-parent:style0;&#10;&#9;text-align:center;&#10;&#9;vertical-align:top;&#10;&#9;font-weight:bold;&#10;&#9;white-space:normal;&#10;&#9;font-weight:700;}&#10;.xl30&#10;&#9;{mso-style-parent:style0;&#10;&#9;text-align:center;&#10;&#9;vertical-align:top;&#10;&#9;border-top:.5pt solid windowtext;&#10;&#9;border-right:.5pt solid windowtext;&#10;&#9;border-bottom:.5pt solid windowtext;&#10;&#9;border-left:none;&#10;&#9;white-space:normal;}&#10;.xl31&#10;&#9;{mso-style-parent:style0;&#10;&#9;text-align:center;&#10;&#9;vertical-align:top;&#10;&#9;border-top:none;&#10;&#9;border-right:.5pt solid windowtext;&#10;&#9;border-bottom:.5pt solid windowtext;&#10;&#9;border-left:none;&#10;&#9;background:yellow;&#10;&#9;mso-pattern:auto none;&#10;&#9;white-space:normal;}&#10;--&gt;&#10;&lt;/style&gt;&#10;&lt;!--[if gte mso 9]&gt;&lt;xml&gt;&#10; &lt;x:ExcelWorkbook&gt;&#10;  &lt;x:ExcelWorksheets&gt;&#10;   &lt;x:ExcelWorksheet&gt;&#10;    &lt;x:Name&gt;" + SHEET_CAPTION + "&lt;/x:Name&gt;&#10;    &lt;x:WorksheetOptions&gt;&#10;     &lt;x:Print&gt;&#10;      &lt;x:ValidPrinterInfo/&gt;&#10;      &lt;x:PaperSizeIndex&gt;9&lt;/x:PaperSizeIndex&gt;&#10;      &lt;x:HorizontalResolution&gt;600&lt;/x:HorizontalResolution&gt;&#10;      &lt;x:VerticalResolution&gt;0&lt;/x:VerticalResolution&gt;&#10;     &lt;/x:Print&gt;&#10;     &lt;x:PageBreakZoom&gt;60&lt;/x:PageBreakZoom&gt;&#10;     &lt;x:Selected/&gt;&#10;     &lt;x:Panes&gt;&#10;      &lt;x:Pane&gt;&#10;       &lt;x:Number&gt;3&lt;/x:Number&gt;&#10;       &lt;x:ActiveRow&gt;23&lt;/x:ActiveRow&gt;&#10;       &lt;x:ActiveCol&gt;15&lt;/x:ActiveCol&gt;&#10;      &lt;/x:Pane&gt;&#10;     &lt;/x:Panes&gt;&#10;     &lt;x:ProtectContents&gt;False&lt;/x:ProtectContents&gt;&#10;     &lt;x:ProtectObjects&gt;False&lt;/x:ProtectObjects&gt;&#10;     &lt;x:ProtectScenarios&gt;False&lt;/x:ProtectScenarios&gt;&#10;    &lt;/x:WorksheetOptions&gt;&#10;   &lt;/x:ExcelWorksheet&gt;&#10;  &lt;/x:ExcelWorksheets&gt;&#10;  &lt;x:WindowHeight&gt;9300&lt;/x:WindowHeight&gt;&#10;  &lt;x:WindowWidth&gt;15135&lt;/x:WindowWidth&gt;&#10;  &lt;x:WindowTopX&gt;120&lt;/x:WindowTopX&gt;&#10;  &lt;x:WindowTopY&gt;120&lt;/x:WindowTopY&gt;&#10;  &lt;x:AcceptLabelsInFormulas/&gt;&#10;  &lt;x:ProtectStructure&gt;False&lt;/x:ProtectStructure&gt;&#10;  &lt;x:ProtectWindows&gt;False&lt;/x:ProtectWindows&gt;&#10; &lt;/x:ExcelWorkbook&gt;&#10;&lt;/xml&gt;&lt;![endif]--&gt;&#10;&lt;!--[if gte mso 9]&gt;&lt;xml&gt;&#10; &lt;o:shapedefaults v:ext=\"edit\" spidmax=\"2049\"/&gt;&#10;&lt;/xml&gt;&lt;![endif]--&gt;&lt;!--[if gte mso 9]&gt;&lt;xml&gt;&#10; &lt;o:shapelayout v:ext=\"edit\"&gt;&#10;  &lt;o:idmap v:ext=\"edit\" data=\"1\"/&gt;&#10; &lt;/o:shapelayout&gt;&lt;/xml&gt;&lt;![endif]--&gt;&#10;&lt;/head&gt;&#10;&lt;body link=blue vlink=purple&gt;";&#10;html_EXCEL+=EXCEL_TABLE;&#10;html_EXCEL+="&lt;table border=0 cellpadding=0 cellspacing=0 style='border-collapse:collapse'&gt;&#10; &lt;col width=64 span=14 style='width:48pt'&gt;&#10; &lt;tr height=17 style='height:12.75pt'&gt;";&#10;&#10;i = 0;&#10;&#9;i++;&#10;&#10;&#9;html_TEXT += '&#10;&lt;table align="center"&gt;';&#10;&#9;&#9;// гистограмма для HTML&#10;&#9;&#9;html_TEXT += '&#10; &lt;tr&gt;&#10;  &lt;td&gt;&#10;&lt;center&gt;&#10;&lt;span id="ch' + i + 'span"&gt;';&#10;&#9;&#9;_ind=0;&#10;&#9;&#9;oExcelDoc1 = new ActiveXObject("Websoft.Office.Excel.Document");&#10;&#9;&#9;oExcelDoc1.CreateWorkBook();&#10;&#9;&#9;oWorksheet1 = oExcelDoc1.GetWorksheet(0);&#10;&#9;&#9;str_cat = "";&#10;&#9;&#9;chart4 = oWorksheet1.AddChart("Column", 0, 0, 800, 600);&#10;&#9;&#9;for (_graph_elem in _graph_data)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;series42 = chart4.AddSeries("Column", "{"+ _graph_elem.values + "}", true);&#10;&#9;&#9;&#9;//series42.DataLabels.ShowValue = true;&#10;&#9;&#9;&#9;//series42.Area.ForegroundColor = "#808080"; &#10;&#9;&#9;&#9;series42.Name = _graph_elem.series;&#10;&#9;&#9;&#9;&#10;&#9;&#9;&#9;str_cat += (str_cat != "" ? "," : "") + _graph_elem.categoties;&#10;&#10;&#9;&#9;}&#10;&#9;&#9;chart4.BackgroundColor = "#FFFFFF";&#10;&#9;&#9;chart4.CategoryData = "{" + str_cat + "}";&#10;&#9;&#9;chart4.ShowLegend = true;&#10;&#9;&#9;str_image4 = chart4.GetImageInBase64String('png');&#9;&#10;&#10;&#9;&#9;html_TEXT += '&#10;&#9;&#9;&lt;img width=800 height=600 src=\"data:image/png;base64, ' + str_image4 + '\" &gt;&#10;&lt;/span&gt;&#10;&lt;/center&gt;&#10;&lt;script&gt;&#10;&#9;//mkOWCChartObj(document.getElementById("ch' + i + 'span"), "ch' + i + '", ch' + i + '_xmldata.innerHTML, "800px", "600px", "");&#10;&lt;/script&gt;&#10;  &lt;/td&gt;&#10; &lt;/tr&gt;&#10; &lt;/table&gt;';&#10;&#10;&#9;&#9;// гистограмма для Excel&#10;&#9;&#9;html_EXCEL += '&#10;  &lt;td height=17 width=64 style="height:12.75pt;width:48pt" align=left valign=top&gt;&#10;  &lt;v:shapetype id="_x0000_t201" coordsize="21600,21600" o:spt="201" path="m,l,21600r21600,l21600,xe"&gt;&#10;   &lt;v:stroke joinstyle="miter"/&gt;&#10;   &lt;v:path shadowok="f" o:extrusionok="f" strokeok="f" fillok="f" o:connecttype="rect"/&gt;&#10;   &lt;o:lock v:ext="edit" shapetype="t"/&gt;&#10;  &lt;/v:shapetype&gt;&lt;v:shape id="_x0000_s1025" type="#_x0000_t201" style="position:absolute;margin-left:4.5pt;margin-top:5.25pt;width:650.25pt;height:671.25pt;z-index:1" fillcolor="window [78]" strokecolor="windowText [77]" strokeweight="3e-5mm" o:insetmode="auto"&gt;&#10;   &lt;v:fill color2="windowText [77]"/&gt;&#10;   &lt;o:lock v:ext="edit" rotation="t" text="t"/&gt;&#10;   &lt;!--[if mso]&gt;&#10;   &lt;x:ClientData ObjectType="Chart"&gt;&#10;    &lt;x:WebChart&gt;&#10;     &lt;x:Scaling&gt;&#10;      &lt;x:ScaleID&gt;0&lt;/x:ScaleID&gt;&#10;      &lt;x:Orientation&gt;MinMax&lt;/x:Orientation&gt;&#10;     &lt;/x:Scaling&gt;&#10;     &lt;x:Scaling&gt;&#10;      &lt;x:ScaleID&gt;1&lt;/x:ScaleID&gt;&#10;      &lt;x:Orientation&gt;MinMax&lt;/x:Orientation&gt;&#10;     &lt;/x:Scaling&gt;&#10;     &lt;x:Chart&gt;&#10;      &lt;x:Name&gt;Chart 1&lt;/x:Name&gt;&#10;      &lt;x:Title&gt;&#10;       &lt;x:Caption&gt;&#10;        &lt;x:DataSource&gt;-1&lt;/x:DataSource&gt;&#10;        &lt;x:Data&gt;&amp;quot;&lt;x:B&gt;&lt;/x:B&gt;&amp;quot;&lt;/x:Data&gt;&#10;       &lt;/x:Caption&gt;&#10;       &lt;x:Font&gt;&#10;        &lt;x:FontName&gt;Arial&lt;/x:FontName&gt;&#10;        &lt;x:Size&gt;17.25&lt;/x:Size&gt;&#10;        &lt;x:B/&gt;&#10;        &lt;x:AutoScale/&gt;&#10;       &lt;/x:Font&gt;&#10;       &lt;x:Border&gt;&#10;        &lt;x:ColorIndex&gt;None&lt;/x:ColorIndex&gt;&#10;       &lt;/x:Border&gt;&#10;       &lt;x:Interior&gt;&#10;        &lt;x:ColorIndex&gt;None&lt;/x:ColorIndex&gt;&#10;       &lt;/x:Interior&gt;&#10;      &lt;/x:Title&gt;&#10;      &lt;x:Options&gt;&#10;       &lt;x:SizeWithWindow/&gt;&#10;      &lt;/x:Options&gt;&#10;      &lt;x:PageSetup&gt;&#10;       &lt;x:ChartSize&gt;FullPage&lt;/x:ChartSize&gt;&#10;      &lt;/x:PageSetup&gt;&#10;      &lt;x:Font&gt;&#10;       &lt;x:FontName&gt;Arial&lt;/x:FontName&gt;&#10;       &lt;x:Size&gt;10&lt;/x:Size&gt;&#10;       &lt;x:AutoScale/&gt;&#10;      &lt;/x:Font&gt;&#10;      &lt;x:Left&gt;0&lt;/x:Left&gt;&#10;      &lt;x:Top&gt;-6030&lt;/x:Top&gt;&#10;      &lt;x:Width&gt;13019.9853515625&lt;/x:Width&gt;&#10;      &lt;x:Height&gt;19469.99267578125&lt;/x:Height&gt;&#10;      &lt;x:ChartGrowth&gt;&#10;       &lt;x:HorzGrowth&gt;1&lt;/x:HorzGrowth&gt;&#10;       &lt;x:VertGrowth&gt;1&lt;/x:VertGrowth&gt;&#10;      &lt;/x:ChartGrowth&gt;&#10;      &lt;x:PlotArea&gt;&#10;      &lt;x:Interior&gt;&#10;       &lt;x:ColorIndex&gt;14&lt;/x:ColorIndex&gt;&#10;      &lt;/x:Interior&gt;&#10;       &lt;x:Font&gt;&#10;        &lt;x:FontName&gt;Arial&lt;/x:FontName&gt;&#10;        &lt;x:Size&gt;10&lt;/x:Size&gt;&#10;        &lt;x:AutoScale/&gt;&#10;       &lt;/x:Font&gt;&#10;       &lt;x:Graph&gt;&#10;        &lt;x:Type&gt;Column&lt;/x:Type&gt;&#10;        &lt;x:SubType&gt;Clustered&lt;/x:SubType&gt;&#10;        &lt;x:ScaleID&gt;0&lt;/x:ScaleID&gt;&#10;        &lt;x:ScaleID&gt;1&lt;/x:ScaleID&gt;';&#10;&#10;&#9;for (_graph_elem in _graph_data)&#10;&#9;{&#10;&#9;&#9;html_EXCEL += '&#10;&#9;&#9; &lt;x:Series&gt;&#10;&#9;&#9;  &lt;x:Index&gt;'+_ind+'&lt;/x:Index&gt;&#10;&#9;&#9;  &lt;x:Caption&gt;&#10;&#9;&#9;   &lt;x:DataSource&gt;-1&lt;/x:DataSource&gt;&#10;&#9;&#9;   &lt;x:Data&gt;&amp;quot;'+_graph_elem.series+'&amp;quot;&lt;/x:Data&gt;&#10;&#9;&#9;  &lt;/x:Caption&gt;&#10;&#9;&#9;  &lt;x:Name&gt;'+_graph_elem.series+'&lt;/x:Name&gt;&#10;&#9;&#9;  &lt;x:Marker&gt;&#10;&#9;&#9;   &lt;x:Size&gt;5&lt;/x:Size&gt;&#10;&#9;&#9;  &lt;/x:Marker&gt;&#10;&#9;&#9;  &lt;x:Category&gt;&#10;&#9;&#9;   &lt;x:DataSource&gt;-1&lt;/x:DataSource&gt;&#10;&#9;&#9;   &lt;x:Data&gt;{&amp;quot;' + StrReplace(_graph_elem.categoties, ",", "&amp;quot;,&amp;quot;")+'&amp;quot;}&lt;/x:Data&gt;&#10;&#9;&#9;  &lt;/x:Category&gt;&#10;&#9;&#9;  &lt;x:Value&gt;&#10;&#9;&#9;   &lt;x:DataSource&gt;-1&lt;/x:DataSource&gt;&#10;&#9;&#9;   &lt;x:Data&gt;{'+_graph_elem.values+'}&lt;/x:Data&gt;&#10;&#9;&#9;  &lt;/x:Value&gt;&#10;&#9;&#9; &lt;/x:Series&gt;';&#10;&#9;&#9;_ind++;&#10;&#9;}&#10;&#10;&#9;&#9;html_EXCEL += '&#10;       &lt;/x:Graph&gt;&#10;       &lt;x:Axis&gt;&#10;        &lt;x:Placement&gt;Bottom&lt;/x:Placement&gt;&#10;        &lt;x:AxisID&gt;0&lt;/x:AxisID&gt;&#10;        &lt;x:ScaleID&gt;0&lt;/x:ScaleID&gt;&#10;        &lt;x:CrossingAxis&gt;1&lt;/x:CrossingAxis&gt;&#10;&#9;&#9;&lt;x:CrossesAt&gt;0&lt;/x:CrossesAt&gt;&#10;        &lt;x:Alignment&gt;&#10;         &lt;x:Rotation&gt;90&lt;/x:Rotation&gt;&#10;        &lt;/x:Alignment&gt;&#10;        &lt;x:Font&gt;&#10;         &lt;x:FontName&gt;Arial&lt;/x:FontName&gt;&#10;         &lt;x:Size&gt;10&lt;/x:Size&gt;&#10;         &lt;x:AutoScale/&gt;&#10;        &lt;/x:Font&gt;&#10;        &lt;x:Number&gt;&#10;         &lt;x:SourceLinked/&gt;&#10;         &lt;x:BuiltInFormat&gt;0&lt;/x:BuiltInFormat&gt;&#10;        &lt;/x:Number&gt;&#10;        &lt;x:Type&gt;Category&lt;/x:Type&gt;&#10;&#9;&#9;&lt;x:GroupingEnum&gt;None&lt;/x:GroupingEnum&gt;&#10;       &lt;/x:Axis&gt;&#10;       &lt;x:Axis&gt;&#10;        &lt;x:Placement&gt;Left&lt;/x:Placement&gt;&#10;        &lt;x:AxisID&gt;1&lt;/x:AxisID&gt;&#10;        &lt;x:ScaleID&gt;1&lt;/x:ScaleID&gt;&#10;&#9;&#9;&lt;x:MajorGridlines/&gt;&#10;        &lt;x:CrossingAxis&gt;0&lt;/x:CrossingAxis&gt;&#10;        &lt;x:CrossesAt&gt;Minimum&lt;/x:CrossesAt&gt;&#10;        &lt;x:CrossBetween&gt;Between&lt;/x:CrossBetween&gt;&#10;        &lt;x:Font&gt;&#10;         &lt;x:FontName&gt;Arial&lt;/x:FontName&gt;&#10;         &lt;x:Size&gt;10&lt;/x:Size&gt;&#10;         &lt;x:AutoScale/&gt;&#10;        &lt;/x:Font&gt;&#10;        &lt;x:Number&gt;&#10;         &lt;x:SourceLinked/&gt;&#10;         &lt;x:BuiltInFormat&gt;0&lt;/x:BuiltInFormat&gt;&#10;        &lt;/x:Number&gt;&#10;        &lt;x:Type&gt;Value&lt;/x:Type&gt;&#10;       &lt;/x:Axis&gt;&#10;      &lt;/x:PlotArea&gt;&#10;      &lt;x:Legend&gt;&#10;       &lt;x:Placement&gt;Right&lt;/x:Placement&gt;&#10;       &lt;x:Font&gt;&#10;        &lt;x:FontName&gt;Arial&lt;/x:FontName&gt;&#10;        &lt;x:Size&gt;10&lt;/x:Size&gt;&#10;        &lt;x:AutoScale/&gt;&#10;       &lt;/x:Font&gt;&#10;      &lt;/x:Legend&gt;&#10;     &lt;/x:Chart&gt;&#10;    &lt;/x:WebChart&gt;&#10;   &lt;/x:ClientData&gt;&#10;   &lt;![endif]--&gt;&lt;/v:shape&gt;';&#10;&#10;&#9;&#9;html_EXCEL += "&#10;&lt;![if !vml]&gt;&#10;   &lt;span style='mso-ignore:vglayout;position:absolute;z-index:1;margin-left:6px;margin-top:7px;width:868px;height:589px'&gt;&lt;/span&gt;&#10;&lt;![endif]&gt;&#10;   &lt;span style='mso-ignore:vglayout2'&gt;&#10;  &lt;table cellpadding=0 cellspacing=0&gt;&#10;   &lt;tr&gt;&#10;    &lt;td height=17 class=xl24 width=64 style='height:12.75pt;width:48pt'&gt;&lt;/td&gt;&#10;   &lt;/tr&gt;&#10;  &lt;/table&gt;&#10;  &lt;/span&gt;&#10;  &lt;/td&gt;&#10;  &lt;td class=xl24 width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;  &lt;td class=xl24 width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;  &lt;td class=xl24 width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;  &lt;td class=xl24 width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;  &lt;td class=xl24 width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;  &lt;td class=xl24 width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;  &lt;td class=xl24 width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;  &lt;td class=xl24 width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;  &lt;td class=xl24 width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;  &lt;td class=xl24 width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;  &lt;td class=xl24 width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;  &lt;td class=xl24 width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;  &lt;td class=xl24 width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;  &lt;td class=xl24 width=64 style='width:48pt'&gt;&lt;/td&gt;&#10; &lt;/tr&gt;";&#10;&#10;html_EXCEL += "&#10;  &lt;td width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;  &lt;td width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;  &lt;td width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;  &lt;td width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;  &lt;td width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;  &lt;td width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;  &lt;td width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;  &lt;td width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;  &lt;td width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;  &lt;td width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;  &lt;td width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;  &lt;td width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;  &lt;td width=64 style='width:48pt'&gt;&lt;/td&gt;&#10; &lt;/tr&gt;&#10; &lt;tr height=595 style='height:446.25pt;mso-xlrowspan:35'&gt;&#10;  &lt;td height=595 colspan=14 style='height:446.25pt;mso-ignore:colspan'&gt;&lt;/td&gt;&#10; &lt;/tr&gt;&#10; &lt;![if supportMisalignedColumns]&gt;&#10; &lt;tr height=0 style='display:none'&gt;&#10;  &lt;td width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;  &lt;td width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;  &lt;td width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;  &lt;td width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;  &lt;td width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;  &lt;td width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;  &lt;td width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;  &lt;td width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;  &lt;td width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;  &lt;td width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;  &lt;td width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;  &lt;td width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;  &lt;td width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;  &lt;td width=64 style='width:48pt'&gt;&lt;/td&gt;&#10; &lt;/tr&gt;&#10; &lt;![endif]&gt;&#10;&lt;/table&gt;&#10;&lt;/body&gt;&#10;&lt;/html&gt;";&#10;tools_web.remove_user_data("excel_html_" + curUserID);&#10;//tools_web.set_user_data("excel_html_" + curUserID, {'html': EncodeCharset(html_EXCEL, "windows-1251")}, 1000);&#10;//Для этого клиента кодировку не меняем&#10;tools_web.set_user_data("excel_html_" + curUserID, {'html': html_EXCEL}, 86000);&#10;&#10;Response.Write(html_TEXT);&#10;%&gt;</code_text>
			</exec_code>
			<html>&lt;%&#10;// -----------------------------------------------------------------------------------------------------------------------------&#10;// автор:&#9;VB&#10;// создан:&#9;22.07.2013&#10;// изменен:&#9;&#10;// ---------------------------------------------------Описание------------------------------------------------------------------&#10;// Библиотека утилит и компонент Вебсофт для проектов кастомизации - построени графика-гистораммы. &#10;// Шаблон предназначен для использование через функцию tools_web.insert_custom_code(ID, TOP_ELEM, bEval, bNaked)&#10;// Переменные:&#10;//&#9;&lt;нет&gt;&#10;// Функции:&#10;//&#9;&lt;нет&gt;&#10;// -----------------------------------------------------------Параметры шаблона-------------------------------------------------&#10;// &lt;нет&gt;&#10;// -----------------------------------------------------------Глобальные переменные---------------------------------------------&#10;// html_TEXT - отчет для отображения в браузере (String)&#10;// html_EXCEL - отчет для Excel (String)&#10;// SHEET_CAPTION - загловок листа Excel&#10;// -----------------------------------------------------------Константы---------------------------------------------------------&#10;// нет&#10;//------------------------------------------------------------------------------------------------------------------------------&#10;%&gt;&#10;&lt;%&#10;// включить/отключить режим отладки&#10;try{ DEBUG }catch(e){ DEBUG = false; }&#10;&#10;try&#10;{&#10;&#9;SHEET_CAPTION&#10;}&#10;catch(e)&#10;{&#10;&#9;SHEET_CAPTION = "";&#10;}&#10;&#10;html_TEXT = "&#10;&lt;!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\"&gt;&#10;&lt;HTML&gt;&#10;&lt;HEAD&gt;&#10;&lt;META content=\"text/html; charset=windows-1251\" http-equiv=Content-Type&gt;&#10;&lt;style&gt;&#10;.xl29&#10;&#9;{mso-style-parent:style0;&#10;&#9;text-align:center;&#10;&#9;vertical-align:top;&#10;&#9;border-top:.5pt solid windowtext;&#10;&#9;border-right:.5pt solid windowtext;&#10;&#9;border-bottom:.5pt solid windowtext;&#10;&#9;border-left:none;&#10;&#9;white-space:normal;}&#10;.xl30&#10;&#9;{mso-style-parent:style0;&#10;&#9;text-align:center;&#10;&#9;vertical-align:top;&#10;&#9;border-top:none;&#10;&#9;border-right:.5pt solid windowtext;&#10;&#9;border-bottom:.5pt solid windowtext;&#10;&#9;border-left:none;&#10;&#9;white-space:normal;}&#10;.xl31&#10;&#9;{mso-style-parent:style0;&#10;&#9;text-align:center;&#10;&#9;vertical-align:top;&#10;&#9;border-top:none;&#10;&#9;border-right:.5pt solid windowtext;&#10;&#9;border-bottom:.5pt solid windowtext;&#10;&#9;border-left:none;&#10;&#9;background:yellow;&#10;&#9;mso-pattern:auto none;&#10;&#9;white-space:normal;}&#10;--&gt;&#10;&lt;/style&gt;&#10;&lt;/HEAD&gt;";&#10;&#10;//&lt;meta http-equiv=Content-Type content=\"text/html; charset=windows-1251\"&gt;&#10;&#10;html_EXCEL = "&#10;&lt;html xmlns:v=\"urn:schemas-microsoft-com:vml\"&#10;xmlns:o=\"urn:schemas-microsoft-com:office:office\"&#10;xmlns:x=\"urn:schemas-microsoft-com:office:excel\"&#10;xmlns=\"http://www.w3.org/TR/REC-html40\"&gt;&#10;&lt;head&gt;&#10;&lt;meta http-equiv=Content-Type content=\"text/html; charset=utf-8\"&gt;&#10;&lt;meta name=ProgId content=Excel.Sheet&gt;&#10;&lt;meta name=Generator content=\"Microsoft Excel 11\"&gt;&#10;&lt;!--[if !mso]&gt;&#10;&lt;style&gt;&#10;v\:* {behavior:url(#default#VML);}&#10;o\:* {behavior:url(#default#VML);}&#10;x\:* {behavior:url(#default#VML);}&#10;.shape {behavior:url(#default#VML);}&#10;&lt;/style&gt;&#10;&lt;![endif]--&gt;&lt;!--[if gte mso 9]&gt;&lt;xml&gt;&#10; &lt;o:DocumentProperties&gt;&#10;  &lt;o:Author&gt;ТНК ВР&lt;/o:Author&gt;&#10;  &lt;o:LastAuthor&gt;ТНК ВР&lt;/o:LastAuthor&gt;&#10;  &lt;o:Created&gt;1996-10-14T23:33:28Z&lt;/o:Created&gt;&#10;  &lt;o:LastSaved&gt;2010-03-30T15:42:25Z&lt;/o:LastSaved&gt;&#10;  &lt;o:Version&gt;11.9999&lt;/o:Version&gt;&#10; &lt;/o:DocumentProperties&gt;&#10; &lt;o:OfficeDocumentSettings&gt;&#10;  &lt;o:RelyOnVML/&gt;&#10;  &lt;o:AllowPNG/&gt;&#10;  &lt;o:DoNotOrganizeInFolder/&gt;&#10; &lt;/o:OfficeDocumentSettings&gt;&#10;&lt;/xml&gt;&lt;![endif]--&gt;&#10;&lt;style&gt;&#10;&lt;!--table&#10;&#9;{mso-displayed-decimal-separator:\"\,\";&#10;&#9;mso-displayed-thousand-separator:\" \";}&#10;@page&#10;&#9;{margin:1.0in .75in 1.0in .75in;&#10;&#9;mso-header-margin:.5in;&#10;&#9;mso-footer-margin:.5in;&#10;&#9;mso-page-orientation:landscape;}&#10;tr&#10;&#9;{mso-height-source:auto;}&#10;col&#10;&#9;{mso-width-source:auto;}&#10;br&#10;&#9;{mso-data-placement:same-cell;}&#10;.style0&#10;&#9;{mso-number-format:General;&#10;&#9;text-align:general;&#10;&#9;vertical-align:bottom;&#10;&#9;white-space:nowrap;&#10;&#9;mso-rotate:0;&#10;&#9;mso-background-source:auto;&#10;&#9;mso-pattern:auto;&#10;&#9;color:windowtext;&#10;&#9;font-size:10.0pt;&#10;&#9;font-weight:400;&#10;&#9;font-style:normal;&#10;&#9;text-decoration:none;&#10;&#9;font-family:Arial;&#10;&#9;mso-generic-font-family:auto;&#10;&#9;mso-font-charset:0;&#10;&#9;border:none;&#10;&#9;mso-protection:locked visible;&#10;&#9;mso-style-name:Normal;&#10;&#9;mso-style-id:0;}&#10;td&#10;&#9;{mso-style-parent:style0;&#10;&#9;padding:0px;&#10;&#9;mso-ignore:padding;&#10;&#9;color:windowtext;&#10;&#9;font-size:10.0pt;&#10;&#9;font-weight:400;&#10;&#9;font-style:normal;&#10;&#9;text-decoration:none;&#10;&#9;font-family:Arial;&#10;&#9;mso-generic-font-family:auto;&#10;&#9;mso-font-charset:0;&#10;&#9;mso-number-format:General;&#10;&#9;text-align:general;&#10;&#9;border:none;&#10;&#9;mso-background-source:auto;&#10;&#9;mso-pattern:auto;&#10;&#9;mso-protection:locked visible;&#10;&#9;mso-rotate:0;}&#10;&#10;.xl29&#10;&#9;{mso-style-parent:style0;&#10;&#9;text-align:center;&#10;&#9;vertical-align:top;&#10;&#9;border-top:.5pt solid windowtext;&#10;&#9;border-right:.5pt solid windowtext;&#10;&#9;border-bottom:.5pt solid windowtext;&#10;&#9;border-left:none;&#10;&#9;white-space:normal;}&#10;.xl25&#10;&#9;{mso-style-parent:style0;&#10;&#9;text-align:center;&#10;&#9;vertical-align:top;&#10;&#9;font-weight:bold;&#10;&#9;white-space:normal;&#10;&#9;font-weight:700;}&#10;.xl30&#10;&#9;{mso-style-parent:style0;&#10;&#9;text-align:center;&#10;&#9;vertical-align:top;&#10;&#9;border-top:.5pt solid windowtext;&#10;&#9;border-right:.5pt solid windowtext;&#10;&#9;border-bottom:.5pt solid windowtext;&#10;&#9;border-left:none;&#10;&#9;white-space:normal;}&#10;.xl31&#10;&#9;{mso-style-parent:style0;&#10;&#9;text-align:center;&#10;&#9;vertical-align:top;&#10;&#9;border-top:none;&#10;&#9;border-right:.5pt solid windowtext;&#10;&#9;border-bottom:.5pt solid windowtext;&#10;&#9;border-left:none;&#10;&#9;background:yellow;&#10;&#9;mso-pattern:auto none;&#10;&#9;white-space:normal;}&#10;--&gt;&#10;&lt;/style&gt;&#10;&lt;!--[if gte mso 9]&gt;&lt;xml&gt;&#10; &lt;x:ExcelWorkbook&gt;&#10;  &lt;x:ExcelWorksheets&gt;&#10;   &lt;x:ExcelWorksheet&gt;&#10;    &lt;x:Name&gt;" + SHEET_CAPTION + "&lt;/x:Name&gt;&#10;    &lt;x:WorksheetOptions&gt;&#10;     &lt;x:Print&gt;&#10;      &lt;x:ValidPrinterInfo/&gt;&#10;      &lt;x:PaperSizeIndex&gt;9&lt;/x:PaperSizeIndex&gt;&#10;      &lt;x:HorizontalResolution&gt;600&lt;/x:HorizontalResolution&gt;&#10;      &lt;x:VerticalResolution&gt;0&lt;/x:VerticalResolution&gt;&#10;     &lt;/x:Print&gt;&#10;     &lt;x:PageBreakZoom&gt;60&lt;/x:PageBreakZoom&gt;&#10;     &lt;x:Selected/&gt;&#10;     &lt;x:Panes&gt;&#10;      &lt;x:Pane&gt;&#10;       &lt;x:Number&gt;3&lt;/x:Number&gt;&#10;       &lt;x:ActiveRow&gt;23&lt;/x:ActiveRow&gt;&#10;       &lt;x:ActiveCol&gt;15&lt;/x:ActiveCol&gt;&#10;      &lt;/x:Pane&gt;&#10;     &lt;/x:Panes&gt;&#10;     &lt;x:ProtectContents&gt;False&lt;/x:ProtectContents&gt;&#10;     &lt;x:ProtectObjects&gt;False&lt;/x:ProtectObjects&gt;&#10;     &lt;x:ProtectScenarios&gt;False&lt;/x:ProtectScenarios&gt;&#10;    &lt;/x:WorksheetOptions&gt;&#10;   &lt;/x:ExcelWorksheet&gt;&#10;  &lt;/x:ExcelWorksheets&gt;&#10;  &lt;x:WindowHeight&gt;9300&lt;/x:WindowHeight&gt;&#10;  &lt;x:WindowWidth&gt;15135&lt;/x:WindowWidth&gt;&#10;  &lt;x:WindowTopX&gt;120&lt;/x:WindowTopX&gt;&#10;  &lt;x:WindowTopY&gt;120&lt;/x:WindowTopY&gt;&#10;  &lt;x:AcceptLabelsInFormulas/&gt;&#10;  &lt;x:ProtectStructure&gt;False&lt;/x:ProtectStructure&gt;&#10;  &lt;x:ProtectWindows&gt;False&lt;/x:ProtectWindows&gt;&#10; &lt;/x:ExcelWorkbook&gt;&#10;&lt;/xml&gt;&lt;![endif]--&gt;&#10;&lt;!--[if gte mso 9]&gt;&lt;xml&gt;&#10; &lt;o:shapedefaults v:ext=\"edit\" spidmax=\"2049\"/&gt;&#10;&lt;/xml&gt;&lt;![endif]--&gt;&lt;!--[if gte mso 9]&gt;&lt;xml&gt;&#10; &lt;o:shapelayout v:ext=\"edit\"&gt;&#10;  &lt;o:idmap v:ext=\"edit\" data=\"1\"/&gt;&#10; &lt;/o:shapelayout&gt;&lt;/xml&gt;&lt;![endif]--&gt;&#10;&lt;/head&gt;&#10;&lt;body link=blue vlink=purple&gt;";&#10;html_EXCEL+=EXCEL_TABLE;&#10;html_EXCEL+="&lt;table border=0 cellpadding=0 cellspacing=0 style='border-collapse:collapse'&gt;&#10; &lt;col width=64 span=14 style='width:48pt'&gt;&#10; &lt;tr height=17 style='height:12.75pt'&gt;";&#10;&#10;i = 0;&#10;&#9;i++;&#10;&#10;&#9;html_TEXT += '&#10;&lt;table align="center"&gt;';&#10;&#9;&#9;// гистограмма для HTML&#10;&#9;&#9;html_TEXT += '&#10; &lt;tr&gt;&#10;  &lt;td&gt;&#10;&lt;center&gt;&#10;&lt;span id="ch' + i + 'span"&gt;';&#10;&#9;&#9;_ind=0;&#10;&#9;&#9;oExcelDoc1 = new ActiveXObject("Websoft.Office.Excel.Document");&#10;&#9;&#9;oExcelDoc1.CreateWorkBook();&#10;&#9;&#9;oWorksheet1 = oExcelDoc1.GetWorksheet(0);&#10;&#9;&#9;str_cat = "";&#10;&#9;&#9;chart4 = oWorksheet1.AddChart("Column", 0, 0, 800, 600);&#10;&#9;&#9;for (_graph_elem in _graph_data)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;series42 = chart4.AddSeries("Column", "{"+ _graph_elem.values + "}", true);&#10;&#9;&#9;&#9;//series42.DataLabels.ShowValue = true;&#10;&#9;&#9;&#9;//series42.Area.ForegroundColor = "#808080"; &#10;&#9;&#9;&#9;series42.Name = _graph_elem.series;&#10;&#9;&#9;&#9;&#10;&#9;&#9;&#9;str_cat += (str_cat != "" ? "," : "") + _graph_elem.categoties;&#10;&#10;&#9;&#9;}&#10;&#9;&#9;chart4.BackgroundColor = "#FFFFFF";&#10;&#9;&#9;chart4.CategoryData = "{" + str_cat + "}";&#10;&#9;&#9;chart4.ShowLegend = true;&#10;&#9;&#9;str_image4 = chart4.GetImageInBase64String('png');&#9;&#10;&#10;&#9;&#9;html_TEXT += '&#10;&#9;&#9;&lt;img width=800 height=600 src=\"data:image/png;base64, ' + str_image4 + '\" &gt;&#10;&lt;/span&gt;&#10;&lt;/center&gt;&#10;&lt;script&gt;&#10;&#9;//mkOWCChartObj(document.getElementById("ch' + i + 'span"), "ch' + i + '", ch' + i + '_xmldata.innerHTML, "800px", "600px", "");&#10;&lt;/script&gt;&#10;  &lt;/td&gt;&#10; &lt;/tr&gt;&#10; &lt;/table&gt;';&#10;&#10;&#9;&#9;// гистограмма для Excel&#10;&#9;&#9;html_EXCEL += '&#10;  &lt;td height=17 width=64 style="height:12.75pt;width:48pt" align=left valign=top&gt;&#10;  &lt;v:shapetype id="_x0000_t201" coordsize="21600,21600" o:spt="201" path="m,l,21600r21600,l21600,xe"&gt;&#10;   &lt;v:stroke joinstyle="miter"/&gt;&#10;   &lt;v:path shadowok="f" o:extrusionok="f" strokeok="f" fillok="f" o:connecttype="rect"/&gt;&#10;   &lt;o:lock v:ext="edit" shapetype="t"/&gt;&#10;  &lt;/v:shapetype&gt;&lt;v:shape id="_x0000_s1025" type="#_x0000_t201" style="position:absolute;margin-left:4.5pt;margin-top:5.25pt;width:650.25pt;height:671.25pt;z-index:1" fillcolor="window [78]" strokecolor="windowText [77]" strokeweight="3e-5mm" o:insetmode="auto"&gt;&#10;   &lt;v:fill color2="windowText [77]"/&gt;&#10;   &lt;o:lock v:ext="edit" rotation="t" text="t"/&gt;&#10;   &lt;!--[if mso]&gt;&#10;   &lt;x:ClientData ObjectType="Chart"&gt;&#10;    &lt;x:WebChart&gt;&#10;     &lt;x:Scaling&gt;&#10;      &lt;x:ScaleID&gt;0&lt;/x:ScaleID&gt;&#10;      &lt;x:Orientation&gt;MinMax&lt;/x:Orientation&gt;&#10;     &lt;/x:Scaling&gt;&#10;     &lt;x:Scaling&gt;&#10;      &lt;x:ScaleID&gt;1&lt;/x:ScaleID&gt;&#10;      &lt;x:Orientation&gt;MinMax&lt;/x:Orientation&gt;&#10;     &lt;/x:Scaling&gt;&#10;     &lt;x:Chart&gt;&#10;      &lt;x:Name&gt;Chart 1&lt;/x:Name&gt;&#10;      &lt;x:Title&gt;&#10;       &lt;x:Caption&gt;&#10;        &lt;x:DataSource&gt;-1&lt;/x:DataSource&gt;&#10;        &lt;x:Data&gt;&amp;quot;&lt;x:B&gt;&lt;/x:B&gt;&amp;quot;&lt;/x:Data&gt;&#10;       &lt;/x:Caption&gt;&#10;       &lt;x:Font&gt;&#10;        &lt;x:FontName&gt;Arial&lt;/x:FontName&gt;&#10;        &lt;x:Size&gt;17.25&lt;/x:Size&gt;&#10;        &lt;x:B/&gt;&#10;        &lt;x:AutoScale/&gt;&#10;       &lt;/x:Font&gt;&#10;       &lt;x:Border&gt;&#10;        &lt;x:ColorIndex&gt;None&lt;/x:ColorIndex&gt;&#10;       &lt;/x:Border&gt;&#10;       &lt;x:Interior&gt;&#10;        &lt;x:ColorIndex&gt;None&lt;/x:ColorIndex&gt;&#10;       &lt;/x:Interior&gt;&#10;      &lt;/x:Title&gt;&#10;      &lt;x:Options&gt;&#10;       &lt;x:SizeWithWindow/&gt;&#10;      &lt;/x:Options&gt;&#10;      &lt;x:PageSetup&gt;&#10;       &lt;x:ChartSize&gt;FullPage&lt;/x:ChartSize&gt;&#10;      &lt;/x:PageSetup&gt;&#10;      &lt;x:Font&gt;&#10;       &lt;x:FontName&gt;Arial&lt;/x:FontName&gt;&#10;       &lt;x:Size&gt;10&lt;/x:Size&gt;&#10;       &lt;x:AutoScale/&gt;&#10;      &lt;/x:Font&gt;&#10;      &lt;x:Left&gt;0&lt;/x:Left&gt;&#10;      &lt;x:Top&gt;-6030&lt;/x:Top&gt;&#10;      &lt;x:Width&gt;13019.9853515625&lt;/x:Width&gt;&#10;      &lt;x:Height&gt;19469.99267578125&lt;/x:Height&gt;&#10;      &lt;x:ChartGrowth&gt;&#10;       &lt;x:HorzGrowth&gt;1&lt;/x:HorzGrowth&gt;&#10;       &lt;x:VertGrowth&gt;1&lt;/x:VertGrowth&gt;&#10;      &lt;/x:ChartGrowth&gt;&#10;      &lt;x:PlotArea&gt;&#10;      &lt;x:Interior&gt;&#10;       &lt;x:ColorIndex&gt;14&lt;/x:ColorIndex&gt;&#10;      &lt;/x:Interior&gt;&#10;       &lt;x:Font&gt;&#10;        &lt;x:FontName&gt;Arial&lt;/x:FontName&gt;&#10;        &lt;x:Size&gt;10&lt;/x:Size&gt;&#10;        &lt;x:AutoScale/&gt;&#10;       &lt;/x:Font&gt;&#10;       &lt;x:Graph&gt;&#10;        &lt;x:Type&gt;Column&lt;/x:Type&gt;&#10;        &lt;x:SubType&gt;Clustered&lt;/x:SubType&gt;&#10;        &lt;x:ScaleID&gt;0&lt;/x:ScaleID&gt;&#10;        &lt;x:ScaleID&gt;1&lt;/x:ScaleID&gt;';&#10;&#10;&#9;for (_graph_elem in _graph_data)&#10;&#9;{&#10;&#9;&#9;html_EXCEL += '&#10;&#9;&#9; &lt;x:Series&gt;&#10;&#9;&#9;  &lt;x:Index&gt;'+_ind+'&lt;/x:Index&gt;&#10;&#9;&#9;  &lt;x:Caption&gt;&#10;&#9;&#9;   &lt;x:DataSource&gt;-1&lt;/x:DataSource&gt;&#10;&#9;&#9;   &lt;x:Data&gt;&amp;quot;'+_graph_elem.series+'&amp;quot;&lt;/x:Data&gt;&#10;&#9;&#9;  &lt;/x:Caption&gt;&#10;&#9;&#9;  &lt;x:Name&gt;'+_graph_elem.series+'&lt;/x:Name&gt;&#10;&#9;&#9;  &lt;x:Marker&gt;&#10;&#9;&#9;   &lt;x:Size&gt;5&lt;/x:Size&gt;&#10;&#9;&#9;  &lt;/x:Marker&gt;&#10;&#9;&#9;  &lt;x:Category&gt;&#10;&#9;&#9;   &lt;x:DataSource&gt;-1&lt;/x:DataSource&gt;&#10;&#9;&#9;   &lt;x:Data&gt;{&amp;quot;' + StrReplace(_graph_elem.categoties, ",", "&amp;quot;,&amp;quot;")+'&amp;quot;}&lt;/x:Data&gt;&#10;&#9;&#9;  &lt;/x:Category&gt;&#10;&#9;&#9;  &lt;x:Value&gt;&#10;&#9;&#9;   &lt;x:DataSource&gt;-1&lt;/x:DataSource&gt;&#10;&#9;&#9;   &lt;x:Data&gt;{'+_graph_elem.values+'}&lt;/x:Data&gt;&#10;&#9;&#9;  &lt;/x:Value&gt;&#10;&#9;&#9; &lt;/x:Series&gt;';&#10;&#9;&#9;_ind++;&#10;&#9;}&#10;&#10;&#9;&#9;html_EXCEL += '&#10;       &lt;/x:Graph&gt;&#10;       &lt;x:Axis&gt;&#10;        &lt;x:Placement&gt;Bottom&lt;/x:Placement&gt;&#10;        &lt;x:AxisID&gt;0&lt;/x:AxisID&gt;&#10;        &lt;x:ScaleID&gt;0&lt;/x:ScaleID&gt;&#10;        &lt;x:CrossingAxis&gt;1&lt;/x:CrossingAxis&gt;&#10;&#9;&#9;&lt;x:CrossesAt&gt;0&lt;/x:CrossesAt&gt;&#10;        &lt;x:Alignment&gt;&#10;         &lt;x:Rotation&gt;90&lt;/x:Rotation&gt;&#10;        &lt;/x:Alignment&gt;&#10;        &lt;x:Font&gt;&#10;         &lt;x:FontName&gt;Arial&lt;/x:FontName&gt;&#10;         &lt;x:Size&gt;10&lt;/x:Size&gt;&#10;         &lt;x:AutoScale/&gt;&#10;        &lt;/x:Font&gt;&#10;        &lt;x:Number&gt;&#10;         &lt;x:SourceLinked/&gt;&#10;         &lt;x:BuiltInFormat&gt;0&lt;/x:BuiltInFormat&gt;&#10;        &lt;/x:Number&gt;&#10;        &lt;x:Type&gt;Category&lt;/x:Type&gt;&#10;&#9;&#9;&lt;x:GroupingEnum&gt;None&lt;/x:GroupingEnum&gt;&#10;       &lt;/x:Axis&gt;&#10;       &lt;x:Axis&gt;&#10;        &lt;x:Placement&gt;Left&lt;/x:Placement&gt;&#10;        &lt;x:AxisID&gt;1&lt;/x:AxisID&gt;&#10;        &lt;x:ScaleID&gt;1&lt;/x:ScaleID&gt;&#10;&#9;&#9;&lt;x:MajorGridlines/&gt;&#10;        &lt;x:CrossingAxis&gt;0&lt;/x:CrossingAxis&gt;&#10;        &lt;x:CrossesAt&gt;Minimum&lt;/x:CrossesAt&gt;&#10;        &lt;x:CrossBetween&gt;Between&lt;/x:CrossBetween&gt;&#10;        &lt;x:Font&gt;&#10;         &lt;x:FontName&gt;Arial&lt;/x:FontName&gt;&#10;         &lt;x:Size&gt;10&lt;/x:Size&gt;&#10;         &lt;x:AutoScale/&gt;&#10;        &lt;/x:Font&gt;&#10;        &lt;x:Number&gt;&#10;         &lt;x:SourceLinked/&gt;&#10;         &lt;x:BuiltInFormat&gt;0&lt;/x:BuiltInFormat&gt;&#10;        &lt;/x:Number&gt;&#10;        &lt;x:Type&gt;Value&lt;/x:Type&gt;&#10;       &lt;/x:Axis&gt;&#10;      &lt;/x:PlotArea&gt;&#10;      &lt;x:Legend&gt;&#10;       &lt;x:Placement&gt;Right&lt;/x:Placement&gt;&#10;       &lt;x:Font&gt;&#10;        &lt;x:FontName&gt;Arial&lt;/x:FontName&gt;&#10;        &lt;x:Size&gt;10&lt;/x:Size&gt;&#10;        &lt;x:AutoScale/&gt;&#10;       &lt;/x:Font&gt;&#10;      &lt;/x:Legend&gt;&#10;     &lt;/x:Chart&gt;&#10;    &lt;/x:WebChart&gt;&#10;   &lt;/x:ClientData&gt;&#10;   &lt;![endif]--&gt;&lt;/v:shape&gt;';&#10;&#10;&#9;&#9;html_EXCEL += "&#10;&lt;![if !vml]&gt;&#10;   &lt;span style='mso-ignore:vglayout;position:absolute;z-index:1;margin-left:6px;margin-top:7px;width:868px;height:589px'&gt;&lt;/span&gt;&#10;&lt;![endif]&gt;&#10;   &lt;span style='mso-ignore:vglayout2'&gt;&#10;  &lt;table cellpadding=0 cellspacing=0&gt;&#10;   &lt;tr&gt;&#10;    &lt;td height=17 class=xl24 width=64 style='height:12.75pt;width:48pt'&gt;&lt;/td&gt;&#10;   &lt;/tr&gt;&#10;  &lt;/table&gt;&#10;  &lt;/span&gt;&#10;  &lt;/td&gt;&#10;  &lt;td class=xl24 width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;  &lt;td class=xl24 width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;  &lt;td class=xl24 width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;  &lt;td class=xl24 width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;  &lt;td class=xl24 width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;  &lt;td class=xl24 width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;  &lt;td class=xl24 width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;  &lt;td class=xl24 width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;  &lt;td class=xl24 width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;  &lt;td class=xl24 width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;  &lt;td class=xl24 width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;  &lt;td class=xl24 width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;  &lt;td class=xl24 width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;  &lt;td class=xl24 width=64 style='width:48pt'&gt;&lt;/td&gt;&#10; &lt;/tr&gt;";&#10;&#10;html_EXCEL += "&#10;  &lt;td width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;  &lt;td width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;  &lt;td width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;  &lt;td width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;  &lt;td width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;  &lt;td width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;  &lt;td width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;  &lt;td width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;  &lt;td width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;  &lt;td width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;  &lt;td width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;  &lt;td width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;  &lt;td width=64 style='width:48pt'&gt;&lt;/td&gt;&#10; &lt;/tr&gt;&#10; &lt;tr height=595 style='height:446.25pt;mso-xlrowspan:35'&gt;&#10;  &lt;td height=595 colspan=14 style='height:446.25pt;mso-ignore:colspan'&gt;&lt;/td&gt;&#10; &lt;/tr&gt;&#10; &lt;![if supportMisalignedColumns]&gt;&#10; &lt;tr height=0 style='display:none'&gt;&#10;  &lt;td width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;  &lt;td width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;  &lt;td width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;  &lt;td width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;  &lt;td width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;  &lt;td width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;  &lt;td width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;  &lt;td width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;  &lt;td width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;  &lt;td width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;  &lt;td width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;  &lt;td width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;  &lt;td width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;  &lt;td width=64 style='width:48pt'&gt;&lt;/td&gt;&#10; &lt;/tr&gt;&#10; &lt;![endif]&gt;&#10;&lt;/table&gt;&#10;&lt;/body&gt;&#10;&lt;/html&gt;";&#10;tools_web.remove_user_data("excel_html_" + curUserID);&#10;//tools_web.set_user_data("excel_html_" + curUserID, {'html': EncodeCharset(html_EXCEL, "windows-1251")}, 1000);&#10;//Для этого клиента кодировку не меняем&#10;tools_web.set_user_data("excel_html_" + curUserID, {'html': html_EXCEL}, 86000);&#10;&#10;Response.Write(html_TEXT);&#10;%&gt;</html>
			<use_session_cache>false</use_session_cache>
			<cwt_type>default</cwt_type>
			<out_type>undefined</out_type>
			<access>
				<access_level>0</access_level>
			</access>
			<doc_info>
				<creation>
					<user_login>user1</user_login>
					<user_id>6148914691236517121</user_id>
					<date>2013-07-27T20:38:33Z</date>
				</creation>
				<modification>
					<user_login>admin</user_login>
					<user_id>6148914691236517121</user_id>
					<date>2021-06-28T13:27:14Z</date>
				</modification>
			</doc_info>
			<is_std>false</is_std>
			<changed>false</changed>
			<is_enabled>true</is_enabled>
		</custom_web_template>
		<custom_web_template>
			<id>0x570126EB43A000FE</id>
			<code>WEBSOFT_RADAR_AND_HISTOGRAM_NO_OWC</code>
			<name>WEBSOFT RADAR AND HISTOGRAM</name>
			<category>websoft</category>
			<exec_code>
				<code_text>&lt;%&#10;// -----------------------------------------------------------------------------------------------------------------------------&#10;// автор:&#9;VB&#10;// создан:&#9;22.07.2013&#10;// изменен:&#9;&#10;// ---------------------------------------------------Описание------------------------------------------------------------------&#10;// Библиотека утилит и компонент Вебсофт для проектов кастомизации - построени графика-гистораммы. &#10;// Шаблон предназначен для использование через функцию tools_web.insert_custom_code(ID, TOP_ELEM, bEval, bNaked)&#10;// Переменные:&#10;//&#9;&lt;нет&gt;&#10;// Функции:&#10;//&#9;&lt;нет&gt;&#10;// -----------------------------------------------------------Параметры шаблона-------------------------------------------------&#10;// &lt;нет&gt;&#10;// -----------------------------------------------------------Глобальные переменные---------------------------------------------&#10;// html_TEXT - отчет для отображения в браузере (String)&#10;// html_EXCEL - отчет для Excel (String)&#10;// SHEET_CAPTION - загловок листа Excel&#10;// -----------------------------------------------------------Константы---------------------------------------------------------&#10;// нет&#10;//------------------------------------------------------------------------------------------------------------------------------&#10;&#10;// включить/отключить режим отладки&#10;try{ DEBUG }catch(e){ DEBUG = false; }&#10;&#10;try&#10;{&#10;&#9;SHEET_CAPTION&#10;}&#10;catch(e)&#10;{&#10;&#9;SHEET_CAPTION = "";&#10;}&#10;try&#10;{&#10;html_TEXT = "&#10;&lt;!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\"&gt;&#10;&lt;HTML&gt;&#10;&lt;HEAD&gt;&#10;&lt;META content=\"text/html; charset=windows-1251\" http-equiv=Content-Type&gt;&#10;&lt;style&gt;&#10;.xl29&#10;&#9;{mso-style-parent:style0;&#10;&#9;text-align:center;&#10;&#9;vertical-align:top;&#10;&#9;border-top:.5pt solid windowtext;&#10;&#9;border-right:.5pt solid windowtext;&#10;&#9;border-bottom:.5pt solid windowtext;&#10;&#9;border-left:none;&#10;&#9;white-space:normal;}&#10;.xl30&#10;&#9;{mso-style-parent:style0;&#10;&#9;text-align:center;&#10;&#9;vertical-align:top;&#10;&#9;border-top:none;&#10;&#9;border-right:.5pt solid windowtext;&#10;&#9;border-bottom:.5pt solid windowtext;&#10;&#9;border-left:none;&#10;&#9;white-space:normal;}&#10;.xl31&#10;&#9;{mso-style-parent:style0;&#10;&#9;text-align:center;&#10;&#9;vertical-align:top;&#10;&#9;border-top:none;&#10;&#9;border-right:.5pt solid windowtext;&#10;&#9;border-bottom:.5pt solid windowtext;&#10;&#9;border-left:none;&#10;&#9;background:yellow;&#10;&#9;mso-pattern:auto none;&#10;&#9;white-space:normal;}&#10;--&gt;&#10;&lt;/style&gt;&#10;&lt;/HEAD&gt;";&#10;&#10;&#10;//&lt;meta http-equiv=Content-Type content=\"text/html; charset=windows-1251\"&gt;&#10;&#10;html_EXCEL = "&#10;&lt;html xmlns:v=\"urn:schemas-microsoft-com:vml\"&#10;xmlns:o=\"urn:schemas-microsoft-com:office:office\"&#10;xmlns:x=\"urn:schemas-microsoft-com:office:excel\"&#10;xmlns=\"http://www.w3.org/TR/REC-html40\"&gt;&#10;&lt;head&gt;&#10;&lt;meta http-equiv=Content-Type content=\"text/html; charset=utf-8\"&gt;&#10;&lt;meta name=ProgId content=Excel.Sheet&gt;&#10;&lt;meta name=Generator content=\"Microsoft Excel 11\"&gt;&#10;&lt;!--[if !mso]&gt;&#10;&lt;style&gt;&#10;v\:* {behavior:url(#default#VML);}&#10;o\:* {behavior:url(#default#VML);}&#10;x\:* {behavior:url(#default#VML);}&#10;.shape {behavior:url(#default#VML);}&#10;&lt;/style&gt;&#10;&lt;![endif]--&gt;&lt;!--[if gte mso 9]&gt;&lt;xml&gt;&#10; &lt;o:DocumentProperties&gt;&#10;  &lt;o:Author&gt;ТНК ВР&lt;/o:Author&gt;&#10;  &lt;o:LastAuthor&gt;ТНК ВР&lt;/o:LastAuthor&gt;&#10;  &lt;o:Created&gt;1996-10-14T23:33:28Z&lt;/o:Created&gt;&#10;  &lt;o:LastSaved&gt;2010-03-30T15:42:25Z&lt;/o:LastSaved&gt;&#10;  &lt;o:Version&gt;11.9999&lt;/o:Version&gt;&#10; &lt;/o:DocumentProperties&gt;&#10; &lt;o:OfficeDocumentSettings&gt;&#10;  &lt;o:RelyOnVML/&gt;&#10;  &lt;o:AllowPNG/&gt;&#10;  &lt;o:DoNotOrganizeInFolder/&gt;&#10; &lt;/o:OfficeDocumentSettings&gt;&#10;&lt;/xml&gt;&lt;![endif]--&gt;&#10;&lt;style&gt;&#10;&lt;!--table&#10;&#9;{mso-displayed-decimal-separator:\"\,\";&#10;&#9;mso-displayed-thousand-separator:\" \";}&#10;@page&#10;&#9;{margin:1.0in .75in 1.0in .75in;&#10;&#9;mso-header-margin:.5in;&#10;&#9;mso-footer-margin:.5in;&#10;&#9;mso-page-orientation:landscape;}&#10;tr&#10;&#9;{mso-height-source:auto;}&#10;col&#10;&#9;{mso-width-source:auto;}&#10;br&#10;&#9;{mso-data-placement:same-cell;}&#10;.style0&#10;&#9;{mso-number-format:General;&#10;&#9;text-align:general;&#10;&#9;vertical-align:bottom;&#10;&#9;white-space:nowrap;&#10;&#9;mso-rotate:0;&#10;&#9;mso-background-source:auto;&#10;&#9;mso-pattern:auto;&#10;&#9;color:windowtext;&#10;&#9;font-size:10.0pt;&#10;&#9;font-weight:400;&#10;&#9;font-style:normal;&#10;&#9;text-decoration:none;&#10;&#9;font-family:Arial;&#10;&#9;mso-generic-font-family:auto;&#10;&#9;mso-font-charset:0;&#10;&#9;border:none;&#10;&#9;mso-protection:locked visible;&#10;&#9;mso-style-name:Normal;&#10;&#9;mso-style-id:0;}&#10;td&#10;&#9;{mso-style-parent:style0;&#10;&#9;padding:0px;&#10;&#9;mso-ignore:padding;&#10;&#9;color:windowtext;&#10;&#9;font-size:10.0pt;&#10;&#9;font-weight:400;&#10;&#9;font-style:normal;&#10;&#9;text-decoration:none;&#10;&#9;font-family:Arial;&#10;&#9;mso-generic-font-family:auto;&#10;&#9;mso-font-charset:0;&#10;&#9;mso-number-format:General;&#10;&#9;text-align:general;&#10;&#9;border:none;&#10;&#9;mso-background-source:auto;&#10;&#9;mso-pattern:auto;&#10;&#9;mso-protection:locked visible;&#10;&#9;mso-rotate:0;}&#10;&#10;.xl29&#10;&#9;{mso-style-parent:style0;&#10;&#9;text-align:center;&#10;&#9;vertical-align:top;&#10;&#9;border-top:.5pt solid windowtext;&#10;&#9;border-right:.5pt solid windowtext;&#10;&#9;border-bottom:.5pt solid windowtext;&#10;&#9;border-left:none;&#10;&#9;white-space:normal;}&#10;.xl25&#10;&#9;{mso-style-parent:style0;&#10;&#9;text-align:center;&#10;&#9;vertical-align:top;&#10;&#9;font-weight:bold;&#10;&#9;white-space:normal;&#10;&#9;font-weight:700;}&#10;.xl30&#10;&#9;{mso-style-parent:style0;&#10;&#9;text-align:center;&#10;&#9;vertical-align:top;&#10;&#9;border-top:.5pt solid windowtext;&#10;&#9;border-right:.5pt solid windowtext;&#10;&#9;border-bottom:.5pt solid windowtext;&#10;&#9;border-left:none;&#10;&#9;white-space:normal;}&#10;.xl31&#10;&#9;{mso-style-parent:style0;&#10;&#9;text-align:center;&#10;&#9;vertical-align:top;&#10;&#9;border-top:none;&#10;&#9;border-right:.5pt solid windowtext;&#10;&#9;border-bottom:.5pt solid windowtext;&#10;&#9;border-left:none;&#10;&#9;background:yellow;&#10;&#9;mso-pattern:auto none;&#10;&#9;white-space:normal;}&#10;--&gt;&#10;&lt;/style&gt;&#10;&lt;!--[if gte mso 9]&gt;&lt;xml&gt;&#10; &lt;x:ExcelWorkbook&gt;&#10;  &lt;x:ExcelWorksheets&gt;&#10;   &lt;x:ExcelWorksheet&gt;&#10;    &lt;x:Name&gt;" + SHEET_CAPTION + "&lt;/x:Name&gt;&#10;    &lt;x:WorksheetOptions&gt;&#10;     &lt;x:Print&gt;&#10;      &lt;x:ValidPrinterInfo/&gt;&#10;      &lt;x:PaperSizeIndex&gt;9&lt;/x:PaperSizeIndex&gt;&#10;      &lt;x:HorizontalResolution&gt;600&lt;/x:HorizontalResolution&gt;&#10;      &lt;x:VerticalResolution&gt;0&lt;/x:VerticalResolution&gt;&#10;     &lt;/x:Print&gt;&#10;     &lt;x:PageBreakZoom&gt;60&lt;/x:PageBreakZoom&gt;&#10;     &lt;x:Selected/&gt;&#10;     &lt;x:Panes&gt;&#10;      &lt;x:Pane&gt;&#10;       &lt;x:Number&gt;3&lt;/x:Number&gt;&#10;       &lt;x:ActiveRow&gt;23&lt;/x:ActiveRow&gt;&#10;       &lt;x:ActiveCol&gt;15&lt;/x:ActiveCol&gt;&#10;      &lt;/x:Pane&gt;&#10;     &lt;/x:Panes&gt;&#10;     &lt;x:ProtectContents&gt;False&lt;/x:ProtectContents&gt;&#10;     &lt;x:ProtectObjects&gt;False&lt;/x:ProtectObjects&gt;&#10;     &lt;x:ProtectScenarios&gt;False&lt;/x:ProtectScenarios&gt;&#10;    &lt;/x:WorksheetOptions&gt;&#10;   &lt;/x:ExcelWorksheet&gt;&#10;  &lt;/x:ExcelWorksheets&gt;&#10;  &lt;x:WindowHeight&gt;9300&lt;/x:WindowHeight&gt;&#10;  &lt;x:WindowWidth&gt;15135&lt;/x:WindowWidth&gt;&#10;  &lt;x:WindowTopX&gt;120&lt;/x:WindowTopX&gt;&#10;  &lt;x:WindowTopY&gt;120&lt;/x:WindowTopY&gt;&#10;  &lt;x:AcceptLabelsInFormulas/&gt;&#10;  &lt;x:ProtectStructure&gt;False&lt;/x:ProtectStructure&gt;&#10;  &lt;x:ProtectWindows&gt;False&lt;/x:ProtectWindows&gt;&#10; &lt;/x:ExcelWorkbook&gt;&#10;&lt;/xml&gt;&lt;![endif]--&gt;&#10;&lt;!--[if gte mso 9]&gt;&lt;xml&gt;&#10; &lt;o:shapedefaults v:ext=\"edit\" spidmax=\"2049\"/&gt;&#10;&lt;/xml&gt;&lt;![endif]--&gt;&lt;!--[if gte mso 9]&gt;&lt;xml&gt;&#10; &lt;o:shapelayout v:ext=\"edit\"&gt;&#10;  &lt;o:idmap v:ext=\"edit\" data=\"1\"/&gt;&#10; &lt;/o:shapelayout&gt;&lt;/xml&gt;&lt;![endif]--&gt;&#10;&lt;/head&gt;&#10;&lt;body link=blue vlink=purple&gt;";&#10;html_EXCEL+=EXCEL_TABLE;&#10;html_EXCEL+="&lt;table border=0 cellpadding=0 cellspacing=0 style='border-collapse:collapse'&gt;&#10; &lt;col width=64 span=14 style='width:48pt'&gt;&#10; &lt;tr height=17 style='height:12.75pt'&gt;";&#10;&#10;&#9;html_TEXT += '&#10;&lt;table align="center"&gt;';&#10;&#9;&#9;// гистограмма для HTML&#10;&#9;&#9;html_TEXT += '&#10; &lt;tr&gt;&#10;  &lt;td&gt;&#10;&#10;&lt;center&gt;&#10;&lt;span id="ch1span"&gt;';&#10;&#9;&#9;_ind=0;&#10;&#9;&#9;&#10;&#9;&#9;oExcelDoc1 = new ActiveXObject("Websoft.Office.Excel.Document");&#10;&#9;&#9;oExcelDoc1.CreateWorkBook();&#10;&#9;&#9;oWorksheet1 = oExcelDoc1.GetWorksheet(0);&#10;&#9;&#9;str_cat = "";&#10;&#9;&#9;chart4 = oWorksheet1.AddChart("Column", 0, 0, 800, 600);&#10;&#9;&#9;for (_graph_elem in _graph_data)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;if (_graph_elem.values=="")&#10;&#9;&#9;&#9;&#9;continue;&#10;&#9;&#9;&#9;series42 = chart4.AddSeries("Column", "{"+ _graph_elem.values + "}", true);&#10;&#9;&#9;&#9;//series42.DataLabels.ShowValue = true;&#10;&#9;&#9;&#9;//series42.Area.ForegroundColor = "#808080"; &#10;&#9;&#9;&#9;series42.Name = _graph_elem.series;&#10;&#9;&#9;&#9;&#10;&#9;&#9;&#9;str_cat += (str_cat != "" ? "," : "") + _graph_elem.categoties;&#10;&#10;&#9;&#9;}&#10;&#9;&#9;chart4.BackgroundColor = "#FFFFFF";&#10;&#9;&#9;chart4.CategoryData = "{" + str_cat + "}";&#10;&#9;&#9;chart4.ShowLegend = true;&#10;&#9;&#9;str_image4 = chart4.GetImageInBase64String('png');&#9;&#10;&#10;&#9;&#9;html_TEXT += '&#10;&#9;&#9;&lt;img width=800 height=600 src=\"data:image/png;base64, ' + str_image4 + '\" &gt;&#10;&lt;/span&gt;&#10;&lt;/center&gt;&#10;  &lt;/td&gt;&#10; &lt;/tr&gt;';&#10;&#10;&#9;&#9;// гистограмма для Excel&#10;&#9;&#9;html_EXCEL += '&#10;  &lt;td height=17 width=64 style="height:12.75pt;width:48pt" align=left valign=top&gt;&#10;  &lt;v:shapetype id="_x0000_t201" coordsize="21600,21600" o:spt="201" path="m,l,21600r21600,l21600,xe"&gt;&#10;   &lt;v:stroke joinstyle="miter"/&gt;&#10;   &lt;v:path shadowok="f" o:extrusionok="f" strokeok="f" fillok="f" o:connecttype="rect"/&gt;&#10;   &lt;o:lock v:ext="edit" shapetype="t"/&gt;&#10;  &lt;/v:shapetype&gt;&lt;v:shape id="_x0000_s1025" type="#_x0000_t201" style="position:absolute;margin-left:4.5pt;margin-top:5.25pt;width:650.25pt;height:671.25pt;z-index:1" fillcolor="window [78]" strokecolor="windowText [77]" strokeweight="3e-5mm" o:insetmode="auto"&gt;&#10;   &lt;v:fill color2="windowText [77]"/&gt;&#10;   &lt;o:lock v:ext="edit" rotation="t" text="t"/&gt;&#10;   &lt;!--[if mso]&gt;&#10;   &lt;x:ClientData ObjectType="Chart"&gt;&#10;    &lt;x:WebChart&gt;&#10;     &lt;x:Scaling&gt;&#10;      &lt;x:ScaleID&gt;0&lt;/x:ScaleID&gt;&#10;      &lt;x:Orientation&gt;MinMax&lt;/x:Orientation&gt;&#10;     &lt;/x:Scaling&gt;&#10;     &lt;x:Scaling&gt;&#10;      &lt;x:ScaleID&gt;1&lt;/x:ScaleID&gt;&#10;      &lt;x:Orientation&gt;MinMax&lt;/x:Orientation&gt;&#10;     &lt;/x:Scaling&gt;&#10;     &lt;x:Chart&gt;&#10;      &lt;x:Name&gt;Chart 1&lt;/x:Name&gt;&#10;      &lt;x:Title&gt;&#10;       &lt;x:Caption&gt;&#10;        &lt;x:DataSource&gt;-1&lt;/x:DataSource&gt;&#10;        &lt;x:Data&gt;&amp;quot;&lt;x:B&gt;&lt;/x:B&gt;&amp;quot;&lt;/x:Data&gt;&#10;       &lt;/x:Caption&gt;&#10;       &lt;x:Font&gt;&#10;        &lt;x:FontName&gt;Arial&lt;/x:FontName&gt;&#10;        &lt;x:Size&gt;17.25&lt;/x:Size&gt;&#10;        &lt;x:B/&gt;&#10;        &lt;x:AutoScale/&gt;&#10;       &lt;/x:Font&gt;&#10;       &lt;x:Border&gt;&#10;        &lt;x:ColorIndex&gt;None&lt;/x:ColorIndex&gt;&#10;       &lt;/x:Border&gt;&#10;       &lt;x:Interior&gt;&#10;        &lt;x:ColorIndex&gt;None&lt;/x:ColorIndex&gt;&#10;       &lt;/x:Interior&gt;&#10;      &lt;/x:Title&gt;&#10;      &lt;x:Options&gt;&#10;       &lt;x:SizeWithWindow/&gt;&#10;      &lt;/x:Options&gt;&#10;      &lt;x:PageSetup&gt;&#10;       &lt;x:ChartSize&gt;FullPage&lt;/x:ChartSize&gt;&#10;      &lt;/x:PageSetup&gt;&#10;      &lt;x:Font&gt;&#10;       &lt;x:FontName&gt;Arial&lt;/x:FontName&gt;&#10;       &lt;x:Size&gt;10&lt;/x:Size&gt;&#10;       &lt;x:AutoScale/&gt;&#10;      &lt;/x:Font&gt;&#10;      &lt;x:Left&gt;0&lt;/x:Left&gt;&#10;      &lt;x:Top&gt;-6030&lt;/x:Top&gt;&#10;      &lt;x:Width&gt;13019.9853515625&lt;/x:Width&gt;&#10;      &lt;x:Height&gt;19469.99267578125&lt;/x:Height&gt;&#10;      &lt;x:ChartGrowth&gt;&#10;       &lt;x:HorzGrowth&gt;1&lt;/x:HorzGrowth&gt;&#10;       &lt;x:VertGrowth&gt;1&lt;/x:VertGrowth&gt;&#10;      &lt;/x:ChartGrowth&gt;&#10;      &lt;x:PlotArea&gt;&#10;      &lt;x:Interior&gt;&#10;       &lt;x:ColorIndex&gt;14&lt;/x:ColorIndex&gt;&#10;      &lt;/x:Interior&gt;&#10;       &lt;x:Font&gt;&#10;        &lt;x:FontName&gt;Arial&lt;/x:FontName&gt;&#10;        &lt;x:Size&gt;10&lt;/x:Size&gt;&#10;        &lt;x:AutoScale/&gt;&#10;       &lt;/x:Font&gt;&#10;       &lt;x:Graph&gt;&#10;        &lt;x:Type&gt;Column&lt;/x:Type&gt;&#10;        &lt;x:SubType&gt;Clustered&lt;/x:SubType&gt;&#10;        &lt;x:ScaleID&gt;0&lt;/x:ScaleID&gt;&#10;        &lt;x:ScaleID&gt;1&lt;/x:ScaleID&gt;';&#10;&#10;&#9;for (_graph_elem in _graph_data)&#10;&#9;{&#10;&#9;&#9;html_EXCEL += '&#10;&#9;&#9; &lt;x:Series&gt;&#10;&#9;&#9;  &lt;x:Index&gt;'+_ind+'&lt;/x:Index&gt;&#10;&#9;&#9;  &lt;x:Caption&gt;&#10;&#9;&#9;   &lt;x:DataSource&gt;-1&lt;/x:DataSource&gt;&#10;&#9;&#9;   &lt;x:Data&gt;&amp;quot;'+_graph_elem.series+'&amp;quot;&lt;/x:Data&gt;&#10;&#9;&#9;  &lt;/x:Caption&gt;&#10;&#9;&#9;  &lt;x:Name&gt;'+_graph_elem.series+'&lt;/x:Name&gt;&#10;&#9;&#9;  &lt;x:Marker&gt;&#10;&#9;&#9;   &lt;x:Size&gt;5&lt;/x:Size&gt;&#10;&#9;&#9;  &lt;/x:Marker&gt;&#10;&#9;&#9;  &lt;x:Category&gt;&#10;&#9;&#9;   &lt;x:DataSource&gt;-1&lt;/x:DataSource&gt;&#10;&#9;&#9;   &lt;x:Data&gt;{&amp;quot;' + StrReplace(_graph_elem.categoties, ",", "&amp;quot;,&amp;quot;")+'&amp;quot;}&lt;/x:Data&gt;&#10;&#9;&#9;  &lt;/x:Category&gt;&#10;&#9;&#9;  &lt;x:Value&gt;&#10;&#9;&#9;   &lt;x:DataSource&gt;-1&lt;/x:DataSource&gt;&#10;&#9;&#9;   &lt;x:Data&gt;{'+_graph_elem.values+'}&lt;/x:Data&gt;&#10;&#9;&#9;  &lt;/x:Value&gt;&#10;&#9;&#9; &lt;/x:Series&gt;';&#10;&#9;&#9;_ind++;&#10;&#9;}&#10;&#10;&#9;&#9;html_EXCEL += '&#10;       &lt;/x:Graph&gt;&#10;       &lt;x:Axis&gt;&#10;        &lt;x:Placement&gt;Bottom&lt;/x:Placement&gt;&#10;        &lt;x:AxisID&gt;0&lt;/x:AxisID&gt;&#10;        &lt;x:ScaleID&gt;0&lt;/x:ScaleID&gt;&#10;        &lt;x:CrossingAxis&gt;1&lt;/x:CrossingAxis&gt;&#10;&#9;&#9;&lt;x:CrossesAt&gt;0&lt;/x:CrossesAt&gt;&#10;        &lt;x:Alignment&gt;&#10;         &lt;x:Rotation&gt;90&lt;/x:Rotation&gt;&#10;        &lt;/x:Alignment&gt;&#10;        &lt;x:Font&gt;&#10;         &lt;x:FontName&gt;Arial&lt;/x:FontName&gt;&#10;         &lt;x:Size&gt;10&lt;/x:Size&gt;&#10;         &lt;x:AutoScale/&gt;&#10;        &lt;/x:Font&gt;&#10;        &lt;x:Number&gt;&#10;         &lt;x:SourceLinked/&gt;&#10;         &lt;x:BuiltInFormat&gt;0&lt;/x:BuiltInFormat&gt;&#10;        &lt;/x:Number&gt;&#10;        &lt;x:Type&gt;Category&lt;/x:Type&gt;&#10;&#9;&#9;&lt;x:GroupingEnum&gt;None&lt;/x:GroupingEnum&gt;&#10;       &lt;/x:Axis&gt;&#10;       &lt;x:Axis&gt;&#10;        &lt;x:Placement&gt;Left&lt;/x:Placement&gt;&#10;        &lt;x:AxisID&gt;1&lt;/x:AxisID&gt;&#10;        &lt;x:ScaleID&gt;1&lt;/x:ScaleID&gt;&#10;&#9;&#9;&lt;x:MajorGridlines/&gt;&#10;        &lt;x:CrossingAxis&gt;0&lt;/x:CrossingAxis&gt;&#10;        &lt;x:CrossesAt&gt;Minimum&lt;/x:CrossesAt&gt;&#10;        &lt;x:CrossBetween&gt;Between&lt;/x:CrossBetween&gt;&#10;        &lt;x:Font&gt;&#10;         &lt;x:FontName&gt;Arial&lt;/x:FontName&gt;&#10;         &lt;x:Size&gt;10&lt;/x:Size&gt;&#10;         &lt;x:AutoScale/&gt;&#10;        &lt;/x:Font&gt;&#10;        &lt;x:Number&gt;&#10;         &lt;x:SourceLinked/&gt;&#10;         &lt;x:BuiltInFormat&gt;0&lt;/x:BuiltInFormat&gt;&#10;        &lt;/x:Number&gt;&#10;        &lt;x:Type&gt;Value&lt;/x:Type&gt;&#10;       &lt;/x:Axis&gt;&#10;      &lt;/x:PlotArea&gt;&#10;      &lt;x:Legend&gt;&#10;       &lt;x:Placement&gt;Right&lt;/x:Placement&gt;&#10;       &lt;x:Font&gt;&#10;        &lt;x:FontName&gt;Arial&lt;/x:FontName&gt;&#10;        &lt;x:Size&gt;10&lt;/x:Size&gt;&#10;        &lt;x:AutoScale/&gt;&#10;       &lt;/x:Font&gt;&#10;      &lt;/x:Legend&gt;&#10;     &lt;/x:Chart&gt;&#10;    &lt;/x:WebChart&gt;&#10;   &lt;/x:ClientData&gt;&#10;   &lt;![endif]--&gt;&lt;/v:shape&gt;';&#10;&#10;&#9;&#9;html_EXCEL += "&#10;&lt;![if !vml]&gt;&#10;   &lt;span style='mso-ignore:vglayout;position:absolute;z-index:1;margin-left:6px;margin-top:7px;width:868px;height:589px'&gt;&lt;/span&gt;&#10;&lt;![endif]&gt;&#10;   &lt;span style='mso-ignore:vglayout2'&gt;&#10;  &lt;table cellpadding=0 cellspacing=0&gt;&#10;   &lt;tr&gt;&#10;    &lt;td height=17 class=xl24 width=64 style='height:12.75pt;width:48pt'&gt;&lt;/td&gt;&#10;   &lt;/tr&gt;&#10;  &lt;/table&gt;&#10;  &lt;/span&gt;&#10;  &lt;/td&gt;&#10;  &lt;td class=xl24 width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;  &lt;td class=xl24 width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;  &lt;td class=xl24 width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;  &lt;td class=xl24 width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;  &lt;td class=xl24 width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;  &lt;td class=xl24 width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;  &lt;td class=xl24 width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;  &lt;td class=xl24 width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;  &lt;td class=xl24 width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;  &lt;td class=xl24 width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;  &lt;td class=xl24 width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;  &lt;td class=xl24 width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;  &lt;td class=xl24 width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;  &lt;td class=xl24 width=64 style='width:48pt'&gt;&lt;/td&gt;&#10; &lt;/tr&gt;";&#10; &#10;&#10;&#9;html_TEXT += '&#10;&lt;table align="center"&gt;';&#10;&#9;&#9;// гистограмма для HTML&#10;&#9;&#9;html_TEXT += '&#10; &lt;tr&gt;&#10;  &lt;td&gt;&#10;&#10;&lt;center&gt;&#10;&lt;span id="ch2span"&gt;';&#10;&#9;&#9;str_cat = "";&#10;&#9;&#9;chart5 = oWorksheet1.AddChart("RadarFilled", 0, 0, 800, 600);&#10;&#9;&#9;for (_graph_elem in _graph_data)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;series1 = chart5.AddSeries("RadarFilled", "{"+ _graph_elem.values + "}", true);&#10;&#9;&#9;&#9;//series1.DataLabels.ShowValue = true;&#10;&#9;&#9;&#9;//series1.Area.ForegroundColor = "#808080"; &#10;&#9;&#9;&#9;series1.Name = _graph_elem.series;&#10;&#9;&#9;&#9;//series1.WeightPt = 3;&#10;&#9;&#9;&#9;&#10;&#9;&#9;&#9;str_cat += (str_cat != "" ? "," : "") + _graph_elem.categoties;&#10;&#10;&#9;&#9;}&#10;&#9;&#9;chart5.BackgroundColor = "#FFFFFF";&#10;&#9;&#9;chart5.CategoryData = "{" + str_cat + "}";&#10;&#9;&#9;chart5.ShowLegend = true;&#10;&#9;&#9;str_image5 = chart5.GetImageInBase64String('png');&#10;&#10;html_TEXT += '&#10;&lt;img width=800 height=600 src=\"data:image/png;base64, ' + str_image5 + '\" &gt;&#10;&lt;/span&gt;&#10;&lt;/center&gt;&#10;  &lt;/td&gt;&#10; &lt;/tr&gt;&#10;  &lt;/table&gt;';&#10;&#10;&#9;&#9;// гистограмма для Excel&#10;&#9;&#9;html_EXCEL += '&lt;/table&gt;&#10;&#9;&#9;&lt;table x:str border=0 cellpadding=0 cellspacing=0 style="border-collapse:collapse"&gt;&#10; &lt;col width=64 span=14 style="width:48pt"&gt;&#10; &lt;tr height=17 style="height:12.75pt"&gt;&#10;&#9;&#9;&#10;&#9;&#9;&#10;  &lt;td height=17 width=64 style="height:12.75pt;width:48pt" align=left valign=top&gt;&#10;  &lt;v:shapetype id="_x0000_t201" coordsize="21600,21600" o:spt="201" path="m,l,21600r21600,l21600,xe"&gt;&#10;   &lt;v:stroke joinstyle="miter"/&gt;&#10;   &lt;v:path shadowok="f" o:extrusionok="f" strokeok="f" fillok="f" o:connecttype="rect"/&gt;&#10;   &lt;o:lock v:ext="edit" shapetype="t"/&gt;&#10;  &lt;/v:shapetype&gt;&lt;v:shape id="_x0000_s1025" type="#_x0000_t201" style="position:absolute;margin-left:4.5pt;margin-top:665.25pt;width:650.25pt;height:671.25pt;z-index:1" fillcolor="window [78]" strokecolor="windowText [77]" strokeweight="3e-5mm" o:insetmode="auto"&gt;&#10;   &lt;v:fill color2="windowText [77]"/&gt;&#10;   &lt;o:lock v:ext="edit" rotation="t" text="t"/&gt;&#10;   &lt;!--[if mso]&gt;&#10;   &lt;x:ClientData ObjectType="Chart"&gt;&#10;    &lt;x:WebChart&gt;&#10;     &lt;x:Scaling&gt;&#10;      &lt;x:ScaleID&gt;0&lt;/x:ScaleID&gt;&#10;      &lt;x:Orientation&gt;MinMax&lt;/x:Orientation&gt;&#10;     &lt;/x:Scaling&gt;&#10;     &lt;x:Scaling&gt;&#10;      &lt;x:ScaleID&gt;1&lt;/x:ScaleID&gt;&#10;      &lt;x:Orientation&gt;MinMax&lt;/x:Orientation&gt;&#10;     &lt;/x:Scaling&gt;&#10;     &lt;x:Chart&gt;&#10;      &lt;x:Name&gt;Chart 1&lt;/x:Name&gt;&#10;      &lt;x:Title&gt;&#10;       &lt;x:Caption&gt;&#10;        &lt;x:DataSource&gt;-1&lt;/x:DataSource&gt;&#10;        &lt;x:Data&gt;&amp;quot;&lt;x:B&gt;&lt;/x:B&gt;&amp;quot;&lt;/x:Data&gt;&#10;       &lt;/x:Caption&gt;&#10;       &lt;x:Font&gt;&#10;        &lt;x:FontName&gt;Arial&lt;/x:FontName&gt;&#10;        &lt;x:Size&gt;17.25&lt;/x:Size&gt;&#10;        &lt;x:B/&gt;&#10;        &lt;x:AutoScale/&gt;&#10;       &lt;/x:Font&gt;&#10;       &lt;x:Border&gt;&#10;        &lt;x:ColorIndex&gt;None&lt;/x:ColorIndex&gt;&#10;       &lt;/x:Border&gt;&#10;       &lt;x:Interior&gt;&#10;        &lt;x:ColorIndex&gt;None&lt;/x:ColorIndex&gt;&#10;       &lt;/x:Interior&gt;&#10;      &lt;/x:Title&gt;&#10;      &lt;x:Options&gt;&#10;       &lt;x:SizeWithWindow/&gt;&#10;      &lt;/x:Options&gt;&#10;      &lt;x:PageSetup&gt;&#10;       &lt;x:ChartSize&gt;FullPage&lt;/x:ChartSize&gt;&#10;      &lt;/x:PageSetup&gt;&#10;      &lt;x:Font&gt;&#10;       &lt;x:FontName&gt;Arial&lt;/x:FontName&gt;&#10;       &lt;x:Size&gt;10&lt;/x:Size&gt;&#10;       &lt;x:AutoScale/&gt;&#10;      &lt;/x:Font&gt;&#10;      &lt;x:Left&gt;0&lt;/x:Left&gt;&#10;      &lt;x:Top&gt;-6030&lt;/x:Top&gt;&#10;      &lt;x:Width&gt;13019.9853515625&lt;/x:Width&gt;&#10;      &lt;x:Height&gt;19469.99267578125&lt;/x:Height&gt;&#10;      &lt;x:ChartGrowth&gt;&#10;       &lt;x:HorzGrowth&gt;1&lt;/x:HorzGrowth&gt;&#10;       &lt;x:VertGrowth&gt;1&lt;/x:VertGrowth&gt;&#10;      &lt;/x:ChartGrowth&gt;&#10;      &lt;x:PlotArea&gt;&#10;      &lt;x:Interior&gt;&#10;       &lt;x:ColorIndex&gt;14&lt;/x:ColorIndex&gt;&#10;      &lt;/x:Interior&gt;&#10;       &lt;x:Font&gt;&#10;        &lt;x:FontName&gt;Arial&lt;/x:FontName&gt;&#10;        &lt;x:Size&gt;10&lt;/x:Size&gt;&#10;        &lt;x:AutoScale/&gt;&#10;       &lt;/x:Font&gt;&#10;       &lt;x:Graph&gt;&#10;        &lt;x:Type&gt;Radar&lt;/x:Type&gt;&#10;        &lt;x:SubType&gt;Filled&lt;/x:SubType&gt;&#10;        &lt;x:ScaleID&gt;0&lt;/x:ScaleID&gt;&#10;        &lt;x:ScaleID&gt;1&lt;/x:ScaleID&gt;';&#10;&#10;&#9;for (_graph_elem in _graph_data)&#10;&#9;{&#10;&#9;&#9;html_EXCEL += '&#10;&#9;&#9; &lt;x:Series&gt;&#10;&#9;&#9;  &lt;x:Index&gt;'+_ind+'&lt;/x:Index&gt;&#10;&#9;&#9;  &lt;x:Caption&gt;&#10;&#9;&#9;   &lt;x:DataSource&gt;-1&lt;/x:DataSource&gt;&#10;&#9;&#9;   &lt;x:Data&gt;&amp;quot;'+_graph_elem.series+'&amp;quot;&lt;/x:Data&gt;&#10;&#9;&#9;  &lt;/x:Caption&gt;&#10;&#9;&#9;  &lt;x:Name&gt;'+_graph_elem.series+'&lt;/x:Name&gt;&#10;&#9;&#9;  &lt;x:Marker&gt;&#10;&#9;&#9;   &lt;x:Size&gt;5&lt;/x:Size&gt;&#10;&#9;&#9;  &lt;/x:Marker&gt;&#10;&#9;&#9;  &lt;x:Category&gt;&#10;&#9;&#9;   &lt;x:DataSource&gt;-1&lt;/x:DataSource&gt;&#10;&#9;&#9;   &lt;x:Data&gt;{&amp;quot;' + StrReplace(_graph_elem.categoties, ",", "&amp;quot;,&amp;quot;")+'&amp;quot;}&lt;/x:Data&gt;&#10;&#9;&#9;  &lt;/x:Category&gt;&#10;&#9;&#9;  &lt;x:Value&gt;&#10;&#9;&#9;   &lt;x:DataSource&gt;-1&lt;/x:DataSource&gt;&#10;&#9;&#9;   &lt;x:Data&gt;{'+_graph_elem.values+'}&lt;/x:Data&gt;&#10;&#9;&#9;  &lt;/x:Value&gt;&#10;&#9;&#9; &lt;/x:Series&gt;';&#10;&#9;&#9;_ind++;&#10;&#9;}&#10;&#10;&#9;&#9;html_EXCEL += '&#10;       &lt;/x:Graph&gt;&#10;       &lt;x:Axis&gt;&#10;        &lt;x:Placement&gt;Bottom&lt;/x:Placement&gt;&#10;        &lt;x:AxisID&gt;0&lt;/x:AxisID&gt;&#10;        &lt;x:ScaleID&gt;0&lt;/x:ScaleID&gt;&#10;&#9;&#9;&lt;x:MajorGridlines/&gt;&#10;        &lt;x:CrossingAxis&gt;1&lt;/x:CrossingAxis&gt;&#10;&#9;&#9;&lt;x:CrossesAt&gt;0&lt;/x:CrossesAt&gt;&#10;        &lt;x:Font&gt;&#10;         &lt;x:FontName&gt;Arial&lt;/x:FontName&gt;&#10;         &lt;x:Size&gt;10&lt;/x:Size&gt;&#10;         &lt;x:AutoScale/&gt;&#10;        &lt;/x:Font&gt;&#10;        &lt;x:Number&gt;&#10;         &lt;x:SourceLinked/&gt;&#10;         &lt;x:BuiltInFormat&gt;0&lt;/x:BuiltInFormat&gt;&#10;        &lt;/x:Number&gt;&#10;        &lt;x:Type&gt;Category&lt;/x:Type&gt;&#10;&#9;&#9;&lt;x:GroupingEnum&gt;None&lt;/x:GroupingEnum&gt;&#10;       &lt;/x:Axis&gt;&#10;       &lt;x:Axis&gt;&#10;        &lt;x:Placement&gt;Left&lt;/x:Placement&gt;&#10;        &lt;x:AxisID&gt;1&lt;/x:AxisID&gt;&#10;        &lt;x:ScaleID&gt;1&lt;/x:ScaleID&gt;&#10;&#9;&#9;&lt;x:MajorGridlines/&gt;&#10;        &lt;x:CrossingAxis&gt;0&lt;/x:CrossingAxis&gt;&#10;        &lt;x:CrossesAt&gt;Minimum&lt;/x:CrossesAt&gt;&#10;        &lt;x:CrossBetween&gt;Between&lt;/x:CrossBetween&gt;&#10;        &lt;x:Font&gt;&#10;         &lt;x:FontName&gt;Arial&lt;/x:FontName&gt;&#10;         &lt;x:Size&gt;10&lt;/x:Size&gt;&#10;         &lt;x:AutoScale/&gt;&#10;        &lt;/x:Font&gt;&#10;        &lt;x:Number&gt;&#10;         &lt;x:SourceLinked/&gt;&#10;         &lt;x:BuiltInFormat&gt;0&lt;/x:BuiltInFormat&gt;&#10;        &lt;/x:Number&gt;&#10;&#9;&#9;&lt;x:MajorTick&gt;Cross&lt;/x:MajorTick&gt;&#10;        &lt;x:Type&gt;Value&lt;/x:Type&gt;&#10;       &lt;/x:Axis&gt;&#10;      &lt;/x:PlotArea&gt;&#10;      &lt;x:Legend&gt;&#10;       &lt;x:Placement&gt;Right&lt;/x:Placement&gt;&#10;       &lt;x:Font&gt;&#10;        &lt;x:FontName&gt;Arial&lt;/x:FontName&gt;&#10;        &lt;x:Size&gt;10&lt;/x:Size&gt;&#10;        &lt;x:AutoScale/&gt;&#10;       &lt;/x:Font&gt;&#10;      &lt;/x:Legend&gt;&#10;     &lt;/x:Chart&gt;&#10;    &lt;/x:WebChart&gt;&#10;   &lt;/x:ClientData&gt;&#10;   &lt;![endif]--&gt;&lt;/v:shape&gt;';&#10;&#10;&#9;&#9;html_EXCEL += "&#10;&lt;![if !vml]&gt;&#10;   &lt;span style='mso-ignore:vglayout;position:absolute;z-index:1;margin-left:6px;margin-top:7px;width:868px;height:589px'&gt;&lt;/span&gt;&#10;&lt;![endif]&gt;&#10;   &lt;span style='mso-ignore:vglayout2'&gt;&#10;  &lt;table cellpadding=0 cellspacing=0&gt;&#10;   &lt;tr&gt;&#10;    &lt;td height=17 class=xl24 width=64 style='height:12.75pt;width:48pt'&gt;&lt;/td&gt;&#10;   &lt;/tr&gt;&#10;  &lt;/table&gt;&#10;  &lt;/span&gt;&#10;  &lt;/td&gt;&#10;  &lt;td class=xl24 width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;  &lt;td class=xl24 width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;  &lt;td class=xl24 width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;  &lt;td class=xl24 width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;  &lt;td class=xl24 width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;  &lt;td class=xl24 width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;  &lt;td class=xl24 width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;  &lt;td class=xl24 width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;  &lt;td class=xl24 width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;  &lt;td class=xl24 width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;  &lt;td class=xl24 width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;  &lt;td class=xl24 width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;  &lt;td class=xl24 width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;  &lt;td class=xl24 width=64 style='width:48pt'&gt;&lt;/td&gt;&#10; &lt;/tr&gt;";&#10;&#10;&#9;html_EXCEL += "&#10; &lt;tr height=17 style='height:12.75pt'&gt;&#10;  &lt;td height=17 colspan=14 class=xl24 style='height:12.75pt;mso-ignore:colspan'&gt;&lt;/td&gt;&#10;  &lt;td&gt;&lt;/td&gt;&#10; &lt;/tr&gt;";&#10;&#10;&#9;html_EXCEL += "&#10; &lt;tr height=306 style='height:229.5pt;mso-xlrowspan:18'&gt;&#10;  &lt;td height=306 colspan=15 style='height:229.5pt;mso-ignore:colspan'&gt;&lt;/td&gt;&#10; &lt;/tr&gt;";&#10;&#10;html_EXCEL += "&#10;  &lt;td width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;  &lt;td width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;  &lt;td width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;  &lt;td width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;  &lt;td width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;  &lt;td width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;  &lt;td width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;  &lt;td width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;  &lt;td width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;  &lt;td width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;  &lt;td width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;  &lt;td width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;  &lt;td width=64 style='width:48pt'&gt;&lt;/td&gt;&#10; &lt;/tr&gt;&#10; &lt;tr height=595 style='height:446.25pt;mso-xlrowspan:35'&gt;&#10;  &lt;td height=595 colspan=14 style='height:446.25pt;mso-ignore:colspan'&gt;&lt;/td&gt;&#10; &lt;/tr&gt;&#10; &lt;![if supportMisalignedColumns]&gt;&#10; &lt;tr height=0 style='display:none'&gt;&#10;  &lt;td width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;  &lt;td width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;  &lt;td width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;  &lt;td width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;  &lt;td width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;  &lt;td width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;  &lt;td width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;  &lt;td width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;  &lt;td width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;  &lt;td width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;  &lt;td width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;  &lt;td width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;  &lt;td width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;  &lt;td width=64 style='width:48pt'&gt;&lt;/td&gt;&#10; &lt;/tr&gt;&#10; &lt;![endif]&gt;&#10;&lt;/table&gt;&#10;&lt;/body&gt;&#10;&lt;/html&gt;";&#10;&#10;&#10;tools_web.remove_user_data("excel_html_" + curUserID);&#10;//tools_web.set_user_data("excel_html_" + curUserID, {'html': EncodeCharset(html_EXCEL, "windows-1251")}, 1000);&#10;//Для этого клиента кодировку не меняем!!!!&#10;tools_web.set_user_data("excel_html_" + curUserID, {'html': html_EXCEL}, 86000);&#10;&#10;Response.Write(html_TEXT);&#10;}&#10;catch(_zz)&#10;{&#10;&#9;alert(_zz);&#10;}&#10;%&gt;</code_text>
			</exec_code>
			<html>&lt;%&#10;// -----------------------------------------------------------------------------------------------------------------------------&#10;// автор:&#9;VB&#10;// создан:&#9;22.07.2013&#10;// изменен:&#9;&#10;// ---------------------------------------------------Описание------------------------------------------------------------------&#10;// Библиотека утилит и компонент Вебсофт для проектов кастомизации - построени графика-гистораммы. &#10;// Шаблон предназначен для использование через функцию tools_web.insert_custom_code(ID, TOP_ELEM, bEval, bNaked)&#10;// Переменные:&#10;//&#9;&lt;нет&gt;&#10;// Функции:&#10;//&#9;&lt;нет&gt;&#10;// -----------------------------------------------------------Параметры шаблона-------------------------------------------------&#10;// &lt;нет&gt;&#10;// -----------------------------------------------------------Глобальные переменные---------------------------------------------&#10;// html_TEXT - отчет для отображения в браузере (String)&#10;// html_EXCEL - отчет для Excel (String)&#10;// SHEET_CAPTION - загловок листа Excel&#10;// -----------------------------------------------------------Константы---------------------------------------------------------&#10;// нет&#10;//------------------------------------------------------------------------------------------------------------------------------&#10;&#10;// включить/отключить режим отладки&#10;try{ DEBUG }catch(e){ DEBUG = false; }&#10;&#10;try&#10;{&#10;&#9;SHEET_CAPTION&#10;}&#10;catch(e)&#10;{&#10;&#9;SHEET_CAPTION = "";&#10;}&#10;try&#10;{&#10;html_TEXT = "&#10;&lt;!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0 Transitional//EN\"&gt;&#10;&lt;HTML&gt;&#10;&lt;HEAD&gt;&#10;&lt;META content=\"text/html; charset=windows-1251\" http-equiv=Content-Type&gt;&#10;&lt;style&gt;&#10;.xl29&#10;&#9;{mso-style-parent:style0;&#10;&#9;text-align:center;&#10;&#9;vertical-align:top;&#10;&#9;border-top:.5pt solid windowtext;&#10;&#9;border-right:.5pt solid windowtext;&#10;&#9;border-bottom:.5pt solid windowtext;&#10;&#9;border-left:none;&#10;&#9;white-space:normal;}&#10;.xl30&#10;&#9;{mso-style-parent:style0;&#10;&#9;text-align:center;&#10;&#9;vertical-align:top;&#10;&#9;border-top:none;&#10;&#9;border-right:.5pt solid windowtext;&#10;&#9;border-bottom:.5pt solid windowtext;&#10;&#9;border-left:none;&#10;&#9;white-space:normal;}&#10;.xl31&#10;&#9;{mso-style-parent:style0;&#10;&#9;text-align:center;&#10;&#9;vertical-align:top;&#10;&#9;border-top:none;&#10;&#9;border-right:.5pt solid windowtext;&#10;&#9;border-bottom:.5pt solid windowtext;&#10;&#9;border-left:none;&#10;&#9;background:yellow;&#10;&#9;mso-pattern:auto none;&#10;&#9;white-space:normal;}&#10;--&gt;&#10;&lt;/style&gt;&#10;&lt;/HEAD&gt;";&#10;&#10;&#10;//&lt;meta http-equiv=Content-Type content=\"text/html; charset=windows-1251\"&gt;&#10;&#10;html_EXCEL = "&#10;&lt;html xmlns:v=\"urn:schemas-microsoft-com:vml\"&#10;xmlns:o=\"urn:schemas-microsoft-com:office:office\"&#10;xmlns:x=\"urn:schemas-microsoft-com:office:excel\"&#10;xmlns=\"http://www.w3.org/TR/REC-html40\"&gt;&#10;&lt;head&gt;&#10;&lt;meta http-equiv=Content-Type content=\"text/html; charset=utf-8\"&gt;&#10;&lt;meta name=ProgId content=Excel.Sheet&gt;&#10;&lt;meta name=Generator content=\"Microsoft Excel 11\"&gt;&#10;&lt;!--[if !mso]&gt;&#10;&lt;style&gt;&#10;v\:* {behavior:url(#default#VML);}&#10;o\:* {behavior:url(#default#VML);}&#10;x\:* {behavior:url(#default#VML);}&#10;.shape {behavior:url(#default#VML);}&#10;&lt;/style&gt;&#10;&lt;![endif]--&gt;&lt;!--[if gte mso 9]&gt;&lt;xml&gt;&#10; &lt;o:DocumentProperties&gt;&#10;  &lt;o:Author&gt;ТНК ВР&lt;/o:Author&gt;&#10;  &lt;o:LastAuthor&gt;ТНК ВР&lt;/o:LastAuthor&gt;&#10;  &lt;o:Created&gt;1996-10-14T23:33:28Z&lt;/o:Created&gt;&#10;  &lt;o:LastSaved&gt;2010-03-30T15:42:25Z&lt;/o:LastSaved&gt;&#10;  &lt;o:Version&gt;11.9999&lt;/o:Version&gt;&#10; &lt;/o:DocumentProperties&gt;&#10; &lt;o:OfficeDocumentSettings&gt;&#10;  &lt;o:RelyOnVML/&gt;&#10;  &lt;o:AllowPNG/&gt;&#10;  &lt;o:DoNotOrganizeInFolder/&gt;&#10; &lt;/o:OfficeDocumentSettings&gt;&#10;&lt;/xml&gt;&lt;![endif]--&gt;&#10;&lt;style&gt;&#10;&lt;!--table&#10;&#9;{mso-displayed-decimal-separator:\"\,\";&#10;&#9;mso-displayed-thousand-separator:\" \";}&#10;@page&#10;&#9;{margin:1.0in .75in 1.0in .75in;&#10;&#9;mso-header-margin:.5in;&#10;&#9;mso-footer-margin:.5in;&#10;&#9;mso-page-orientation:landscape;}&#10;tr&#10;&#9;{mso-height-source:auto;}&#10;col&#10;&#9;{mso-width-source:auto;}&#10;br&#10;&#9;{mso-data-placement:same-cell;}&#10;.style0&#10;&#9;{mso-number-format:General;&#10;&#9;text-align:general;&#10;&#9;vertical-align:bottom;&#10;&#9;white-space:nowrap;&#10;&#9;mso-rotate:0;&#10;&#9;mso-background-source:auto;&#10;&#9;mso-pattern:auto;&#10;&#9;color:windowtext;&#10;&#9;font-size:10.0pt;&#10;&#9;font-weight:400;&#10;&#9;font-style:normal;&#10;&#9;text-decoration:none;&#10;&#9;font-family:Arial;&#10;&#9;mso-generic-font-family:auto;&#10;&#9;mso-font-charset:0;&#10;&#9;border:none;&#10;&#9;mso-protection:locked visible;&#10;&#9;mso-style-name:Normal;&#10;&#9;mso-style-id:0;}&#10;td&#10;&#9;{mso-style-parent:style0;&#10;&#9;padding:0px;&#10;&#9;mso-ignore:padding;&#10;&#9;color:windowtext;&#10;&#9;font-size:10.0pt;&#10;&#9;font-weight:400;&#10;&#9;font-style:normal;&#10;&#9;text-decoration:none;&#10;&#9;font-family:Arial;&#10;&#9;mso-generic-font-family:auto;&#10;&#9;mso-font-charset:0;&#10;&#9;mso-number-format:General;&#10;&#9;text-align:general;&#10;&#9;border:none;&#10;&#9;mso-background-source:auto;&#10;&#9;mso-pattern:auto;&#10;&#9;mso-protection:locked visible;&#10;&#9;mso-rotate:0;}&#10;&#10;.xl29&#10;&#9;{mso-style-parent:style0;&#10;&#9;text-align:center;&#10;&#9;vertical-align:top;&#10;&#9;border-top:.5pt solid windowtext;&#10;&#9;border-right:.5pt solid windowtext;&#10;&#9;border-bottom:.5pt solid windowtext;&#10;&#9;border-left:none;&#10;&#9;white-space:normal;}&#10;.xl25&#10;&#9;{mso-style-parent:style0;&#10;&#9;text-align:center;&#10;&#9;vertical-align:top;&#10;&#9;font-weight:bold;&#10;&#9;white-space:normal;&#10;&#9;font-weight:700;}&#10;.xl30&#10;&#9;{mso-style-parent:style0;&#10;&#9;text-align:center;&#10;&#9;vertical-align:top;&#10;&#9;border-top:.5pt solid windowtext;&#10;&#9;border-right:.5pt solid windowtext;&#10;&#9;border-bottom:.5pt solid windowtext;&#10;&#9;border-left:none;&#10;&#9;white-space:normal;}&#10;.xl31&#10;&#9;{mso-style-parent:style0;&#10;&#9;text-align:center;&#10;&#9;vertical-align:top;&#10;&#9;border-top:none;&#10;&#9;border-right:.5pt solid windowtext;&#10;&#9;border-bottom:.5pt solid windowtext;&#10;&#9;border-left:none;&#10;&#9;background:yellow;&#10;&#9;mso-pattern:auto none;&#10;&#9;white-space:normal;}&#10;--&gt;&#10;&lt;/style&gt;&#10;&lt;!--[if gte mso 9]&gt;&lt;xml&gt;&#10; &lt;x:ExcelWorkbook&gt;&#10;  &lt;x:ExcelWorksheets&gt;&#10;   &lt;x:ExcelWorksheet&gt;&#10;    &lt;x:Name&gt;" + SHEET_CAPTION + "&lt;/x:Name&gt;&#10;    &lt;x:WorksheetOptions&gt;&#10;     &lt;x:Print&gt;&#10;      &lt;x:ValidPrinterInfo/&gt;&#10;      &lt;x:PaperSizeIndex&gt;9&lt;/x:PaperSizeIndex&gt;&#10;      &lt;x:HorizontalResolution&gt;600&lt;/x:HorizontalResolution&gt;&#10;      &lt;x:VerticalResolution&gt;0&lt;/x:VerticalResolution&gt;&#10;     &lt;/x:Print&gt;&#10;     &lt;x:PageBreakZoom&gt;60&lt;/x:PageBreakZoom&gt;&#10;     &lt;x:Selected/&gt;&#10;     &lt;x:Panes&gt;&#10;      &lt;x:Pane&gt;&#10;       &lt;x:Number&gt;3&lt;/x:Number&gt;&#10;       &lt;x:ActiveRow&gt;23&lt;/x:ActiveRow&gt;&#10;       &lt;x:ActiveCol&gt;15&lt;/x:ActiveCol&gt;&#10;      &lt;/x:Pane&gt;&#10;     &lt;/x:Panes&gt;&#10;     &lt;x:ProtectContents&gt;False&lt;/x:ProtectContents&gt;&#10;     &lt;x:ProtectObjects&gt;False&lt;/x:ProtectObjects&gt;&#10;     &lt;x:ProtectScenarios&gt;False&lt;/x:ProtectScenarios&gt;&#10;    &lt;/x:WorksheetOptions&gt;&#10;   &lt;/x:ExcelWorksheet&gt;&#10;  &lt;/x:ExcelWorksheets&gt;&#10;  &lt;x:WindowHeight&gt;9300&lt;/x:WindowHeight&gt;&#10;  &lt;x:WindowWidth&gt;15135&lt;/x:WindowWidth&gt;&#10;  &lt;x:WindowTopX&gt;120&lt;/x:WindowTopX&gt;&#10;  &lt;x:WindowTopY&gt;120&lt;/x:WindowTopY&gt;&#10;  &lt;x:AcceptLabelsInFormulas/&gt;&#10;  &lt;x:ProtectStructure&gt;False&lt;/x:ProtectStructure&gt;&#10;  &lt;x:ProtectWindows&gt;False&lt;/x:ProtectWindows&gt;&#10; &lt;/x:ExcelWorkbook&gt;&#10;&lt;/xml&gt;&lt;![endif]--&gt;&#10;&lt;!--[if gte mso 9]&gt;&lt;xml&gt;&#10; &lt;o:shapedefaults v:ext=\"edit\" spidmax=\"2049\"/&gt;&#10;&lt;/xml&gt;&lt;![endif]--&gt;&lt;!--[if gte mso 9]&gt;&lt;xml&gt;&#10; &lt;o:shapelayout v:ext=\"edit\"&gt;&#10;  &lt;o:idmap v:ext=\"edit\" data=\"1\"/&gt;&#10; &lt;/o:shapelayout&gt;&lt;/xml&gt;&lt;![endif]--&gt;&#10;&lt;/head&gt;&#10;&lt;body link=blue vlink=purple&gt;";&#10;html_EXCEL+=EXCEL_TABLE;&#10;html_EXCEL+="&lt;table border=0 cellpadding=0 cellspacing=0 style='border-collapse:collapse'&gt;&#10; &lt;col width=64 span=14 style='width:48pt'&gt;&#10; &lt;tr height=17 style='height:12.75pt'&gt;";&#10;&#10;&#9;html_TEXT += '&#10;&lt;table align="center"&gt;';&#10;&#9;&#9;// гистограмма для HTML&#10;&#9;&#9;html_TEXT += '&#10; &lt;tr&gt;&#10;  &lt;td&gt;&#10;&#10;&lt;center&gt;&#10;&lt;span id="ch1span"&gt;';&#10;&#9;&#9;_ind=0;&#10;&#9;&#9;&#10;&#9;&#9;oExcelDoc1 = new ActiveXObject("Websoft.Office.Excel.Document");&#10;&#9;&#9;oExcelDoc1.CreateWorkBook();&#10;&#9;&#9;oWorksheet1 = oExcelDoc1.GetWorksheet(0);&#10;&#9;&#9;str_cat = "";&#10;&#9;&#9;chart4 = oWorksheet1.AddChart("Column", 0, 0, 800, 600);&#10;&#9;&#9;for (_graph_elem in _graph_data)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;if (_graph_elem.values=="")&#10;&#9;&#9;&#9;&#9;continue;&#10;&#9;&#9;&#9;series42 = chart4.AddSeries("Column", "{"+ _graph_elem.values + "}", true);&#10;&#9;&#9;&#9;//series42.DataLabels.ShowValue = true;&#10;&#9;&#9;&#9;//series42.Area.ForegroundColor = "#808080"; &#10;&#9;&#9;&#9;series42.Name = _graph_elem.series;&#10;&#9;&#9;&#9;&#10;&#9;&#9;&#9;str_cat += (str_cat != "" ? "," : "") + _graph_elem.categoties;&#10;&#10;&#9;&#9;}&#10;&#9;&#9;chart4.BackgroundColor = "#FFFFFF";&#10;&#9;&#9;chart4.CategoryData = "{" + str_cat + "}";&#10;&#9;&#9;chart4.ShowLegend = true;&#10;&#9;&#9;str_image4 = chart4.GetImageInBase64String('png');&#9;&#10;&#10;&#9;&#9;html_TEXT += '&#10;&#9;&#9;&lt;img width=800 height=600 src=\"data:image/png;base64, ' + str_image4 + '\" &gt;&#10;&lt;/span&gt;&#10;&lt;/center&gt;&#10;  &lt;/td&gt;&#10; &lt;/tr&gt;';&#10;&#10;&#9;&#9;// гистограмма для Excel&#10;&#9;&#9;html_EXCEL += '&#10;  &lt;td height=17 width=64 style="height:12.75pt;width:48pt" align=left valign=top&gt;&#10;  &lt;v:shapetype id="_x0000_t201" coordsize="21600,21600" o:spt="201" path="m,l,21600r21600,l21600,xe"&gt;&#10;   &lt;v:stroke joinstyle="miter"/&gt;&#10;   &lt;v:path shadowok="f" o:extrusionok="f" strokeok="f" fillok="f" o:connecttype="rect"/&gt;&#10;   &lt;o:lock v:ext="edit" shapetype="t"/&gt;&#10;  &lt;/v:shapetype&gt;&lt;v:shape id="_x0000_s1025" type="#_x0000_t201" style="position:absolute;margin-left:4.5pt;margin-top:5.25pt;width:650.25pt;height:671.25pt;z-index:1" fillcolor="window [78]" strokecolor="windowText [77]" strokeweight="3e-5mm" o:insetmode="auto"&gt;&#10;   &lt;v:fill color2="windowText [77]"/&gt;&#10;   &lt;o:lock v:ext="edit" rotation="t" text="t"/&gt;&#10;   &lt;!--[if mso]&gt;&#10;   &lt;x:ClientData ObjectType="Chart"&gt;&#10;    &lt;x:WebChart&gt;&#10;     &lt;x:Scaling&gt;&#10;      &lt;x:ScaleID&gt;0&lt;/x:ScaleID&gt;&#10;      &lt;x:Orientation&gt;MinMax&lt;/x:Orientation&gt;&#10;     &lt;/x:Scaling&gt;&#10;     &lt;x:Scaling&gt;&#10;      &lt;x:ScaleID&gt;1&lt;/x:ScaleID&gt;&#10;      &lt;x:Orientation&gt;MinMax&lt;/x:Orientation&gt;&#10;     &lt;/x:Scaling&gt;&#10;     &lt;x:Chart&gt;&#10;      &lt;x:Name&gt;Chart 1&lt;/x:Name&gt;&#10;      &lt;x:Title&gt;&#10;       &lt;x:Caption&gt;&#10;        &lt;x:DataSource&gt;-1&lt;/x:DataSource&gt;&#10;        &lt;x:Data&gt;&amp;quot;&lt;x:B&gt;&lt;/x:B&gt;&amp;quot;&lt;/x:Data&gt;&#10;       &lt;/x:Caption&gt;&#10;       &lt;x:Font&gt;&#10;        &lt;x:FontName&gt;Arial&lt;/x:FontName&gt;&#10;        &lt;x:Size&gt;17.25&lt;/x:Size&gt;&#10;        &lt;x:B/&gt;&#10;        &lt;x:AutoScale/&gt;&#10;       &lt;/x:Font&gt;&#10;       &lt;x:Border&gt;&#10;        &lt;x:ColorIndex&gt;None&lt;/x:ColorIndex&gt;&#10;       &lt;/x:Border&gt;&#10;       &lt;x:Interior&gt;&#10;        &lt;x:ColorIndex&gt;None&lt;/x:ColorIndex&gt;&#10;       &lt;/x:Interior&gt;&#10;      &lt;/x:Title&gt;&#10;      &lt;x:Options&gt;&#10;       &lt;x:SizeWithWindow/&gt;&#10;      &lt;/x:Options&gt;&#10;      &lt;x:PageSetup&gt;&#10;       &lt;x:ChartSize&gt;FullPage&lt;/x:ChartSize&gt;&#10;      &lt;/x:PageSetup&gt;&#10;      &lt;x:Font&gt;&#10;       &lt;x:FontName&gt;Arial&lt;/x:FontName&gt;&#10;       &lt;x:Size&gt;10&lt;/x:Size&gt;&#10;       &lt;x:AutoScale/&gt;&#10;      &lt;/x:Font&gt;&#10;      &lt;x:Left&gt;0&lt;/x:Left&gt;&#10;      &lt;x:Top&gt;-6030&lt;/x:Top&gt;&#10;      &lt;x:Width&gt;13019.9853515625&lt;/x:Width&gt;&#10;      &lt;x:Height&gt;19469.99267578125&lt;/x:Height&gt;&#10;      &lt;x:ChartGrowth&gt;&#10;       &lt;x:HorzGrowth&gt;1&lt;/x:HorzGrowth&gt;&#10;       &lt;x:VertGrowth&gt;1&lt;/x:VertGrowth&gt;&#10;      &lt;/x:ChartGrowth&gt;&#10;      &lt;x:PlotArea&gt;&#10;      &lt;x:Interior&gt;&#10;       &lt;x:ColorIndex&gt;14&lt;/x:ColorIndex&gt;&#10;      &lt;/x:Interior&gt;&#10;       &lt;x:Font&gt;&#10;        &lt;x:FontName&gt;Arial&lt;/x:FontName&gt;&#10;        &lt;x:Size&gt;10&lt;/x:Size&gt;&#10;        &lt;x:AutoScale/&gt;&#10;       &lt;/x:Font&gt;&#10;       &lt;x:Graph&gt;&#10;        &lt;x:Type&gt;Column&lt;/x:Type&gt;&#10;        &lt;x:SubType&gt;Clustered&lt;/x:SubType&gt;&#10;        &lt;x:ScaleID&gt;0&lt;/x:ScaleID&gt;&#10;        &lt;x:ScaleID&gt;1&lt;/x:ScaleID&gt;';&#10;&#10;&#9;for (_graph_elem in _graph_data)&#10;&#9;{&#10;&#9;&#9;html_EXCEL += '&#10;&#9;&#9; &lt;x:Series&gt;&#10;&#9;&#9;  &lt;x:Index&gt;'+_ind+'&lt;/x:Index&gt;&#10;&#9;&#9;  &lt;x:Caption&gt;&#10;&#9;&#9;   &lt;x:DataSource&gt;-1&lt;/x:DataSource&gt;&#10;&#9;&#9;   &lt;x:Data&gt;&amp;quot;'+_graph_elem.series+'&amp;quot;&lt;/x:Data&gt;&#10;&#9;&#9;  &lt;/x:Caption&gt;&#10;&#9;&#9;  &lt;x:Name&gt;'+_graph_elem.series+'&lt;/x:Name&gt;&#10;&#9;&#9;  &lt;x:Marker&gt;&#10;&#9;&#9;   &lt;x:Size&gt;5&lt;/x:Size&gt;&#10;&#9;&#9;  &lt;/x:Marker&gt;&#10;&#9;&#9;  &lt;x:Category&gt;&#10;&#9;&#9;   &lt;x:DataSource&gt;-1&lt;/x:DataSource&gt;&#10;&#9;&#9;   &lt;x:Data&gt;{&amp;quot;' + StrReplace(_graph_elem.categoties, ",", "&amp;quot;,&amp;quot;")+'&amp;quot;}&lt;/x:Data&gt;&#10;&#9;&#9;  &lt;/x:Category&gt;&#10;&#9;&#9;  &lt;x:Value&gt;&#10;&#9;&#9;   &lt;x:DataSource&gt;-1&lt;/x:DataSource&gt;&#10;&#9;&#9;   &lt;x:Data&gt;{'+_graph_elem.values+'}&lt;/x:Data&gt;&#10;&#9;&#9;  &lt;/x:Value&gt;&#10;&#9;&#9; &lt;/x:Series&gt;';&#10;&#9;&#9;_ind++;&#10;&#9;}&#10;&#10;&#9;&#9;html_EXCEL += '&#10;       &lt;/x:Graph&gt;&#10;       &lt;x:Axis&gt;&#10;        &lt;x:Placement&gt;Bottom&lt;/x:Placement&gt;&#10;        &lt;x:AxisID&gt;0&lt;/x:AxisID&gt;&#10;        &lt;x:ScaleID&gt;0&lt;/x:ScaleID&gt;&#10;        &lt;x:CrossingAxis&gt;1&lt;/x:CrossingAxis&gt;&#10;&#9;&#9;&lt;x:CrossesAt&gt;0&lt;/x:CrossesAt&gt;&#10;        &lt;x:Alignment&gt;&#10;         &lt;x:Rotation&gt;90&lt;/x:Rotation&gt;&#10;        &lt;/x:Alignment&gt;&#10;        &lt;x:Font&gt;&#10;         &lt;x:FontName&gt;Arial&lt;/x:FontName&gt;&#10;         &lt;x:Size&gt;10&lt;/x:Size&gt;&#10;         &lt;x:AutoScale/&gt;&#10;        &lt;/x:Font&gt;&#10;        &lt;x:Number&gt;&#10;         &lt;x:SourceLinked/&gt;&#10;         &lt;x:BuiltInFormat&gt;0&lt;/x:BuiltInFormat&gt;&#10;        &lt;/x:Number&gt;&#10;        &lt;x:Type&gt;Category&lt;/x:Type&gt;&#10;&#9;&#9;&lt;x:GroupingEnum&gt;None&lt;/x:GroupingEnum&gt;&#10;       &lt;/x:Axis&gt;&#10;       &lt;x:Axis&gt;&#10;        &lt;x:Placement&gt;Left&lt;/x:Placement&gt;&#10;        &lt;x:AxisID&gt;1&lt;/x:AxisID&gt;&#10;        &lt;x:ScaleID&gt;1&lt;/x:ScaleID&gt;&#10;&#9;&#9;&lt;x:MajorGridlines/&gt;&#10;        &lt;x:CrossingAxis&gt;0&lt;/x:CrossingAxis&gt;&#10;        &lt;x:CrossesAt&gt;Minimum&lt;/x:CrossesAt&gt;&#10;        &lt;x:CrossBetween&gt;Between&lt;/x:CrossBetween&gt;&#10;        &lt;x:Font&gt;&#10;         &lt;x:FontName&gt;Arial&lt;/x:FontName&gt;&#10;         &lt;x:Size&gt;10&lt;/x:Size&gt;&#10;         &lt;x:AutoScale/&gt;&#10;        &lt;/x:Font&gt;&#10;        &lt;x:Number&gt;&#10;         &lt;x:SourceLinked/&gt;&#10;         &lt;x:BuiltInFormat&gt;0&lt;/x:BuiltInFormat&gt;&#10;        &lt;/x:Number&gt;&#10;        &lt;x:Type&gt;Value&lt;/x:Type&gt;&#10;       &lt;/x:Axis&gt;&#10;      &lt;/x:PlotArea&gt;&#10;      &lt;x:Legend&gt;&#10;       &lt;x:Placement&gt;Right&lt;/x:Placement&gt;&#10;       &lt;x:Font&gt;&#10;        &lt;x:FontName&gt;Arial&lt;/x:FontName&gt;&#10;        &lt;x:Size&gt;10&lt;/x:Size&gt;&#10;        &lt;x:AutoScale/&gt;&#10;       &lt;/x:Font&gt;&#10;      &lt;/x:Legend&gt;&#10;     &lt;/x:Chart&gt;&#10;    &lt;/x:WebChart&gt;&#10;   &lt;/x:ClientData&gt;&#10;   &lt;![endif]--&gt;&lt;/v:shape&gt;';&#10;&#10;&#9;&#9;html_EXCEL += "&#10;&lt;![if !vml]&gt;&#10;   &lt;span style='mso-ignore:vglayout;position:absolute;z-index:1;margin-left:6px;margin-top:7px;width:868px;height:589px'&gt;&lt;/span&gt;&#10;&lt;![endif]&gt;&#10;   &lt;span style='mso-ignore:vglayout2'&gt;&#10;  &lt;table cellpadding=0 cellspacing=0&gt;&#10;   &lt;tr&gt;&#10;    &lt;td height=17 class=xl24 width=64 style='height:12.75pt;width:48pt'&gt;&lt;/td&gt;&#10;   &lt;/tr&gt;&#10;  &lt;/table&gt;&#10;  &lt;/span&gt;&#10;  &lt;/td&gt;&#10;  &lt;td class=xl24 width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;  &lt;td class=xl24 width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;  &lt;td class=xl24 width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;  &lt;td class=xl24 width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;  &lt;td class=xl24 width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;  &lt;td class=xl24 width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;  &lt;td class=xl24 width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;  &lt;td class=xl24 width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;  &lt;td class=xl24 width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;  &lt;td class=xl24 width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;  &lt;td class=xl24 width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;  &lt;td class=xl24 width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;  &lt;td class=xl24 width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;  &lt;td class=xl24 width=64 style='width:48pt'&gt;&lt;/td&gt;&#10; &lt;/tr&gt;";&#10; &#10;&#10;&#9;html_TEXT += '&#10;&lt;table align="center"&gt;';&#10;&#9;&#9;// гистограмма для HTML&#10;&#9;&#9;html_TEXT += '&#10; &lt;tr&gt;&#10;  &lt;td&gt;&#10;&#10;&lt;center&gt;&#10;&lt;span id="ch2span"&gt;';&#10;&#9;&#9;str_cat = "";&#10;&#9;&#9;chart5 = oWorksheet1.AddChart("RadarFilled", 0, 0, 800, 600);&#10;&#9;&#9;for (_graph_elem in _graph_data)&#10;&#9;&#9;{&#10;&#9;&#9;&#9;series1 = chart5.AddSeries("RadarFilled", "{"+ _graph_elem.values + "}", true);&#10;&#9;&#9;&#9;//series1.DataLabels.ShowValue = true;&#10;&#9;&#9;&#9;//series1.Area.ForegroundColor = "#808080"; &#10;&#9;&#9;&#9;series1.Name = _graph_elem.series;&#10;&#9;&#9;&#9;//series1.WeightPt = 3;&#10;&#9;&#9;&#9;&#10;&#9;&#9;&#9;str_cat += (str_cat != "" ? "," : "") + _graph_elem.categoties;&#10;&#10;&#9;&#9;}&#10;&#9;&#9;chart5.BackgroundColor = "#FFFFFF";&#10;&#9;&#9;chart5.CategoryData = "{" + str_cat + "}";&#10;&#9;&#9;chart5.ShowLegend = true;&#10;&#9;&#9;str_image5 = chart5.GetImageInBase64String('png');&#10;&#10;html_TEXT += '&#10;&lt;img width=800 height=600 src=\"data:image/png;base64, ' + str_image5 + '\" &gt;&#10;&lt;/span&gt;&#10;&lt;/center&gt;&#10;  &lt;/td&gt;&#10; &lt;/tr&gt;&#10;  &lt;/table&gt;';&#10;&#10;&#9;&#9;// гистограмма для Excel&#10;&#9;&#9;html_EXCEL += '&lt;/table&gt;&#10;&#9;&#9;&lt;table x:str border=0 cellpadding=0 cellspacing=0 style="border-collapse:collapse"&gt;&#10; &lt;col width=64 span=14 style="width:48pt"&gt;&#10; &lt;tr height=17 style="height:12.75pt"&gt;&#10;&#9;&#9;&#10;&#9;&#9;&#10;  &lt;td height=17 width=64 style="height:12.75pt;width:48pt" align=left valign=top&gt;&#10;  &lt;v:shapetype id="_x0000_t201" coordsize="21600,21600" o:spt="201" path="m,l,21600r21600,l21600,xe"&gt;&#10;   &lt;v:stroke joinstyle="miter"/&gt;&#10;   &lt;v:path shadowok="f" o:extrusionok="f" strokeok="f" fillok="f" o:connecttype="rect"/&gt;&#10;   &lt;o:lock v:ext="edit" shapetype="t"/&gt;&#10;  &lt;/v:shapetype&gt;&lt;v:shape id="_x0000_s1025" type="#_x0000_t201" style="position:absolute;margin-left:4.5pt;margin-top:665.25pt;width:650.25pt;height:671.25pt;z-index:1" fillcolor="window [78]" strokecolor="windowText [77]" strokeweight="3e-5mm" o:insetmode="auto"&gt;&#10;   &lt;v:fill color2="windowText [77]"/&gt;&#10;   &lt;o:lock v:ext="edit" rotation="t" text="t"/&gt;&#10;   &lt;!--[if mso]&gt;&#10;   &lt;x:ClientData ObjectType="Chart"&gt;&#10;    &lt;x:WebChart&gt;&#10;     &lt;x:Scaling&gt;&#10;      &lt;x:ScaleID&gt;0&lt;/x:ScaleID&gt;&#10;      &lt;x:Orientation&gt;MinMax&lt;/x:Orientation&gt;&#10;     &lt;/x:Scaling&gt;&#10;     &lt;x:Scaling&gt;&#10;      &lt;x:ScaleID&gt;1&lt;/x:ScaleID&gt;&#10;      &lt;x:Orientation&gt;MinMax&lt;/x:Orientation&gt;&#10;     &lt;/x:Scaling&gt;&#10;     &lt;x:Chart&gt;&#10;      &lt;x:Name&gt;Chart 1&lt;/x:Name&gt;&#10;      &lt;x:Title&gt;&#10;       &lt;x:Caption&gt;&#10;        &lt;x:DataSource&gt;-1&lt;/x:DataSource&gt;&#10;        &lt;x:Data&gt;&amp;quot;&lt;x:B&gt;&lt;/x:B&gt;&amp;quot;&lt;/x:Data&gt;&#10;       &lt;/x:Caption&gt;&#10;       &lt;x:Font&gt;&#10;        &lt;x:FontName&gt;Arial&lt;/x:FontName&gt;&#10;        &lt;x:Size&gt;17.25&lt;/x:Size&gt;&#10;        &lt;x:B/&gt;&#10;        &lt;x:AutoScale/&gt;&#10;       &lt;/x:Font&gt;&#10;       &lt;x:Border&gt;&#10;        &lt;x:ColorIndex&gt;None&lt;/x:ColorIndex&gt;&#10;       &lt;/x:Border&gt;&#10;       &lt;x:Interior&gt;&#10;        &lt;x:ColorIndex&gt;None&lt;/x:ColorIndex&gt;&#10;       &lt;/x:Interior&gt;&#10;      &lt;/x:Title&gt;&#10;      &lt;x:Options&gt;&#10;       &lt;x:SizeWithWindow/&gt;&#10;      &lt;/x:Options&gt;&#10;      &lt;x:PageSetup&gt;&#10;       &lt;x:ChartSize&gt;FullPage&lt;/x:ChartSize&gt;&#10;      &lt;/x:PageSetup&gt;&#10;      &lt;x:Font&gt;&#10;       &lt;x:FontName&gt;Arial&lt;/x:FontName&gt;&#10;       &lt;x:Size&gt;10&lt;/x:Size&gt;&#10;       &lt;x:AutoScale/&gt;&#10;      &lt;/x:Font&gt;&#10;      &lt;x:Left&gt;0&lt;/x:Left&gt;&#10;      &lt;x:Top&gt;-6030&lt;/x:Top&gt;&#10;      &lt;x:Width&gt;13019.9853515625&lt;/x:Width&gt;&#10;      &lt;x:Height&gt;19469.99267578125&lt;/x:Height&gt;&#10;      &lt;x:ChartGrowth&gt;&#10;       &lt;x:HorzGrowth&gt;1&lt;/x:HorzGrowth&gt;&#10;       &lt;x:VertGrowth&gt;1&lt;/x:VertGrowth&gt;&#10;      &lt;/x:ChartGrowth&gt;&#10;      &lt;x:PlotArea&gt;&#10;      &lt;x:Interior&gt;&#10;       &lt;x:ColorIndex&gt;14&lt;/x:ColorIndex&gt;&#10;      &lt;/x:Interior&gt;&#10;       &lt;x:Font&gt;&#10;        &lt;x:FontName&gt;Arial&lt;/x:FontName&gt;&#10;        &lt;x:Size&gt;10&lt;/x:Size&gt;&#10;        &lt;x:AutoScale/&gt;&#10;       &lt;/x:Font&gt;&#10;       &lt;x:Graph&gt;&#10;        &lt;x:Type&gt;Radar&lt;/x:Type&gt;&#10;        &lt;x:SubType&gt;Filled&lt;/x:SubType&gt;&#10;        &lt;x:ScaleID&gt;0&lt;/x:ScaleID&gt;&#10;        &lt;x:ScaleID&gt;1&lt;/x:ScaleID&gt;';&#10;&#10;&#9;for (_graph_elem in _graph_data)&#10;&#9;{&#10;&#9;&#9;html_EXCEL += '&#10;&#9;&#9; &lt;x:Series&gt;&#10;&#9;&#9;  &lt;x:Index&gt;'+_ind+'&lt;/x:Index&gt;&#10;&#9;&#9;  &lt;x:Caption&gt;&#10;&#9;&#9;   &lt;x:DataSource&gt;-1&lt;/x:DataSource&gt;&#10;&#9;&#9;   &lt;x:Data&gt;&amp;quot;'+_graph_elem.series+'&amp;quot;&lt;/x:Data&gt;&#10;&#9;&#9;  &lt;/x:Caption&gt;&#10;&#9;&#9;  &lt;x:Name&gt;'+_graph_elem.series+'&lt;/x:Name&gt;&#10;&#9;&#9;  &lt;x:Marker&gt;&#10;&#9;&#9;   &lt;x:Size&gt;5&lt;/x:Size&gt;&#10;&#9;&#9;  &lt;/x:Marker&gt;&#10;&#9;&#9;  &lt;x:Category&gt;&#10;&#9;&#9;   &lt;x:DataSource&gt;-1&lt;/x:DataSource&gt;&#10;&#9;&#9;   &lt;x:Data&gt;{&amp;quot;' + StrReplace(_graph_elem.categoties, ",", "&amp;quot;,&amp;quot;")+'&amp;quot;}&lt;/x:Data&gt;&#10;&#9;&#9;  &lt;/x:Category&gt;&#10;&#9;&#9;  &lt;x:Value&gt;&#10;&#9;&#9;   &lt;x:DataSource&gt;-1&lt;/x:DataSource&gt;&#10;&#9;&#9;   &lt;x:Data&gt;{'+_graph_elem.values+'}&lt;/x:Data&gt;&#10;&#9;&#9;  &lt;/x:Value&gt;&#10;&#9;&#9; &lt;/x:Series&gt;';&#10;&#9;&#9;_ind++;&#10;&#9;}&#10;&#10;&#9;&#9;html_EXCEL += '&#10;       &lt;/x:Graph&gt;&#10;       &lt;x:Axis&gt;&#10;        &lt;x:Placement&gt;Bottom&lt;/x:Placement&gt;&#10;        &lt;x:AxisID&gt;0&lt;/x:AxisID&gt;&#10;        &lt;x:ScaleID&gt;0&lt;/x:ScaleID&gt;&#10;&#9;&#9;&lt;x:MajorGridlines/&gt;&#10;        &lt;x:CrossingAxis&gt;1&lt;/x:CrossingAxis&gt;&#10;&#9;&#9;&lt;x:CrossesAt&gt;0&lt;/x:CrossesAt&gt;&#10;        &lt;x:Font&gt;&#10;         &lt;x:FontName&gt;Arial&lt;/x:FontName&gt;&#10;         &lt;x:Size&gt;10&lt;/x:Size&gt;&#10;         &lt;x:AutoScale/&gt;&#10;        &lt;/x:Font&gt;&#10;        &lt;x:Number&gt;&#10;         &lt;x:SourceLinked/&gt;&#10;         &lt;x:BuiltInFormat&gt;0&lt;/x:BuiltInFormat&gt;&#10;        &lt;/x:Number&gt;&#10;        &lt;x:Type&gt;Category&lt;/x:Type&gt;&#10;&#9;&#9;&lt;x:GroupingEnum&gt;None&lt;/x:GroupingEnum&gt;&#10;       &lt;/x:Axis&gt;&#10;       &lt;x:Axis&gt;&#10;        &lt;x:Placement&gt;Left&lt;/x:Placement&gt;&#10;        &lt;x:AxisID&gt;1&lt;/x:AxisID&gt;&#10;        &lt;x:ScaleID&gt;1&lt;/x:ScaleID&gt;&#10;&#9;&#9;&lt;x:MajorGridlines/&gt;&#10;        &lt;x:CrossingAxis&gt;0&lt;/x:CrossingAxis&gt;&#10;        &lt;x:CrossesAt&gt;Minimum&lt;/x:CrossesAt&gt;&#10;        &lt;x:CrossBetween&gt;Between&lt;/x:CrossBetween&gt;&#10;        &lt;x:Font&gt;&#10;         &lt;x:FontName&gt;Arial&lt;/x:FontName&gt;&#10;         &lt;x:Size&gt;10&lt;/x:Size&gt;&#10;         &lt;x:AutoScale/&gt;&#10;        &lt;/x:Font&gt;&#10;        &lt;x:Number&gt;&#10;         &lt;x:SourceLinked/&gt;&#10;         &lt;x:BuiltInFormat&gt;0&lt;/x:BuiltInFormat&gt;&#10;        &lt;/x:Number&gt;&#10;&#9;&#9;&lt;x:MajorTick&gt;Cross&lt;/x:MajorTick&gt;&#10;        &lt;x:Type&gt;Value&lt;/x:Type&gt;&#10;       &lt;/x:Axis&gt;&#10;      &lt;/x:PlotArea&gt;&#10;      &lt;x:Legend&gt;&#10;       &lt;x:Placement&gt;Right&lt;/x:Placement&gt;&#10;       &lt;x:Font&gt;&#10;        &lt;x:FontName&gt;Arial&lt;/x:FontName&gt;&#10;        &lt;x:Size&gt;10&lt;/x:Size&gt;&#10;        &lt;x:AutoScale/&gt;&#10;       &lt;/x:Font&gt;&#10;      &lt;/x:Legend&gt;&#10;     &lt;/x:Chart&gt;&#10;    &lt;/x:WebChart&gt;&#10;   &lt;/x:ClientData&gt;&#10;   &lt;![endif]--&gt;&lt;/v:shape&gt;';&#10;&#10;&#9;&#9;html_EXCEL += "&#10;&lt;![if !vml]&gt;&#10;   &lt;span style='mso-ignore:vglayout;position:absolute;z-index:1;margin-left:6px;margin-top:7px;width:868px;height:589px'&gt;&lt;/span&gt;&#10;&lt;![endif]&gt;&#10;   &lt;span style='mso-ignore:vglayout2'&gt;&#10;  &lt;table cellpadding=0 cellspacing=0&gt;&#10;   &lt;tr&gt;&#10;    &lt;td height=17 class=xl24 width=64 style='height:12.75pt;width:48pt'&gt;&lt;/td&gt;&#10;   &lt;/tr&gt;&#10;  &lt;/table&gt;&#10;  &lt;/span&gt;&#10;  &lt;/td&gt;&#10;  &lt;td class=xl24 width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;  &lt;td class=xl24 width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;  &lt;td class=xl24 width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;  &lt;td class=xl24 width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;  &lt;td class=xl24 width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;  &lt;td class=xl24 width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;  &lt;td class=xl24 width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;  &lt;td class=xl24 width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;  &lt;td class=xl24 width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;  &lt;td class=xl24 width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;  &lt;td class=xl24 width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;  &lt;td class=xl24 width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;  &lt;td class=xl24 width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;  &lt;td class=xl24 width=64 style='width:48pt'&gt;&lt;/td&gt;&#10; &lt;/tr&gt;";&#10;&#10;&#9;html_EXCEL += "&#10; &lt;tr height=17 style='height:12.75pt'&gt;&#10;  &lt;td height=17 colspan=14 class=xl24 style='height:12.75pt;mso-ignore:colspan'&gt;&lt;/td&gt;&#10;  &lt;td&gt;&lt;/td&gt;&#10; &lt;/tr&gt;";&#10;&#10;&#9;html_EXCEL += "&#10; &lt;tr height=306 style='height:229.5pt;mso-xlrowspan:18'&gt;&#10;  &lt;td height=306 colspan=15 style='height:229.5pt;mso-ignore:colspan'&gt;&lt;/td&gt;&#10; &lt;/tr&gt;";&#10;&#10;html_EXCEL += "&#10;  &lt;td width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;  &lt;td width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;  &lt;td width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;  &lt;td width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;  &lt;td width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;  &lt;td width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;  &lt;td width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;  &lt;td width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;  &lt;td width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;  &lt;td width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;  &lt;td width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;  &lt;td width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;  &lt;td width=64 style='width:48pt'&gt;&lt;/td&gt;&#10; &lt;/tr&gt;&#10; &lt;tr height=595 style='height:446.25pt;mso-xlrowspan:35'&gt;&#10;  &lt;td height=595 colspan=14 style='height:446.25pt;mso-ignore:colspan'&gt;&lt;/td&gt;&#10; &lt;/tr&gt;&#10; &lt;![if supportMisalignedColumns]&gt;&#10; &lt;tr height=0 style='display:none'&gt;&#10;  &lt;td width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;  &lt;td width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;  &lt;td width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;  &lt;td width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;  &lt;td width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;  &lt;td width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;  &lt;td width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;  &lt;td width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;  &lt;td width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;  &lt;td width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;  &lt;td width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;  &lt;td width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;  &lt;td width=64 style='width:48pt'&gt;&lt;/td&gt;&#10;  &lt;td width=64 style='width:48pt'&gt;&lt;/td&gt;&#10; &lt;/tr&gt;&#10; &lt;![endif]&gt;&#10;&lt;/table&gt;&#10;&lt;/body&gt;&#10;&lt;/html&gt;";&#10;&#10;&#10;tools_web.remove_user_data("excel_html_" + curUserID);&#10;//tools_web.set_user_data("excel_html_" + curUserID, {'html': EncodeCharset(html_EXCEL, "windows-1251")}, 1000);&#10;//Для этого клиента кодировку не меняем!!!!&#10;tools_web.set_user_data("excel_html_" + curUserID, {'html': html_EXCEL}, 86000);&#10;&#10;Response.Write(html_TEXT);&#10;}&#10;catch(_zz)&#10;{&#10;&#9;alert(_zz);&#10;}&#10;%&gt;</html>
			<use_session_cache>false</use_session_cache>
			<cwt_type>default</cwt_type>
			<out_type>undefined</out_type>
			<access>
				<access_level>0</access_level>
			</access>
			<doc_info>
				<creation>
					<user_login>user1</user_login>
					<user_id>6148914691236517121</user_id>
					<date>2013-08-03T08:31:06Z</date>
				</creation>
				<modification>
					<user_login>admin</user_login>
					<user_id>6148914691236517121</user_id>
					<date>2021-06-28T13:27:14Z</date>
				</modification>
			</doc_info>
			<is_std>false</is_std>
			<changed>false</changed>
			<is_enabled>true</is_enabled>
		</custom_web_template>
	</custom_web_templates>
</data>
