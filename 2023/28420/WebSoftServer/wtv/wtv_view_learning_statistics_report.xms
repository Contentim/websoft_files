<?xml version="1.0" encoding="utf-8"?>
<SPXML-SCREEN SOURCE="TopElem">

<USE FORM="//wtv/ms_general.xms"/>
<USE FORM="//wtv/reports_general.xms"/>
<USE FORM="//wtv/ui_reports.xms"/>

<LINE>

	<PANEL SUNKEN="1" BORDER="0" WIDTH-EXPR="TopElem.is_minimized ? '100%' : '-320vpx'">

		<PANEL STD-MARGINS="0" HEIGHT="48px" WIDTH="100%">
			<ITEM TYPE="standard_report_actions_panel" />
		</PANEL>

		<SPLIT FIXED="1" BK-COLOR-EXPR="AppUi.themeColors.separator"/>
		
		<GRID NAME="ViewGrid" HEIGHT="100%" SOLID-ROWS="1" ROW-AUTO-HEIGHT="1" VERT-SCROLL="1">
			<COLUMNS>
				<COL WIDTH="30zr"/>

				<LOOP EXPR="Ps.report_categorys" VAR="CategoryItem">
					<IF EXPR="CategoryItem.id == 'duration_days'">
						<COL WIDTH="15zr"/>
					</IF>
					<IF EXPR="CategoryItem.id == 'duration_hours'">
						<COL WIDTH="15zr"/>
					</IF>
					<IF EXPR="CategoryItem.id == 'finished'">
						<COL WIDTH="15zr"/>
					</IF>
					<IF EXPR="CategoryItem.id == 'finished_in_time'">
						<COL WIDTH="15zr"/>
					</IF>
					<IF EXPR="CategoryItem.id == 'course_requests'">
						<COL WIDTH="15zr"/>
					</IF>
					<IF EXPR="CategoryItem.id == 'assigned'">
						<COL WIDTH="15zr"/>
					</IF>
					<IF EXPR="CategoryItem.id == 'passed'">
						<COL WIDTH="15zr"/>
					</IF>
					<IF EXPR="CategoryItem.id == 'score'">
						<COL WIDTH="15zr"/>
					</IF>
					<IF EXPR="CategoryItem.id == 'popularity'">
						<COL WIDTH="15zr"/>
					</IF>
					<IF EXPR="CategoryItem.id == 'complexity'">
						<COL WIDTH="15zr"/>
					</IF>
					<IF EXPR="CategoryItem.id == 'training_success'">
						<COL WIDTH="15zr"/>
					</IF>
				</LOOP>
				<!-- <COL WIDTH="15zr"/>
				<COL WIDTH="25zr"/>
				<COL WIDTH="25zr"/>
				<COL WIDTH="25zr"/>
				<COL WIDTH="20zr"/>
				<COL WIDTH="23zr"/>
				<COL WIDTH="16zr"/>
				<COL WIDTH="16zr"/>
				<COL WIDTH="16zr"/>
				<COL WIDTH="16zr"/>
				<COL WIDTH="16zr"/> -->
			</COLUMNS>
			<ROW HEADER="1">
				<LABEL TITLE-EXPR="ms_tools.get_const('c_test')" ALIGN="center"/>
				<LOOP EXPR="Ps.report_categorys" VAR="CategoryItem">
					<IF EXPR="CategoryItem.id == 'duration_days'">
						<LABEL TITLE-EXPR="ms_tools.get_const('bpe5nh62rx')" ALIGN="center"/>
					</IF>
					<IF EXPR="CategoryItem.id == 'duration_hours'">
						<LABEL TITLE-EXPR="ms_tools.get_const('im8225wmup')" ALIGN="center"/>
					</IF>
					<IF EXPR="CategoryItem.id == 'finished'">
						<LABEL TITLE-EXPR="ms_tools.get_const('5k81hevno6')" ALIGN="center"/>
					</IF>
					<IF EXPR="CategoryItem.id == 'finished_in_time'">
						<LABEL TITLE-EXPR="'Количество завершенных в срок'" ALIGN="center"/>
					</IF>
					<IF EXPR="CategoryItem.id == 'course_requests'">
						<LABEL TITLE-EXPR="'Количество заявок на курс'" ALIGN="center"/>
					</IF>
					<IF EXPR="CategoryItem.id == 'assigned'">
						<LABEL TITLE-EXPR="ms_tools.get_const('bjq31bl8ew')" ALIGN="center"/>
					</IF>
					<IF EXPR="CategoryItem.id == 'passed'">
						<LABEL TITLE-EXPR="'Количество успешно пройденных'" ALIGN="center"/>
					</IF>
					<IF EXPR="CategoryItem.id == 'score'">
						<LABEL TITLE-EXPR="'Набранный балл'" ALIGN="center"/>
					</IF>
					<IF EXPR="CategoryItem.id == 'popularity'">
						<LABEL TITLE-EXPR="'Популярность'" ALIGN="center"/>
					</IF>
					<IF EXPR="CategoryItem.id == 'complexity'">
						<LABEL TITLE-EXPR="'Сложность'" ALIGN="center"/>
					</IF>
					<IF EXPR="CategoryItem.id == 'training_success'">
						<LABEL TITLE-EXPR="'Успешность изучения'" ALIGN="center"/>
					</IF>
				</LOOP>
			</ROW>

			<LOOP EXPR="Ps.data_learning_statistics" VAR="ListElem">
				<ROW>
					<LABEL TITLE-EXPR="ListElem.test_name" FLAT="1" ORDER="test_name"/>

					<LOOP EXPR="Ps.report_categorys" VAR="CategoryItem">
						<IF EXPR="CategoryItem.id == 'duration_days'">
							<LABEL TITLE-EXPR="ListElem.duration_days" FLAT="1"/>
						</IF>
						<IF EXPR="CategoryItem.id == 'duration_hours'">
							<LABEL TITLE-EXPR="ListElem.duration_hours" FLAT="1"/>
						</IF>
						<IF EXPR="CategoryItem.id == 'finished'">
							<LABEL TITLE-EXPR="ListElem.finished" FLAT="1"/>
						</IF>
						<IF EXPR="CategoryItem.id == 'finished_in_time'">
							<LABEL TITLE-EXPR="ListElem.finished_in_time" FLAT="1"/>
						</IF>
						<IF EXPR="CategoryItem.id == 'course_requests'">
							<LABEL TITLE-EXPR="ListElem.course_requests" FLAT="1"/>
						</IF>
						<IF EXPR="CategoryItem.id == 'assigned'">
							<LABEL TITLE-EXPR="ListElem.assigned" FLAT="1"/>
						</IF>
						<IF EXPR="CategoryItem.id == 'passed'">
							<LABEL TITLE-EXPR="ListElem.passed" FLAT="1"/>
						</IF>
						<IF EXPR="CategoryItem.id == 'score'">
							<LABEL TITLE-EXPR="ListElem.score" FLAT="1"/>
						</IF>
						<IF EXPR="CategoryItem.id == 'popularity'">
							<LABEL TITLE-EXPR="ListElem.popularity" FLAT="1"/>
						</IF>
						<IF EXPR="CategoryItem.id == 'complexity'">
							<LABEL TITLE-EXPR="ListElem.complexity" FLAT="1"/>
						</IF>
						<IF EXPR="CategoryItem.id == 'training_success'">
							<LABEL TITLE-EXPR="ListElem.training_success" FLAT="1"/>
						</IF>
					</LOOP>
				</ROW>
			</LOOP>
			
		</GRID>

		<ITEM TYPE="status_panel"/>

	</PANEL>

	<SPLIT FIXED="1" BK-COLOR-EXPR="AppUi.themeColors.separator"/>

	<PANEL HEIGHT="100%" WIDTH-EXPR="TopElem.is_minimized ? '0' : '320vpx'">

		<IF EXPR="! TopElem.is_minimized">

			<PANEL SUNKEN="1" STD-MARGINS="1" VERT-ALIGN="top" VERT-SCROLL="1" _HORIZ-SCROLL="1" PADDING="16vpx 16vpx 16vpx 16vpx" HEIGHT="100%" WIDTH="100%">
				
				<!-- <PANEL VERT-ALIGN="top" VERT-SPACING="4vpx">
					<LINE WIDTH="100%">
						<TitleLabel ALIGN="left" TITLE-EXPR="
							fam_num = ArrayCount( Ps.report_categorys );
							return ms_tools.get_const('3l2bo94bpm') + '*' + ( fam_num == 0 ? '' : ' (' + fam_num + ')' );
						"/>

						<BUTTON ALIGN="right" TITLE-EXPR="ms_tools.get_const('c_choose') + '...'" IMAGE-URL="//wtv/svg/add.svg" STD-MARGINS="0" ACTION="

							dlgDoc = OpenDoc( '//wtv/ms_dlg_object_select.xml' );
							dlgDoc.TopElem.variant=common.learning_statistics_category_types;

							dlgDoc.TopElem.multi_select = true;
							dlgDoc.TopElem.value_array = Ps.report_categorys ;
							Screen.ModalDlg( dlgDoc );

							Ps.report_categorys.Clear()//DeleteChilds( '! dlgDoc.TopElem.values.ChildByKeyExists( \'\' + key_str )' );
							for ( _value in dlgDoc.TopElem.values )
							{
								Ps.report_categorys.ObtainChildByKey( _value.key_str );
							}

						"/>
					</LINE>
					<LIST WIDTH="100%" NAME="ReportCategoryGrid" HEIGHT-EXPR="'5gr'" VERT-SCROLL="1" LOOP-EXPR="return SafeEval( 'ArraySort( TopElem.report_categorys, ' + List.GetCurCodeSortInfo() + ' )', [ { 'TopElem': TopElem } ] );">
						<ROW OPEN-ACTION="" DELETE-ACTION="ListElem.Delete()">
							<COL WIDTH="100%" COL-TITLE-EXPR="ms_tools.get_const('c_name')" TITLE-EXPR="ListElem.PrimaryKey.ForeignElem.name"  ERROR-TEXT-EXPR="ms_tools.get_const('jmkcjvkz8n')"/>
						</ROW>
					</LIST>
				</PANEL> -->
				
				<IF EXPR="Ps.block_name == 'dist'">
						
						<PANEL VERT-ALIGN="top" VERT-SPACING="4vpx">
							<LINE WIDTH="100%">
								<TitleLabel ALIGN="left" TITLE-EXPR="
									fam_num = ArrayCount( Ps.report_categorys );
									return ms_tools.get_const('3l2bo94bpm') + '*' + ( fam_num == 0 ? '' : ' (' + fam_num + ')' );
								"/>

								<BUTTON ALIGN="right" TITLE-EXPR="ms_tools.get_const('c_choose') + '...'" IMAGE-URL="//wtv/svg/add.svg" STD-MARGINS="0" ACTION="

									dlgDoc = OpenDoc( '//wtv/ms_dlg_object_select.xml' );
									dlgDoc.TopElem.variant=ArraySelect(common.learning_statistics_category_types,'StrContains(This.type, \''+TopElem.block_name+',\', true)');

									dlgDoc.TopElem.multi_select = true;
									dlgDoc.TopElem.value_array = Ps.report_categorys ;
									Screen.ModalDlg( dlgDoc );

									Ps.report_categorys.Clear()//DeleteChilds( '! dlgDoc.TopElem.values.ChildByKeyExists( \'\' + key_str )' );
									for ( _value in dlgDoc.TopElem.values )
									{
										Ps.report_categorys.ObtainChildByKey( _value.key_str );
									}

								"/>
							</LINE>
							<LIST WIDTH="100%" NAME="ReportCategoryGrid" HEIGHT-EXPR="'5gr'" VERT-SCROLL="1" LOOP-EXPR="return SafeEval( 'ArraySort( TopElem.report_categorys, ' + List.GetCurCodeSortInfo() + ' )', [ { 'TopElem': TopElem } ] );">
								<ROW IMAGE-URL-EXPR="'ico/generic_item.ico'" OPEN-ACTION="" DELETE-ACTION="">
									<COL WIDTH="100%" COL-TITLE-EXPR="ms_tools.get_const('c_name')" TITLE-EXPR="ListElem.PrimaryKey.ForeignElem.name"  ERROR-TEXT-EXPR="ms_tools.get_const('jmkcjvkz8n')"/>
								</ROW>
							</LIST>

						</PANEL>
				
						<LINE>
							<RADIO-BUTTON TITLE-EXPR="ms_tools.get_const('c_course')" SWITCH-VALUE="false" SOURCE="Ps.disp_learning_prog"/>
							<RADIO-BUTTON TITLE-EXPR="ms_tools.get_const('c_edu_prog')" SWITCH-VALUE="true" SOURCE="Ps.disp_learning_prog"/>
						</LINE>
						<IF EXPR="(Ps.disp_learning_prog==true)">
							<ITEM titleExpr="''" TYPE="ms_object_selector" catalogExpr="'education_program'" WIDTH="100%" SOURCE="Ps.education_program_id" afterSelectAction="
								if (TopElem.education_program_id.HasValue)
								{
									try
									{
										has_course=false;
										ArrEducationProgram=XQuery('for $elem in education_program_education_methods where $elem/education_program_id='+TopElem.education_program_id+' return $elem')
										for (iEducationProgramElem in ArrEducationProgram)
										{
											try
											{
												if (iEducationProgramElem.type=='course')
												{
													has_course=true;
												}
											}
											catch(ex)
											{

											}
										}
										if (has_course==false)
										{
											Screen.MsgBox( ms_tools.get_const('vvybrannomnabo'), ms_tools.get_const('7ey6j94yku'), 'info', 'ok' );
										}
									}
									catch(ex)
									{

									}
								}
							"/>
						</IF>
						<ELSE>
							<ITEM TYPE="ms_object_selector" catalogExpr="'course'" WIDTH="100%" SOURCE="Ps.course_id" xqueryQualExpr="
								curUser = tools.get_cur_user();
								var sApplicationID = ( tools_app.get_cur_application() == null ? '' : tools_app.get_cur_application().id.Value );
								if( sApplicationID != '' )
								{
									task = new BackgroundTask;
									task.RunOnServer = true;
									task.ShowProgress = true;

									oModelRoles = task.CallMethod( 'tools_report', 'model_roles', [ curUser.id.Value, sApplicationID ] );

									if(oModelRoles.type != '')
									{
										switch( oModelRoles.type )
										{
											case 'admin':
											case 'manager':
											case 'hr': // менеджер обучения
											case 'observer': // наблюдатель
											{
												return '';
											}
											case 'expert': // методист
											{
												if(oModelRoles.expert_id != undefined && oModelRoles.expert_id != null )
												{
													iExpertID = oModelRoles.expert_id;

													sQuery = 'for $elem in roles where $elem/catalog_name = \'course\' and contains($elem/experts,' + OptInt(iExpertID, 0) + ') return $elem/Fields(\'id\')';
													arrRoles = tools.xquery(sQuery);
													
													arrRoleIDs = [];
													for(oRole in arrRoles)
													{
														arrRoleIDs.push(oRole.id.Value);
													}

													arrObjects = [];
													if(ArrayCount(arrRoleIDs) > 0)
													{
														sQuery = 'for $elem in courses where MatchSome($elem/role_id, (' + ArrayMerge(arrRoleIDs, 'This', ',') + ')) return $elem/Fields(\'id\')';
														arrObjects = tools.xquery(sQuery);

														arrObjectIDs = [];
														if(ArrayOptFirstElem(arrObjects) != undefined)
														{
															for(oObject in arrObjects)
															{
																arrObjectIDs.push(oObject.id.Value);
															}
														}
														return 'MatchSome($elem/id, (' + ArrayMerge(arrObjectIDs, 'This', ',') + '))'
													} else {
														return '$elem/id = 0';
													}
												}
												break;
											}
											case 'reject':
											{
												return '$elem/id = 0';
											}
											default:
											{
												return '$elem/id = 0';
											}
										}
									}
								} else {
									return '';
								}
							"/>
						</ELSE>
				</IF>
				<ELSE>
					<PANEL VERT-ALIGN="top">
						<ITEM TYPE="ms_object_selector" SOURCE="Ps.assessment_id"  WIDTH="100%" catalogExpr="'assessment'" doFillingExpr="true" xqueryQualExpr="
							curUser = tools.get_cur_user();
							var sApplicationID = ( tools_app.get_cur_application() == null ? '' : tools_app.get_cur_application().id.Value );
							if( sApplicationID != '' )
							{
								task = new BackgroundTask;
								task.RunOnServer = true;
								task.ShowProgress = true;

								oModelRoles = task.CallMethod( 'tools_report', 'model_roles', [ curUser.id.Value, sApplicationID ] );

								if(oModelRoles.type != '')
								{
									switch( oModelRoles.type )
									{
										case 'admin':
										case 'manager':
										case 'hr':
										case 'observer':
										{
											return '';
										}
										case 'expert': // методист
										{
											if(oModelRoles.expert_id != undefined && oModelRoles.expert_id != null )
											{
												iExpertID = oModelRoles.expert_id;
												
												sAssessmentQuery = 'for $elem in assessments return $elem';
												sAssessmentCategoryQuery = 'for $elem in roles where $elem/catalog_name=\'assessment\' return $elem';
												
												sQuery = 'for $elem in roles where $elem/catalog_name = \'assessment\' and contains($elem/experts,' + OptInt(iExpertID, 0) + ') return $elem/Fields(\'id\')';
												arrRoles = tools.xquery(sQuery);
												
												arrRoleIDs = [];
												for(oRole in arrRoles)
												{
													arrRoleIDs.push(oRole.id.Value);
												}

												arrAssessments = [];
												if(ArrayCount(arrRoleIDs) > 0)
												{
													sQuery = 'for $elem in assessments where MatchSome($elem/role_id, (' + ArrayMerge(arrRoleIDs, 'This', ',') + ')) return $elem/Fields(\'id\')';
													arrAssessments = tools.xquery(sQuery);

													arrAssessmentIDs = [];
													if(ArrayOptFirstElem(arrAssessments) != undefined)
													{
														for(oAssessment in arrAssessments)
														{
															arrAssessmentIDs.push(oAssessment.id.Value);
														}
													}
													return 'MatchSome($elem/id, (' + ArrayMerge(arrAssessmentIDs, 'This', ',') + '))'
												} else {
													return '$elem/id = 0';
												}
											} else {
												return '$elem/id = 0';
											}
										}
										case 'reject':
										{
											return '$elem/id = 0';
										}
										default:
										{
											return '$elem/id = 0';
										}
									}
								}
							} else {
								return '';
							}
						"/>
					</PANEL>
				</ELSE>

				<ITEM VERT-ALIGN="top" TYPE="ms_object_selector" WIDTH="100%" catalogExpr="'collaborator'" SOURCE="Ps.person_id" xqueryQualExpr="
					curUser = tools.get_cur_user();
					var sApplicationID = ( tools_app.get_cur_application() == null ? '' : tools_app.get_cur_application().id.Value );
					if( sApplicationID != '' )
					{
						task = new BackgroundTask;
						task.RunOnServer = true;
						task.ShowProgress = true;

						oModelRoles = task.CallMethod( 'tools_report', 'model_roles', [ curUser.id.Value, sApplicationID ] );

						if(oModelRoles.type != '')
						{
							switch( oModelRoles.type )
							{
								case 'admin':
								case 'manager':
								case 'expert': // методист
								{
									return '';
								}
								case 'hr': // менеджер обучения
								{
									arrSubordinateIDs = oModelRoles.subordinate_ids.hr;
									return 'MatchSome($elem/id, (' + ArrayMerge(arrSubordinateIDs, 'This', ',') + '))'
								}
								case 'observer': // наблюдатель
								{
									arrSubordinateIDs = oModelRoles.subordinate_ids.observer;
									return 'MatchSome($elem/id, (' + ArrayMerge(arrSubordinateIDs, 'This', ',') + '))'
								}
								case 'reject':
								{
									return '$elem/id = 0';
								}
								default:
								{
									return '$elem/id = 0';
								}
							}
						}
					} else {
						return '';
					}
				"/>

				<IF EXPR="! Ps.person_id.HasValue">
					<ITEM TYPE="SelectOrgSubLabel" orgWidthExpr="'100%'" subWidthExpr="'90%'" isAdaptiveExpr="1" SOURCE="Ps.parent_object_id" xqueryQualExpr="
						curUser = tools.get_cur_user();
						var sApplicationID = ( tools_app.get_cur_application() == null ? '' : tools_app.get_cur_application().id.Value );
						if( sApplicationID != '' )
						{
							task = new BackgroundTask;
							task.RunOnServer = true;
							task.ShowProgress = true;

							oModelRoles = task.CallMethod( 'tools_report', 'model_roles', [ curUser.id.Value, sApplicationID ] );

							if(oModelRoles.type != '')
							{
								switch( oModelRoles.type )
								{
									case 'admin':
									case 'manager':
									case 'expert':
									{
										return '';
									}
									case 'hr':
									{
										arrSubdivisionIDs = oModelRoles.subdivision_ids.hr;
										return 'MatchSome($elem/id, (' + ArrayMerge(arrSubdivisionIDs, 'This', ',') + '))';
									}
									case 'observer':
									{
										arrSubdivisionIDs = oModelRoles.subdivision_ids.observer;
										return 'MatchSome($elem/id, (' + ArrayMerge(arrSubdivisionIDs, 'This', ',') + '))';
									}
									case 'reject':
									{
										return '$elem/id = 0';
									}
									default:
									{
										return '$elem/id = 0';
									}
								}
							}
						} else {
							return '';
						}
					"/>
					<CHECK SOURCE="Ps.hier_sub_select" TITLE-EXPR="ms_tools.get_const('0ee33c4ctr')"/>
					<ITEM VERT-ALIGN="top" TYPE="ms_object_selector" WIDTH="100%" catalogExpr="'group'" SOURCE="Ps.group_id" xqueryQualExpr="
						curUser = tools.get_cur_user();
						var sApplicationID = ( tools_app.get_cur_application() == null ? '' : tools_app.get_cur_application().id.Value );
						if( sApplicationID != '' )
						{
							task = new BackgroundTask;
							task.RunOnServer = true;
							task.ShowProgress = true;

							oModelRoles = task.CallMethod( 'tools_report', 'model_roles', [ curUser.id.Value, sApplicationID ] );

							if(oModelRoles.type != '')
							{
								switch( oModelRoles.type )
								{
									case 'admin':
									case 'manager':
									case 'expert':
									{
										return '';
									}										
									case 'hr':
									{
										arrGroupIDs = oModelRoles.group_ids.hr;
										return 'MatchSome($elem/id, (' + ArrayMerge(arrGroupIDs, 'This', ',') + '))';
									}
									case 'observer':
									{
										arrGroupIDs = oModelRoles.group_ids.observer;
										return 'MatchSome($elem/id, (' + ArrayMerge(arrGroupIDs, 'This', ',') + '))';
									}
									case 'reject':
									{
										return '$elem/id = 0';
									}
									default:
									{
										return '$elem/id = 0';
									}
								}
							}
						} else {
							return '';
						}
					"/>
				</IF>

				<LINE>
					<DateLabel SOURCE="Ps.start_date" TITLE-EXPR="'Интервал с'" WIDTH="50%" TIME="0" ALLOW-NULL="1"/>
					<DateLabel SOURCE="Ps.finish_date" TITLE-EXPR="ms_tools.get_const( 'mkly6lmeds' )" WIDTH="100%" TIME="0" ALLOW-NULL="1"/>
				</LINE>


				

			</PANEL>

		</IF>

	</PANEL>

</LINE>

<COMMAND-HANDLER CMD="Export" HREF-EXPR="
	
	_str = EvalCodePageUrl( 'x-local://templates/learning_statistics_report.html' );
	
	sReportFilePath = CallServerMethod( 'tools_report', 'save_report_to_file', [ _str, TopElem.report_name, TopElem.export_type, '', System.IsWebClient, '', Ps.data_learning_statistics ] );
	
    if ( ! System.IsWebClient )
    {
        sReportUrl = ObtainSessionTempFile( UrlPathSuffix( sReportFilePath ) );
        CopyUrl( sReportUrl, sReportFilePath );
        sReportFilePath = UrlToFilePath( sReportUrl );
    }
    ShellExecute( 'open', sReportFilePath );
" TARGET="_web" PASSIVE="1"/>


<COMMAND-HANDLER CMD="Run" ACTION="

	bBuildReport = true;

	if ( ArrayOptFirstElem( Ps.report_categorys ) == undefined )
	{
		Screen.MsgBox( ms_tools.get_const('neukazanykateg'), ms_tools.get_const('7ey6j94yku'), 'warning', 'ok' );
		bBuildReport = false;
	}

	if ( bBuildReport )
	{
		arrSettings = [
			{ 'name' : 'disp_learning_prog', 'value' : TopElem.disp_learning_prog.Value },
			{ 'name' : 'education_program_id', 'value' : TopElem.education_program_id.Value },
			{ 'name' : 'course_id', 'value' : TopElem.course_id.Value },
			{ 'name' : 'assessment_id', 'value' : TopElem.assessment_id.Value },
			{ 'name' : 'person_id', 'value' : TopElem.person_id.Value },
			{ 'name' : 'group_id', 'value' : TopElem.group_id.Value },
			{ 'name' : 'parent_object_id', 'value' : TopElem.parent_object_id.Value },
			{ 'name' : 'org_id', 'value' : TopElem.org_id.Value },
			{ 'name' : 'hier_sub_select', 'value' : TopElem.hier_sub_select.Value },
			{ 'name' : 'start_date', 'value' : TopElem.start_date.Value },
			{ 'name' : 'finish_date', 'value' : TopElem.finish_date.Value },
			{ 'name' : 'report_categorys', 'value' : TopElem.report_categorys }
		];

		if ( local_settings.view.remember_last_reports_settings )
		{
			tools_report.save_report_settings( TopElem.report_name, arrSettings );
		}

		TopElem.columns.Clear()

		oColumn = TopElem.columns.AddChild();
		oColumn.name='0'
		oColumn.const = TopElem.block_name == 'dist' ? 'c_course' : 'c_test';
		oColumn.width='60zr'

		for (fldCategory in Ps.report_categorys)
		{
			oColumn = TopElem.columns.AddChild();
			oColumn.name=fldCategory.id
			oColumn.const = CodeLiteral( fldCategory.PrimaryKey.ForeignElem.name );

			oColumn.width='20zr'
			oColumn.sort_field='r'
		}

		TopElem.row_image_url='ListElem.cs.GetChildByKey(\'id\').s == \'c\' ? \'ico/course.ico\' : \'ico/assessment.ico\''

		_params = OpenNewDoc( 'x-local://wtv/wtv_form_func_params.xmd' ).TopElem;
		_params.learning_statistics_report.AssignElem( Ps );
		_params.learning_statistics_report.is_web_client=System.IsWebClient
		TopElem.data.Clear();
		//res = tools_report.learning_statistics_report(UrlEncode(_params.Xml));

		task = new BackgroundTask;
		task.RunOnServer = true;
		task.ShowProgress = true;

		res = task.CallMethod( 'tools_report', 'learning_statistics_report', [ UrlEncode(_params.Xml) ] );
		
			if (res!=undefined)
			{
				try
				{
					TopElem.data.LoadData( res );
				}
				catch(ex)
				{
				}
			}
			
		Ps.data_learning_statistics.Clear();

		for(oChild in TopElem.data.rs)
		{ 
			_child = Ps.data_learning_statistics.AddChild();
			
			for(oItem in oChild.cs)
			{
				if(oItem.name != 'id')
				{
					switch(oItem.name)
					{
						case '0':
							_child.test_name = oItem.t;
							break;
						case 'duration_days':
							_child.duration_days = oItem.t;
							break;
						case 'duration_hours':
							_child.duration_hours = oItem.t;
							break;
						case 'finished':
							_child.finished = oItem.t;
							break;
						case 'finished_in_time':
							_child.finished_in_time = oItem.t;
							break;
						case 'course_requests':
							_child.course_requests = oItem.t;
							break;
						case 'assigned':
							_child.assigned = oItem.t;
							break;
						case 'passed':
							_child.passed = oItem.t;
							break;
						case 'score':
							_child.score = oItem.t;
							break;
						case 'popularity':
							_child.popularity = oItem.t;
							break;
						case 'complexity':
							_child.complexity = oItem.t;
							break;
						case 'training_success':
							_child.training_success = oItem.t;
							break;
					}
				}
			}
			
		}
	
	}
"/>

<INHERIT TYPE="person_actions_base"/>

</SPXML-SCREEN>